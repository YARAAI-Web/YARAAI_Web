{
  "get_metadata": {
    "path": "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\19a8f28a-e128-443e-80b7-9b6bdf070329.dll",
    "module": "19a8f28a-e128-443e-80b7-9b6bdf070329.dll",
    "base": "0x10000000",
    "size": "0xa000",
    "md5": "84dec62a93a6ac4973ba9a196ceaf68a",
    "sha256": "e1fa0bb72c811ee3379a5ad6067cf912229ee9d40e5cc6b9033246e4f66e1fa3",
    "crc32": "0x3e829898",
    "filesize": "0x5600"
  },
  "get_current_address": "0x100017e0",
  "get_current_function": "0x100017e0",
  "get_entry_points": [
    {
      "address": "0x10003589",
      "name": "DllEntryPoint",
      "size": "0x23"
    }
  ],
  "file_entropy": 6.141795396990494,
  "string_stats": {
    "string_count": 128,
    "avg_str_len": 0.0,
    "max_str_len": 0
  },
  "pe_headers": {
    "file_name": "19a8f28a-e128-443e-80b7-9b6bdf070329.dll",
    "machine": "0x14c",
    "number_of_sections": 5,
    "time_date_stamp": "0x678a9cbf",
    "pointer_to_symbol_table": "0x0",
    "number_of_symbols": 0,
    "size_of_optional_header": 224,
    "characteristics": "0x2102",
    "entry_point": "0x3589",
    "image_base": "0x10000000",
    "section_alignment": "0x1000",
    "file_alignment": "0x200",
    "subsystem": "0x3",
    "dll_characteristics": "0x140",
    "sections": [
      {
        "name": ".text",
        "virtual_address": "0x1000",
        "virtual_size": "0x3184",
        "raw_size": "0x3200",
        "characteristics": "0x60000020"
      },
      {
        "name": ".rdata",
        "virtual_address": "0x5000",
        "virtual_size": "0x1182",
        "raw_size": "0x1200",
        "characteristics": "0x40000040"
      },
      {
        "name": ".data",
        "virtual_address": "0x7000",
        "virtual_size": "0x6c0",
        "raw_size": "0x400",
        "characteristics": "0xc0000040"
      },
      {
        "name": ".rsrc",
        "virtual_address": "0x8000",
        "virtual_size": "0x580",
        "raw_size": "0x600",
        "characteristics": "0x40000040"
      },
      {
        "name": ".reloc",
        "virtual_address": "0x9000",
        "virtual_size": "0x3b4",
        "raw_size": "0x400",
        "characteristics": "0x42000040"
      }
    ]
  },
  "virustotal": {
    "sha256": "e1fa0bb72c811ee3379a5ad6067cf912229ee9d40e5cc6b9033246e4f66e1fa3",
    "type_tag": "pedll",
    "popular_threat_name": null,
    "tags": [
      "pedll"
    ]
  },
  "c_code": [
    "#include \"19a8f28a-e128-443e-80b7-9b6bdf070329.h\"",
    "",
    "int __stdcall sub_100011C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, HANDLE *a10)",
    "{",
    "  unsigned int v10; // esi",
    "  __int128 *v11; // eax",
    "  _DWORD *v12; // edx",
    "  wint_t *v13; // edi",
    "  char v14; // al",
    "  __int128 v15; // xmm1",
    "  __int64 v16; // xmm2_8",
    "  int v17; // xmm0_4^4",
    "  int v18; // edx",
    "  int v19; // ecx",
    "  const char *v20; // eax",
    "  void *v21; // eax",
    "  _DWORD *v22; // ecx",
    "  _WORD *v23; // edx",
    "  int v24; // ecx",
    "  int v25; // edx",
    "  _WORD *v26; // ecx",
    "  _WORD *v27; // eax",
    "  __int16 v28; // di",
    "  _WORD *v29; // esi",
    "  int v30; // ecx",
    "  __int16 v31; // ax",
    "  _WORD *v32; // edx",
    "  _WORD *v33; // esi",
    "  int v34; // edi",
    "  int j; // eax",
    "  _DWORD *v36; // eax",
    "  unsigned int v37; // edx",
    "  _DWORD *v38; // esi",
    "  int v39; // ecx",
    "  int v40; // edx",
    "  unsigned int v41; // ecx",
    "  unsigned int v42; // edx",
    "  int v43; // eax",
    "  int v44; // esi",
    "  char *v45; // edx",
    "  int v46; // ecx",
    "  int v47; // edx",
    "  unsigned int v48; // ecx",
    "  _WORD *v50; // [esp+30h] [ebp-BCh]",
    "  _WORD *v51; // [esp+38h] [ebp-B4h]",
    "  wint_t *i; // [esp+58h] [ebp-94h]",
    "  __int128 *v53; // [esp+60h] [ebp-8Ch]",
    "  _WORD *v54; // [esp+60h] [ebp-8Ch]",
    "  _DWORD v55[4]; // [esp+64h] [ebp-88h] BYREF",
    "  unsigned int Size; // [esp+74h] [ebp-78h]",
    "  unsigned int v57; // [esp+78h] [ebp-74h]",
    "  _DWORD v58[4]; // [esp+7Ch] [ebp-70h] BYREF",
    "  int v59; // [esp+8Ch] [ebp-60h]",
    "  unsigned int v60; // [esp+90h] [ebp-5Ch]",
    "  char *Str[4]; // [esp+94h] [ebp-58h] BYREF",
    "  __int64 v62; // [esp+A4h] [ebp-48h]",
    "  _DWORD Src[4]; // [esp+ACh] [ebp-40h] BYREF",
    "  unsigned int v64; // [esp+BCh] [ebp-30h]",
    "  unsigned int v65; // [esp+C0h] [ebp-2Ch]",
    "  __int128 v66; // [esp+C4h] [ebp-28h] BYREF",
    "  __int64 v67; // [esp+D4h] [ebp-18h]",
    "  int v68; // [esp+E8h] [ebp-4h]",
    "",
    "  sub_10001870(v55, a2);",
    "  v68 = 2;",
    "  *(_OWORD *)Str = 0;",
    "  v62 = 0xF00000000LL;",
    "  LOBYTE(Str[0]) = 0;",
    "  v66 = 0;",
    "  v67 = 0xF00000000LL;",
    "  LOBYTE(v66) = 0;",
    "  v10 = Size;",
    "  if ( Size )",
    "  {",
    "    if ( Size > 0xF )",
    "    {",
    "      ((void (__thiscall *)(__int128 *, unsigned int))sub_10001D50)(&v66, Size);",
    "    }",
    "    else",
    "    {",
    "      LODWORD(v67) = Size;",
    "      memset(&v66, 0, Size);",
    "      *((_BYTE *)&v66 + v10) = 0;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    LODWORD(v67) = 0;",
    "    LOBYTE(v66) = 0;",
    "  }",
    "  v11 = &v66;",
    "  v12 = v55;",
    "  if ( HIDWORD(v67) > 0xF )",
    "    v11 = (__int128 *)v66;",
    "  v13 = (wint_t *)v55;",
    "  v53 = v11;",
    "  if ( v57 > 7 )",
    "  {",
    "    v12 = (_DWORD *)v55[0];",
    "    v13 = (wint_t *)v55[0];",
    "  }",
    "  for ( i = (wint_t *)v12 + Size; v13 != i; v53 = (__int128 *)((char *)v53 + 1) )",
    "  {",
    "    v14 = wctob(*v13++);",
    "    *(_BYTE *)v53 = v14;",
    "  }",
    "  v15 = v66;",
    "  v16 = v67;",
    "  v66 = *(_OWORD *)Str;",
    "  v17 = HIDWORD(v62);",
    "  v67 = v62;",
    "  LOBYTE(v68) = 1;",
    "  v62 = v16;",
    "  *(_OWORD *)Str = v15;",
    "  if ( HIDWORD(v67) > 0xF )",
    "  {",
    "    v18 = v66;",
    "    v19 = v17 + 1;",
    "    if ( (unsigned int)(v17 + 1) >= 0x1000 )",
    "    {",
    "      v18 = *(_DWORD *)(v66 - 4);",
    "      v19 = v17 + 36;",
    "      if ( (unsigned int)(v66 - v18 - 4) > 0x1F )",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v18, v19);",
    "  }",
    "  v20 = (const char *)Str;",
    "  if ( HIDWORD(v62) > 0xF )",
    "    v20 = Str[0];",
    "  if ( !strstr(v20, \"\\\\game\\\\bin\\\\win64\\\\cs2.exe\") )",
    "  {",
    "    v44 = dword_10007694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);",
    "    goto LABEL_59;",
    "  }",
    "  v21 = &unk_100051FC;",
    "  if ( a1 )",
    "    v21 = a1;",
    "  sub_10001870(Src, v21);",
    "  LOBYTE(v68) = 3;",
    "  sub_10001870(v58, L\"\\\\game\\\\bin\\\\win64\\\\cs2.exe\");",
    "  LOBYTE(v68) = 4;",
    "  v22 = v58;",
    "  v23 = Src;",
    "  if ( v60 > 7 )",
    "    v22 = (_DWORD *)v58[0];",
    "  v54 = v22;",
    "  if ( v65 > 7 )",
    "    v23 = (_WORD *)Src[0];",
    "  v24 = v59;",
    "  v51 = v23;",
    "  if ( v59 <= v64 )",
    "  {",
    "    if ( v59 )",
    "    {",
    "      v26 = &v23[v64 - v59 + 1];",
    "      v27 = v54;",
    "      v50 = v26;",
    "      v28 = *v54;",
    "LABEL_30:",
    "      v29 = 0;",
    "      v30 = v26 - v23;",
    "      if ( v30 )",
    "      {",
    "        if ( *v23 == v28 )",
    "        {",
    "LABEL_34:",
    "          v29 = v23;",
    "        }",
    "        else",
    "        {",
    "          while ( v30 != 1 )",
    "          {",
    "            v31 = v23[1];",
    "            ++v23;",
    "            --v30;",
    "            if ( v31 == v28 )",
    "              goto LABEL_34;",
    "          }",
    "        }",
    "        v27 = v54;",
    "      }",
    "      v32 = v29;",
    "      if ( !v29 )",
    "        goto LABEL_44;",
    "      v33 = v27;",
    "      v34 = v59;",
    "      for ( j = (char *)v32 - (char *)v54; ; j = (char *)v32 - (char *)v54 )",
    "      {",
    "        if ( *(_WORD *)((char *)v33 + j) != *v33 )",
    "        {",
    "          v28 = *v54;",
    "          v23 = v32 + 1;",
    "          v27 = v54;",
    "          v26 = v50;",
    "          goto LABEL_30;",
    "        }",
    "        ++v33;",
    "        if ( !--v34 )",
    "          break;",
    "      }",
    "      v24 = v59;",
    "      v25 = v32 - v51;",
    "      if ( v25 == -1 )",
    "        goto LABEL_44;",
    "    }",
    "    else",
    "    {",
    "      v25 = 0;",
    "    }",
    "    sub_100019E0(Src, v25, v24, v24, 9);",
    "  }",
    "LABEL_44:",
    "  sub_10001020(L\"%s\\n\", a1);",
    "  v36 = Src;",
    "  if ( v65 > 7 )",
    "    v36 = (_DWORD *)Src[0];",
    "  sub_10001020(L\" %s\\n\", v36);",
    "  v37 = v65;",
    "  v38 = Src;",
    "  v39 = Src[0];",
    "  LOBYTE(v68) = 3;",
    "  if ( v65 > 7 )",
    "    v38 = (_DWORD *)Src[0];",
    "  if ( v60 > 7 )",
    "  {",
    "    v40 = v58[0];",
    "    v41 = 2 * v60 + 2;",
    "    if ( v41 >= 0x1000 )",
    "    {",
    "      v40 = *(_DWORD *)(v58[0] - 4);",
    "      v41 = 2 * v60 + 37;",
    "      if ( (unsigned int)(v58[0] - v40 - 4) > 0x1F )",
    "LABEL_55:",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v40, v41);",
    "    v37 = v65;",
    "    v39 = Src[0];",
    "  }",
    "  LOBYTE(v68) = 1;",
    "  if ( v37 > 7 )",
    "  {",
    "    v42 = 2 * v37 + 2;",
    "    v43 = v39;",
    "    if ( v42 >= 0x1000 )",
    "    {",
    "      v39 = *(_DWORD *)(v39 - 4);",
    "      v42 += 35;",
    "      if ( (unsigned int)(v43 - v39 - 4) > 0x1F )",
    "        goto LABEL_55;",
    "    }",
    "    sub_10003218(v39, v42);",
    "  }",
    "  LOWORD(Src[0]) = 0;",
    "  v64 = 0;",
    "  v65 = 7;",
    "  v44 = dword_10007694(v38, a2, a3, a4, a5, a6, a7, a8, a9, a10);",
    "  VirtualAllocEx(*a10, (LPVOID)0x40000000, 0x1219000u, 0x3000u, 0x40u);",
    "LABEL_59:",
    "  if ( HIDWORD(v62) > 0xF )",
    "  {",
    "    v45 = Str[0];",
    "    v46 = HIDWORD(v62) + 1;",
    "    if ( (unsigned int)(HIDWORD(v62) + 1) >= 0x1000 )",
    "    {",
    "      v45 = (char *)*((_DWORD *)Str[0] - 1);",
    "      v46 = HIDWORD(v62) + 36;",
    "      if ( (unsigned int)(Str[0] - v45 - 4) > 0x1F )",
    "LABEL_66:",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v45, v46);",
    "  }",
    "  v62 = 0xF00000000LL;",
    "  LOBYTE(Str[0]) = 0;",
    "  if ( v57 > 7 )",
    "  {",
    "    v47 = v55[0];",
    "    v48 = 2 * v57 + 2;",
    "    if ( v48 >= 0x1000 )",
    "    {",
    "      v47 = *(_DWORD *)(v55[0] - 4);",
    "      v48 = 2 * v57 + 37;",
    "      if ( (unsigned int)(v55[0] - v47 - 4) > 0x1F )",
    "        goto LABEL_66;",
    "    }",
    "    sub_10003218(v47, v48);",
    "  }",
    "  return v44;",
    "}",
    "",
    "",
    "BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)",
    "{",
    "  if ( fdwReason != 1 )",
    "    return 0;",
    "  CreateThread(0, 0, StartAddress, 0, 0, 0);",
    "  return 1;",
    "}",
    "",
    "",
    "int __thiscall sub_10001870(int this, void *Src, const unsigned __int16 *a3)",
    "{",
    "  unsigned int v5; // esi",
    "  unsigned int v7; // ebx",
    "  unsigned int v8; // eax",
    "  int v9; // eax",
    "  unsigned int v10; // ebx",
    "  unsigned int v11; // eax",
    "  int savedregsc; // [esp+Ch] [ebp+0h]",
    "  unsigned int savedregs; // [esp+Ch] [ebp+0h]",
    "  unsigned int savedregsd; // [esp+Ch] [ebp+0h]",
    "",
    "  *(_OWORD *)this = 0;",
    "  *(_DWORD *)(this + 16) = 0;",
    "  *(_DWORD *)(this + 20) = 0;",
    "  v5 = wcslen(a3);",
    "  if ( v5 > 0x7FFFFFFE )",
    "  {",
    "LABEL_19:",
    "    sub_100011B0();",
    "    JUMPOUT(0x1000198E);",
    "  }",
    "  if ( v5 <= 7 )",
    "  {",
    "    *(_DWORD *)(this + 16) = v5;",
    "    *(_DWORD *)(this + 20) = 7;",
    "    memcpy();",
    "    *(_WORD *)(2 * v5 + this) = 0;",
    "    return this;",
    "  }",
    "  v7 = v5 | 7;",
    "  if ( (v5 | 7) <= 0x7FFFFFFE )",
    "  {",
    "    if ( v7 < 0xA )",
    "      v7 = 10;",
    "    savedregs = v7;",
    "    if ( v7 + 1 > 0x7FFFFFFF )",
    "    {",
    "LABEL_18:",
    "      sub_10001110();",
    "      goto LABEL_19;",
    "    }",
    "    v8 = 2 * (v7 + 1);",
    "    if ( !v8 )",
    "    {",
    "      v10 = 0;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    savedregsc = 2147483646;",
    "    v8 = -2;",
    "  }",
    "  if ( v8 >= 0x1000 )",
    "  {",
    "    if ( v8 + 35 >= v8 )",
    "    {",
    "      savedregs = v8 + 35;",
    "      v9 = sub_100031E3();",
    "      if ( !v9 )",
    "        invalid_parameter_noinfo_noreturn();",
    "      v10 = (v9 + 35) & 0xFFFFFFE0;",
    "      *(_DWORD *)(v10 - 4) = v9;",
    "      goto LABEL_17;",
    "    }",
    "    goto LABEL_18;",
    "  }",
    "  savedregs = v8;",
    "  v10 = sub_100031E3();",
    "LABEL_17:",
    "  v11 = savedregs;",
    "  *(_DWORD *)(this + 16) = v5;",
    "  *(_DWORD *)this = v10;",
    "  savedregsd = v10;",
    "  *(_DWORD *)(this + 20) = v11;",
    "  memcpy();",
    "  *(_WORD *)(2 * v5 + v10) = 0;",
    "  return this;",
    "}",
    "",
    "",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie)",
    "{",
    "  if ( StackCookie != __security_cookie )",
    "    JUMPOUT(0x10003C1E);",
    "}",
    "",
    "",
    "int __cdecl sub_100031E3(int a1, int a2)",
    "{",
    "  int result; // eax",
    "",
    "  while ( 1 )",
    "  {",
    "    result = malloc();",
    "    if ( result )",
    "      break;",
    "    if ( !callnewh() )",
    "    {",
    "      if ( a2 == -1 )",
    "        sub_10001110();",
    "      JUMPOUT(0x10003D31);",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __stdcall sub_10003249(int a1, int a2, int a3)",
    "{",
    "  int result; // eax",
    "",
    "  switch ( a2 )",
    "  {",
    "    case 0:",
    "      return sub_100033A3(a3 != 0);",
    "    case 1:",
    "      return sub_1000329C(a1, a3);",
    "    case 2:",
    "      LOBYTE(result) = sub_1000365B();",
    "      break;",
    "    case 3:",
    "      LOBYTE(result) = sub_1000367A();",
    "      break;",
    "    default:",
    "      return 1;",
    "  }",
    "  return (unsigned __int8)result;",
    "}",
    "",
    "",
    "void __usercall sub_1000329C(int a1@<ebp>, int a2, int a3)",
    "{",
    "  char v3; // bl",
    "  _DWORD *v4; // eax",
    "  _DWORD *v5; // esi",
    "  int savedregs; // [esp+30h] [ebp+0h]",
    "  const _PIFV *savedregsa; // [esp+30h] [ebp+0h]",
    "  const _PVFV *savedregsb; // [esp+30h] [ebp+0h]",
    "  _DWORD *savedregsc; // [esp+30h] [ebp+0h]",
    "  int savedregsd; // [esp+30h] [ebp+0h]",
    "",
    "  savedregs = 0;",
    "  if ( (unsigned __int8)__scrt_initialize_crt() )",
    "  {",
    "    *(_BYTE *)(a1 - 29) = __scrt_acquire_startup_lock();",
    "    v3 = 1;",
    "    *(_BYTE *)(a1 - 25) = 1;",
    "    *(_DWORD *)(a1 - 4) = 0;",
    "    if ( dword_1000732C )",
    "      JUMPOUT(0x1000339B);",
    "    dword_1000732C = 1;",
    "    if ( (unsigned __int8)__scrt_dllmain_before_initialize_c() )",
    "    {",
    "      sub_10003F44();",
    "      sub_10003DE6();",
    "      sub_10003E04();",
    "      savedregsa = &First;",
    "      if ( !sub_10004060() )",
    "      {",
    "        if ( (unsigned __int8)__scrt_dllmain_after_initialize_c() )",
    "        {",
    "          savedregsb = &dword_10005134;",
    "          callnewh_0();",
    "          dword_1000732C = 2;",
    "          v3 = 0;",
    "          *(_BYTE *)(a1 - 25) = 0;",
    "        }",
    "      }",
    "    }",
    "    *(_DWORD *)(a1 - 4) = -2;",
    "    sub_1000337F();",
    "    if ( !v3 )",
    "    {",
    "      v4 = (_DWORD *)sub_10003E21();",
    "      v5 = v4;",
    "      if ( *v4 )",
    "      {",
    "        savedregsc = v4;",
    "        if ( (unsigned __int8)__scrt_is_nonwritable_in_current_image() )",
    "        {",
    "          savedregsd = *(_DWORD *)(a1 + 8);",
    "          ((void (__thiscall *)(_DWORD))*v5)(*v5);",
    "        }",
    "      }",
    "      ++dword_10007328;",
    "      JUMPOUT(0x1000338B);",
    "    }",
    "  }",
    "  JUMPOUT(0x10003389);",
    "}",
    "",
    "",
    "BOOL __cdecl sub_100033A3(int a1)",
    "{",
    "  BOOL v2; // esi",
    "  int v3; // [esp+0h] [ebp-30h]",
    "  int v4; // [esp+4h] [ebp-2Ch]",
    "  int v5; // [esp+4h] [ebp-2Ch]",
    "  int v6; // [esp+8h] [ebp-28h]",
    "  int v7; // [esp+8h] [ebp-28h]",
    "  int v8; // [esp+Ch] [ebp-24h]",
    "  int v9; // [esp+Ch] [ebp-24h]",
    "  int v10; // [esp+10h] [ebp-20h]",
    "  int v11; // [esp+10h] [ebp-20h]",
    "  int v12; // [esp+18h] [ebp-18h]",
    "  int v13; // [esp+18h] [ebp-18h]",
    "  int v14; // [esp+1Ch] [ebp-14h]",
    "  int v15; // [esp+1Ch] [ebp-14h]",
    "  int v16; // [esp+20h] [ebp-10h]",
    "  int v17; // [esp+20h] [ebp-10h]",
    "  int v18; // [esp+24h] [ebp-Ch]",
    "  int v19; // [esp+24h] [ebp-Ch]",
    "  int v20; // [esp+28h] [ebp-8h]",
    "  int v21; // [esp+28h] [ebp-8h]",
    "",
    "  if ( dword_10007328 <= 0 )",
    "    return 0;",
    "  --dword_10007328;",
    "  LOBYTE(v10) = __scrt_acquire_startup_lock();",
    "  if ( dword_1000732C != 2 )",
    "  {",
    "    sub_10003E27(7);",
    "    JUMPOUT(0x10003452);",
    "  }",
    "  __scrt_dllmain_uninitialize_c(v3);",
    "  sub_10003DF2();",
    "  sub_10003F70();",
    "  dword_1000732C = 0;",
    "  __scrt_release_startup_lock(v10, 268448767, v4, v6, v8, v10, 1, v12, v14, v16, v18, v20);",
    "  v2 = (unsigned __int8)__scrt_uninitialize_crt(a1) != 0;",
    "  sub_100036DE(268448803, v5, v7, v9, v11, v2, v13, v15, v17, v19, v21, -2);",
    "  return v2;",
    "}",
    "",
    "",
    "int __cdecl sub_10003453(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)",
    "{",
    "  void *v4; // ebx",
    "  int v5; // esi",
    "  BOOL v6; // eax",
    "",
    "  if ( !fdwReason && dword_10007328 <= 0 )",
    "    return 0;",
    "  if ( fdwReason != 1 && fdwReason != 2 )",
    "  {",
    "    v4 = lpvReserved;",
    "LABEL_9:",
    "    v6 = DllMain(hinstDLL, fdwReason, v4);",
    "    v5 = v6;",
    "    if ( fdwReason == 1 && !v6 )",
    "    {",
    "      DllMain(hinstDLL, 0, v4);",
    "      sub_100033A3(v4 != 0);",
    "      sub_1000355E(hinstDLL, 0, v4);",
    "    }",
    "    if ( !fdwReason || fdwReason == 3 )",
    "    {",
    "      v5 = sub_10003249((int)hinstDLL, fdwReason, (int)v4);",
    "      if ( v5 )",
    "        return sub_1000355E(hinstDLL, fdwReason, v4);",
    "    }",
    "    return v5;",
    "  }",
    "  v4 = lpvReserved;",
    "  v5 = sub_1000355E(hinstDLL, fdwReason, lpvReserved);",
    "  if ( v5 )",
    "  {",
    "    v5 = sub_10003249((int)hinstDLL, fdwReason, (int)lpvReserved);",
    "    if ( v5 )",
    "      goto LABEL_9;",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "int __stdcall sub_1000355E(int a1, int a2, int a3)",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)",
    "{",
    "  if ( fdwReason == 1 )",
    "    sub_10003D9B();",
    "  return sub_10003453(hinstDLL, fdwReason, lpReserved);",
    "}",
    "",
    "",
    "char __scrt_acquire_startup_lock()",
    "{",
    "  PVOID StackBase; // edx",
    "  signed __int32 v1; // eax",
    "",
    "  if ( sub_10004018() )",
    "  {",
    "    StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "    while ( 1 )",
    "    {",
    "      v1 = _InterlockedCompareExchange(&dword_10007330, (signed __int32)StackBase, 0);",
    "      if ( !v1 )",
    "        break;",
    "      if ( StackBase == (PVOID)v1 )",
    "        return 1;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "char sub_1000365B()",
    "{",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "    return 0;",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "  {",
    "    sub_10004096();",
    "    return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "char sub_1000367A()",
    "{",
    "  sub_10004096();",
    "  sub_10004096();",
    "  return 1;",
    "}",
    "",
    "",
    "char __cdecl __scrt_initialize_crt(int a1, int a2)",
    "{",
    "  int savedregs; // [esp+0h] [ebp+0h]",
    "",
    "  if ( !a2 )",
    "    byte_10007334 = 1;",
    "  sub_100038C9();",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "    return 0;",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "  {",
    "    savedregs = 0;",
    "    sub_10004096();",
    "    return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int32 __cdecl __scrt_release_startup_lock(char a1, char a2)",
    "{",
    "  __int32 result; // eax",
    "",
    "  result = sub_10004018();",
    "  if ( result )",
    "  {",
    "    if ( !a2 )",
    "      return _InterlockedExchange(&dword_10007330, 0);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char __cdecl __scrt_uninitialize_crt(int a1, int a2, char a3)",
    "{",
    "  if ( !byte_10007334 || !a3 )",
    "  {",
    "    sub_10004096();",
    "    sub_10004096();",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "void sub_10003D9B()",
    "{",
    "  uintptr_t v0; // ecx",
    "  int entropy; // eax",
    "",
    "  v0 = __security_cookie;",
    "  if ( __security_cookie == -1153374642 || (__security_cookie & 0xFFFF0000) == 0 )",
    "  {",
    "    entropy = __get_entropy();",
    "    v0 = entropy;",
    "    if ( entropy == -1153374642 )",
    "    {",
    "      v0 = -1153374641;",
    "    }",
    "    else if ( (entropy & 0xFFFF0000) == 0 )",
    "    {",
    "      v0 = ((entropy | 0x4711) << 16) | entropy;",
    "    }",
    "    __security_cookie = v0;",
    "  }",
    "  dword_10007080 = ~v0;",
    "}",
    "",
    "",
    "_DWORD *sub_10003E04()",
    "{",
    "  _DWORD *v0; // eax",
    "  int v1; // ecx",
    "  _DWORD *result; // eax",
    "  int v3; // ecx",
    "",
    "  v0 = (_DWORD *)sub_10001010();",
    "  v1 = v0[1];",
    "  *v0 |= 0x24u;",
    "  v0[1] = v1;",
    "  result = (_DWORD *)sub_10003DFE();",
    "  v3 = result[1];",
    "  *result |= 2u;",
    "  result[1] = v3;",
    "  return result;",
    "}",
    "",
    "",
    "void *sub_10003E21()",
    "{",
    "  return &unk_100076A8;",
    "}",
    "",
    "",
    "void sub_10003F44()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "void sub_10003F70()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "_DWORD *__cdecl _SEH_prolog4(int a1, int a2)",
    "{",
    "  void *v4; // esp",
    "  void *v6; // [esp-18h] [ebp-18h]",
    "  _DWORD v7[2]; // [esp-8h] [ebp-8h] BYREF",
    "  _UNKNOWN *retaddr; // [esp+0h] [ebp+0h]",
    "  int v9; // [esp+4h] [ebp+4h]",
    "",
    "  v7[1] = sub_10003FE5;",
    "  v7[0] = NtCurrentTeb()->NtTib.ExceptionList;",
    "  v4 = alloca(a2);",
    "  v9 = -2;",
    "  retaddr = v6;",
    "  return v7;",
    "}",
    "",
    "",
    "int __cdecl sub_10003FE5(_DWORD *a1, int a2, int a3, int a4)",
    "{",
    "  *a1 = sub_1000409C(*a1);",
    "  return except_handler4_common(&__security_cookie, __security_check_cookie, a1, a2, a3, a4);",
    "}",
    "",
    "",
    "BOOL sub_10004018()",
    "{",
    "  return dword_10007090 != 0;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int sub_10004024()",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *a2, size_t a3)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset(void *a1, int a2, size_t a3)",
    "{",
    "}// attributes: thunk",
    "int __cdecl except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6)",
    "{",
    "}// attributes: thunk",
    "int __cdecl callnewh(size_t a1)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl malloc(size_t a1)",
    "{",
    "}// attributes: thunk",
    "void __cdecl callnewh_0(_PVFV *a1, _PVFV *a2)",
    "{",
    "}// attributes: thunk",
    "int __cdecl sub_10004060(_PIFV *a1, _PIFV *a2)",
    "{",
    "}char sub_10004096()",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "int __cdecl sub_1000409C(int a1)",
    "{",
    "  unsigned __int16 v2; // [esp+0h] [ebp-4h]",
    "",
    "  if ( dword_10007354 >= 1 && (a1 == -1073741132 || a1 == -1073741131) )",
    "  {",
    "    v2 = _mm_getcsr();",
    "    if ( (((unsigned __int8)v2 ^ 0x3F) & 0x81) == 0 )",
    "      return -1073741680;",
    "    if ( ((v2 ^ 0x3F) & 0x204) == 0 )",
    "      return -1073741682;",
    "    if ( ((v2 ^ 0x3F) & 0x102) == 0 )",
    "      return -1073741680;",
    "    if ( ((v2 ^ 0x3F) & 0x408) == 0 )",
    "      return -1073741679;",
    "    if ( ((v2 ^ 0x3F) & 0x810) == 0 )",
    "      return -1073741677;",
    "    if ( ((v2 ^ 0x3F) & 0x1020) == 0 )",
    "      return -1073741681;",
    "  }",
    "  return a1;",
    "}",
    "",
    ""
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "int __stdcall sub_100011C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, HANDLE *a10);",
    "BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);",
    "int __thiscall sub_10001870(int this, void *Src, const unsigned __int16 *a3);",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie);",
    "int __cdecl sub_100031E3(int a1, int a2);",
    "int __stdcall sub_10003249(int a1, int a2, int a3);",
    "void __usercall sub_1000329C(int a1@<ebp>, int a2, int a3);",
    "BOOL __cdecl sub_100033A3(int a1);",
    "int __cdecl sub_10003453(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);",
    "int __stdcall sub_1000355E(int a1, int a2, int a3);",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);",
    "char __scrt_acquire_startup_lock();",
    "char sub_1000365B();",
    "char sub_1000367A();",
    "char __cdecl __scrt_initialize_crt(int a1, int a2);",
    "__int32 __cdecl __scrt_release_startup_lock(char a1, char a2);",
    "char __cdecl __scrt_uninitialize_crt(int a1, int a2, char a3);",
    "void sub_10003D9B();",
    "_DWORD *sub_10003E04();",
    "void *sub_10003E21();",
    "void sub_10003F44();",
    "void sub_10003F70();",
    "_DWORD *__cdecl _SEH_prolog4(int a1, int a2);",
    "int __cdecl sub_10003FE5(_DWORD *a1, int a2, int a3, int a4);",
    "BOOL sub_10004018();",
    "// attributes: thunk",
    "int sub_10004024();",
    "// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *a2, size_t a3);",
    "// attributes: thunk",
    "void *__cdecl memset(void *a1, int a2, size_t a3);",
    "// attributes: thunk",
    "int __cdecl except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6);",
    "// attributes: thunk",
    "int __cdecl callnewh(size_t a1);",
    "// attributes: thunk",
    "void *__cdecl malloc(size_t a1);",
    "// attributes: thunk",
    "void __cdecl callnewh_0(_PVFV *a1, _PVFV *a2);",
    "// attributes: thunk",
    "int __cdecl sub_10004060(_PIFV *a1, _PIFV *a2);",
    "char sub_10004096();",
    "int __cdecl sub_1000409C(int a1);"
  ],
  "summary": [],
  "yara_rules": "",
  "capa_rules": {
    "meta": {
      "timestamp": "2025-07-10T03:40:50.128900",
      "version": "9.2.1",
      "argv": [
        "-r",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-rules",
        "-s",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-sigs",
        "--json",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\19a8f28a-e128-443e-80b7-9b6bdf070329.dll"
      ],
      "sample": {
        "md5": "84dec62a93a6ac4973ba9a196ceaf68a",
        "sha1": "015b18e3841f5e42baffb9f71a34d6431d7b7c8b",
        "sha256": "e1fa0bb72c811ee3379a5ad6067cf912229ee9d40e5cc6b9033246e4f66e1fa3",
        "path": "D:/Whitehat/web/YARRAI_Web/backend/uploads/19a8f28a-e128-443e-80b7-9b6bdf070329.dll"
      },
      "flavor": "static",
      "analysis": {
        "format": "pe",
        "arch": "i386",
        "os": "windows",
        "extractor": "VivisectFeatureExtractor",
        "rules": [
          "D:/Whitehat/web/YARRAI_Web/backend/services/CAPA/capa-rules"
        ],
        "base_address": {
          "type": "absolute",
          "value": 268435456
        },
        "layout": {
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 268439584
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439584
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439632
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439632
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439696
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439696
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439727
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439856
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439856
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439920
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268439920
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268440000
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440000
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440209
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440320
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440417
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440439
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440449
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440645
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440704
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440716
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440732
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440761
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440787
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440875
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440891
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440933
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440955
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268440965
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441157
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441173
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441232
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441254
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441296
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441296
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441568
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441583
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441712
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441712
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441760
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441771
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441792
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441845
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441873
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441920
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441934
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441945
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442080
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442080
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442117
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442143
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442175
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442198
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442271
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442295
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442388
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442528
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442528
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442588
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442613
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442641
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442658
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442679
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442687
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442698
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442763
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442834
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442852
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442881
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442960
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442960
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443020
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443028
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443056
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443073
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443112
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443126
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443156
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443199
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443217
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443246
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268443312
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443350
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268443424
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443475
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443516
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443554
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443652
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443681
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443755
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268443920
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444166
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444231
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444331
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444348
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444390
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444416
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444467
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444537
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444542
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444561
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444588
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444628
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444657
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444675
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444735
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444741
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444761
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268444796
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268445280
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445392
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445411
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445472
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445519
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445564
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445607
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445628
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268445648
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445648
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445822
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445952
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268445973
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446064
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446064
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446183
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446240
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446259
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446272
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446277
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446297
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446352
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446383
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446416
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446435
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446539
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446576
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446576
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446728
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446763
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268446802
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447033
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447056
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447069
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447155
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447188
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447241
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268447280
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447377
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447474
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447513
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447524
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447532
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447541
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447568
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447652
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447671
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447676
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447688
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447806
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447900
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447954
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268447977
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268448077
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448213
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450867
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450872
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449054
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268449054
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449993
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450029
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450213
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450259
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450272
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450316
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450348
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268450410
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451367
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268451394
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451652
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268451685
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451696
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268451729
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452128
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441644
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441662
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452139
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442022
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442040
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452147
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442022
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268442040
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452155
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441644
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441662
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452163
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441644
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 268441662
                  }
                }
              ]
            }
          ]
        },
        "feature_counts": {
          "file": 520,
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 268439552
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439568
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439584
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439632
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439696
              },
              "count": 33
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439760
              },
              "count": 23
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439824
              },
              "count": 18
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439856
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439920
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 268439984
              },
              "count": 12
            },
            {
              "address": {
                "type": "absolute",
                "value": 268440000
              },
              "count": 116
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441296
              },
              "count": 54
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441568
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 268441712
              },
              "count": 80
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442080
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442512
              },
              "count": 11
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442528
              },
              "count": 83
            },
            {
              "address": {
                "type": "absolute",
                "value": 268442960
              },
              "count": 82
            },
            {
              "address": {
                "type": "absolute",
                "value": 268443312
              },
              "count": 40
            },
            {
              "address": {
                "type": "absolute",
                "value": 268443424
              },
              "count": 237
            },
            {
              "address": {
                "type": "absolute",
                "value": 268445280
              },
              "count": 84
            },
            {
              "address": {
                "type": "absolute",
                "value": 268445648
              },
              "count": 92
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446064
              },
              "count": 72
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446240
              },
              "count": 66
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446496
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 268446576
              },
              "count": 146
            },
            {
              "address": {
                "type": "absolute",
                "value": 268447280
              },
              "count": 126
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448213
              },
              "count": 54
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448275
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448280
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448294
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448636
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448639
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448821
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448824
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448834
              },
              "count": 9
            },
            {
              "address": {
                "type": "absolute",
                "value": 268448837
              },
              "count": 9
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449054
              },
              "count": 18
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449085
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449371
              },
              "count": 17
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449402
              },
              "count": 12
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449502
              },
              "count": 17
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449808
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449827
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449990
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 268449993
              },
              "count": 134
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451097
              },
              "count": 20
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451302
              },
              "count": 11
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451314
              },
              "count": 12
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451326
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451361
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451367
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451644
              },
              "count": 9
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451652
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451696
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451860
              },
              "count": 9
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451882
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451888
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451894
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451900
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451906
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451912
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451918
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451930
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451936
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451942
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451948
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451954
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451960
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451966
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451972
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451978
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451990
              },
              "count": 9
            },
            {
              "address": {
                "type": "absolute",
                "value": 268451993
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452116
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452128
              },
              "count": 53
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452139
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452147
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452155
              },
              "count": 53
            },
            {
              "address": {
                "type": "absolute",
                "value": 268452218
              },
              "count": 20
            }
          ]
        },
        "library_functions": [
          {
            "address": {
              "type": "absolute",
              "value": 268439680
            },
            "name": "?what@exception@std@@UBEPBDXZ"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268439792
            },
            "name": "??0bad_array_new_length@std@@QAE@XZ"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448125
            },
            "name": "??1_Fac_node@std@@QAE@XZ"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448227
            },
            "name": "??2@YAPAXI@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448329
            },
            "name": "?dllmain_crt_dispatch@@YGHQAUHINSTANCE__@@KQAX@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448412
            },
            "name": "?dllmain_crt_process_attach@@YAHQAUHINSTANCE__@@QAX@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448675
            },
            "name": "?dllmain_crt_process_detach@@YAH_N@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268448851
            },
            "name": "?dllmain_dispatch@@YAHQAUHINSTANCE__@@KQAX@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449118
            },
            "name": "?dllmain_raw@@YGHQAUHINSTANCE__@@KQAX@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449161
            },
            "name": "__DllMainCRTStartup@12"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449196
            },
            "name": "?find_pe_section@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449264
            },
            "name": "___scrt_acquire_startup_lock"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449314
            },
            "name": "___scrt_dllmain_after_initialize_c"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449357
            },
            "name": "___scrt_dllmain_before_initialize_c"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449415
            },
            "name": "___scrt_dllmain_exception_filter"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449467
            },
            "name": "___scrt_dllmain_uninitialize_c"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449515
            },
            "name": "___scrt_initialize_crt"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449572
            },
            "name": "___scrt_initialize_onexit_tables"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449707
            },
            "name": "___scrt_is_nonwritable_in_current_image"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449855
            },
            "name": "___scrt_release_startup_lock"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449884
            },
            "name": "___scrt_uninitialize_crt"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449924
            },
            "name": "__onexit"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268449969
            },
            "name": "_atexit"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268450806
            },
            "name": "___raise_securityfailure"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451150
            },
            "name": "___get_entropy"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451227
            },
            "name": "___security_init_cookie"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451332
            },
            "name": "___scrt_initialize_default_local_stdio_options"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451744
            },
            "name": "__SEH_prolog4"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451813
            },
            "name": "__except_handler4"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451864
            },
            "name": "_Curl_tls_keylog_enabled"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268451996
            },
            "name": "__filter_x86_sse2_floating_point_exception_default"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268452163
            },
            "name": "__unwindfunclet$?DrawPixel@CMFCImagePaintArea@@IAEXUtagPOINT@@@Z$0"
          },
          {
            "address": {
              "type": "absolute",
              "value": 268452176
            },
            "name": "__ehhandler$?DrawPixel@CMFCImagePaintArea@@IAEXUtagPOINT@@@Z"
          }
        ]
      }
    },
    "rules": {
      "link function at runtime on Windows": {
        "meta": {
          "name": "link function at runtime on Windows",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x404130",
            "Practical Malware Analysis Lab 01-04.exe_:0x401350"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: link function at runtime on Windows\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetProcAddress\r\n        - api: ntdll.LdrGetProcedureAddress\r\n        - api: ntdll.LdrGetProcedureAddressEx\r\n        - api: ntdll.LdrGetProcedureAddressForCaller\r\n        - api: MmGetSystemRoutineAddress\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268441414
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 268441414
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "allocate memory": {
        "meta": {
          "name": "allocate memory",
          "authors": [
            "0x534a@mailbox.org",
            "@mr-tz"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Allocate Memory"
              ],
              "objective": "Memory",
              "behavior": "Allocate Memory",
              "method": "",
              "id": "C0007"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-03.exe_:0x4010EA",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: allocate memory\r\n    authors:\r\n      - 0x534a@mailbox.org\r\n      - \"@mr-tz\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Memory::Allocate Memory [C0007]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA  # ntdll.NtAllocateVirtualMemory\r\n  features:\r\n    - or:\r\n      - api: kernel32.VirtualAlloc\r\n      - api: kernel32.VirtualAllocEx\r\n      - api: kernel32.VirtualAllocExNuma\r\n      - api: NtAllocateVirtualMemory\r\n      - api: ZwAllocateVirtualMemory\r\n      - api: NtMapViewOfSection\r\n      - api: ZwMapViewOfSection\r\n      - basic block:\r\n        - and:\r\n          - match: link function at runtime on Windows\r\n          - or:\r\n            - string: \"VirtualAlloc\"\r\n            - string: \"VirtualAllocEx\"\r\n            - string: \"VirtualAllocExNuma\"\r\n            - string: \"NtAllocateVirtualMemory\"\r\n            - string: \"ZwAllocateVirtualMemory\"\r\n            - string: \"NtMapViewOfSection\"\r\n            - string: \"ZwMapViewOfSection\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268440965
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAlloc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAllocEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268441063
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAllocExNuma"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtAllocateVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwAllocateVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtMapViewOfSection"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwMapViewOfSection"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446763
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAlloc"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446777
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAllocEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualAllocExNuma"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtAllocateVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwAllocateVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtMapViewOfSection"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwMapViewOfSection"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "allocate or change RWX memory": {
        "meta": {
          "name": "allocate or change RWX memory",
          "namespace": "host-interaction/process/inject",
          "authors": [
            "@mr-tz",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Allocate Memory"
              ],
              "objective": "Memory",
              "behavior": "Allocate Memory",
              "method": "",
              "id": "C0007"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-03.exe_:0x4010EA",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: allocate or change RWX memory\r\n    namespace: host-interaction/process/inject\r\n    authors:\r\n      - \"@mr-tz\"\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Memory::Allocate Memory [C0007]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\r\n  features:\r\n    - or:\r\n      - basic block:\r\n        - and:\r\n          - or:\r\n            - match: allocate memory\r\n            - match: change memory protection\r\n          - or:\r\n            - number: 0x40 = PAGE_EXECUTE_READWRITE\r\n            # lea     r9d, [rcx+40h]  ; flProtect\r\n            # call    cs:VirtualAlloc\r\n            - instruction:\r\n              - mnemonic: lea\r\n              - offset: 0x40 = PAGE_EXECUTE_READWRITE\r\n      - call:\r\n        - and:\r\n          - or:\r\n            - match: allocate memory\r\n            - match: change memory protection\r\n          - number: 0x40 = PAGE_EXECUTE_READWRITE\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268440965
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate memory"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAlloc"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAllocEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268441063
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAllocExNuma"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtAllocateVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwAllocateVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtMapViewOfSection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwMapViewOfSection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268440965
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "change memory protection"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 64,
                                  "description": "PAGE_EXECUTE_READWRITE"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268441042
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268440965
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate memory"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "change memory protection"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualProtect"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268446124
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualProtectEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtProtectVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwProtectVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268446064
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 64,
                                  "description": "PAGE_EXECUTE_READWRITE"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268446120
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446064
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446763
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate memory"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAlloc"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268446777
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAllocEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualAllocExNuma"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtAllocateVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwAllocateVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtMapViewOfSection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwMapViewOfSection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268446763
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "change memory protection"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 64,
                                  "description": "PAGE_EXECUTE_READWRITE"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268446763
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446763
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create thread": {
        "meta": {
          "name": "create thread",
          "namespace": "host-interaction/thread/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Thread"
              ],
              "objective": "Process",
              "behavior": "Create Thread",
              "method": "",
              "id": "C0038"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x10001DA0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create thread\r\n    namespace: host-interaction/thread/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Create Thread [C0038]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.CreateThread\r\n          - api: _beginthread\r\n          - api: _beginthreadex\r\n          - api: PsCreateSystemThread\r\n          - api: SHCreateThread\r\n          - api: SHCreateThreadWithHandle\r\n          - api: kernel32.CreateRemoteThread\r\n          - api: kernel32.CreateRemoteThreadEx\r\n          - api: RtlCreateUserThread\r\n          - api: ntdll.NtCreateThread\r\n          - api: ntdll.NtCreateThreadEx\r\n          - api: ntdll.ZwCreateThread\r\n          - api: ntdll.ZwCreateThreadEx\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - api: pthread_create\r\n      - and:\r\n        - api: System.Threading.Thread::Start\r\n        - optional:\r\n          - api: System.Threading.Thread::ctor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268441583
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "pthread_create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Threading.Thread::Start"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Thread::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateThread"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268441598
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthreadex"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsCreateSystemThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThreadWithHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlCreateUserThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "open thread": {
        "meta": {
          "name": "open thread",
          "authors": [
            "0x534a@mailbox.org"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Open Thread"
              ],
              "objective": "Process",
              "behavior": "Open Thread",
              "method": "",
              "id": "C0066"
            }
          ],
          "references": [],
          "examples": [
            "787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:00502F4C"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: open thread\r\n    authors:\r\n      - 0x534a@mailbox.org\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Open Thread [C0066]\r\n    examples:\r\n      - 787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:00502F4C\r\n  features:\r\n    - or:\r\n      - api: kernel32.OpenThread\r\n      - api: NtOpenThread\r\n      - api: ZwOpenThread\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268445952
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445961
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446416
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446423
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "suspend thread": {
        "meta": {
          "name": "suspend thread",
          "namespace": "host-interaction/thread/suspend",
          "authors": [
            "0x534a@mailbox.org",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Suspend Thread"
              ],
              "objective": "Process",
              "behavior": "Suspend Thread",
              "method": "",
              "id": "C0055"
            }
          ],
          "references": [],
          "examples": [
            "787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:0x502f4c"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: suspend thread\r\n    namespace: host-interaction/thread/suspend\r\n    authors:\r\n      - 0x534a@mailbox.org\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Suspend Thread [C0055]\r\n    examples:\r\n      - 787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:0x502f4c\r\n  features:\r\n    - or:\r\n      - api: kernel32.SuspendThread\r\n      - api: ntdll.NtSuspendThread\r\n      - api: ntdll.ZwSuspendThread\r\n      - api: System.Threading.Thread::Suspend\r\n      - api: System.Threading.Thread::Sleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268445973
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SuspendThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445974
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSuspendThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSuspendThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Threading.Thread::Suspend"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Threading.Thread::Sleep"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "change memory protection": {
        "meta": {
          "name": "change memory protection",
          "authors": [
            "@mr-tz"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Change Memory Protection"
              ],
              "objective": "Memory",
              "behavior": "Change Memory Protection",
              "method": "",
              "id": "C0008"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 11-02.dll_:0x10001203"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: change memory protection\r\n    authors:\r\n      - \"@mr-tz\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Memory::Change Memory Protection [C0008]\r\n    examples:\r\n      - Practical Malware Analysis Lab 11-02.dll_:0x10001203\r\n  features:\r\n    - or:\r\n      - api: kernel32.VirtualProtect\r\n      - api: kernel32.VirtualProtectEx\r\n      - api: NtProtectVirtualMemory\r\n      - api: ZwProtectVirtualMemory\r\n      - basic block:\r\n        - and:\r\n          - match: link function at runtime on Windows\r\n          - or:\r\n            - string: \"VirtualProtect\"\r\n            - string: \"VirtualProtectEx\"\r\n            - string: \"NtProtectVirtualMemory\"\r\n            - string: \"ZwProtectVirtualMemory\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268446064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtect"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446124
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtectEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446183
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtect"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446192
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtectEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "resume thread": {
        "meta": {
          "name": "resume thread",
          "namespace": "host-interaction/thread/resume",
          "authors": [
            "0x534a@mailbox.org",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Resume Thread"
              ],
              "objective": "Process",
              "behavior": "Resume Thread",
              "method": "",
              "id": "C0054"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 12-02.exe_:0x4010EA",
            "787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:0x4044C7"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: resume thread\r\n    namespace: host-interaction/thread/resume\r\n    authors:\r\n      - 0x534a@mailbox.org\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Resume Thread [C0054]\r\n    examples:\r\n      - Practical Malware Analysis Lab 12-02.exe_:0x4010EA\r\n      - 787cbc8a6d1bc58ea169e51e1ad029a637f22560660cc129ab8a099a745bd50e:0x4044C7\r\n  features:\r\n    - or:\r\n      - api: kernel32.ResumeThread\r\n      - api: ntdll.NtResumeThread\r\n      - api: ntdll.ZwResumeThread\r\n      - api: System.Threading.Thread::Resume\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268446435
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ResumeThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446436
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtResumeThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwResumeThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Threading.Thread::Resume"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delay execution": {
        "meta": {
          "name": "delay execution",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@ramen0x3f"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Dynamic Analysis Evasion",
                "Delayed Execution"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Dynamic Analysis Evasion",
              "method": "Delayed Execution",
              "id": "B0003.003"
            }
          ],
          "references": [
            "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x449770",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delay execution\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@ramen0x3f\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\r\n    references:\r\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x449770\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.Sleep\r\n          - api: kernel32.SleepEx\r\n          - api: kernel32.WaitForSingleObject\r\n          - api: kernel32.SignalObjectAndWait\r\n          - api: kernel32.WaitForSingleObjectEx\r\n          - api: kernel32.WaitForMultipleObjects\r\n          - api: kernel32.WaitForMultipleObjectsEx\r\n          - api: kernel32.RegisterWaitForSingleObject\r\n          - api: WaitOnAddress\r\n          - api: user32.MsgWaitForMultipleObjects\r\n          - api: user32.MsgWaitForMultipleObjectsEx\r\n          - api: NtDelayExecution\r\n          - api: KeWaitForSingleObject\r\n          - api: KeDelayExecutionThread\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - or:\r\n          - api: sleep\r\n          - api: usleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268446539
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268446539
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain loop": {
        "meta": {
          "name": "contain loop",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain loop\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    examples:\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - characteristic: loop\r\n      - characteristic: tight loop\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268440000
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268440000
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268440320
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268441712
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268441760
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268443312
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268443312
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268443424
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268443424
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268445280
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445280
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268445648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445648
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446240
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446240
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446496
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446496
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446576
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446576
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446802
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268447280
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268447280
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268451652
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268451652
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268451696
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268451696
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268452218
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268452218
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "execute shellcode via indirect call": {
        "meta": {
          "name": "execute shellcode via indirect call",
          "namespace": "load-code/shellcode",
          "authors": [
            "ronnie.salomonsen@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Allocate Memory"
              ],
              "objective": "Memory",
              "behavior": "Allocate Memory",
              "method": "",
              "id": "C0007"
            }
          ],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: execute shellcode via indirect call\r\n    namespace: load-code/shellcode\r\n    authors:\r\n      - ronnie.salomonsen@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    mbc:\r\n      - Memory::Allocate Memory [C0007]\r\n  features:\r\n    - and:\r\n      - match: allocate or change RWX memory\r\n      - or:\r\n        - characteristic: indirect call\r\n        - characteristic: cross section flow\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268440000
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate memory"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAlloc"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAllocEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 268441063
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAllocExNuma"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtAllocateVirtualMemory"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwAllocateVirtualMemory"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtMapViewOfSection"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwMapViewOfSection"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "match",
                                                  "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268440965
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "change memory protection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 64,
                                          "description": "PAGE_EXECUTE_READWRITE"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268441042
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268440965
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268440965
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "indirect call"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 268441040
                        },
                        {
                          "type": "absolute",
                          "value": 268441131
                        },
                        {
                          "type": "absolute",
                          "value": 268440324
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "cross section flow"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268446576
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate memory"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAlloc"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 268446777
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAllocEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "VirtualAllocExNuma"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtAllocateVirtualMemory"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwAllocateVirtualMemory"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtMapViewOfSection"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwMapViewOfSection"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "match",
                                                  "match": "allocate memory/a11c5e4fddc6403888b1bdcd83ef538a"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268446763
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "change memory protection"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 64,
                                          "description": "PAGE_EXECUTE_READWRITE"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 268446763
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268446763
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268446763
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "indirect call"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 268446672
                        },
                        {
                          "type": "absolute",
                          "value": 268446629
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "cross section flow"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check for software breakpoints": {
        "meta": {
          "name": "check for software breakpoints",
          "namespace": "anti-analysis/anti-debugging/debugger-detection",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Debugger Detection",
                "Software Breakpoints"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Debugger Detection",
              "method": "Software Breakpoints",
              "id": "B0001.025"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp",
            "https://anti-debug.checkpoint.com/techniques/assembly.html"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x431020"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check for software breakpoints\r\n    namespace: anti-analysis/anti-debugging/debugger-detection\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic features\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Debugger Detection::Software Breakpoints [B0001.025]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp\r\n      - https://anti-debug.checkpoint.com/techniques/assembly.html\r\n    examples:\r\n      - al-khaser_x86.exe_:0x431020\r\n  features:\r\n    - and:\r\n      - or:\r\n        - instruction:\r\n          - mnemonic: cmp\r\n          - number: 0xCC = INT3\r\n        - and:\r\n          - description: INT3 (long form)\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 0xCD = INT3 (long form byte 1)\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 0x03 = INT3 (long form byte 2)\r\n      - match: contain loop\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268443424
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "contain loop"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "loop"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268443424
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "tight loop"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "recursive call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268443424
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "check for software breakpoints/5383d82c1486470394a2129f10d91256"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and",
                          "description": "INT3 (long form)"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443487
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 205,
                                      "description": "INT3 (long form byte 1)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443487
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268443487
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444451
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 3,
                                      "description": "INT3 (long form byte 2)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444451
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443988
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 3,
                                      "description": "INT3 (long form byte 2)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443988
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444085
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 3,
                                      "description": "INT3 (long form byte 2)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444085
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443927
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 3,
                                      "description": "INT3 (long form byte 2)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268443927
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444175
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 3,
                                      "description": "INT3 (long form byte 2)"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268444175
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268444451
                            },
                            {
                              "type": "absolute",
                              "value": 268443988
                            },
                            {
                              "type": "absolute",
                              "value": 268444085
                            },
                            {
                              "type": "absolute",
                              "value": 268443927
                            },
                            {
                              "type": "absolute",
                              "value": 268444175
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 268447280
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "contain loop"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "loop"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 268447280
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "tight loop"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "recursive call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268447280
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "instruction"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "cmp"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268447968
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 204,
                                  "description": "INT3"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268447968
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "cmp"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268448055
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 204,
                                  "description": "INT3"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268448055
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "cmp"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268447895
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 204,
                                  "description": "INT3"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268447895
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 268447968
                        },
                        {
                          "type": "absolute",
                          "value": 268448055
                        },
                        {
                          "type": "absolute",
                          "value": 268447895
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and",
                          "description": "INT3 (long form)"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check for software breakpoints/6fbfcd7d9f1d42e99eb8dfaee1d9101f"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check for software breakpoints/7945b4cebb474a988ce9f1aca416b23f"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate threads": {
        "meta": {
          "name": "enumerate threads",
          "namespace": "host-interaction/thread/list",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Process Discovery"
              ],
              "tactic": "Discovery",
              "technique": "Process Discovery",
              "subtechnique": "",
              "id": "T1057"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Process",
                "Enumerate Threads"
              ],
              "objective": "Process",
              "behavior": "Enumerate Threads",
              "method": "",
              "id": "C0064"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 05-01.dll_:0x10006BD5"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate threads\r\n    namespace: host-interaction/thread/list\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Process Discovery [T1057]\r\n    mbc:\r\n      - Process::Enumerate Threads [C0064]\r\n    examples:\r\n      - Practical Malware Analysis Lab 05-01.dll_:0x10006BD5\r\n  features:\r\n    - and:\r\n      - api: kernel32.Thread32First\r\n      - api: kernel32.Thread32Next\r\n      - optional:\r\n        - basic block:\r\n          - and:\r\n            - or:\r\n              - number: 0x4 = TH32CS_SNAPTHREAD\r\n              # TH32CS_SNAPTHREAD includes all threads in the system in the snapshot\r\n            - api: kernel32.CreateToolhelp32Snapshot\r\n        - call:\r\n          - and:\r\n            - or:\r\n              - number: 0x4 = TH32CS_SNAPTHREAD\r\n            - api: kernel32.CreateToolhelp32Snapshot\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 268445648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Thread32First"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445726
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Thread32Next"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 268445878
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "basic block"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateToolhelp32Snapshot"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 268445697
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4,
                                      "description": "TH32CS_SNAPTHREAD"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 268445675
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 268445648
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "enumerate threads/544961c0733f4b528c972ce73db20392"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      }
    }
  },
  "MITRE ATT&CK": [
    "T1057",
    "T1129"
  ],
  "CWE": [
    [
      "signed to unsigned conversion error",
      "CWE-195",
      ""
    ],
    [
      "unsigned to signed conversion error",
      "CWE-196",
      "::PHASE:Requirements:DESCRIPTION:Choose a language which is not subject to these casting flaws.::PHASE:Architecture and Design:DESCRIPTION:Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which will be used as a size are checked previous to use as a size. If the language permits, throw exceptions rather than using in-band errors.::PHASE:Implementation:DESCRIPTION:Error check the return values of all functions. Be aware of implicit casts made, and use unsigned variables for sizes if at all possible.::"
    ],
    [
      "failure to handle missing parameter",
      "CWE-234",
      "::PHASE:Build and Compilation:DESCRIPTION:This issue can be simply combated with the use of proper build process.::PHASE:Implementation:DESCRIPTION:Forward declare all functions. This is the recommended solution. Properly forward declaration of all used functions will result in a compiler error if too few arguments are sent to a function.::"
    ],
    [
      "missing check for certificate revocation after initial check",
      "CWE-370",
      "::PHASE:Architecture and Design:DESCRIPTION:Ensure that certificates are checked for revoked status before each use of a protected resource. If the certificate is checked before each access of a protected resource, the delay subject to a possible race condition becomes almost negligible and significantly reduces the risk associated with this issue.::"
    ],
    [
      "missing lock check",
      "CWE-414",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Implement a reliable lock mechanism.::"
    ],
    [
      "use after free",
      "CWE-416",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Choose a language that provides automatic memory management.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "behavioral change in new version or environment",
      "CWE-439",
      ""
    ],
    [
      "ui discrepancy for security feature",
      "CWE-446",
      ""
    ],
    [
      "omitted break statement in switch",
      "CWE-484",
      "::PHASE:Implementation:DESCRIPTION:Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.::PHASE:Implementation:DESCRIPTION:The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.::"
    ],
    [
      "return of stack variable address",
      "CWE-562",
      "::PHASE:Testing:DESCRIPTION:Use static analysis tools to spot return of the address of a stack variable.::"
    ],
    [
      "reliance on a single factor in a security decision",
      "CWE-654",
      "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::"
    ],
    [
      "operation on a resource after expiration or release",
      "CWE-672",
      ""
    ]
  ]
}