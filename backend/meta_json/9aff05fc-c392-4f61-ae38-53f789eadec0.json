{
  "get_metadata": {
    "path": "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\9aff05fc-c392-4f61-ae38-53f789eadec0.exe",
    "module": "9aff05fc-c392-4f61-ae38-53f789eadec0.exe",
    "base": "0x400000",
    "size": "0x24b000",
    "md5": "ff90a3408afbf8b9881e45e77e72276d",
    "sha256": "6445781c5d6b6f6cb7d283e46a89a3e55ea6b2c84ebf89fabfc75fc17f3f649e",
    "crc32": "0x2a3abe86",
    "filesize": "0x246400"
  },
  "get_current_address": "0x406a60",
  "get_current_function": "0x406a60",
  "get_entry_points": [
    {
      "address": "0x406a60",
      "name": "_WinMainCRTStartup",
      "size": "0xa"
    }
  ],
  "file_entropy": 7.980883749862607,
  "string_stats": {
    "string_count": 211,
    "avg_str_len": 0.0,
    "max_str_len": 0
  },
  "pe_headers": {
    "file_name": "9aff05fc-c392-4f61-ae38-53f789eadec0.exe",
    "machine": "0x14c",
    "number_of_sections": 5,
    "time_date_stamp": "0x628d60e2",
    "pointer_to_symbol_table": "0x0",
    "number_of_symbols": 0,
    "size_of_optional_header": 224,
    "characteristics": "0x102",
    "entry_point": "0x6a60",
    "image_base": "0x400000",
    "section_alignment": "0x1000",
    "file_alignment": "0x200",
    "subsystem": "0x2",
    "dll_characteristics": "0xc140",
    "sections": [
      {
        "name": ".text",
        "virtual_address": "0x1000",
        "virtual_size": "0x6314",
        "raw_size": "0x6400",
        "characteristics": "0x60000020"
      },
      {
        "name": ".data",
        "virtual_address": "0x8000",
        "virtual_size": "0x1a48",
        "raw_size": "0x200",
        "characteristics": "0xc0000040"
      },
      {
        "name": ".idata",
        "virtual_address": "0xa000",
        "virtual_size": "0x1052",
        "raw_size": "0x1200",
        "characteristics": "0x40000040"
      },
      {
        "name": ".rsrc",
        "virtual_address": "0xc000",
        "virtual_size": "0x23e000",
        "raw_size": "0x23de00",
        "characteristics": "0x40000040"
      },
      {
        "name": ".reloc",
        "virtual_address": "0x24a000",
        "virtual_size": "0x888",
        "raw_size": "0xa00",
        "characteristics": "0x42000040"
      }
    ]
  },
  "virustotal": {
    "sha256": "6445781c5d6b6f6cb7d283e46a89a3e55ea6b2c84ebf89fabfc75fc17f3f649e",
    "type_tag": "peexe",
    "popular_threat_name": null,
    "tags": [
      "malware",
      "persistence",
      "spreader",
      "peexe",
      "detect-debug-environment"
    ]
  },
  "c_code": [
    "#include \"9aff05fc-c392-4f61-ae38-53f789eadec0.h\"",
    "",
    "HRESULT __stdcall StringCchCatA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc)",
    "{",
    "  int v3; // edx",
    "  char *v4; // ecx",
    "  HRESULT v5; // esi",
    "  int v6; // esi",
    "  char *i; // eax",
    "  const char *v9; // [esp+0h] [ebp-Ch]",
    "  size_t v10; // [esp+4h] [ebp-8h]",
    "",
    "  v5 = 0;",
    "  if ( v3 <= 0 )",
    "    v5 = -2147024809;",
    "  if ( v5 >= 0 )",
    "  {",
    "    v6 = v3;",
    "    for ( i = v4; v6; --v6 )",
    "    {",
    "      if ( !*i )",
    "        break;",
    "      ++i;",
    "    }",
    "    v5 = v6 != 0 ? 0 : -2147024809;",
    "    if ( v5 >= 0 )",
    "      return StringCopyWorkerA(v4, (size_t)pszDest, (size_t *)v4, v9, v10);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "HRESULT StringCchPrintfA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszFormat, ...)",
    "{",
    "  HRESULT v3; // esi",
    "  size_t v4; // edi",
    "  int v5; // eax",
    "  va_list ArgList; // [esp+18h] [ebp+14h] BYREF",
    "",
    "  va_start(ArgList, pszFormat);",
    "  v3 = 0;",
    "  if ( (int)cchDest <= 0 )",
    "    v3 = -2147024809;",
    "  if ( v3 < 0 )",
    "  {",
    "    if ( cchDest )",
    "      *pszDest = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = 0;",
    "    v4 = cchDest - 1;",
    "    v5 = __vsnprintf(pszDest, cchDest - 1, pszFormat, ArgList);",
    "    if ( v5 < 0 || v5 > v4 )",
    "    {",
    "      v3 = -2147024774;",
    "LABEL_9:",
    "      pszDest[v4] = 0;",
    "      return v3;",
    "    }",
    "    if ( v5 == v4 )",
    "      goto LABEL_9;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "HRESULT __stdcall StringCopyWorkerA(",
    "        STRSAFE_LPSTR pszDest,",
    "        size_t cchDest,",
    "        size_t *pcchNewDestLength,",
    "        STRSAFE_PCNZCH pszSrc,",
    "        size_t cchToCopy)",
    "{",
    "  int v5; // edx",
    "  _BYTE *v6; // ecx",
    "  int v7; // esi",
    "  size_t v8; // eax",
    "  char v9; // bl",
    "",
    "  if ( !v5 )",
    "    goto LABEL_7;",
    "  v7 = 2147483646;",
    "  v8 = cchDest - (_DWORD)v6;",
    "  do",
    "  {",
    "    if ( !v7 )",
    "      break;",
    "    v9 = v6[v8];",
    "    if ( !v9 )",
    "      break;",
    "    *v6++ = v9;",
    "    --v7;",
    "    --v5;",
    "  }",
    "  while ( v5 );",
    "  if ( !v5 )",
    "LABEL_7:",
    "    --v6;",
    "  *v6 = 0;",
    "  return v5 != 0 ? 0 : -2147024774;",
    "}",
    "",
    "",
    "int __fastcall AvailableBufferCch(unsigned int a1, int a2, unsigned int a3)",
    "{",
    "  if ( a3 < a1 || a3 - a1 > 0x400 )",
    "    return 0;",
    "  else",
    "    return a1 - a3 + 1024;",
    "}",
    "",
    "",
    "int __thiscall CheckToken(_DWORD *this)",
    "{",
    "  int v2; // ebx",
    "  HMODULE LibraryA; // eax",
    "  HMODULE v4; // edi",
    "  PSID pSid; // [esp+10h] [ebp-14h] BYREF",
    "  BOOL (__stdcall *CheckTokenMembership)(HANDLE, PSID, PBOOL); // [esp+14h] [ebp-10h]",
    "  _LUID pIdentifierAuthority; // [esp+18h] [ebp-Ch] BYREF",
    "",
    "  LOWORD(pIdentifierAuthority.HighPart) = 1280;",
    "  pIdentifierAuthority.LowPart = 0;",
    "  v2 = 0;",
    "  LibraryA = LoadLibraryA(\"advapi32.dll\");",
    "  v4 = LibraryA;",
    "  if ( LibraryA )",
    "  {",
    "    CheckTokenMembership = (BOOL (__stdcall *)(HANDLE, PSID, PBOOL))GetProcAddress(LibraryA, \"CheckTokenMembership\");",
    "    if ( CheckTokenMembership )",
    "    {",
    "      *this = 0;",
    "      v2 = 1;",
    "      if ( AllocateAndInitializeSid(",
    "             (PSID_IDENTIFIER_AUTHORITY)&pIdentifierAuthority,",
    "             2u,",
    "             0x20u,",
    "             0x220u,",
    "             0,",
    "             0,",
    "             0,",
    "             0,",
    "             0,",
    "             0,",
    "             &pSid) )",
    "      {",
    "        ((void (__thiscall *)(BOOL (__stdcall *)(HANDLE, PSID, PBOOL), _DWORD, PSID, _DWORD *))CheckTokenMembership)(",
    "          CheckTokenMembership,",
    "          0,",
    "          pSid,",
    "          this);",
    "        FreeSid(pSid);",
    "      }",
    "    }",
    "    FreeLibrary(v4);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "BOOL __stdcall IsNTAdmin(DWORD dwReserved, DWORD *lpdwReserved)",
    "{",
    "  BOOL result; // eax",
    "  unsigned int v3; // ebx",
    "  HANDLE CurrentProcess; // eax",
    "  PSID *v5; // esi",
    "  PSID *v6; // edi",
    "  PSID pSid; // [esp+8h] [ebp-1Ch] BYREF",
    "  HANDLE TokenHandle; // [esp+Ch] [ebp-18h] BYREF",
    "  STRSAFE_LPSTR ReturnLength; // [esp+10h] [ebp-14h] BYREF",
    "  BOOL v10; // [esp+14h] [ebp-10h] BYREF",
    "  struct _LUID pIdentifierAuthority; // [esp+18h] [ebp-Ch] BYREF",
    "",
    "  result = dword_408128;",
    "  v3 = 0;",
    "  LOWORD(pIdentifierAuthority.HighPart) = 1280;",
    "  pIdentifierAuthority.LowPart = 0;",
    "  v10 = 0;",
    "  if ( dword_408128 == 2 )",
    "  {",
    "    if ( CheckToken(&v10) )",
    "    {",
    "      result = v10;",
    "      if ( v10 )",
    "        dword_408128 = 1;",
    "    }",
    "    else",
    "    {",
    "      CurrentProcess = GetCurrentProcess();",
    "      result = OpenProcessToken(CurrentProcess, 8u, &TokenHandle);",
    "      if ( result )",
    "      {",
    "        if ( !GetTokenInformation(TokenHandle, TokenGroups, 0, 0, (PDWORD)&ReturnLength) && GetLastError() == 122 )",
    "        {",
    "          v5 = (PSID *)LocalAlloc(0, (SIZE_T)ReturnLength);",
    "          if ( v5 )",
    "          {",
    "            if ( GetTokenInformation(TokenHandle, TokenGroups, v5, (DWORD)ReturnLength, (PDWORD)&ReturnLength)",
    "              && AllocateAndInitializeSid(",
    "                   (PSID_IDENTIFIER_AUTHORITY)&pIdentifierAuthority,",
    "                   2u,",
    "                   0x20u,",
    "                   0x220u,",
    "                   0,",
    "                   0,",
    "                   0,",
    "                   0,",
    "                   0,",
    "                   0,",
    "                   &pSid) )",
    "            {",
    "              if ( *v5 )",
    "              {",
    "                v6 = v5 + 1;",
    "                while ( !EqualSid(*v6, pSid) )",
    "                {",
    "                  ++v3;",
    "                  v6 += 2;",
    "                  if ( v3 >= (unsigned int)*v5 )",
    "                    goto LABEL_15;",
    "                }",
    "                dword_408128 = 1;",
    "                v10 = 1;",
    "              }",
    "LABEL_15:",
    "              FreeSid(pSid);",
    "            }",
    "            LocalFree(v5);",
    "          }",
    "        }",
    "        CloseHandle(TokenHandle);",
    "        return v10;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __stdcall WarningDlgProc(HWND hDlg, int a2, INT_PTR nResult, UINT uID)",
    "{",
    "  HWND DesktopWindow; // eax",
    "  CHAR Buffer[512]; // [esp+4h] [ebp-204h] BYREF",
    "",
    "  if ( a2 == 272 )",
    "  {",
    "    DesktopWindow = GetDesktopWindow();",
    "    CenterWindow(hDlg, DesktopWindow);",
    "    Buffer[0] = 0;",
    "    LoadStringA(g_hInst, uID, Buffer, 512);",
    "    SetDlgItemTextA(hDlg, 2111, Buffer);",
    "    MessageBeep(0xFFFFFFFF);",
    "  }",
    "  else",
    "  {",
    "    if ( a2 != 273 || (unsigned int)(nResult - 2109) > 1 )",
    "      return 0;",
    "    EndDialog(hDlg, nResult);",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "_BYTE *__fastcall ExtractField(_BYTE **a1, const CHAR *a2)",
    "{",
    "  int v3; // edi",
    "  _BYTE *v4; // esi",
    "  _BYTE *result; // eax",
    "",
    "  v3 = 0;",
    "  v4 = *a1;",
    "  while ( ANSIStrChr(a2) )",
    "  {",
    "    if ( !*v4 )",
    "      return 0;",
    "    ++v4;",
    "  }",
    "  *a1 = v4;",
    "  while ( !ANSIStrChr(a2) && v4[v3] )",
    "    ++v3;",
    "  result = &v4[v3];",
    "  if ( v4[v3] )",
    "    *result++ = 0;",
    "  return result;",
    "}",
    "",
    "",
    "int __thiscall AnalyzeCmd(STRSAFE_LPSTR pszDest, char **a2, _DWORD *a3)",
    "{",
    "  const CHAR *v4; // edx",
    "  char *v5; // eax",
    "  char *v6; // eax",
    "  char *v7; // ecx",
    "  char *v8; // esi",
    "  char *v9; // edi",
    "  char v10; // al",
    "  const CHAR *v11; // eax",
    "  DWORD FileAttributesA; // eax",
    "  char *v13; // eax",
    "  char *v14; // esi",
    "  STRSAFE_LPSTR v15; // edi",
    "  const CHAR *v16; // eax",
    "  const char *v17; // ebx",
    "  int result; // eax",
    "  const CHAR *v19; // eax",
    "  SIZE_T v20; // edi",
    "  DWORD v21; // eax",
    "  char *v22; // ecx",
    "  size_t v23; // [esp+0h] [ebp-624h]",
    "  const char *v24; // [esp+0h] [ebp-624h]",
    "  const char *v25; // [esp+0h] [ebp-624h]",
    "  size_t v26; // [esp+0h] [ebp-624h]",
    "  size_t v27; // [esp+0h] [ebp-624h]",
    "  size_t v28; // [esp+0h] [ebp-624h]",
    "  const char *v29; // [esp+4h] [ebp-620h]",
    "  const char *v30; // [esp+4h] [ebp-620h]",
    "  const char *v31; // [esp+4h] [ebp-620h]",
    "  STRSAFE_LPCSTR v32; // [esp+4h] [ebp-620h]",
    "  const char *v33; // [esp+4h] [ebp-620h]",
    "  STRSAFE_LPCSTR v34; // [esp+4h] [ebp-620h]",
    "  STRSAFE_LPSTR pszDesta; // [esp+14h] [ebp-610h] BYREF",
    "  CHAR v36[1024]; // [esp+18h] [ebp-60Ch] BYREF",
    "  char v37; // [esp+418h] [ebp-20Ch] BYREF",
    "  char v38; // [esp+419h] [ebp-20Bh] BYREF",
    "  CHAR FileName[260]; // [esp+51Ch] [ebp-108h] BYREF",
    "",
    "  StringCchCopyA(pszDest, v23, v29);",
    "  if ( v37 == 34 )",
    "  {",
    "    v4 = \"\\\"\";",
    "    v5 = &v38;",
    "  }",
    "  else",
    "  {",
    "    v4 = \" \";",
    "    v5 = &v37;",
    "  }",
    "  pszDesta = v5;",
    "  v6 = ExtractField(&pszDesta, v4);",
    "  v8 = pszDesta;",
    "  v9 = v6;",
    "  if ( pszDesta",
    "    && (v7 = (char *)strlen(pszDesta), (unsigned int)v7 >= 3)",
    "    && ((v10 = pszDesta[1], v10 == 58) && pszDesta[2] == 92 || *pszDesta == 92 && v10 == 92) )",
    "  {",
    "    StringCchCopyA(pszDesta, (size_t)v24, v30);",
    "  }",
    "  else",
    "  {",
    "    StringCopyWorkerA(v7, (size_t)&Buffer, (size_t *)v7, v24, (size_t)v30);",
    "    AddPath(FileName, v8);",
    "  }",
    "  v11 = (const CHAR *)ANSIStrRChr(v8);",
    "  if ( v11 && CompareStringA(0x7Fu, 1u, v11, -1, \".INF\", -1) == 2 )",
    "  {",
    "    FileAttributesA = GetFileAttributesA(FileName);",
    "    if ( FileAttributesA == -1 || (FileAttributesA & 0x10) != 0 )",
    "    {",
    "      MsgBox2Param(0, 1317, FileName, 0, 16, 0);",
    "      return 0;",
    "    }",
    "    pszDesta = v9;",
    "    v13 = ExtractField(&pszDesta, \"[\");",
    "    if ( v13 )",
    "    {",
    "      if ( *v13 )",
    "        pszDesta = v13;",
    "      ExtractField(&pszDesta, \"]\");",
    "    }",
    "    v14 = (char *)LocalAlloc(0x40u, 0x200u);",
    "    if ( v14 )",
    "    {",
    "      v15 = pszDesta;",
    "      v16 = pszDesta;",
    "      if ( !*pszDesta )",
    "        v16 = aDefaultinstall;",
    "      g_uInfRebootOn = GetPrivateProfileIntA(v16, \"Reboot\", 0, FileName);",
    "      *a3 = 1;",
    "      if ( GetPrivateProfileStringA(\"Version\", \"AdvancedINF\", pszCabPath, v14, 8u, FileName) )",
    "      {",
    "        dword_409A34 |= 4u;",
    "        if ( !*v15 )",
    "          v15 = aDefaultinstall;",
    "        StringCchCopyA(v15, (size_t)v25, v31);",
    "        StringCchCopyA(FileName, v26, v32);",
    "      }",
    "      else",
    "      {",
    "        dword_409A34 &= ~4u;",
    "        if ( g_wOSVer )",
    "        {",
    "          v17 = \"setupapi.dll\";",
    "        }",
    "        else",
    "        {",
    "          v17 = \"setupx.dll\";",
    "          GetShortPathNameA(FileName, FileName, 0x104u);",
    "        }",
    "        if ( !*v15 )",
    "          v15 = aDefaultinstall;",
    "        StringCchPrintfA(v14, 0x200u, \"rundll32.exe %s,InstallHinfSection %s 128 %s\", v17, v15, FileName);",
    "      }",
    "      goto LABEL_48;",
    "    }",
    "    goto LABEL_38;",
    "  }",
    "  v19 = (const CHAR *)ANSIStrRChr(v8);",
    "  if ( !v19 || CompareStringA(0x7Fu, 1u, v19, -1, \".BAT\", -1) != 2 )",
    "  {",
    "    v14 = (char *)LocalAlloc(0x40u, 0x400u);",
    "    if ( v14 )",
    "    {",
    "      v21 = GetFileAttributesA(FileName);",
    "      if ( v21 == -1 || (v21 & 0x10) != 0 )",
    "      {",
    "        StringCchCopyA(pszDest, (size_t)v25, v31);",
    "      }",
    "      else",
    "      {",
    "        StringCopyWorkerA(v22, (size_t)FileName, (size_t *)v22, v25, (size_t)v31);",
    "        if ( v9 && *v9 )",
    "        {",
    "          StringCchCatA((STRSAFE_LPSTR)\" \", v27, v33);",
    "          StringCchCatA(v9, v28, v34);",
    "        }",
    "      }",
    "      *v14 = 0;",
    "      ExpandCmdParams(v36, v14);",
    "      goto LABEL_48;",
    "    }",
    "    goto LABEL_38;",
    "  }",
    "  v20 = strlen(FileName) + strlen(aCommandComCS) + 8;",
    "  v14 = (char *)LocalAlloc(0x40u, v20);",
    "  if ( !v14 )",
    "  {",
    "LABEL_38:",
    "    MsgBox2Param(0, 1205, 0, 0, 16, 0);",
    "    return 0;",
    "  }",
    "  StringCchPrintfA(v14, v20, \"Command.com /c %s\", FileName);",
    "LABEL_48:",
    "  result = 1;",
    "  *a2 = v14;",
    "  return result;",
    "}",
    "",
    "",
    "int CheckReboot()",
    "{",
    "  int v0; // edi",
    "  int v1; // esi",
    "",
    "  v0 = -1;",
    "  if ( g_uInfRebootOn )",
    "    return 2;",
    "  v1 = g_dwRebootCheck;",
    "  if ( v1 != NeedRebootInit() )",
    "    return 2;",
    "  return v0;",
    "}",
    "",
    "",
    "int MyNTReboot()",
    "{",
    "  HANDLE CurrentProcess; // eax",
    "  int v1; // edx",
    "  BOOL v3; // esi",
    "  HANDLE TokenHandle; // [esp+4h] [ebp-18h] BYREF",
    "  _TOKEN_PRIVILEGES NewState; // [esp+8h] [ebp-14h] BYREF",
    "",
    "  CurrentProcess = GetCurrentProcess();",
    "  if ( !OpenProcessToken(CurrentProcess, 0x28u, &TokenHandle) )",
    "  {",
    "    v1 = 1269;",
    "LABEL_3:",
    "    MsgBox2Param(0, v1, 0, 0, 16, 0);",
    "    return 0;",
    "  }",
    "  LookupPrivilegeValueA(0, \"SeShutdownPrivilege\", &NewState.Privileges[0].Luid);",
    "  NewState.PrivilegeCount = 1;",
    "  NewState.Privileges[0].Attributes = 2;",
    "  v3 = AdjustTokenPrivileges(TokenHandle, 0, &NewState, 0, 0, 0);",
    "  CloseHandle(TokenHandle);",
    "  if ( !v3 )",
    "  {",
    "    v1 = 1270;",
    "    goto LABEL_3;",
    "  }",
    "  if ( !ExitWindowsEx(2u, 0) )",
    "  {",
    "    v1 = 1271;",
    "    goto LABEL_3;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "int __fastcall MyRestartDialog(char a1)",
    "{",
    "  int result; // eax",
    "",
    "  if ( (a1 & 2) != 0 || (result = CheckReboot(), result == 2) )",
    "  {",
    "    if ( (a1 & 4) != 0 || (result = MsgBox2Param(0, 1314, pszCabPath, 0, 64, 4), result == 6) )",
    "    {",
    "      if ( g_wOSVer )",
    "        return MyNTReboot();",
    "      else",
    "        return ExitWindowsEx(2u, 0);",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __thiscall CleanRegRunOnce(HKEY this)",
    "{",
    "  HKEY phkResult; // [esp+0h] [ebp-4h] BYREF",
    "",
    "  phkResult = this;",
    "  if ( g_szRegValName )",
    "  {",
    "    if ( !RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x20006u, &phkResult) )",
    "    {",
    "      RegDeleteValueA(phkResult, &g_szRegValName);",
    "      RegCloseKey(phkResult);",
    "    }",
    "  }",
    "}",
    "",
    "",
    "HLOCAL AddRegRunOnce()",
    "{",
    "  BOOL v0; // ebx",
    "  HLOCAL result; // eax",
    "  int i; // esi",
    "  HMODULE LibraryA; // eax",
    "  HMODULE v4; // edi",
    "  FARPROC DelNodeRunDLL32; // esi",
    "  unsigned int v6; // kr00_4",
    "  unsigned int v7; // kr04_4",
    "  char *v8; // esi",
    "  const char *v9; // eax",
    "  DWORD cbData; // [esp+8h] [ebp-218h] BYREF",
    "  DWORD dwDisposition; // [esp+Ch] [ebp-214h] BYREF",
    "  HKEY phkResult; // [esp+10h] [ebp-210h] BYREF",
    "  CHAR Buffer[260]; // [esp+14h] [ebp-20Ch] BYREF",
    "  CHAR Filename[260]; // [esp+118h] [ebp-108h] BYREF",
    "",
    "  memset(Filename, 0, sizeof(Filename));",
    "  memset(Buffer, 0, sizeof(Buffer));",
    "  v0 = 0;",
    "  result = (HLOCAL)RegCreateKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0, 0, 0x2001Fu, 0, &phkResult, &dwDisposition);",
    "  if ( !result )",
    "  {",
    "    for ( i = 0; i < 200; ++i )",
    "    {",
    "      StringCchPrintfA(&g_szRegValName, 0x50u, \"wextract_cleanup%d\", i);",
    "      if ( RegQueryValueExA(phkResult, &g_szRegValName, 0, 0, 0, &cbData) )",
    "        break;",
    "    }",
    "    if ( i == 200 )",
    "    {",
    "      result = (HLOCAL)RegCloseKey(phkResult);",
    "      g_szRegValName = 0;",
    "      return result;",
    "    }",
    "    GetSystemDirectoryA(Buffer, 0x104u);",
    "    AddPath(Buffer, (STRSAFE_LPSTR)\"advpack.dll\");",
    "    LibraryA = LoadLibraryA(Buffer);",
    "    v4 = LibraryA;",
    "    if ( LibraryA",
    "      && (DelNodeRunDLL32 = GetProcAddress(LibraryA, \"DelNodeRunDLL32\"),",
    "          v0 = DelNodeRunDLL32 != 0,",
    "          FreeLibrary(v4),",
    "          DelNodeRunDLL32) )",
    "    {",
    "      if ( GetSystemDirectoryA(Filename, 0x104u) )",
    "        AddPath(Filename, (STRSAFE_LPSTR)pszCabPath);",
    "    }",
    "    else if ( !GetModuleFileNameA(g_hInst, Filename, 0x104u) )",
    "    {",
    "      return (HLOCAL)RegCloseKey(phkResult);",
    "    }",
    "    v6 = strlen(Filename);",
    "    v7 = strlen((const char *)&::Buffer);",
    "    v8 = (char *)LocalAlloc(0x40u, v7 + v6 + 80);",
    "    if ( !v8 )",
    "    {",
    "      MsgBox2Param(0, 1205, 0, 0, 16, 0);",
    "      return (HLOCAL)RegCloseKey(phkResult);",
    "    }",
    "    g_bConvertRunOnce = !v0;",
    "    v9 = aRundll32ExeSad;",
    "    if ( !v0 )",
    "      v9 = aSDS;",
    "    StringCchPrintfA(v8, v7 + v6 + 80, v9, Filename, &::Buffer);",
    "    RegSetValueExA(phkResult, &g_szRegValName, 0, 1u, (const BYTE *)v8, strlen(v8) + 1);",
    "    RegCloseKey(phkResult);",
    "    return LocalFree(v8);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void ConvertRegRunOnce()",
    "{",
    "  DWORD cbData; // [esp+0h] [ebp-348h] BYREF",
    "  HKEY phkResult; // [esp+4h] [ebp-344h] BYREF",
    "  BYTE Data[568]; // [esp+8h] [ebp-340h] BYREF",
    "  CHAR Buffer[260]; // [esp+240h] [ebp-108h] BYREF",
    "",
    "  if ( g_szRegValName && !RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x2001Fu, &phkResult) )",
    "  {",
    "    cbData = 568;",
    "    if ( !RegQueryValueExA(phkResult, &g_szRegValName, 0, 0, Data, &cbData) )",
    "    {",
    "      memset(Buffer, 0, sizeof(Buffer));",
    "      if ( GetSystemDirectoryA(Buffer, 0x104u) )",
    "        AddPath(Buffer, (STRSAFE_LPSTR)pszCabPath);",
    "      StringCchPrintfA(",
    "        (STRSAFE_LPSTR)Data,",
    "        0x238u,",
    "        \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\",",
    "        Buffer,",
    "        (const char *)&::Buffer);",
    "      RegSetValueExA(phkResult, &g_szRegValName, 0, 1u, Data, strlen((const char *)Data) + 1);",
    "    }",
    "    RegCloseKey(phkResult);",
    "  }",
    "}",
    "",
    "",
    "void __thiscall DeleteMyDir(char *this)",
    "{",
    "  HANDLE FirstFileA; // edi",
    "  size_t v3; // [esp+0h] [ebp-260h]",
    "  size_t v4; // [esp+0h] [ebp-260h]",
    "  size_t v5; // [esp+0h] [ebp-260h]",
    "  const char *v6; // [esp+4h] [ebp-25Ch]",
    "  STRSAFE_LPCSTR v7; // [esp+4h] [ebp-25Ch]",
    "  const char *v8; // [esp+4h] [ebp-25Ch]",
    "  _WIN32_FIND_DATAA FindFileData; // [esp+10h] [ebp-250h] BYREF",
    "  char pszDest[268]; // [esp+150h] [ebp-110h] BYREF",
    "",
    "  if ( this )",
    "  {",
    "    if ( *this )",
    "    {",
    "      StringCchCopyA(this, v3, v6);",
    "      StringCchCatA((STRSAFE_LPSTR)\"*\", v4, v7);",
    "      FirstFileA = FindFirstFileA(pszDest, &FindFileData);",
    "      if ( FirstFileA != (HANDLE)-1 )",
    "      {",
    "        do",
    "        {",
    "          StringCchCopyA(this, v5, v8);",
    "          if ( (FindFileData.dwFileAttributes & 0x10) != 0 )",
    "          {",
    "            if ( lstrcmpA(FindFileData.cFileName, \".\") )",
    "            {",
    "              if ( lstrcmpA(FindFileData.cFileName, \"..\") )",
    "              {",
    "                StringCchCatA(FindFileData.cFileName, v5, v8);",
    "                AddPath(pszDest, (STRSAFE_LPSTR)pszCabPath);",
    "                DeleteMyDir(pszDest);",
    "              }",
    "            }",
    "          }",
    "          else",
    "          {",
    "            StringCchCatA(FindFileData.cFileName, v5, v8);",
    "            SetFileAttributesA(pszDest, 0x80u);",
    "            DeleteFileA(pszDest);",
    "          }",
    "        }",
    "        while ( FindNextFileA(FirstFileA, &FindFileData) );",
    "        FindClose(FirstFileA);",
    "        RemoveDirectoryA(this);",
    "      }",
    "    }",
    "  }",
    "}",
    "",
    "",
    "LONG GetWininitSize()",
    "{",
    "  LONG v0; // esi",
    "  HFILE v1; // eax",
    "  HFILE v2; // edi",
    "  BYTE Buffer[260]; // [esp+8h] [ebp-108h] BYREF",
    "",
    "  v0 = 0;",
    "  if ( GetWindowsDirectoryA((LPSTR)Buffer, 0x104u) )",
    "  {",
    "    AddPath((LPCSTR)Buffer, \"wininit.ini\");",
    "    WritePrivateProfileStringA(0, 0, 0, (LPCSTR)Buffer);",
    "    v1 = _lopen((LPCSTR)Buffer, 64);",
    "    v2 = v1;",
    "    if ( v1 != -1 )",
    "    {",
    "      v0 = _llseek(v1, 0, 2);",
    "      _lclose(v2);",
    "    }",
    "  }",
    "  return v0;",
    "}",
    "",
    "",
    "DWORD __stdcall NeedRebootInit()",
    "{",
    "  unsigned __int16 v0; // cx",
    "  DWORD v1; // esi",
    "  LSTATUS v2; // eax",
    "  HKEY phkResult; // [esp+4h] [ebp-8h] BYREF",
    "  DWORD cbData; // [esp+8h] [ebp-4h] BYREF",
    "",
    "  v1 = 0;",
    "  if ( !v0 )",
    "    return GetWininitSize();",
    "  if ( v0 == 1 )",
    "  {",
    "    cbData = 0;",
    "    if ( RegOpenKeyExA(HKEY_LOCAL_MACHINE, aSystemCurrentc_0, 0, 0x20019u, &phkResult) )",
    "      return cbData;",
    "    v2 = RegQueryInfoKeyA(phkResult, 0, 0, 0, 0, 0, 0, &cbData, 0, 0, 0, 0);",
    "    goto LABEL_6;",
    "  }",
    "  if ( v0 <= 3u )",
    "  {",
    "    cbData = 0;",
    "    if ( RegOpenKeyExA(HKEY_LOCAL_MACHINE, aSystemCurrentc, 0, 0x20019u, &phkResult) )",
    "      return cbData;",
    "    v2 = RegQueryValueExA(phkResult, ValueName, 0, 0, 0, &cbData);",
    "LABEL_6:",
    "    cbData &= -(v2 == 0);",
    "    RegCloseKey(phkResult);",
    "    return cbData;",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "BOOL __thiscall IsWindowsDrive(_BYTE *this)",
    "{",
    "  CHAR Buffer[260]; // [esp+4h] [ebp-108h] BYREF",
    "",
    "  if ( !GetWindowsDirectoryA(Buffer, 0x104u) )",
    "    MsgBox2Param(0, 1264, 0, 0, 16, 0);",
    "  return *this == Buffer[0];",
    "}",
    "",
    "",
    "BOOL __fastcall DiskSpaceErrMsg(int a1, int a2, int a3, int a4)",
    "{",
    "  int v4; // esi",
    "  char pszDest[12]; // [esp+Ch] [ebp-10h] BYREF",
    "",
    "  g_dwExitCode = 112;",
    "  v4 = 0;",
    "  switch ( a1 )",
    "  {",
    "    case 1:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a2 + a3);",
    "      MsgBox2Param(0, 1274, pszDest, 0, 16, 0);",
    "      break;",
    "    case 4:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a2 + a3);",
    "      return MsgBox2Param(0, 1213, pszDest, 0, 32, 5) == 4;",
    "    case 2:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a3);",
    "      if ( MsgBox2Param(0, 1228, pszDest, a4, 64, 260) == 6 )",
    "      {",
    "        g_dwExitCode = 0;",
    "        return 1;",
    "      }",
    "      break;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "int __thiscall GetFileTobeChecked(LPSTR lpBuffer, int a2)",
    "{",
    "  int v2; // ebx",
    "  const CHAR *v4; // eax",
    "  char *v5; // ecx",
    "  DWORD v6; // eax",
    "  const char *v8; // [esp+0h] [ebp-128h]",
    "  size_t v9; // [esp+0h] [ebp-128h]",
    "  size_t v10; // [esp+4h] [ebp-124h]",
    "  const char *v11; // [esp+4h] [ebp-124h]",
    "  DWORD cbData; // [esp+Ch] [ebp-11Ch] BYREF",
    "  HKEY phkResult; // [esp+10h] [ebp-118h] BYREF",
    "  DWORD Type; // [esp+14h] [ebp-114h] BYREF",
    "  STRSAFE_LPSTR v15; // [esp+18h] [ebp-110h]",
    "  unsigned __int8 v16; // [esp+1Fh] [ebp-109h]",
    "  CHAR SubKey[260]; // [esp+20h] [ebp-108h] BYREF",
    "",
    "  v2 = 0;",
    "  v15 = (STRSAFE_LPSTR)a2;",
    "  *lpBuffer = 0;",
    "  if ( *(_BYTE *)a2 == 35 )",
    "  {",
    "    v16 = (unsigned __int8)CharUpperA((LPSTR)*(char *)(a2 + 1));",
    "    v4 = CharNextA((LPCSTR)(a2 + 1));",
    "    v15 = CharNextA(v4);",
    "    if ( v16 != 83 )",
    "    {",
    "      if ( v16 == 87 )",
    "      {",
    "        GetWindowsDirectoryA(lpBuffer, 0x104u);",
    "      }",
    "      else",
    "      {",
    "        cbData = 260;",
    "        StringCopyWorkerA(v5, (size_t)\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\", (size_t *)v5, v8, v10);",
    "        AddPath(SubKey, v15);",
    "        if ( !RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x20019u, &phkResult) )",
    "        {",
    "          if ( !RegQueryValueExA(phkResult, pszCabPath, 0, &Type, (LPBYTE)lpBuffer, &cbData) )",
    "          {",
    "            v6 = Type;",
    "            if ( Type == 2 )",
    "            {",
    "              if ( ExpandEnvironmentStringsA(lpBuffer, SubKey, 0x104u) )",
    "              {",
    "                StringCchCopyA(SubKey, v9, v11);",
    "LABEL_11:",
    "                v2 = 1;",
    "                goto LABEL_12;",
    "              }",
    "              v6 = Type;",
    "            }",
    "            if ( v6 == 1 )",
    "              goto LABEL_11;",
    "          }",
    "LABEL_12:",
    "          RegCloseKey(phkResult);",
    "          goto LABEL_15;",
    "        }",
    "      }",
    "LABEL_16:",
    "      AddPath(lpBuffer, v15);",
    "      return 1;",
    "    }",
    "  }",
    "  GetSystemDirectoryA(lpBuffer, 0x104u);",
    "LABEL_15:",
    "  if ( !v2 )",
    "    goto LABEL_16;",
    "  return 1;",
    "}",
    "",
    "",
    "int __fastcall CheckFileVersion(int a1, const CHAR *a2, int a3, _DWORD *a4)",
    "{",
    "  int v4; // edx",
    "  int v5; // esi",
    "  int v6; // ebx",
    "  void *v7; // edi",
    "  int v8; // eax",
    "  DWORD FileVersionInfoSizeA; // eax",
    "  HGLOBAL v10; // eax",
    "  void *v11; // eax",
    "  int v12; // ebx",
    "  int v13; // eax",
    "  int *v14; // esi",
    "  int v15; // eax",
    "  int v17; // [esp-4h] [ebp-4Ch]",
    "  _DWORD v18[2]; // [esp+Ch] [ebp-3Ch]",
    "  _DWORD v19[3]; // [esp+14h] [ebp-34h]",
    "  LPVOID lpBuffer; // [esp+20h] [ebp-28h] BYREF",
    "  unsigned int puLen; // [esp+24h] [ebp-24h] BYREF",
    "  LPCVOID pBlock; // [esp+28h] [ebp-20h]",
    "  DWORD dwHandle; // [esp+2Ch] [ebp-1Ch] BYREF",
    "  DWORD dwLen; // [esp+30h] [ebp-18h]",
    "  int v25; // [esp+34h] [ebp-14h]",
    "  int v26; // [esp+38h] [ebp-10h]",
    "  int v27; // [esp+3Ch] [ebp-Ch]",
    "  LPCSTR lptstrFilename; // [esp+40h] [ebp-8h]",
    "  int v29; // [esp+44h] [ebp-4h]",
    "",
    "  lptstrFilename = a2;",
    "  v4 = a1;",
    "  v5 = 0;",
    "  v27 = a1;",
    "  v6 = 0;",
    "  v7 = 0;",
    "  v26 = 0;",
    "  if ( *(int *)(a1 + 124) <= 0 )",
    "  {",
    "LABEL_20:",
    "    v5 = 1;",
    "  }",
    "  else",
    "  {",
    "    v8 = 0;",
    "    v29 = 0;",
    "    while ( 1 )",
    "    {",
    "      v25 = *(_DWORD *)(v4 + 128);",
    "      if ( !GetFileTobeChecked((LPSTR)lptstrFilename, v4 + 132 + *(_DWORD *)(v4 + v8 + v25 + 188)) )",
    "        break;",
    "      FileVersionInfoSizeA = GetFileVersionInfoSizeA(lptstrFilename, &dwHandle);",
    "      dwLen = FileVersionInfoSizeA;",
    "      if ( FileVersionInfoSizeA )",
    "      {",
    "        v10 = GlobalAlloc(0x42u, FileVersionInfoSizeA);",
    "        v7 = v10;",
    "        if ( !v10 )",
    "          break;",
    "        v11 = GlobalLock(v10);",
    "        pBlock = v11;",
    "        if ( !v11 )",
    "          break;",
    "        if ( GetFileVersionInfoA(lptstrFilename, dwHandle, dwLen, v11) )",
    "        {",
    "          if ( VerQueryValueA(pBlock, \"\\\\\", &lpBuffer, &puLen) )",
    "          {",
    "            if ( puLen )",
    "            {",
    "              v12 = 0;",
    "              v13 = *((_DWORD *)lpBuffer + 2);",
    "              dwLen = *((_DWORD *)lpBuffer + 3);",
    "              v19[2] = v13;",
    "              pBlock = (LPCVOID)(v25 + 148 + v27 + v29);",
    "              v14 = (int *)pBlock;",
    "              do",
    "              {",
    "                v15 = CompareVersion(*(v14 - 4), *(v14 - 3));",
    "                v17 = *v14;",
    "                v19[v12] = v15;",
    "                v18[v12] = CompareVersion(*(v14 - 1), v17);",
    "                v14 += 6;",
    "                ++v12;",
    "              }",
    "              while ( v12 < 2 );",
    "              v6 = v26;",
    "              v5 = 0;",
    "              if ( (v19[0] < 0 || v18[0] > 0) && (v19[1] < 0 || v18[1] > 0) )",
    "              {",
    "                GlobalUnlock(v7);",
    "                break;",
    "              }",
    "            }",
    "          }",
    "        }",
    "        GlobalUnlock(v7);",
    "        v4 = v27;",
    "      }",
    "      else",
    "      {",
    "        v4 = v27;",
    "        v6 = v26;",
    "        if ( *(_DWORD *)(v27 + v29 + v25 + 132) || *(_DWORD *)(v27 + v29 + v25 + 136) )",
    "          break;",
    "      }",
    "      ++v6;",
    "      v8 = v29 + 60;",
    "      v26 = v6;",
    "      v29 += 60;",
    "      if ( v6 >= *(_DWORD *)(v4 + 124) )",
    "        goto LABEL_20;",
    "    }",
    "  }",
    "  *a4 = v6;",
    "  if ( v7 )",
    "    GlobalFree(v7);",
    "  return v5;",
    "}",
    "",
    "",
    "int __fastcall CompareVersion(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)",
    "{",
    "  if ( a1 >= a3 )",
    "  {",
    "    if ( a1 > a3 )",
    "      return 1;",
    "    if ( a2 >= a4 )",
    "      return a2 > a4;",
    "  }",
    "  return -1;",
    "}",
    "",
    "",
    "void __fastcall ExpandCmdParams(BYTE *lpsz, unsigned int a2, CHAR *lpsza)",
    "{",
    "  BYTE *v5; // edi",
    "  BOOL v6; // eax",
    "  LPSTR v7; // eax",
    "  int v8; // edx",
    "  size_t v9; // [esp+0h] [ebp-114h]",
    "  const char *v10; // [esp+4h] [ebp-110h]",
    "  BYTE Filename[260]; // [esp+Ch] [ebp-108h] BYREF",
    "",
    "  v5 = lpsz;",
    "  if ( *lpsz )",
    "  {",
    "    GetModuleFileNameA(g_hInst, (LPSTR)Filename, 0x104u);",
    "    while ( 1 )",
    "    {",
    "      if ( !*v5 )",
    "      {",
    "        *lpsza = 0;",
    "        return;",
    "      }",
    "      v6 = IsDBCSLeadByte(*v5);",
    "      *lpsza = *v5;",
    "      if ( v6 )",
    "        lpsza[1] = v5[1];",
    "      if ( *v5 != 35 )",
    "        goto LABEL_14;",
    "      v5 = (BYTE *)CharNextA((LPCSTR)v5);",
    "      if ( (unsigned __int8)CharUpperA((LPSTR)(char)*v5) == 68 )",
    "      {",
    "        GetParentDir((LPCSTR)Filename);",
    "        v7 = CharPrevA((LPCSTR)Filename, (LPCSTR)&Filename[strlen((const char *)Filename)]);",
    "        if ( v7 )",
    "        {",
    "          if ( *v7 == 92 )",
    "            *v7 = 0;",
    "        }",
    "LABEL_12:",
    "        AvailableBufferCch(a2, v8, (unsigned int)lpsza);",
    "        StringCchCopyA((STRSAFE_LPSTR)Filename, v9, v10);",
    "        lpsza += strlen(lpsza);",
    "        goto LABEL_15;",
    "      }",
    "      if ( (unsigned __int8)CharUpperA((LPSTR)(char)*v5) == 69 )",
    "        goto LABEL_12;",
    "      if ( *v5 == 35 )",
    "LABEL_14:",
    "        lpsza = CharNextA(lpsza);",
    "LABEL_15:",
    "      v5 = (BYTE *)CharNextA((LPCSTR)v5);",
    "    }",
    "  }",
    "}",
    "",
    "",
    "int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)",
    "{",
    "  signed int Version; // eax",
    "  int v5; // ecx",
    "  HMODULE ModuleHandleW; // eax",
    "  BOOL (__stdcall *HeapSetInformation)(HANDLE, HEAP_INFORMATION_CLASS, PVOID, SIZE_T); // eax",
    "  int v8; // esi",
    "",
    "  Version = GetVersion();",
    "  if ( Version >= 0 && (unsigned __int8)Version >= 6u )",
    "  {",
    "    ModuleHandleW = GetModuleHandleW(L\"Kernel32.dll\");",
    "    if ( ModuleHandleW )",
    "    {",
    "      HeapSetInformation = (BOOL (__stdcall *)(HANDLE, HEAP_INFORMATION_CLASS, PVOID, SIZE_T))GetProcAddress(",
    "                                                                                                ModuleHandleW,",
    "                                                                                                \"HeapSetInformation\");",
    "      if ( HeapSetInformation )",
    "        ((void (__thiscall *)(BOOL (__stdcall *)(HANDLE, HEAP_INFORMATION_CLASS, PVOID, SIZE_T), _DWORD, int, _DWORD, _DWORD))HeapSetInformation)(",
    "          HeapSetInformation,",
    "          0,",
    "          1,",
    "          0,",
    "          0);",
    "    }",
    "  }",
    "  g_dwExitCode = 0;",
    "  if ( Init(hInstance, v5) )",
    "  {",
    "    v8 = DoMain();",
    "    DeleteExtractedFiles();",
    "    if ( v8 )",
    "    {",
    "      if ( !byte_408A3A && (dword_409A2C & 1) != 0 )",
    "        MyRestartDialog(dword_409A2C);",
    "    }",
    "  }",
    "  if ( g_hMutex )",
    "    CloseHandle(g_hMutex);",
    "  return g_dwExitCode;",
    "}",
    "",
    "",
    "int __fastcall Init(HMODULE hModule, const CHAR *a2, int a3)",
    "{",
    "  HGLOBAL v3; // edi",
    "  unsigned int Resource; // eax",
    "  int v7; // edx",
    "  HRSRC ResourceA; // eax",
    "  DWORD v10; // [esp+0h] [ebp-114h]",
    "  DWORD *v11; // [esp+4h] [ebp-110h]",
    "  BYTE Name[260]; // [esp+Ch] [ebp-108h] BYREF",
    "",
    "  v3 = 0;",
    "  g_hInst = hModule;",
    "  memset(&g_Sess, 0, 0x8FCu);",
    "  memset(&g_CMD, 0, 0x32Cu);",
    "  memset(&g_szBrowsePath, 0, 0x104u);",
    "  dword_4093EC = 1;",
    "  Resource = GetResource(\"TITLE\", Caption, 0x7Fu);",
    "  if ( !Resource || Resource > 0x80 )",
    "  {",
    "    v7 = 1201;",
    "    goto LABEL_33;",
    "  }",
    "  g_hCancelEvent = CreateEventA(0, 1, 1, 0);",
    "  SetEvent(g_hCancelEvent);",
    "  if ( !GetResource(\"EXTRACTOPT\", &dword_409A34, 4u) )",
    "  {",
    "LABEL_4:",
    "    MsgBox2Param(0, 1201, 0, 0, 16, 0);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  if ( (dword_409A34 & 0xC0) != 0 )",
    "  {",
    "    if ( !GetResource(\"INSTANCECHECK\", Name, 0x104u) )",
    "      goto LABEL_4;",
    "    g_hMutex = CreateMutexA(0, 1, (LPCSTR)Name);",
    "    if ( g_hMutex )",
    "    {",
    "      if ( GetLastError() == 183 )",
    "      {",
    "        if ( (dword_409A34 & 0x80u) != 0 )",
    "        {",
    "          MsgBox2Param(0, 1355, Caption, 0, 16, 0);",
    "LABEL_12:",
    "          CloseHandle(g_hMutex);",
    "          g_dwExitCode = -2147024713;",
    "          return 0;",
    "        }",
    "        if ( MsgBox2Param(0, 1316, Caption, 0, 32, 4) != 6 )",
    "          goto LABEL_12;",
    "      }",
    "    }",
    "  }",
    "  g_uInfRebootOn = 0;",
    "  if ( !ParseCmdLine(a2) )",
    "  {",
    "    v7 = 1312;",
    "LABEL_33:",
    "    MsgBox2Param(0, v7, 0, 0, 16, 0);",
    "    return 0;",
    "  }",
    "  if ( byte_408A3A )",
    "  {",
    "    DeleteMyDir(&byte_408A3A);",
    "  }",
    "  else",
    "  {",
    "    ResourceA = FindResourceA(hModule, \"VERCHECK\", (LPCSTR)0xA);",
    "    if ( ResourceA )",
    "      v3 = LoadResource(hModule, ResourceA);",
    "    if ( g_fOSSupportsFullUI )",
    "      InitCommonControls();",
    "    if ( dword_408A24 )",
    "      return 1;",
    "    if ( CheckOSVersion(v3)",
    "      && (g_wOSVer != 1 && g_wOSVer != 2 && g_wOSVer != 3",
    "       || (dword_409A34 & 0x100) == 0",
    "       || (word_408A38 & 1) != 0",
    "       || IsNTAdmin(v10, v11)",
    "       || MyDialogBox(0, WarningDlgProc, 1351, 2110) == 2109) )",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "int __stdcall DoMain()",
    "{",
    "  HMODULE LibraryA; // eax",
    "  HMODULE v1; // ebx",
    "  DWORD v2; // edi",
    "  BOOL (__stdcall *DecryptFileA)(LPCSTR, DWORD); // eax",
    "  int v5; // eax",
    "  BYTE Buffer[264]; // [esp+10h] [ebp-10Ch] BYREF",
    "",
    "  if ( !word_408A38 )",
    "  {",
    "    if ( dword_408A24 )",
    "      goto LABEL_31;",
    "    if ( !GetUsersPermission() )",
    "      return 0;",
    "    if ( !word_408A38 )",
    "    {",
    "LABEL_31:",
    "      if ( DisplayLicense() )",
    "        goto LABEL_6;",
    "      return 0;",
    "    }",
    "  }",
    "LABEL_6:",
    "  if ( !GetFileList() || !GetTempDirectory() )",
    "    return 0;",
    "  GetSystemDirectoryA((LPSTR)Buffer, 0x105u);",
    "  AddPath((LPCSTR)Buffer, (STRSAFE_LPSTR)\"advapi32.dll\");",
    "  LibraryA = LoadLibraryA((LPCSTR)Buffer);",
    "  v1 = LibraryA;",
    "  v2 = 0;",
    "  if ( LibraryA )",
    "  {",
    "    DecryptFileA = (BOOL (__stdcall *)(LPCSTR, DWORD))GetProcAddress(LibraryA, \"DecryptFileA\");",
    "    if ( DecryptFileA )",
    "      ((void (__thiscall *)(BOOL (__stdcall *)(LPCSTR, DWORD), BYTE *, _DWORD))DecryptFileA)(DecryptFileA, &::Buffer, 0);",
    "  }",
    "  FreeLibrary(v1);",
    "  if ( !dword_408A24 && !dword_409A30 )",
    "    CheckWinDir();",
    "  if ( !SetCurrentDirectoryA((LPCSTR)&::Buffer) )",
    "  {",
    "    MsgBox2Param(0, 1212, 0, 0, 16, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  if ( !dword_408A2C && !ExtractFiles() )",
    "    return 0;",
    "  if ( (dword_408D48 & 0xC0) == 0 )",
    "    v2 = NeedRebootInit();",
    "  v5 = dword_408A24;",
    "  g_dwRebootCheck = v2;",
    "  if ( !dword_408A24 && !dword_409A30 )",
    "  {",
    "    if ( !RunInstallCommand() )",
    "      return 0;",
    "    v5 = dword_408A24;",
    "  }",
    "  if ( !word_408A38 && !v5 )",
    "    FinishMessage();",
    "  return 1;",
    "}",
    "",
    "",
    "LRESULT __stdcall MEditSubProc(_LUID_AND_ATTRIBUTES hWnd, ULONG Msg, tagRECT wParam, ULONG lParam)",
    "{",
    "  if ( hWnd.Luid.HighPart == 177 && !hWnd.Attributes && Msg == -2 )",
    "    return 0;",
    "  else",
    "    return CallWindowProcA(g_lpfnOldMEditWndProc, (HWND)hWnd.Luid.LowPart, hWnd.Luid.HighPart, hWnd.Attributes, Msg);",
    "}",
    "",
    "",
    "int __stdcall LicenseDlgProc(_LUID_AND_ATTRIBUTES hDlg, int a2, int a3, int a4)",
    "{",
    "  HWND DesktopWindow; // eax",
    "  HWND DlgItem; // esi",
    "",
    "  switch ( hDlg.Luid.HighPart )",
    "  {",
    "    case 0xF:",
    "      if ( !dword_408590 )",
    "      {",
    "        SendDlgItemMessageA((HWND)hDlg.Luid.LowPart, 2100, 0xB1u, 0xFFFFFFFF, 0);",
    "        dword_408590 = 1;",
    "      }",
    "      break;",
    "    case 0x10:",
    "      goto LABEL_8;",
    "    case 0x110:",
    "      DesktopWindow = GetDesktopWindow();",
    "      CenterWindow((HWND)hDlg.Luid.LowPart, DesktopWindow);",
    "      SetDlgItemTextA((HWND)hDlg.Luid.LowPart, 2100, g_szLicense);",
    "      SetWindowTextA((HWND)hDlg.Luid.LowPart, Caption);",
    "      SetForegroundWindow((HWND)hDlg.Luid.LowPart);",
    "      DlgItem = GetDlgItem((HWND)hDlg.Luid.LowPart, 2100);",
    "      g_lpfnOldMEditWndProc = (WNDPROC)GetWindowLongA(DlgItem, -4);",
    "      SetWindowLongA(DlgItem, -4, (LONG)MEditSubProc);",
    "      return 1;",
    "    case 0x111:",
    "      if ( hDlg.Attributes == 6 )",
    "      {",
    "        EndDialog((HWND)hDlg.Luid.LowPart, 1);",
    "        return 1;",
    "      }",
    "      if ( hDlg.Attributes != 7 )",
    "        return 1;",
    "LABEL_8:",
    "      EndDialog((HWND)hDlg.Luid.LowPart, 0);",
    "      return 1;",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "BOOL __thiscall IsFullPath(int this)",
    "{",
    "  BOOL result; // eax",
    "  char v2; // al",
    "",
    "  result = 0;",
    "  if ( strlen((const char *)this) >= 3 )",
    "  {",
    "    v2 = *(_BYTE *)(this + 1);",
    "    if ( v2 == 58 || *(_BYTE *)this == 92 && v2 == 92 )",
    "      return 1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __stdcall TempDirDlgProc(HWND hDlg, int a2, int a3, int a4)",
    "{",
    "  int v5; // ecx",
    "  int v6; // edx",
    "  HWND DesktopWindow; // eax",
    "  HWND DlgItem; // eax",
    "",
    "  if ( a2 == 16 )",
    "  {",
    "    EndDialog(hDlg, 0);",
    "    return 1;",
    "  }",
    "  if ( a2 == 272 )",
    "  {",
    "    DesktopWindow = GetDesktopWindow();",
    "    CenterWindow(hDlg, DesktopWindow);",
    "    SetWindowTextA(hDlg, Caption);",
    "    SendDlgItemMessageA(hDlg, 2101, 0xC5u, 0x103u, 0);",
    "    if ( g_wOSVer == 1 )",
    "    {",
    "      DlgItem = GetDlgItem(hDlg, 2102);",
    "      EnableWindow(DlgItem, 0);",
    "    }",
    "    return 1;",
    "  }",
    "  if ( a2 != 273 )",
    "    return 0;",
    "  if ( a3 == 1 )",
    "  {",
    "    if ( !GetDlgItemTextA(hDlg, 2101, (LPSTR)&Buffer, 260)",
    "      || (unsigned int)(&Buffer + strlen((const char *)&Buffer) + 1 - (BYTE *)&byte_4091E5) < 3",
    "      || byte_4091E5 != 58 && (Buffer != 92 || byte_4091E5 != 92) )",
    "    {",
    "      MsgBox2Param(hDlg, 1215, 0, 0, 16, 0);",
    "      return 1;",
    "    }",
    "    if ( GetFileAttributesA((LPCSTR)&Buffer) == -1 )",
    "    {",
    "      if ( MsgBox2Param(hDlg, 1354, &Buffer, 0, 32, 4) != 6 )",
    "        return 1;",
    "      if ( !CreateDirectoryA((LPCSTR)&Buffer, 0) )",
    "      {",
    "        MsgBox2Param(hDlg, 1227, &Buffer, 0, 16, 0);",
    "        return 1;",
    "      }",
    "    }",
    "    AddPath((LPCSTR)&Buffer, (STRSAFE_LPSTR)pszCabPath);",
    "    if ( !IsGoodTempDir((LPCSTR)&Buffer) )",
    "    {",
    "      MsgBox2Param(hDlg, 1214, 0, 0, 16, 0);",
    "      return 1;",
    "    }",
    "    if ( Buffer == 92 && byte_4091E5 == 92 || IsEnoughSpace((LPCSTR)&Buffer, 1) )",
    "      EndDialog(hDlg, 1);",
    "    return 1;",
    "  }",
    "  if ( a3 == 2 )",
    "  {",
    "    EndDialog(hDlg, 0);",
    "    g_dwExitCode = -2147023673;",
    "    return 1;",
    "  }",
    "  if ( a3 != 2102 )",
    "    return 1;",
    "  if ( LoadStringA(g_hInst, 0x3E8u, Buffer, 512) )",
    "  {",
    "    if ( BrowseForDir(hDlg, v5, v5) && !SetDlgItemTextA(hDlg, 2101, (LPCSTR)String) )",
    "    {",
    "      v6 = 1216;",
    "      goto LABEL_10;",
    "    }",
    "    return 1;",
    "  }",
    "  v6 = 1201;",
    "LABEL_10:",
    "  MsgBox2Param(hDlg, v6, 0, 0, 16, 0);",
    "  EndDialog(hDlg, 0);",
    "  return 1;",
    "}",
    "",
    "",
    "int __stdcall OverwriteDlgProc(HWND hDlg, int a2, unsigned int nResult, int a4)",
    "{",
    "  HWND DesktopWindow; // eax",
    "",
    "  switch ( a2 )",
    "  {",
    "    case 16:",
    "      EndDialog(hDlg, 2);",
    "      break;",
    "    case 272:",
    "      DesktopWindow = GetDesktopWindow();",
    "      CenterWindow(hDlg, DesktopWindow);",
    "      SetWindowTextA(hDlg, Caption);",
    "      SetDlgItemTextA(hDlg, 2104, lpString);",
    "      SetForegroundWindow(hDlg);",
    "      break;",
    "    case 273:",
    "      if ( nResult >= 6 )",
    "      {",
    "        if ( nResult <= 7 )",
    "        {",
    "LABEL_9:",
    "          EndDialog(hDlg, nResult);",
    "          return 1;",
    "        }",
    "        if ( nResult == 2105 )",
    "        {",
    "          dword_4091DC = 1;",
    "          goto LABEL_9;",
    "        }",
    "      }",
    "      break;",
    "    default:",
    "      return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "int __stdcall ExtractDlgProc(HWND a1, int a2, INT_PTR a3, int a4)",
    "{",
    "  int v5; // eax",
    "  HWND DesktopWindow; // eax",
    "  HWND DlgItem; // eax",
    "  HWND v8; // eax",
    "",
    "  switch ( a2 )",
    "  {",
    "    case 16:",
    "LABEL_18:",
    "      dword_4091D8 = 1;",
    "      goto LABEL_19;",
    "    case 258:",
    "      if ( a3 != 27 )",
    "        return 1;",
    "      goto LABEL_18;",
    "    case 272:",
    "      g_hwndExtractDlg = a1;",
    "      DesktopWindow = GetDesktopWindow();",
    "      CenterWindow(a1, DesktopWindow);",
    "      if ( g_fOSSupportsFullUI )",
    "      {",
    "        DlgItem = GetDlgItem(a1, 2107);",
    "        SendMessageA(DlgItem, 0x464u, 0, 3001);",
    "        v8 = GetDlgItem(a1, 2107);",
    "        SendMessageA(v8, 0x465u, 0xFFFFFFFF, -65536);",
    "      }",
    "      SetWindowTextA(a1, Caption);",
    "      hThread = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)ExtractThread, 0, 0, &ThreadId);",
    "      if ( !hThread )",
    "      {",
    "        MsgBox2Param(a1, 1208, 0, 0, 16, 0);",
    "        EndDialog(a1, 0);",
    "      }",
    "      return 1;",
    "    case 273:",
    "      if ( a3 != 2 )",
    "        return 1;",
    "      ResetEvent(g_hCancelEvent);",
    "      v5 = MsgBox2Param(g_hwndExtractDlg, 1202, pszCabPath, 0, 32, 4);",
    "      if ( v5 != 6 && v5 != 1 )",
    "      {",
    "        SetEvent(g_hCancelEvent);",
    "        return 1;",
    "      }",
    "      dword_4091D8 = 1;",
    "      SetEvent(g_hCancelEvent);",
    "      WaitForObject(hThread);",
    "LABEL_19:",
    "      EndDialog(a1, 0);",
    "      return 1;",
    "  }",
    "  if ( a2 != 4001 )",
    "    return 0;",
    "  TerminateThread(hThread, 0);",
    "  EndDialog(a1, a3);",
    "  return 1;",
    "}",
    "",
    "",
    "DWORD __thiscall WaitForObject(void *this)",
    "{",
    "  int v1; // esi",
    "  DWORD result; // eax",
    "  tagMSG Msg; // [esp+8h] [ebp-20h] BYREF",
    "  HANDLE pHandles; // [esp+24h] [ebp-4h] BYREF",
    "",
    "  pHandles = this;",
    "  v1 = 0;",
    "  while ( 1 )",
    "  {",
    "    result = MsgWaitForMultipleObjects(1u, &pHandles, 0, 0xFFFFFFFF, 0x4FFu);",
    "    if ( !result )",
    "      break;",
    "    if ( PeekMessageA(&Msg, 0, 0, 0, 1u) )",
    "    {",
    "      do",
    "      {",
    "        if ( Msg.message == 18 )",
    "          v1 = 1;",
    "        else",
    "          DispatchMessageA(&Msg);",
    "        result = PeekMessageA(&Msg, 0, 0, 0, 1u);",
    "      }",
    "      while ( result );",
    "      if ( v1 )",
    "        break;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "BOOL __thiscall CheckOSVersion(_DWORD *this)",
    "{",
    "  int v2; // edi",
    "  int v3; // esi",
    "  __int16 v4; // cx",
    "  char *v5; // ebx",
    "  unsigned int v6; // edx",
    "  unsigned int v7; // ecx",
    "  int v8; // eax",
    "  bool v9; // cc",
    "  int v10; // ebx",
    "  char *v11; // ecx",
    "  const CHAR *v12; // edi",
    "  int v13; // ecx",
    "  int v14; // eax",
    "  int v15; // eax",
    "  bool v16; // zf",
    "  char *v18; // [esp+1Ch] [ebp-1B4h]",
    "  int v19; // [esp+20h] [ebp-1B0h]",
    "  int v21; // [esp+28h] [ebp-1A8h] BYREF",
    "  int v22; // [esp+2Ch] [ebp-1A4h]",
    "  CHAR *v23; // [esp+30h] [ebp-1A0h]",
    "  _OSVERSIONINFOA VersionInformation; // [esp+34h] [ebp-19Ch] BYREF",
    "  CHAR v25[264]; // [esp+C8h] [ebp-108h] BYREF",
    "",
    "  VersionInformation.dwOSVersionInfoSize = 148;",
    "  v2 = 0;",
    "  v3 = 0;",
    "  if ( !GetVersionExA(&VersionInformation) )",
    "  {",
    "    v3 = 1204;",
    "LABEL_41:",
    "    MsgBox2Param(0, v3, 0, 0, 16, 0);",
    "    return v3 == 0;",
    "  }",
    "  v4 = 2;",
    "  if ( VersionInformation.dwPlatformId == 1 )",
    "  {",
    "    v4 = 0;",
    "    g_fOSSupportsFullUI = 1;",
    "    g_fOSSupportsINFInstalls = 1;",
    "    goto LABEL_13;",
    "  }",
    "  if ( VersionInformation.dwPlatformId != 2 )",
    "  {",
    "    v3 = 1226;",
    "    goto LABEL_41;",
    "  }",
    "  g_wOSVer = 2;",
    "  g_fOSSupportsFullUI = 1;",
    "  g_fOSSupportsINFInstalls = 1;",
    "  if ( VersionInformation.dwMajorVersion <= 3 )",
    "  {",
    "    v4 = 1;",
    "    g_wOSVer = 1;",
    "    if ( VersionInformation.dwMajorVersion < 3 || VersionInformation.dwMinorVersion < 0x33 )",
    "    {",
    "      g_fOSSupportsFullUI = 0;",
    "      g_fOSSupportsINFInstalls = 0;",
    "    }",
    "    goto LABEL_14;",
    "  }",
    "  if ( VersionInformation.dwMajorVersion >= 5 )",
    "  {",
    "    v4 = 3;",
    "LABEL_13:",
    "    g_wOSVer = v4;",
    "  }",
    "LABEL_14:",
    "  if ( dword_408A34 || !this )",
    "    return v3 == 0;",
    "  v21 = 0;",
    "  v5 = (char *)this + (v4 != 0 ? 4 : 64);",
    "  v23 = 0;",
    "  v18 = v5;",
    "  while ( 1 )",
    "  {",
    "    v22 = 24 * v2;",
    "    v19 = CompareVersion(",
    "            VersionInformation.dwMajorVersion,",
    "            VersionInformation.dwMinorVersion,",
    "            *(_DWORD *)&v5[24 * v2],",
    "            *(_DWORD *)&v5[24 * v2 + 4]);",
    "    v8 = CompareVersion(v7, v6, *(_DWORD *)&v5[v22 + 12], *(_DWORD *)&v5[v22 + 16]);",
    "    if ( v19 >= 0 && v8 <= 0 )",
    "    {",
    "      if ( !v19 )",
    "      {",
    "        if ( v8 )",
    "        {",
    "          if ( (unsigned int)LOWORD(VersionInformation.dwBuildNumber) >= *(_DWORD *)&v5[v22 + 8] )",
    "            goto LABEL_37;",
    "        }",
    "        else if ( (unsigned int)LOWORD(VersionInformation.dwBuildNumber) >= *(_DWORD *)&v5[v22 + 8] )",
    "        {",
    "          v9 = (unsigned int)LOWORD(VersionInformation.dwBuildNumber) <= *(_DWORD *)&v5[v22 + 20];",
    "          goto LABEL_27;",
    "        }",
    "LABEL_28:",
    "        if ( v2 )",
    "        {",
    "          v3 = 1356;",
    "          goto LABEL_30;",
    "        }",
    "        goto LABEL_33;",
    "      }",
    "      if ( v8 )",
    "        goto LABEL_37;",
    "      v9 = (unsigned int)LOWORD(VersionInformation.dwBuildNumber) <= *(_DWORD *)&v5[v22 + 20];",
    "LABEL_27:",
    "      if ( v9 )",
    "        goto LABEL_37;",
    "      goto LABEL_28;",
    "    }",
    "    if ( v23 == (CHAR *)1 )",
    "      break;",
    "LABEL_33:",
    "    v21 = ++v2;",
    "    v23 = (CHAR *)v2;",
    "    if ( v2 >= 2 )",
    "      goto LABEL_36;",
    "  }",
    "  v3 = 1356;",
    "LABEL_36:",
    "  if ( v3 )",
    "    goto LABEL_30;",
    "LABEL_37:",
    "  if ( !this[31] || CheckFileVersion((int)this, v25, (int)this, &v21) )",
    "    return v3 == 0;",
    "  v2 = v21;",
    "  v3 = 1357;",
    "LABEL_30:",
    "  v23 = 0;",
    "  v10 = 0;",
    "  if ( v3 == 1357 )",
    "  {",
    "    v11 = (char *)&this[15 * v2 + 33] + this[32];",
    "    v23 = v25;",
    "  }",
    "  else",
    "  {",
    "    v11 = v18;",
    "  }",
    "  if ( v11 )",
    "  {",
    "    v12 = (char *)this + *((_DWORD *)v11 + 13) + 132;",
    "    if ( (*((_DWORD *)v11 + 12) & 1) != 0 )",
    "      v10 = 260;",
    "    else",
    "      v10 = (*((_DWORD *)v11 + 12) & 2) != 0 ? 0x101 : 0;",
    "  }",
    "  else",
    "  {",
    "    v12 = 0;",
    "  }",
    "  if ( (word_408A38 & 1) == 0 && v12 && *v12 )",
    "  {",
    "    MessageBeep(0);",
    "    if ( RunningOnWin95BiDiLoc() && IsBiDiLocalizedBinary(v13) )",
    "      v14 = 1572912;",
    "    else",
    "      v14 = 48;",
    "    v15 = MessageBoxA(0, v12, Caption, v10 | v14);",
    "    if ( (v10 & 4) != 0 )",
    "    {",
    "      v16 = v15 == 6;",
    "    }",
    "    else",
    "    {",
    "      if ( (v10 & 1) == 0 )",
    "        return v3 == 0;",
    "      v16 = v15 == 1;",
    "    }",
    "    if ( v16 )",
    "      v3 = 0;",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, v3, Caption, v23, 48, 0);",
    "  }",
    "  return v3 == 0;",
    "}",
    "",
    "",
    "int DisplayLicense()",
    "{",
    "  rsize_t Resource; // esi",
    "  CHAR *v1; // eax",
    "  int v3; // esi",
    "",
    "  Resource = GetResource(\"LICENSE\", 0, 0);",
    "  v1 = (CHAR *)LocalAlloc(0x40u, Resource + 1);",
    "  g_szLicense = v1;",
    "  if ( !v1 )",
    "  {",
    "    MsgBox2Param(0, 1205, 0, 0, 16, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  if ( !GetResource(\"LICENSE\", v1, Resource) )",
    "  {",
    "    MsgBox2Param(0, 1201, 0, 0, 16, 0);",
    "    LocalFree((HLOCAL)g_szLicense);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  if ( lstrcmpA(g_szLicense, \"<None>\") )",
    "  {",
    "    v3 = MyDialogBox(0, LicenseDlgProc, 0, 0);",
    "    LocalFree((HLOCAL)g_szLicense);",
    "    if ( !v3 )",
    "    {",
    "      g_dwExitCode = -2147023673;",
    "      return 0;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    LocalFree((HLOCAL)g_szLicense);",
    "  }",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "int ExtractFiles()",
    "{",
    "  unsigned int i; // eax",
    "  STRSAFE_LPSTR Thread; // eax",
    "  LONG_PTR v3; // [esp+0h] [ebp-4h]",
    "",
    "  for ( i = 0; i < 240; i += 6 )",
    "    g_FileTable[i] = 1;",
    "  if ( (word_408A38 & 1) != 0 || (dword_409A34 & 1) != 0 )",
    "    Thread = ExtractThread(v3);",
    "  else",
    "    Thread = (STRSAFE_LPSTR)MyDialogBox(0, ExtractDlgProc, 0, 0);",
    "  if ( Thread )",
    "    TravelUpdatedFiles(v3);",
    "  g_dwExitCode = -2147023829;",
    "  return 0;",
    "}",
    "",
    "",
    "int RunInstallCommand()",
    "{",
    "  int v0; // esi",
    "  int v1; // edi",
    "  unsigned int Resource; // eax",
    "  unsigned int v3; // ebx",
    "  char *v4; // ecx",
    "  unsigned int v5; // eax",
    "  __int16 v6; // ax",
    "  const CHAR *v7; // ecx",
    "  size_t *v8; // ecx",
    "  int v9; // esi",
    "  HMODULE Library; // eax",
    "  HMODULE v11; // ebx",
    "  FARPROC DoInfInstall; // edx",
    "  void *dwPlatformId; // edi",
    "  int v14; // eax",
    "  _OSVERSIONINFOA v16[2]; // [esp+0h] [ebp-1A0h] BYREF",
    "",
    "  v0 = 0;",
    "  g_dwExitCode = 0;",
    "  v1 = 0;",
    "  *(_DWORD *)&v16[0].szCSDVersion[12] = 0;",
    "  *(_DWORD *)&v16[0].szCSDVersion[16] = 0;",
    "  if ( !dword_408A28 )",
    "  {",
    "    Resource = GetResource(\"REBOOT\", &dword_409A2C, 4u);",
    "    if ( !Resource || Resource > 4 )",
    "    {",
    "LABEL_26:",
    "      MsgBox2Param(0, 1201, 0, 0, 16, 0);",
    "      g_dwExitCode = -2147023084;",
    "      return 0;",
    "    }",
    "  }",
    "  v3 = 0;",
    "  *(_DWORD *)&v16[0].szCSDVersion[8] = 0;",
    "  while ( 1 )",
    "  {",
    "    *(_DWORD *)v16[0].szCSDVersion = 0;",
    "    memset(&v16[0].szCSDVersion[52], 0, 0x44u);",
    "    *(_DWORD *)&v16[0].szCSDVersion[52] = 68;",
    "    if ( byte_408C42 )",
    "    {",
    "      StringCopyWorkerA(",
    "        v4,",
    "        (size_t)&byte_408C42,",
    "        (size_t *)v4,",
    "        (STRSAFE_PCNZCH)v16[0].dwOSVersionInfoSize,",
    "        v16[0].dwMajorVersion);",
    "      goto LABEL_28;",
    "    }",
    "    v5 = GetResource(\"SHOWWINDOW\", &v16[0].szCSDVersion[4], 4u);",
    "    if ( !v5 || v5 > 4 )",
    "      goto LABEL_26;",
    "    switch ( *(_DWORD *)&v16[0].szCSDVersion[4] )",
    "    {",
    "      case 1:",
    "        *(_DWORD *)&v16[0].szCSDVersion[96] = 1;",
    "        v6 = 0;",
    "LABEL_12:",
    "        *(_WORD *)&v16[0].szCSDVersion[100] = v6;",
    "        break;",
    "      case 2:",
    "        *(_DWORD *)&v16[0].szCSDVersion[96] = 1;",
    "        v6 = 6;",
    "        goto LABEL_12;",
    "      case 3:",
    "        *(_DWORD *)&v16[0].szCSDVersion[96] = 1;",
    "        *(_WORD *)&v16[0].szCSDVersion[100] = 3;",
    "        break;",
    "    }",
    "    if ( v3 )",
    "      goto LABEL_28;",
    "    if ( word_408A38 )",
    "    {",
    "      if ( (word_408A38 & 1) != 0 )",
    "      {",
    "        v7 = \"ADMQCMD\";",
    "      }",
    "      else",
    "      {",
    "        if ( (word_408A38 & 2) == 0 )",
    "          return 0;",
    "        v7 = \"USRQCMD\";",
    "      }",
    "      if ( !GetResource(v7, &v16[0].szCSDVersion[124], 0x104u) )",
    "        goto LABEL_26;",
    "      if ( CompareStringA(0x7Fu, 1u, &v16[0].szCSDVersion[124], -1, \"<None>\", -1) )",
    "      {",
    "        v0 = 1;",
    "        *(_DWORD *)&v16[0].szCSDVersion[12] = 1;",
    "      }",
    "    }",
    "    if ( !v0 )",
    "      break;",
    "LABEL_32:",
    "    if ( !AnalyzeCmd(&v16[0].szCSDVersion[124], (char **)&v16[0].dwPlatformId, v16[0].szCSDVersion) )",
    "      return 0;",
    "    v9 = *(_DWORD *)v16[0].szCSDVersion;",
    "    if ( !v1 && g_wOSVer != 1 && g_CMD )",
    "    {",
    "      if ( *(_DWORD *)v16[0].szCSDVersion )",
    "        goto LABEL_39;",
    "      *(_DWORD *)&v16[0].szCSDVersion[16] = 1;",
    "      AddRegRunOnce();",
    "    }",
    "    if ( !v9 )",
    "      goto LABEL_56;",
    "LABEL_39:",
    "    if ( !g_fOSSupportsINFInstalls )",
    "    {",
    "      MsgBox2Param(0, 1223, 0, 0, 16, 0);",
    "      LocalFree((HLOCAL)v16[0].dwPlatformId);",
    "      g_dwExitCode = -2147023829;",
    "      return 0;",
    "    }",
    "    if ( !v9 || (dword_409A34 & 4) == 0 )",
    "    {",
    "LABEL_56:",
    "      dwPlatformId = (void *)v16[0].dwPlatformId;",
    "      if ( !RunApps(v16[0], (LPSTARTUPINFOA)v16[0].dwPlatformId) )",
    "        goto LABEL_60;",
    "      goto LABEL_57;",
    "    }",
    "    Library = (HMODULE)MyLoadLibrary(v8);",
    "    v11 = Library;",
    "    if ( !Library )",
    "    {",
    "      MsgBox2Param(0, 1224, \"advpack.dll\", 0, 16, 0);",
    "      goto LABEL_63;",
    "    }",
    "    DoInfInstall = GetProcAddress(Library, aDoinfinstall);",
    "    *(_DWORD *)v16[0].szCSDVersion = DoInfInstall;",
    "    if ( !DoInfInstall )",
    "    {",
    "      MsgBox2Param(0, 1225, aDoinfinstall, 0, 16, 0);",
    "      FreeLibrary(v11);",
    "LABEL_63:",
    "      LocalFree((HLOCAL)v16[0].dwPlatformId);",
    "      g_dwExitCode = MyGetLastError();",
    "      return 0;",
    "    }",
    "    dwPlatformId = (void *)v16[0].dwPlatformId;",
    "    *(_DWORD *)&v16[0].szCSDVersion[20] = 0;",
    "    *(_DWORD *)&v16[0].szCSDVersion[36] = &v16[0].szCSDVersion[124];",
    "    *(_WORD *)&v16[0].szCSDVersion[40] = g_wOSVer;",
    "    v14 = (unsigned __int16)word_408A38;",
    "    *(_DWORD *)&v16[0].szCSDVersion[24] = Caption;",
    "    *(_DWORD *)&v16[0].szCSDVersion[28] = v16[0].dwPlatformId;",
    "    *(_DWORD *)&v16[0].szCSDVersion[32] = &Buffer;",
    "    *(_DWORD *)&v16[0].szCSDVersion[44] = (unsigned __int16)word_408A38;",
    "    if ( dword_408A30 )",
    "    {",
    "      v14 = (unsigned __int16)word_408A38 | 0x10000;",
    "      *(_DWORD *)&v16[0].szCSDVersion[44] = v14;",
    "    }",
    "    if ( (dword_409A34 & 8) != 0 )",
    "    {",
    "      v14 |= 0x20000u;",
    "      *(_DWORD *)&v16[0].szCSDVersion[44] = v14;",
    "    }",
    "    if ( (dword_409A34 & 0x10) != 0 )",
    "    {",
    "      v14 |= 0x40000u;",
    "      *(_DWORD *)&v16[0].szCSDVersion[44] = v14;",
    "    }",
    "    if ( (dword_408D48 & 0x40) != 0 )",
    "    {",
    "      v14 |= 0x80000u;",
    "      *(_DWORD *)&v16[0].szCSDVersion[44] = v14;",
    "    }",
    "    if ( (dword_408D48 & 0x80u) != 0 )",
    "      *(_DWORD *)&v16[0].szCSDVersion[44] = v14 | 0x100000;",
    "    *(_DWORD *)&v16[0].szCSDVersion[48] = dword_409A38;",
    "    g_dwExitCode = (*(int (__thiscall **)(FARPROC, CHAR *))v16[0].szCSDVersion)(DoInfInstall, &v16[0].szCSDVersion[20]);",
    "    if ( g_dwExitCode < 0 )",
    "    {",
    "      FreeLibrary(v11);",
    "LABEL_60:",
    "      LocalFree(dwPlatformId);",
    "      return 0;",
    "    }",
    "    FreeLibrary(v11);",
    "    v3 = *(_DWORD *)&v16[0].szCSDVersion[8];",
    "LABEL_57:",
    "    LocalFree(dwPlatformId);",
    "    *(_DWORD *)&v16[0].szCSDVersion[8] = ++v3;",
    "    if ( v3 >= 2 )",
    "      goto LABEL_66;",
    "    v0 = *(_DWORD *)&v16[0].szCSDVersion[12];",
    "    v1 = *(_DWORD *)&v16[0].szCSDVersion[16];",
    "  }",
    "  if ( !GetResource(\"RUNPROGRAM\", &v16[0].szCSDVersion[124], 0x104u) )",
    "    goto LABEL_26;",
    "LABEL_28:",
    "  if ( v3 != 1 )",
    "    goto LABEL_32;",
    "  if ( !GetResource(\"POSTRUNPROGRAM\", &v16[0].szCSDVersion[124], 0x104u) )",
    "    goto LABEL_26;",
    "  if ( !byte_408C42 && CompareStringA(0x7Fu, 1u, &v16[0].szCSDVersion[124], -1, \"<None>\", -1) != 2 )",
    "    goto LABEL_32;",
    "LABEL_66:",
    "  if ( g_bConvertRunOnce )",
    "    ConvertRegRunOnce();",
    "  return 1;",
    "}",
    "",
    "",
    "int __fastcall RunApps(CHAR *lpStartupInfo, struct _STARTUPINFOA *a2)",
    "{",
    "  int v3; // esi",
    "  int result; // eax",
    "  DWORD LastError; // eax",
    "  struct _PROCESS_INFORMATION ProcessInformation; // [esp+Ch] [ebp-21Ch] BYREF",
    "  STRSAFE_LPSTR ExitCode; // [esp+1Ch] [ebp-20Ch] BYREF",
    "  BYTE Buffer[516]; // [esp+20h] [ebp-208h] BYREF",
    "",
    "  v3 = 1;",
    "  result = 0;",
    "  if ( lpStartupInfo )",
    "  {",
    "    memset(&ProcessInformation, 0, sizeof(ProcessInformation));",
    "    if ( CreateProcessA(0, lpStartupInfo, 0, 0, 0, 0x20u, 0, 0, a2, &ProcessInformation) )",
    "    {",
    "      WaitForSingleObject(ProcessInformation.hProcess, 0xFFFFFFFF);",
    "      GetExitCodeProcess(ProcessInformation.hProcess, (LPDWORD)&ExitCode);",
    "      if ( !dword_408A28",
    "        && (dword_409A2C & 1) != 0",
    "        && (dword_409A2C & 2) == 0",
    "        && ((unsigned int)ExitCode & 0xFF000000) == 0xAA000000 )",
    "      {",
    "        dword_409A2C = (int)ExitCode;",
    "      }",
    "      savAppExitCode(ExitCode);",
    "      CloseHandle(ProcessInformation.hThread);",
    "      CloseHandle(ProcessInformation.hProcess);",
    "      if ( (dword_409A34 & 0x400) == 0 || (int)ExitCode >= 0 )",
    "        return v3;",
    "    }",
    "    else",
    "    {",
    "      g_dwExitCode = MyGetLastError();",
    "      LastError = GetLastError();",
    "      FormatMessageA(0x1000u, 0, LastError, 0, (LPSTR)Buffer, 0x200u, 0);",
    "      MsgBox2Param(0, 1220, lpStartupInfo, Buffer, 16, 0);",
    "    }",
    "    return 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __fastcall savAppExitCode(int a1)",
    "{",
    "  if ( (dword_409A34 & 0x800) != 0 )",
    "    goto LABEL_2;",
    "  if ( CheckReboot() == 2 || (a1 & 0xFF000000) == 0xAA000000 && (a1 & 1) != 0 )",
    "  {",
    "    g_dwExitCode = 3010;",
    "  }",
    "  else if ( (dword_409A34 & 0x200) != 0 )",
    "  {",
    "LABEL_2:",
    "    g_dwExitCode = a1;",
    "  }",
    "}",
    "",
    "",
    "HLOCAL __stdcall FinishMessage()",
    "{",
    "  rsize_t Resource; // edi",
    "  CHAR *v1; // eax",
    "  CHAR *v2; // esi",
    "",
    "  Resource = GetResource(\"FINISHMSG\", 0, 0);",
    "  v1 = (CHAR *)LocalAlloc(0x40u, 4 * Resource + 4);",
    "  v2 = v1;",
    "  if ( !v1 )",
    "    return (HLOCAL)MsgBox2Param(0, 1205, 0, 0, 16, 0);",
    "  if ( GetResource(\"FINISHMSG\", v1, Resource) )",
    "  {",
    "    if ( lstrcmpA(v2, \"<None>\") )",
    "      MsgBox2Param(0, 1001, v2, 0, 64, 0);",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 1201, 0, 0, 16, 0);",
    "  }",
    "  return LocalFree(v2);",
    "}",
    "",
    "",
    "int __stdcall BrowseCallback(_LUID_AND_ATTRIBUTES hWnd, ULONG lParam, int a3, ULONG a4)",
    "{",
    "  if ( hWnd.Luid.HighPart == 1 )",
    "    SendMessageA((HWND)hWnd.Luid.LowPart, 0x466u, 1u, lParam);",
    "  return 0;",
    "}",
    "",
    "",
    "BOOL __thiscall BrowseForDir(void *this, int a2, int a3)",
    "{",
    "  HMODULE LibraryA; // eax",
    "  HMODULE v5; // edi",
    "  LPSTR v6; // eax",
    "  int v7; // eax",
    "  int v9; // edx",
    "  size_t v10; // [esp+0h] [ebp-3Ch]",
    "  const char *v11; // [esp+4h] [ebp-38h]",
    "  _DWORD v12[8]; // [esp+Ch] [ebp-30h] BYREF",
    "  FARPROC ProcAddress; // [esp+2Ch] [ebp-10h]",
    "  FARPROC SHGetPathFromIDList; // [esp+30h] [ebp-Ch]",
    "  FARPROC SHBrowseForFolder; // [esp+34h] [ebp-8h]",
    "  LPSTR v16; // [esp+38h] [ebp-4h]",
    "",
    "  LibraryA = LoadLibraryA(LibFileName);",
    "  v5 = LibraryA;",
    "  if ( !LibraryA )",
    "  {",
    "    v9 = 1218;",
    "    goto LABEL_16;",
    "  }",
    "  SHBrowseForFolder = GetProcAddress(LibraryA, aShbrowseforfol);",
    "  if ( !SHBrowseForFolder",
    "    || (ProcAddress = GetProcAddress(v5, (LPCSTR)0xC3)) == 0",
    "    || (SHGetPathFromIDList = GetProcAddress(v5, aShgetpathfromi)) == 0 )",
    "  {",
    "    FreeLibrary(v5);",
    "    v9 = 1217;",
    "LABEL_16:",
    "    MsgBox2Param(this, v9, 0, 0, 16, 0);",
    "    return 0;",
    "  }",
    "  if ( !g_szBrowsePath[0] )",
    "  {",
    "    GetTempPathA(0x104u, g_szBrowsePath);",
    "    v6 = CharPrevA(g_szBrowsePath, &g_szBrowsePath[strlen(g_szBrowsePath)]);",
    "    v16 = v6;",
    "    if ( *v6 == 92 && *CharPrevA(g_szBrowsePath, v6) != 58 )",
    "      *v16 = 0;",
    "  }",
    "  String[0] = 0;",
    "  v12[0] = this;",
    "  v12[1] = 0;",
    "  v12[2] = 0;",
    "  v12[3] = Buffer;",
    "  v12[4] = 1;",
    "  v12[5] = BrowseCallback;",
    "  v12[6] = g_szBrowsePath;",
    "  v7 = ((int (__thiscall *)(FARPROC, _DWORD *))SHBrowseForFolder)(SHBrowseForFolder, v12);",
    "  SHBrowseForFolder = (FARPROC)v7;",
    "  if ( v7 )",
    "  {",
    "    ((void (__thiscall *)(FARPROC, int, CHAR *))SHGetPathFromIDList)(SHGetPathFromIDList, v7, g_szBrowsePath);",
    "    if ( g_szBrowsePath[0] )",
    "      StringCchCopyA(g_szBrowsePath, v10, v11);",
    "    ((void (__thiscall *)(FARPROC, FARPROC))ProcAddress)(ProcAddress, SHBrowseForFolder);",
    "  }",
    "  FreeLibrary(v5);",
    "  return String[0] != 0;",
    "}",
    "",
    "",
    "BOOL __fastcall CenterWindow(HWND hWnd, HWND a2)",
    "{",
    "  int v3; // ebx",
    "  int v4; // edi",
    "  HDC DC; // esi",
    "  int v6; // esi",
    "  int v7; // ecx",
    "  int v9; // [esp+Ch] [ebp-38h]",
    "  int v10; // [esp+10h] [ebp-34h]",
    "  int DeviceCaps; // [esp+14h] [ebp-30h]",
    "  int v12; // [esp+18h] [ebp-2Ch]",
    "  struct tagRECT Rect; // [esp+20h] [ebp-24h] BYREF",
    "  tagRECT v15; // [esp+30h] [ebp-14h] BYREF",
    "",
    "  GetWindowRect(hWnd, &Rect);",
    "  v3 = Rect.bottom - Rect.top;",
    "  v12 = Rect.right - Rect.left;",
    "  GetWindowRect(a2, &v15);",
    "  v4 = v15.right - v15.left;",
    "  v10 = v15.bottom - v15.top;",
    "  DC = GetDC(hWnd);",
    "  DeviceCaps = GetDeviceCaps(DC, 8);",
    "  v9 = GetDeviceCaps(DC, 10);",
    "  ReleaseDC(hWnd, DC);",
    "  v6 = v15.left + (v4 - v12) / 2;",
    "  if ( v6 >= 0 )",
    "  {",
    "    if ( v6 + v12 > DeviceCaps )",
    "      v6 = DeviceCaps - v12;",
    "  }",
    "  else",
    "  {",
    "    v6 = 0;",
    "  }",
    "  v7 = v15.top + (v10 - v3) / 2;",
    "  if ( v7 >= 0 )",
    "  {",
    "    if ( v7 + v3 > v9 )",
    "      v7 = v9 - v3;",
    "  }",
    "  else",
    "  {",
    "    v7 = 0;",
    "  }",
    "  return SetWindowPos(hWnd, 0, v6, v7, 0, 0, 5u);",
    "}",
    "",
    "",
    "int __fastcall MsgBox2Param(HWND a1, UINT a2, const char *a3, const char *a4, UINT uType, int a6)",
    "{",
    "  int v6; // ecx",
    "  bool v7; // zf",
    "  UINT v8; // eax",
    "  unsigned int v10; // kr00_4",
    "  SIZE_T v11; // esi",
    "  char *v12; // edi",
    "  unsigned int v13; // kr04_4",
    "  int v14; // ecx",
    "  int v15; // eax",
    "  int v16; // esi",
    "  size_t v17; // [esp+0h] [ebp-250h]",
    "  const char *v18; // [esp+4h] [ebp-24Ch]",
    "  CHAR Buffer[512]; // [esp+14h] [ebp-23Ch] BYREF",
    "  CHAR Text[56]; // [esp+214h] [ebp-3Ch] BYREF",
    "",
    "  strcpy(Text, \"LoadString() Error.  Could not load string resource.\");",
    "  if ( (word_408A38 & 1) != 0 )",
    "    return 1;",
    "  Buffer[0] = 0;",
    "  LoadStringA(g_hInst, a2, Buffer, 512);",
    "  if ( !Buffer[0] )",
    "  {",
    "    if ( !RunningOnWin95BiDiLoc() || (v7 = IsBiDiLocalizedBinary(v6) == 0, v8 = 1638416, v7) )",
    "      v8 = 65552;",
    "    MessageBoxA(a1, Text, Caption, v8);",
    "    return -1;",
    "  }",
    "  v10 = strlen(Buffer);",
    "  if ( a4 )",
    "  {",
    "    v11 = strlen(a4) + strlen(a3) + v10 + 100;",
    "    v12 = (char *)LocalAlloc(0x40u, v11);",
    "    if ( v12 )",
    "    {",
    "      StringCchPrintfA(v12, v11, Buffer, a3, a4);",
    "      goto LABEL_16;",
    "    }",
    "    return -1;",
    "  }",
    "  if ( a3 )",
    "  {",
    "    v13 = strlen(a3);",
    "    v12 = (char *)LocalAlloc(0x40u, v10 + v13 + 100);",
    "    if ( !v12 )",
    "      return -1;",
    "    StringCchPrintfA(v12, v10 + v13 + 100, Buffer, a3);",
    "  }",
    "  else",
    "  {",
    "    v12 = (char *)LocalAlloc(0x40u, v10 + 1);",
    "    if ( !v12 )",
    "      return -1;",
    "    StringCchCopyA(Buffer, v17, v18);",
    "  }",
    "LABEL_16:",
    "  MessageBeep(uType);",
    "  if ( !RunningOnWin95BiDiLoc() || (v7 = IsBiDiLocalizedBinary(v14) == 0, v15 = 1638400, v7) )",
    "    v15 = 0x10000;",
    "  v16 = MessageBoxA(a1, v12, Caption, a6 | uType | v15);",
    "  LocalFree(v12);",
    "  return v16;",
    "}",
    "",
    "",
    "DWORD __fastcall GetResource(LPCSTR lpName, void *Destination, rsize_t DestinationSize)",
    "{",
    "  HRSRC ResourceA; // eax",
    "  DWORD result; // eax",
    "  rsize_t v7; // esi",
    "  HRSRC v8; // eax",
    "  HGLOBAL Resource; // eax",
    "  const void *v10; // eax",
    "  void *v11; // edi",
    "",
    "  ResourceA = FindResourceA(0, lpName, (LPCSTR)0xA);",
    "  result = SizeofResource(0, ResourceA);",
    "  v7 = result;",
    "  if ( result <= DestinationSize && Destination )",
    "  {",
    "    if ( result",
    "      && (v8 = FindResourceA(0, lpName, (LPCSTR)0xA),",
    "          Resource = LoadResource(0, v8),",
    "          v10 = LockResource(Resource),",
    "          (v11 = (void *)v10) != 0) )",
    "    {",
    "      _memcpy_s(Destination, DestinationSize, v10, v7);",
    "      FreeResource(v11);",
    "      return v7;",
    "    }",
    "    else",
    "    {",
    "      return 0;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __fastcall CatDirAndFile(const char *a1, char *a2, char *pszDest)",
    "{",
    "  size_t v5; // [esp+0h] [ebp-8h]",
    "  size_t v6; // [esp+0h] [ebp-8h]",
    "  const char *v7; // [esp+4h] [ebp-4h]",
    "  const char *v8; // [esp+4h] [ebp-4h]",
    "",
    "  StringCchCopyA(a2, v5, v7);",
    "  if ( a1[strlen(a1) - 1] != 92 && a1[strlen(a1) - 1] != 47 && StringCchCatA((STRSAFE_LPSTR)\"\\\\\", v6, v8) < 0 )",
    "    return 0;",
    "  StringCchCatA(pszDest, v6, v8);",
    "  return 1;",
    "}",
    "",
    "",
    "int __thiscall CheckOverwrite(LPCSTR lpFileName)",
    "{",
    "  int v3; // edi",
    "  int v4; // eax",
    "  int v5; // eax",
    "",
    "  if ( !FileExists(lpFileName) )",
    "    return 1;",
    "  if ( dword_4091DC )",
    "    goto LABEL_9;",
    "  if ( (word_408A38 & 1) != 0 )",
    "    goto LABEL_9;",
    "  v3 = 0;",
    "  lpString = lpFileName;",
    "  v4 = MyDialogBox(g_hwndExtractDlg, OverwriteDlgProc, 0, 6) - 6;",
    "  if ( !v4 )",
    "    goto LABEL_9;",
    "  v5 = v4 - 1;",
    "  if ( v5 )",
    "  {",
    "    if ( v5 == 2098 )",
    "      dword_4091DC = 1;",
    "LABEL_9:",
    "    SetFileAttributesA(lpFileName, 0x80u);",
    "    return 1;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "int __usercall AddFile@<eax>(STRSAFE_LPSTR pszDest@<ecx>, size_t a2@<ebx>)",
    "{",
    "  _DWORD *v3; // esi",
    "  HLOCAL v5; // eax",
    "  const char *v6; // [esp+0h] [ebp-8h]",
    "",
    "  v3 = LocalAlloc(0x40u, 8u);",
    "  if ( !v3 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4B5u, 0, 0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  v5 = LocalAlloc(0x40u, strlen(pszDest) + 1);",
    "  *v3 = v5;",
    "  if ( !v5 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4B5u, 0, 0, 0x10u, 0);",
    "    LocalFree(v3);",
    "    return 0;",
    "  }",
    "  strlen(pszDest);",
    "  StringCchCopyA(pszDest, a2, v6);",
    "  v3[1] = hMem;",
    "  hMem = v3;",
    "  return 1;",
    "}",
    "",
    "",
    "HANDLE __fastcall Win32Open(LPCSTR lpFileName, __int16 a2)",
    "{",
    "  DWORD v3; // edi",
    "  DWORD v4; // esi",
    "  HANDLE result; // eax",
    "",
    "  v3 = (a2 & 3) != 0 ? 0x40000000 : 0x80000000;",
    "  if ( (a2 & 0x100) != 0 )",
    "  {",
    "    if ( (a2 & 0x400) != 0 )",
    "      v4 = 1;",
    "    else",
    "      v4 = (a2 & 0x200) != 0 ? 2 : 4;",
    "  }",
    "  else",
    "  {",
    "    v4 = (a2 & 0x200) != 0 ? 5 : 3;",
    "  }",
    "  result = CreateFileA(lpFileName, (a2 & 3) != 0 ? 0x40000000 : 0x80000000, 0, 0, v4, 0x80u, 0);",
    "  if ( result == (HANDLE)-1 && v4 != 3 )",
    "  {",
    "    MakeDirectory(lpFileName);",
    "    return CreateFileA(lpFileName, v3, 0, 0, v4, 0x80u, 0);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __thiscall MakeDirectory(CHAR *lpPathName)",
    "{",
    "  CHAR v2; // cl",
    "  CHAR v3; // al",
    "  int v4; // ebx",
    "  LPSTR v5; // esi",
    "",
    "  v2 = *lpPathName;",
    "  if ( v2 )",
    "  {",
    "    v3 = lpPathName[1];",
    "    v4 = 0;",
    "    v5 = lpPathName + 2;",
    "    if ( v3 == 58 && *v5 == 92 )",
    "    {",
    "      v5 = lpPathName + 3;",
    "    }",
    "    else",
    "    {",
    "      if ( v2 != 92 || v3 != 92 )",
    "      {",
    "        v5 = lpPathName + 1;",
    "        goto LABEL_16;",
    "      }",
    "      v4 = 2;",
    "    }",
    "    while ( 1 )",
    "    {",
    "      v3 = *v5;",
    "LABEL_16:",
    "      if ( !v3 )",
    "        break;",
    "      if ( v3 == 92 && *(v5 - 1) != 58 )",
    "      {",
    "        if ( v4 )",
    "        {",
    "          --v4;",
    "        }",
    "        else",
    "        {",
    "          *v5 = 0;",
    "          CreateDirectoryA(lpPathName, 0);",
    "          *v5 = 92;",
    "        }",
    "      }",
    "      v5 = CharNextA(v5);",
    "    }",
    "  }",
    "}",
    "",
    "",
    "INT_PTR __cdecl openfunc(const CHAR *pszFile, __int16 oflag)",
    "{",
    "  int *v2; // eax",
    "  int v3; // esi",
    "  int v5; // ecx",
    "  int v6; // eax",
    "  int v7; // ecx",
    "",
    "  v2 = g_FileTable;",
    "  v3 = 0;",
    "  do",
    "  {",
    "    if ( *v2 == 1 )",
    "      break;",
    "    v2 += 6;",
    "    ++v3;",
    "  }",
    "  while ( (int)v2 < (int)&g_uInfRebootOn );",
    "  if ( v3 == 40 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4BBu, 0, 0, 0x10u, 0);",
    "    return -1;",
    "  }",
    "  if ( lstrcmpA(pszFile, pszCabinet) )",
    "  {",
    "    if ( (oflag & 8) != 0 )",
    "      v7 = -1;",
    "    else",
    "      v7 = (int)Win32Open(pszFile, oflag);",
    "    dword_408D74[6 * v3] = v7;",
    "    if ( v7 == -1 )",
    "    {",
    "      return -1;",
    "    }",
    "    else",
    "    {",
    "      g_FileTable[6 * v3] = 0;",
    "      dword_408D64[6 * v3] = 0;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    if ( (oflag & 0x10B) != 0 )",
    "      return -1;",
    "    v5 = 6 * v3;",
    "    dword_408D68[v5] = (int)g_Sess;",
    "    v6 = dword_409144;",
    "    g_FileTable[v5] = 0;",
    "    dword_408D64[v5] = 1;",
    "    dword_408D70[v5] = v6;",
    "    dword_408D6C[v5] = 0;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "UINT __cdecl readfunc(INT_PTR hf, void *pv, UINT cb)",
    "{",
    "  int v3; // eax",
    "  int v4; // ecx",
    "  size_t v5; // esi",
    "",
    "  v3 = dword_408D64[6 * hf];",
    "  if ( !v3 )",
    "  {",
    "    if ( ReadFile((HANDLE)dword_408D74[6 * hf], pv, cb, &cb, 0) )",
    "      return cb;",
    "    return -1;",
    "  }",
    "  if ( v3 != 1 )",
    "    return -1;",
    "  v4 = dword_408D6C[6 * hf];",
    "  v5 = cb;",
    "  if ( cb >= dword_408D70[6 * hf] - v4 )",
    "    v5 = dword_408D70[6 * hf] - v4;",
    "  memcpy(pv, (const void *)(v4 + dword_408D68[6 * hf]), v5);",
    "  dword_408D6C[6 * hf] += v5;",
    "  return v5;",
    "}",
    "",
    "",
    "UINT __cdecl writefunc(INT_PTR hf, LPCVOID pv, UINT cb)",
    "{",
    "  UINT v4; // esi",
    "  UINT v5; // eax",
    "",
    "  WaitForObject(g_hCancelEvent);",
    "  if ( dword_4091D8 )",
    "    return -1;",
    "  if ( !WriteFile((HANDLE)dword_408D74[6 * hf], pv, cb, &cb, 0) )",
    "    return -1;",
    "  v4 = cb;",
    "  if ( cb != -1 )",
    "  {",
    "    v5 = cb + dword_409400;",
    "    dword_409400 += cb;",
    "    if ( g_fOSSupportsFullUI )",
    "    {",
    "      if ( g_hwndExtractDlg )",
    "        SendDlgItemMessageA(g_hwndExtractDlg, 2106, 0x402u, 100 * v5 / dword_4093F8, 0);",
    "    }",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "int __cdecl closefunc(INT_PTR hf)",
    "{",
    "  int result; // eax",
    "",
    "  if ( dword_408D64[6 * hf] == 1 )",
    "  {",
    "    result = 0;",
    "    g_FileTable[6 * hf] = 1;",
    "    dword_408D68[6 * hf] = 0;",
    "    dword_408D70[6 * hf] = 0;",
    "    dword_408D6C[6 * hf] = 0;",
    "  }",
    "  else if ( CloseHandle((HANDLE)dword_408D74[6 * hf]) )",
    "  {",
    "    result = 0;",
    "    g_FileTable[6 * hf] = 1;",
    "  }",
    "  else",
    "  {",
    "    return -1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "DWORD __cdecl seekfunc(HKEY hf, LONG dist, int seektype)",
    "{",
    "  DWORD v3; // ecx",
    "  DWORD result; // eax",
    "",
    "  v3 = 1;",
    "  if ( dword_408D64[6 * (_DWORD)hf] == 1 )",
    "  {",
    "    switch ( seektype )",
    "    {",
    "      case 0:",
    "        result = dist;",
    "        goto LABEL_8;",
    "      case 1:",
    "        result = dword_408D6C[6 * (_DWORD)hf] + dist;",
    "        goto LABEL_8;",
    "      case 2:",
    "        result = dword_408D70[6 * (_DWORD)hf] + dist;",
    "LABEL_8:",
    "        dword_408D6C[6 * (_DWORD)hf] = result;",
    "        return result;",
    "    }",
    "    return -1;",
    "  }",
    "  switch ( seektype )",
    "  {",
    "    case 0:",
    "      v3 = 0;",
    "LABEL_14:",
    "      result = SetFilePointer((HANDLE)dword_408D74[6 * (_DWORD)hf], dist, 0, v3);",
    "      if ( result != -1 )",
    "        return result;",
    "      return -1;",
    "    case 1:",
    "      goto LABEL_14;",
    "    case 2:",
    "      v3 = 2;",
    "      goto LABEL_14;",
    "  }",
    "  return -1;",
    "}",
    "",
    "",
    "BOOL __fastcall AdjustFileTime(int a1, WORD a2, WORD wFatTime)",
    "{",
    "  int v3; // esi",
    "  struct _FILETIME FileTime; // [esp+4h] [ebp-10h] BYREF",
    "  FILETIME CreationTime; // [esp+Ch] [ebp-8h] BYREF",
    "",
    "  v3 = 6 * a1;",
    "  return dword_408D64[6 * a1] != 1",
    "      && DosDateTimeToFileTime(a2, wFatTime, &FileTime)",
    "      && LocalFileTimeToFileTime(&FileTime, &CreationTime)",
    "      && SetFileTime((HANDLE)dword_408D74[v3], &CreationTime, &CreationTime, &CreationTime);",
    "}",
    "",
    "",
    "HGLOBAL __cdecl allocfunc(ULONG cb)",
    "{",
    "  return GlobalAlloc(0, cb);",
    "}",
    "",
    "",
    "void __cdecl freefunc(DLGPROC pv)",
    "{",
    "  GlobalFree(pv);",
    "}",
    "",
    "",
    "INT_PTR __cdecl fdiNotifyExtract(FDINOTIFICATIONTYPE fdint, PFDINOTIFICATION pfdin)",
    "{",
    "  USHORT attribs; // ax",
    "  DWORD v4; // eax",
    "  INT_PTR v5; // esi",
    "  BYTE FileName[260]; // [esp+Ch] [ebp-108h] BYREF",
    "",
    "  if ( dword_4091D8 )",
    "  {",
    "    if ( fdint == fdintCLOSE_FILE_INFO )",
    "      closefunc(pfdin->hf);",
    "    return -1;",
    "  }",
    "  switch ( fdint )",
    "  {",
    "    case fdintCABINET_INFO:",
    "      return UpdateCabinetInfo(pfdin);",
    "    case fdintPARTIAL_FILE:",
    "      return 0;",
    "    case fdintCOPY_FILE:",
    "      if ( g_hwndExtractDlg )",
    "        SetDlgItemTextA(g_hwndExtractDlg, 2103, pfdin->psz1);",
    "      if ( (int)(strlen(pfdin->psz1) + strlen((const char *)&Buffer) + 1) >= 260",
    "        || !CatDirAndFile((const char *)FileName, (char *)&Buffer, pfdin->psz1) )",
    "      {",
    "        return -1;",
    "      }",
    "      if ( CheckOverwrite((LPCSTR)FileName) )",
    "      {",
    "        v5 = openfunc((const CHAR *)FileName, 33538);",
    "        if ( v5 == -1 || !AddFile((STRSAFE_LPSTR)FileName, (size_t)&Buffer) )",
    "          return -1;",
    "        ++dword_4093F4;",
    "        return v5;",
    "      }",
    "      return 0;",
    "  }",
    "  if ( fdint != fdintCLOSE_FILE_INFO )",
    "  {",
    "    if ( fdint == fdintNEXT_CABINET )",
    "      return -1;",
    "    return 0;",
    "  }",
    "  if ( (int)(strlen(pfdin->psz1) + strlen((const char *)&Buffer) + 1) >= 260",
    "    || !CatDirAndFile((const char *)FileName, (char *)&Buffer, pfdin->psz1)",
    "    || !AdjustFileTime(pfdin->hf, pfdin->date, pfdin->time) )",
    "  {",
    "    return -1;",
    "  }",
    "  closefunc(pfdin->hf);",
    "  attribs = pfdin->attribs;",
    "  v4 = attribs ? attribs & 0x27 : 128;",
    "  if ( !SetFileAttributesA((LPCSTR)FileName, v4) )",
    "    return -1;",
    "  return 1;",
    "}",
    "",
    "",
    "int __thiscall UpdateCabinetInfo(int this)",
    "{",
    "  size_t v3; // [esp+0h] [ebp-Ch]",
    "  size_t v4; // [esp+0h] [ebp-Ch]",
    "  size_t v5; // [esp+0h] [ebp-Ch]",
    "  const char *v6; // [esp+4h] [ebp-8h]",
    "  STRSAFE_LPCSTR v7; // [esp+4h] [ebp-8h]",
    "  STRSAFE_LPCSTR v8; // [esp+4h] [ebp-8h]",
    "",
    "  qmemcpy(&unk_40940C, &unk_40971C, 0x310u);",
    "  StringCchCopyA(*(STRSAFE_LPSTR *)(this + 12), v3, v6);",
    "  StringCchCopyA(*(STRSAFE_LPSTR *)(this + 4), v4, v7);",
    "  StringCchCopyA(*(STRSAFE_LPSTR *)(this + 8), v5, v8);",
    "  word_409A28 = *(_WORD *)(this + 30);",
    "  word_409A2A = *(_WORD *)(this + 32);",
    "  return 0;",
    "}",
    "",
    "",
    "BOOL VerifyCabinet()",
    "{",
    "  HFDI v0; // edi",
    "  INT_PTR v1; // esi",
    "  BOOL result; // eax",
    "  ERF perf; // [esp+8h] [ebp-28h] BYREF",
    "  FDICABINETINFO pfdici; // [esp+14h] [ebp-1Ch] BYREF",
    "",
    "  memset(&pfdici, 0, sizeof(pfdici));",
    "  v0 = _FDICreate(",
    "         allocfunc,",
    "         (PFNFREE)freefunc,",
    "         (PFNOPEN)openfunc,",
    "         readfunc,",
    "         (PFNWRITE)writefunc,",
    "         closefunc,",
    "         (PFNSEEK)seekfunc,",
    "         1,",
    "         &perf);",
    "  result = 0;",
    "  if ( v0 )",
    "  {",
    "    v1 = openfunc(pszCabinet, 0x8000);",
    "    if ( v1 != -1",
    "      && _FDIIsCabinet(v0, v1, &pfdici)",
    "      && pfdici.cbCabinet == dword_409144",
    "      && !pfdici.hasprev",
    "      && !pfdici.hasnext",
    "      && closefunc(v1) != -1",
    "      && _FDIDestroy(v0) )",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "STRSAFE_LPSTR __stdcall ExtractThread()",
    "{",
    "  HRSRC ResourceA; // eax",
    "  HGLOBAL Resource; // eax",
    "  STRSAFE_LPSTR result; // eax",
    "  HWND DlgItem; // eax",
    "  HWND v4; // eax",
    "  BOOL v5; // esi",
    "  HFDI v6; // eax",
    "  void *v7; // edi",
    "",
    "  dword_409144 = GetResource(\"CABINET\", 0, 0);",
    "  ResourceA = FindResourceA(0, \"CABINET\", (LPCSTR)0xA);",
    "  Resource = LoadResource(0, ResourceA);",
    "  result = (STRSAFE_LPSTR)LockResource(Resource);",
    "  g_Sess = result;",
    "  if ( result )",
    "  {",
    "    if ( g_hwndExtractDlg )",
    "    {",
    "      DlgItem = GetDlgItem(g_hwndExtractDlg, 2114);",
    "      ShowWindow(DlgItem, 0);",
    "      v4 = GetDlgItem(g_hwndExtractDlg, 2113);",
    "      ShowWindow(v4, 5);",
    "    }",
    "    if ( VerifyCabinet() )",
    "    {",
    "      v6 = _FDICreate(",
    "             allocfunc,",
    "             (PFNFREE)freefunc,",
    "             (PFNOPEN)openfunc,",
    "             readfunc,",
    "             (PFNWRITE)writefunc,",
    "             closefunc,",
    "             (PFNSEEK)seekfunc,",
    "             1,",
    "             &perf);",
    "      v7 = v6;",
    "      if ( !v6",
    "        || (v5 = _FDICopy(v6, pszCabinet, (LPSTR)pszCabPath, 0, fdiNotifyExtract, 0, &g_Sess)) && !_FDIDestroy(v7) )",
    "      {",
    "        MsgBox2Param(g_hwndExtractDlg, perf.erfOper + 1300, 0, 0, 0x10u, 0);",
    "        v5 = 0;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      MsgBox2Param(g_hwndExtractDlg, 0x4BAu, 0, 0, 0x10u, 0);",
    "      v5 = 0;",
    "    }",
    "    if ( g_Sess )",
    "    {",
    "      FreeResource(g_Sess);",
    "      g_Sess = 0;",
    "    }",
    "    if ( !v5 && !dword_4091D8 )",
    "      MsgBox2Param(0, 0x4F8u, 0, 0, 0x10u, 0);",
    "    if ( (word_408A38 & 1) == 0 && (dword_409A34 & 1) == 0 )",
    "      SendMessageA(g_hwndExtractDlg, 0xFA1u, v5, 0);",
    "    return (STRSAFE_LPSTR)v5;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int GetUsersPermission()",
    "{",
    "  rsize_t Resource; // esi",
    "  char *v1; // eax",
    "  char *v2; // edi",
    "  int v4; // esi",
    "",
    "  Resource = GetResource(\"UPROMPT\", 0, 0);",
    "  v1 = (char *)LocalAlloc(0x40u, Resource + 1);",
    "  v2 = v1;",
    "  if ( v1 )",
    "  {",
    "    if ( GetResource(\"UPROMPT\", v1, Resource) )",
    "    {",
    "      if ( lstrcmpA(v2, \"<None>\") )",
    "      {",
    "        v4 = MsgBox2Param(0, 0x3E9u, v2, 0, 0x20u, 4);",
    "        LocalFree(v2);",
    "        if ( v4 != 6 )",
    "        {",
    "          g_dwExitCode = -2147023673;",
    "          return 0;",
    "        }",
    "        g_dwExitCode = 0;",
    "      }",
    "      else",
    "      {",
    "        LocalFree(v2);",
    "      }",
    "      return 1;",
    "    }",
    "    MsgBox2Param(0, 0x4B1u, 0, 0, 0x10u, 0);",
    "    LocalFree(v2);",
    "    g_dwExitCode = -2147023084;",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "void __thiscall DeleteExtractedFiles(char *this)",
    "{",
    "  LPCSTR *v1; // esi",
    "  LPCSTR *v2; // edi",
    "  int v3; // eax",
    "  CHAR *v4; // [esp-8h] [ebp-114h]",
    "  STRSAFE_PCNZCH v5[65]; // [esp+4h] [ebp-108h] BYREF",
    "",
    "  v1 = (LPCSTR *)hMem;",
    "  if ( hMem )",
    "  {",
    "    do",
    "    {",
    "      v2 = v1;",
    "      if ( !dword_408A24 && !dword_409A30 )",
    "      {",
    "        SetFileAttributesA(*v1, 0x80u);",
    "        DeleteFileA(*v1);",
    "      }",
    "      v4 = (CHAR *)*v1;",
    "      v1 = (LPCSTR *)v1[1];",
    "      LocalFree(v4);",
    "      LocalFree(v2);",
    "    }",
    "    while ( v1 );",
    "  }",
    "  v3 = g_CMD;",
    "  if ( g_CMD && !dword_408A24 && !dword_409A30 )",
    "  {",
    "    StringCopyWorkerA(this, (size_t)&Buffer, (size_t *)this, v5[0], (size_t)v5[1]);",
    "    if ( (dword_409A34 & 0x20) != 0 )",
    "      GetParentDir((LPCSTR)v5);",
    "    SetCurrentDirectoryA(\"..\");",
    "    DeleteMyDir((char *)v5);",
    "    v3 = g_CMD;",
    "  }",
    "  if ( g_wOSVer != 1 && v3 )",
    "    CleanRegRunOnce((HKEY)this);",
    "  g_CMD = 0;",
    "}",
    "",
    "",
    "int __fastcall GetNewTempDir(char *lpPathName, CHAR *a2, int a3)",
    "{",
    "  int v5; // edi",
    "  int v6; // edi",
    "  size_t v8; // [esp+0h] [ebp-114h]",
    "  const char *v9; // [esp+4h] [ebp-110h]",
    "  char pszDest[260]; // [esp+Ch] [ebp-108h] BYREF",
    "",
    "  v5 = 0;",
    "  while ( 1 )",
    "  {",
    "    StringCchPrintfA(pszDest, 0x104u, \"IXP%03d.TMP\", v5++);",
    "    StringCchCopyA(lpPathName, v8, v9);",
    "    AddPath(a2, pszDest);",
    "    RemoveDirectoryA(a2);",
    "    if ( GetFileAttributesA(a2) == -1 )",
    "      break;",
    "    if ( v5 >= 400 )",
    "      goto LABEL_4;",
    "  }",
    "  if ( CreateDirectoryA(a2, 0) )",
    "  {",
    "    v6 = 1;",
    "    g_CMD = 1;",
    "    return v6;",
    "  }",
    "LABEL_4:",
    "  v6 = 0;",
    "  if ( GetTempFileNameA(lpPathName, \"IXP\", 0, a2) )",
    "  {",
    "    v6 = 1;",
    "    DeleteFileA(a2);",
    "    CreateDirectoryA(a2, 0);",
    "  }",
    "  return v6;",
    "}",
    "",
    "",
    "int __fastcall CreateAndValidateSubdir(STRSAFE_LPSTR pszDest, int a2, int a3)",
    "{",
    "  char *v3; // ecx",
    "  const char *v5; // [esp+0h] [ebp-138h]",
    "  const char *v6; // [esp+4h] [ebp-134h]",
    "  struct _SYSTEM_INFO SystemInfo; // [esp+Ch] [ebp-12Ch] BYREF",
    "  CHAR cchDest[260]; // [esp+30h] [ebp-108h] BYREF",
    "",
    "  if ( a2 )",
    "  {",
    "    if ( !GetNewTempDir(pszDest, cchDest, (int)pszDest) )",
    "      return 0;",
    "    StringCopyWorkerA(v3, (size_t)cchDest, (size_t *)v3, v5, (size_t)v6);",
    "    if ( (dword_409A34 & 0x20) != 0 )",
    "    {",
    "      GetSystemInfo(&SystemInfo);",
    "      if ( SystemInfo.wProcessorArchitecture )",
    "      {",
    "        switch ( SystemInfo.wProcessorArchitecture )",
    "        {",
    "          case 1u:",
    "            AddPath((LPCSTR)&Buffer, \"mips\");",
    "            break;",
    "          case 2u:",
    "            AddPath((LPCSTR)&Buffer, \"alpha\");",
    "            break;",
    "          case 3u:",
    "            AddPath((LPCSTR)&Buffer, \"ppc\");",
    "            break;",
    "        }",
    "      }",
    "      else",
    "      {",
    "        AddPath((LPCSTR)&Buffer, \"i386\");",
    "      }",
    "    }",
    "    AddPath((LPCSTR)&Buffer, (STRSAFE_LPSTR)pszCabPath);",
    "  }",
    "  else",
    "  {",
    "    StringCchCopyA(pszDest, (size_t)v5, v6);",
    "  }",
    "  if ( !IsGoodTempDir((LPCSTR)&Buffer) )",
    "  {",
    "    if ( CreateDirectoryA((LPCSTR)&Buffer, 0) )",
    "    {",
    "      g_CMD = 1;",
    "      goto LABEL_17;",
    "    }",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "LABEL_17:",
    "  if ( a3 && !IsEnoughSpace((LPCSTR)&Buffer, 0) )",
    "  {",
    "    if ( g_CMD )",
    "    {",
    "      g_CMD = 0;",
    "      RemoveDirectoryA((LPCSTR)&Buffer);",
    "    }",
    "    return 0;",
    "  }",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "BOOL GetTempDirectory()",
    "{",
    "  rsize_t Resource; // edi",
    "  HLOCAL v1; // eax",
    "  void *v2; // esi",
    "  int v4; // eax",
    "  char *v5; // ecx",
    "  UINT DriveTypeA; // eax",
    "  UINT v7; // esi",
    "  BYTE v8; // al",
    "  char v9; // al",
    "  DWORD FileAttributesA; // eax",
    "  DWORD DirectoryA; // eax",
    "  STRSAFE_LPSTR v12; // ecx",
    "  const char *v13; // [esp+0h] [ebp-114h]",
    "  size_t v14; // [esp+4h] [ebp-110h]",
    "  BYTE RootPathName[260]; // [esp+Ch] [ebp-108h] BYREF",
    "",
    "  Resource = GetResource(\"RUNPROGRAM\", 0, 0);",
    "  v1 = LocalAlloc(0x40u, Resource + 1);",
    "  v2 = v1;",
    "  if ( !v1 )",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  if ( !GetResource(\"RUNPROGRAM\", v1, Resource) )",
    "  {",
    "    MsgBox2Param(0, 0x4B1u, 0, 0, 0x10u, 0);",
    "    LocalFree(v2);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  if ( !lstrcmpA((LPCSTR)v2, \"<None>\") )",
    "    dword_409A30 = 1;",
    "  LocalFree(v2);",
    "  if ( Filename )",
    "  {",
    "    if ( Filename != 92 || (v4 = 0, byte_408B3F != 92) )",
    "      v4 = 1;",
    "    if ( !CreateAndValidateSubdir(&Filename, 0, v4) )",
    "    {",
    "      MsgBox2Param(0, 0x4BEu, 0, 0, 0x10u, 0);",
    "      return 0;",
    "    }",
    "    return 1;",
    "  }",
    "  if ( !dword_408A24 && !dword_409A30 )",
    "  {",
    "    if ( GetTempPathA(0x104u, (LPSTR)&Buffer)",
    "      && (CreateAndValidateSubdir((STRSAFE_LPSTR)&Buffer, 1, 3)",
    "       || !IsWindowsDrive(&Buffer) && CreateAndValidateSubdir((STRSAFE_LPSTR)&Buffer, 1, 1)) )",
    "    {",
    "      return 1;",
    "    }",
    "    while ( 1 )",
    "    {",
    "      StringCopyWorkerA(v5, (size_t)\"A:\\\\\", (size_t *)v5, v13, v14);",
    "      if ( (char)RootPathName[0] <= 90 )",
    "        break;",
    "LABEL_43:",
    "      GetWindowsDirectoryA((LPSTR)RootPathName, 0x104u);",
    "      if ( !IsEnoughSpace((LPCSTR)RootPathName, 4) )",
    "        return 0;",
    "    }",
    "    while ( 1 )",
    "    {",
    "      DriveTypeA = GetDriveTypeA((LPCSTR)RootPathName);",
    "      v7 = DriveTypeA;",
    "      if ( (DriveTypeA == 6 || DriveTypeA == 3) && GetFileAttributesA((LPCSTR)RootPathName) != -1 )",
    "        goto LABEL_49;",
    "      if ( v7 == 2 )",
    "      {",
    "        v8 = RootPathName[0];",
    "        if ( RootPathName[0] == 65 || RootPathName[0] == 66 )",
    "          goto LABEL_29;",
    "        if ( GetSpace((LPCSTR)RootPathName) >= 0x19000u )",
    "        {",
    "LABEL_49:",
    "          if ( IsEnoughSpace((LPCSTR)RootPathName, 0)",
    "            || !IsWindowsDrive(RootPathName) && IsEnoughSpace((LPCSTR)RootPathName, 0) )",
    "          {",
    "            if ( IsWindowsDrive(RootPathName) )",
    "              GetWindowsDirectoryA((LPSTR)RootPathName, 0x104u);",
    "            AddPath((LPCSTR)RootPathName, \"msdownld.tmp\");",
    "            FileAttributesA = GetFileAttributesA((LPCSTR)RootPathName);",
    "            if ( FileAttributesA == -1 )",
    "              DirectoryA = CreateDirectoryA((LPCSTR)RootPathName, 0);",
    "            else",
    "              DirectoryA = FileAttributesA & 0x10;",
    "            if ( DirectoryA )",
    "            {",
    "              SetFileAttributesA((LPCSTR)RootPathName, 2u);",
    "              StringCopyWorkerA(v12, (size_t)RootPathName, (size_t *)v12, v13, v14);",
    "              if ( CreateAndValidateSubdir((STRSAFE_LPSTR)&Buffer, 1, 0) )",
    "                return 1;",
    "              v9 = RootPathName[0];",
    "            }",
    "            else",
    "            {",
    "              v9 = RootPathName[0] + 1;",
    "              RootPathName[3] = 0;",
    "              ++RootPathName[0];",
    "            }",
    "            goto LABEL_42;",
    "          }",
    "        }",
    "      }",
    "      v8 = RootPathName[0];",
    "LABEL_29:",
    "      v9 = v8 + 1;",
    "      RootPathName[0] = v9;",
    "LABEL_42:",
    "      if ( v9 > 90 )",
    "        goto LABEL_43;",
    "    }",
    "  }",
    "  return MyDialogBox(0, TempDirDlgProc, 0, 0) != 0;",
    "}",
    "",
    "",
    "int __thiscall IsGoodTempDir(char *lpFileName)",
    "{",
    "  CHAR *v2; // ebx",
    "  DWORD FileAttributesA; // eax",
    "  size_t v5; // [esp+0h] [ebp-10h]",
    "  const char *v6; // [esp+4h] [ebp-Ch]",
    "  HANDLE hObject; // [esp+Ch] [ebp-4h]",
    "",
    "  v2 = (CHAR *)LocalAlloc(0x40u, strlen(lpFileName) + 20);",
    "  if ( !v2 )",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "LABEL_3:",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  StringCchCopyA(lpFileName, v5, v6);",
    "  AddPath(v2, \"TMP4351$.TMP\");",
    "  hObject = CreateFileA(v2, 0x40000000u, 0, 0, 1u, 0x4000080u, 0);",
    "  LocalFree(v2);",
    "  if ( hObject == (HANDLE)-1 )",
    "    goto LABEL_3;",
    "  CloseHandle(hObject);",
    "  FileAttributesA = GetFileAttributesA(lpFileName);",
    "  if ( FileAttributesA == -1 || (FileAttributesA & 0x10) == 0 )",
    "    goto LABEL_3;",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "BOOL __fastcall IsEnoughSpace(LPCSTR lpPathName, int a2, int a3)",
    "{",
    "  unsigned int v5; // edi",
    "  DWORD v6; // eax",
    "  UINT v7; // edx",
    "  _BYTE *v8; // ecx",
    "  int v9; // edx",
    "  int v10; // esi",
    "  char v11; // al",
    "  int v12; // edx",
    "  unsigned __int16 i; // ax",
    "  unsigned int v14; // edx",
    "  unsigned int v15; // ecx",
    "  bool v16; // cc",
    "  DWORD LastError; // eax",
    "  DWORD MaximumComponentLength; // [esp+8h] [ebp-330h] BYREF",
    "  DWORD FileSystemFlags; // [esp+Ch] [ebp-32Ch] BYREF",
    "  DWORD v20; // [esp+10h] [ebp-328h]",
    "  DWORD TotalNumberOfClusters; // [esp+14h] [ebp-324h] BYREF",
    "  int v22; // [esp+18h] [ebp-320h]",
    "  DWORD NumberOfFreeClusters; // [esp+1Ch] [ebp-31Ch] BYREF",
    "  DWORD SectorsPerCluster; // [esp+20h] [ebp-318h] BYREF",
    "  DWORD BytesPerSector; // [esp+24h] [ebp-314h] BYREF",
    "  CHAR v26[512]; // [esp+28h] [ebp-310h] BYREF",
    "  CHAR Buffer[260]; // [esp+228h] [ebp-110h] BYREF",
    "  _BYTE v28[8]; // [esp+32Ch] [ebp-Ch] BYREF",
    "",
    "  v22 = a2;",
    "  GetCurrentDirectoryA(0x104u, Buffer);",
    "  if ( !SetCurrentDirectoryA(lpPathName) )",
    "  {",
    "    MsgBox2Param(0, 0x4BCu, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  SectorsPerCluster = 0;",
    "  BytesPerSector = 0;",
    "  NumberOfFreeClusters = 0;",
    "  TotalNumberOfClusters = 0;",
    "  if ( !GetDiskFreeSpaceA(0, &SectorsPerCluster, &BytesPerSector, &NumberOfFreeClusters, &TotalNumberOfClusters)",
    "    || (v20 = SectorsPerCluster * BytesPerSector,",
    "        (v5 = MulDiv(SectorsPerCluster * BytesPerSector, NumberOfFreeClusters, 1024)) == 0) )",
    "  {",
    "    memset(v26, 0, sizeof(v26));",
    "    g_dwExitCode = MyGetLastError();",
    "    LastError = GetLastError();",
    "    FormatMessageA(0x1000u, 0, LastError, 0, v26, 0x200u, 0);",
    "    v7 = 1200;",
    "    goto LABEL_31;",
    "  }",
    "  if ( !GetVolumeInformationA(0, 0, 0, 0, &MaximumComponentLength, &FileSystemFlags, 0, 0) )",
    "  {",
    "    memset(v26, 0, sizeof(v26));",
    "    g_dwExitCode = MyGetLastError();",
    "    v6 = GetLastError();",
    "    FormatMessageA(0x1000u, 0, v6, 0, v26, 0x200u, 0);",
    "    v7 = 1273;",
    "LABEL_31:",
    "    MsgBox2Param(0, v7, lpPathName, v26, 0x10u, 0);",
    "    SetCurrentDirectoryA(Buffer);",
    "    return 0;",
    "  }",
    "  SetCurrentDirectoryA(Buffer);",
    "  v8 = v28;",
    "  v9 = 6;",
    "  v10 = lpPathName - v28;",
    "  do",
    "  {",
    "    if ( v9 == 4 )",
    "      break;",
    "    v11 = v8[v10];",
    "    if ( !v11 )",
    "      break;",
    "    *v8++ = v11;",
    "    --v9;",
    "  }",
    "  while ( v9 );",
    "  if ( !v9 )",
    "    --v8;",
    "  *v8 = 0;",
    "  v12 = 512;",
    "  for ( i = 0; i < 8u; ++i )",
    "  {",
    "    if ( v20 == v12 )",
    "      break;",
    "    v12 *= 2;",
    "  }",
    "  if ( i == 8 )",
    "  {",
    "    MsgBox2Param(0, 0x4C5u, 0, 0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  if ( (dword_409A34 & 8) != 0 && (FileSystemFlags & 0x8000) != 0 )",
    "  {",
    "    v14 = 2 * g_dwFileSizes[i];",
    "    v15 = dword_409A38 + ((unsigned int)dword_409A38 >> 2);",
    "  }",
    "  else",
    "  {",
    "    v15 = dword_409A38;",
    "    v14 = g_dwFileSizes[i];",
    "  }",
    "  if ( (v22 & 3) == 3 )",
    "  {",
    "    v16 = v15 + v14 <= v5;",
    "  }",
    "  else if ( (v22 & 1) != 0 )",
    "  {",
    "    v16 = v14 <= v5;",
    "  }",
    "  else",
    "  {",
    "    v16 = v15 <= v5;",
    "  }",
    "  if ( !v16 )",
    "    return DiskSpaceErrMsg(a3, v14, v15, (int)v28);",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "int __fastcall RemoveLeadTailBlanks(char *a1, _DWORD *a2)",
    "{",
    "  int v3; // esi",
    "  char i; // al",
    "  char *v5; // edx",
    "  unsigned int v7; // ecx",
    "  char v8; // al",
    "",
    "  v3 = 0;",
    "  for ( i = *a1; i && (i == 32 || i == 9 || i == 13 || i == 10 || i == 11 || i == 12); i = a1[v3] )",
    "    ++v3;",
    "  v5 = &a1[v3];",
    "  if ( !a1[v3] )",
    "    return 0;",
    "  v7 = strlen(&a1[v3]);",
    "  while ( (--v7 & 0x80000000) == 0 )",
    "  {",
    "    v8 = v5[v7];",
    "    if ( v8 != 32 && v8 != 9 && v8 != 13 && v8 != 10 && v8 != 11 && v8 != 12 )",
    "      break;",
    "  }",
    "  a1[v7 + 1 + v3] = 0;",
    "  *a2 = v3;",
    "  return 1;",
    "}",
    "",
    "",
    "int __fastcall ParseCmdLine(LPSTR lpsz)",
    "{",
    "  int v1; // edi",
    "  CHAR v2; // al",
    "  LPSTR v3; // eax",
    "  unsigned int v4; // ecx",
    "  int v5; // esi",
    "  int v6; // ebx",
    "  unsigned int v7; // edx",
    "  CHAR v8; // al",
    "  CHAR v9; // al",
    "  int v10; // eax",
    "  int v11; // eax",
    "  int v12; // eax",
    "  int v13; // eax",
    "  int v14; // eax",
    "  int v15; // eax",
    "  int v16; // eax",
    "  char v17; // cl",
    "  char *v18; // esi",
    "  int v19; // eax",
    "  int v20; // eax",
    "  int v21; // eax",
    "  int v22; // eax",
    "  int v23; // eax",
    "  __int16 v24; // ax",
    "  unsigned __int8 v25; // al",
    "  char v26; // cl",
    "  char *v27; // esi",
    "  int v28; // eax",
    "  int v29; // eax",
    "  int v30; // ebx",
    "  const CHAR *v31; // esi",
    "  int v33; // ebx",
    "  size_t v34; // [esp+0h] [ebp-11Ch]",
    "  const char *v35; // [esp+4h] [ebp-118h]",
    "  int v36; // [esp+Ch] [ebp-110h] BYREF",
    "  LPSTR v37; // [esp+10h] [ebp-10Ch]",
    "  char v38; // [esp+14h] [ebp-108h] BYREF",
    "  CHAR String2; // [esp+15h] [ebp-107h] BYREF",
    "  char v40; // [esp+16h] [ebp-106h]",
    "  char v41[257]; // [esp+17h] [ebp-105h] BYREF",
    "",
    "  v1 = 1;",
    "  if ( !lpsz || !*lpsz )",
    "    return 1;",
    "  while ( 1 )",
    "  {",
    "    if ( !v1 )",
    "      goto LABEL_36;",
    "    while ( 1 )",
    "    {",
    "      v2 = *lpsz;",
    "      if ( *lpsz != 32 && v2 != 9 && v2 != 13 && v2 != 10 && v2 != 11 && v2 != 12 )",
    "        break;",
    "      lpsz = CharNextA(lpsz);",
    "    }",
    "    v37 = lpsz;",
    "    if ( !v2 )",
    "      goto LABEL_36;",
    "    v3 = v37;",
    "    v4 = 0;",
    "    v5 = 0;",
    "    v6 = 0;",
    "    v7 = 1;",
    "    do",
    "    {",
    "      if ( v5 )",
    "      {",
    "        if ( v6 )",
    "          break;",
    "      }",
    "      else",
    "      {",
    "        v8 = *v3;",
    "        if ( v8 == 32 || v8 == 9 || v8 == 13 || v8 == 10 || v8 == 11 || v8 == 12 )",
    "          break;",
    "        v3 = v37;",
    "      }",
    "      v9 = *v3;",
    "      if ( v9 == 34 )",
    "      {",
    "        if ( v37[1] == 34 )",
    "        {",
    "          if ( v7 >= 0x104 )",
    "            return 0;",
    "          *(&v38 + v4++) = 34;",
    "          ++v7;",
    "          v10 = 2;",
    "        }",
    "        else",
    "        {",
    "          v10 = 1;",
    "          if ( v5 )",
    "            v6 = 1;",
    "          else",
    "            v5 = 1;",
    "        }",
    "      }",
    "      else",
    "      {",
    "        if ( v7 >= 0x104 )",
    "          return 0;",
    "        *(&v38 + v4++) = v9;",
    "        ++v7;",
    "        v10 = 1;",
    "      }",
    "      v37 += v10;",
    "      v3 = v37;",
    "    }",
    "    while ( *v37 );",
    "    if ( v4 >= 0x104 )",
    "      __report_rangecheckfailure();",
    "    *(&v38 + v4) = 0;",
    "    if ( !v5 )",
    "      break;",
    "    if ( !v6 )",
    "      goto LABEL_35;",
    "LABEL_41:",
    "    if ( v38 != 47 && v38 != 45 )",
    "      return 0;",
    "    v11 = (char)CharUpperA((LPSTR)String2) - 63;",
    "    if ( !v11 )",
    "    {",
    "      MsgBox2Param(0, 0x521u, pszCabPath, 0, 0x40u, 0);",
    "      if ( g_hMutex )",
    "        CloseHandle(g_hMutex);",
    "      ExitProcess(0);",
    "    }",
    "    v12 = v11 - 4;",
    "    if ( !v12 )",
    "    {",
    "      if ( !v40 )",
    "      {",
    "        dword_408A24 = 1;",
    "        goto LABEL_51;",
    "      }",
    "      if ( v40 == 58 )",
    "      {",
    "        v33 = (v41[0] == 34) + 3;",
    "        if ( strlen(&v38 + v33) )",
    "        {",
    "          if ( (!ANSIStrChr(&v38 + v33) || ANSIStrChr(&v38 + v33))",
    "            && (!ANSIStrChr(&v38 + v33) || ANSIStrChr(&v38 + v33)) )",
    "          {",
    "            v36 = v33;",
    "            if ( RemoveLeadTailBlanks(&v38 + v33, &v36) )",
    "            {",
    "              StringCchCopyA(&v38 + v33 + v36, v34, v35);",
    "              goto LABEL_51;",
    "            }",
    "          }",
    "        }",
    "      }",
    "LABEL_50:",
    "      v1 = 0;",
    "      goto LABEL_51;",
    "    }",
    "    v13 = v12 - 1;",
    "    if ( v13 )",
    "    {",
    "      v14 = v13 - 10;",
    "      if ( !v14 )",
    "      {",
    "        if ( !v40 )",
    "        {",
    "          dword_408A2C = 1;",
    "          goto LABEL_51;",
    "        }",
    "        if ( v40 == 58 )",
    "        {",
    "          v26 = v41[0];",
    "          if ( v41[0] )",
    "          {",
    "            v27 = v41;",
    "            do",
    "            {",
    "              ++v27;",
    "              v28 = (char)CharUpperA((LPSTR)v26) - 69;",
    "              if ( v28 )",
    "              {",
    "                v29 = v28 - 2;",
    "                if ( v29 )",
    "                {",
    "                  if ( v29 == 15 )",
    "                    dword_408A34 = 1;",
    "                  else",
    "                    v1 = 0;",
    "                }",
    "                else",
    "                {",
    "                  dword_408A30 = 1;",
    "                }",
    "              }",
    "              else",
    "              {",
    "                dword_408A2C = 1;",
    "              }",
    "              v26 = *v27;",
    "            }",
    "            while ( *v27 );",
    "          }",
    "          goto LABEL_51;",
    "        }",
    "        goto LABEL_50;",
    "      }",
    "      v15 = v14 - 3;",
    "      if ( !v15 )",
    "      {",
    "        if ( !v40 )",
    "          goto LABEL_77;",
    "        if ( v40 == 58 )",
    "        {",
    "          v25 = (unsigned __int8)CharUpperA((LPSTR)v41[0]);",
    "          switch ( v25 )",
    "          {",
    "            case '1':",
    "              goto LABEL_77;",
    "            case 'A':",
    "              v24 = 1;",
    "              goto LABEL_84;",
    "            case 'U':",
    "LABEL_77:",
    "              v24 = 2;",
    "LABEL_84:",
    "              word_408A38 = v24;",
    "              goto LABEL_51;",
    "          }",
    "        }",
    "        goto LABEL_50;",
    "      }",
    "      v16 = v15 - 1;",
    "      if ( !v16 )",
    "      {",
    "        if ( !v40 )",
    "        {",
    "          dword_409A2C = 3;",
    "          dword_408A28 = 1;",
    "          goto LABEL_51;",
    "        }",
    "        if ( v40 == 58 )",
    "        {",
    "          v17 = v41[0];",
    "          dword_409A2C = 1;",
    "          if ( !v41[0] )",
    "            goto LABEL_51;",
    "          v18 = v41;",
    "          while ( 2 )",
    "          {",
    "            ++v18;",
    "            v19 = (char)CharUpperA((LPSTR)v17) - 65;",
    "            if ( v19 )",
    "            {",
    "              v20 = v19 - 3;",
    "              if ( v20 )",
    "              {",
    "                v21 = v20 - 5;",
    "                if ( !v21 )",
    "                {",
    "                  dword_409A2C &= ~2u;",
    "                  goto LABEL_71;",
    "                }",
    "                v22 = v21 - 5;",
    "                if ( !v22 )",
    "                {",
    "                  dword_409A2C &= ~1u;",
    "                  goto LABEL_71;",
    "                }",
    "                v23 = v22 - 2;",
    "                if ( v23 )",
    "                {",
    "                  if ( v23 != 3 )",
    "                  {",
    "                    v1 = 0;",
    "                    goto LABEL_72;",
    "                  }",
    "                  dword_409A2C |= 4u;",
    "LABEL_71:",
    "                  dword_408A28 = 1;",
    "                }",
    "                else",
    "                {",
    "                  dword_408D48 |= 0x80u;",
    "                }",
    "              }",
    "              else",
    "              {",
    "                dword_408D48 |= 0x40u;",
    "              }",
    "LABEL_72:",
    "              v17 = *v18;",
    "              if ( !*v18 )",
    "                goto LABEL_51;",
    "              continue;",
    "            }",
    "            break;",
    "          }",
    "          dword_409A2C |= 2u;",
    "          goto LABEL_71;",
    "        }",
    "        if ( CompareStringA(0x7Fu, 1u, \"RegServer\", -1, &String2, -1) == 2 )",
    "          goto LABEL_51;",
    "        goto LABEL_50;",
    "      }",
    "      if ( v16 != 2 )",
    "        goto LABEL_50;",
    "    }",
    "    if ( v40 != 58 )",
    "      goto LABEL_50;",
    "    v30 = (v41[0] == 34) + 3;",
    "    if ( !strlen(&v38 + v30) )",
    "      goto LABEL_50;",
    "    v36 = (v41[0] == 34) + 3;",
    "    if ( !RemoveLeadTailBlanks(&v38 + v30, &v36) )",
    "      goto LABEL_50;",
    "    v31 = &Filename;",
    "    if ( (unsigned __int8)CharUpperA((LPSTR)String2) != 84 )",
    "      v31 = &byte_408A3A;",
    "    StringCchCopyA(&v38 + v30 + v36, v34, v35);",
    "    AddPath(v31, (STRSAFE_LPSTR)pszCabPath);",
    "    if ( !IsFullPath((int)v31) )",
    "      return 0;",
    "LABEL_51:",
    "    lpsz = v37;",
    "    if ( !*v37 )",
    "      goto LABEL_36;",
    "  }",
    "  if ( !v6 )",
    "    goto LABEL_41;",
    "LABEL_35:",
    "  v1 = 0;",
    "LABEL_36:",
    "  if ( dword_408A2C && !Filename )",
    "  {",
    "    if ( GetModuleFileNameA(g_hInst, &Filename, 0x104u) )",
    "      *(_BYTE *)(ANSIStrRChr(&Filename) + 1) = 0;",
    "    else",
    "      return 0;",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "void  CheckWinDir()",
    "{",
    "  CHAR hMem[260]; // [esp+0h] [ebp-108h] BYREF",
    "",
    "  if ( GetWindowsDirectoryA(hMem, 0x104u) )",
    "  {",
    "    IsEnoughSpace(hMem, 2, 2);",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 0x4F0u, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "  }",
    "}",
    "",
    "",
    "signed int MyGetLastError()",
    "{",
    "  signed int result; // eax",
    "",
    "  result = GetLastError();",
    "  if ( result > 0 )",
    "    return (unsigned __int16)result | 0x80070000;",
    "  return result;",
    "}",
    "",
    "",
    "void __thiscall  TravelUpdatedFiles(",
    "        int (__thiscall *this)(_DWORD, _DWORD, _DWORD, const char *, const char *),",
    "        int a2)",
    "{",
    "  HGLOBAL Resource; // eax",
    "  const char *v3; // eax",
    "  char *v4; // edi",
    "  int v5; // eax",
    "  HRSRC ResourceA; // eax",
    "  int v7; // [esp-4h] [ebp-30h] BYREF",
    "  int v8; // [esp+Ch] [ebp-20h] BYREF",
    "  int (__thiscall *v9)(_DWORD, _DWORD, _DWORD, const char *, const char *); // [esp+10h] [ebp-1Ch]",
    "  char pszDest[20]; // [esp+14h] [ebp-18h] BYREF",
    "",
    "  v9 = this;",
    "  v8 = 0;",
    "  StringCchPrintfA(pszDest, 0x14u, \"UPDFILE%lu\", 0);",
    "  while ( 1 )",
    "  {",
    "    ResourceA = FindResourceA(0, pszDest, (LPCSTR)0xA);",
    "    if ( !ResourceA )",
    "      break;",
    "    Resource = LoadResource(0, ResourceA);",
    "    v3 = (const char *)LockResource(Resource);",
    "    v4 = (char *)v3;",
    "    if ( !v3 )",
    "    {",
    "      g_dwExitCode = -2147023084;",
    "      return;",
    "    }",
    "    v5 = v9(v9, *(_DWORD *)v3, *((_DWORD *)v3 + 1), v3 + 8, &v3[strlen(v3 + 8) + 9]);",
    "    if ( &v8 != &v7 )",
    "      __fastfail(4u);",
    "    if ( !v5 )",
    "    {",
    "      FreeResource(v4);",
    "      return;",
    "    }",
    "    FreeResource(v4);",
    "    StringCchPrintfA(pszDest, 0x14u, \"UPDFILE%lu\", ++v8);",
    "  }",
    "}",
    "",
    "",
    "int __stdcall ProcessUpdatedFile_Size(unsigned int a1, int a2, int a3, int a4)",
    "{",
    "  unsigned int v4; // esi",
    "  unsigned int i; // ecx",
    "  int v6; // edx",
    "  unsigned int v7; // eax",
    "",
    "  v4 = 512;",
    "  for ( i = 0; i < 0x20; i += 4 )",
    "  {",
    "    v6 = a1 % v4;",
    "    v7 = a1 % v4 != 0 ? v4 : 0;",
    "    v4 *= 2;",
    "    *(_DWORD *)(i + 4229600) += a1 + v7 - v6;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "int __thiscall ProcessUpdatedFile_Write(",
    "        size_t *pcchNewDestLength,",
    "        char *nNumberOfBytesToWrite,",
    "        int a3,",
    "        char *a4,",
    "        const void *a5)",
    "{",
    "  int v5; // edi",
    "  HANDLE FileA; // esi",
    "  const char *v8; // [esp+0h] [ebp-11Ch]",
    "  size_t v9; // [esp+4h] [ebp-118h]",
    "  STRSAFE_LPSTR NumberOfBytesWritten; // [esp+10h] [ebp-10Ch] BYREF",
    "  BYTE FileName[260]; // [esp+14h] [ebp-108h] BYREF",
    "",
    "  NumberOfBytesWritten = 0;",
    "  v5 = 1;",
    "  StringCopyWorkerA((STRSAFE_LPSTR)pcchNewDestLength, (size_t)&Buffer, pcchNewDestLength, v8, v9);",
    "  AddPath((LPCSTR)FileName, a4);",
    "  FileA = CreateFileA((LPCSTR)FileName, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "  if ( FileA == (HANDLE)-1 )",
    "  {",
    "    g_dwExitCode = -2147024814;",
    "    return 0;",
    "  }",
    "  else",
    "  {",
    "    if ( !WriteFile(FileA, a5, (DWORD)nNumberOfBytesToWrite, (LPDWORD)&NumberOfBytesWritten, 0)",
    "      || nNumberOfBytesToWrite != NumberOfBytesWritten )",
    "    {",
    "      g_dwExitCode = -2147024814;",
    "      v5 = 0;",
    "    }",
    "    CloseHandle(FileA);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "HMODULE __thiscall MyLoadLibrary(size_t *pcchNewDestLength)",
    "{",
    "  DWORD FileAttributesA; // eax",
    "  const char *v3; // [esp+0h] [ebp-10Ch]",
    "  size_t FileName[65]; // [esp+4h] [ebp-108h] BYREF",
    "",
    "  StringCopyWorkerA((STRSAFE_LPSTR)pcchNewDestLength, (size_t)&Buffer, pcchNewDestLength, v3, FileName[0]);",
    "  AddPath((LPCSTR)FileName, (STRSAFE_LPSTR)\"advpack.dll\");",
    "  FileAttributesA = GetFileAttributesA((LPCSTR)FileName);",
    "  if ( FileAttributesA == -1 || (FileAttributesA & 0x10) != 0 )",
    "    return LoadLibraryA(\"advpack.dll\");",
    "  else",
    "    return LoadLibraryExA((LPCSTR)FileName, 0, 8u);",
    "}",
    "",
    "",
    "INT_PTR __fastcall MyDialogBox(",
    "        int a1,",
    "        const CHAR *a2,",
    "        HWND hWndParent,",
    "        INT_PTR (__stdcall *lpDialogFunc)(HWND, UINT, WPARAM, LPARAM),",
    "        LPARAM dwInitParam,",
    "        int a6)",
    "{",
    "  HINSTANCE v6; // esi",
    "  HRSRC ResourceA; // eax",
    "  const DLGTEMPLATE *Resource; // eax",
    "  DLGTEMPLATE *v9; // edi",
    "  INT_PTR v10; // eax",
    "  INT_PTR v11; // esi",
    "",
    "  v6 = g_hInst;",
    "  ResourceA = FindResourceA(g_hInst, a2, (LPCSTR)5);",
    "  if ( !ResourceA",
    "    || (Resource = (const DLGTEMPLATE *)LoadResource(v6, ResourceA), (v9 = (DLGTEMPLATE *)Resource) == 0)",
    "    || (dwInitParam",
    "      ? (v10 = DialogBoxIndirectParamA(v6, Resource, hWndParent, lpDialogFunc, dwInitParam))",
    "      : (v10 = DialogBoxIndirectParamA(v6, Resource, hWndParent, lpDialogFunc, 0)),",
    "        v11 = v10,",
    "        FreeResource(v9),",
    "        v11 == -1) )",
    "  {",
    "    MsgBox2Param(0, 0x4FBu, 0, 0, 0x10u, 0);",
    "    return a6;",
    "  }",
    "  return v11;",
    "}",
    "",
    "",
    "HRESULT __fastcall AddPath(CHAR *lpszStart, unsigned int a2, STRSAFE_LPSTR pszDest)",
    "{",
    "  unsigned int v4; // esi",
    "  CHAR *v6; // esi",
    "  size_t v8; // [esp+0h] [ebp-Ch]",
    "  const char *v9; // [esp+4h] [ebp-8h]",
    "",
    "  v4 = strlen(lpszStart);",
    "  if ( v4 + 1 >= a2 )",
    "    return -2147024774;",
    "  v6 = &lpszStart[v4];",
    "  if ( v6 > lpszStart && *CharPrevA(lpszStart, v6) != 92 )",
    "    *v6++ = 92;",
    "  *v6 = 0;",
    "  while ( *pszDest == 32 )",
    "    ++pszDest;",
    "  return StringCchCatA(pszDest, v8, v9);",
    "}",
    "",
    "",
    "int __fastcall GetParentDir(LPCSTR lpszStart)",
    "{",
    "  int v2; // ebx",
    "  const CHAR *i; // eax",
    "  const CHAR *v4; // esi",
    "  const CHAR *v6; // [esp-4h] [ebp-10h]",
    "",
    "  v2 = 0;",
    "  v6 = CharPrevA(lpszStart, &lpszStart[strlen(lpszStart)]);",
    "  for ( i = CharPrevA(lpszStart, v6); ; i = CharPrevA(lpszStart, i) )",
    "  {",
    "    v4 = i;",
    "    if ( i <= lpszStart )",
    "      break;",
    "    if ( *i == 92 )",
    "      goto LABEL_6;",
    "  }",
    "  if ( *i != 92 )",
    "    return v2;",
    "LABEL_6:",
    "  if ( i == lpszStart || *CharPrevA(lpszStart, i) == 58 )",
    "    v4 = CharNextA(v4);",
    "  *v4 = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "BOOL __fastcall ChrCmpA_inline(__int16 TestChar, __int16 a2)",
    "{",
    "  if ( (_BYTE)TestChar != (_BYTE)a2 )",
    "    return 1;",
    "  if ( IsDBCSLeadByte(TestChar) )",
    "    return TestChar != a2;",
    "  return 0;",
    "}",
    "",
    "",
    "LPSTR __fastcall ANSIStrChr(LPSTR lpsz, __int16 a2)",
    "{",
    "  while ( 1 )",
    "  {",
    "    if ( !*lpsz )",
    "      return 0;",
    "    if ( !ChrCmpA_inline(*(_WORD *)lpsz, a2) )",
    "      break;",
    "    lpsz = CharNextA(lpsz);",
    "  }",
    "  return lpsz;",
    "}",
    "",
    "",
    "BOOL __thiscall FileExists(LPCSTR lpFileName)",
    "{",
    "  DWORD FileAttributesA; // eax",
    "",
    "  FileAttributesA = GetFileAttributesA(lpFileName);",
    "  return FileAttributesA != -1 && (FileAttributesA & 0x10) == 0;",
    "}",
    "",
    "",
    "LPSTR __fastcall ANSIStrRChr(LPSTR lpsz, __int16 a2)",
    "{",
    "  LPSTR v4; // edi",
    "",
    "  v4 = 0;",
    "  while ( *lpsz )",
    "  {",
    "    if ( !ChrCmpA_inline(*(_WORD *)lpsz, a2) )",
    "      v4 = lpsz;",
    "    lpsz = CharNextA(lpsz);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "BOOL __fastcall ConvertHexStringToIntA(LPCSTR lpsz, int *a2)",
    "{",
    "  int v2; // esi",
    "  const CHAR *i; // edi",
    "  char v4; // bl",
    "",
    "  v2 = 0;",
    "  for ( i = lpsz; ; i = CharNextA(i) )",
    "  {",
    "    v4 = *i;",
    "    if ( (unsigned __int8)(*i - 48) <= 9u )",
    "    {",
    "      v2 = v4 + 16 * (v2 - 3);",
    "      continue;",
    "    }",
    "    if ( v4 >= 97 )",
    "      v4 -= 32;",
    "    if ( (unsigned int)(v4 - 65) > 5 )",
    "      break;",
    "    v2 = v4 + 16 * v2 - 55;",
    "  }",
    "  *a2 = v2;",
    "  return i != lpsz;",
    "}",
    "",
    "",
    "BOOL __stdcall EnumResLangProc(HMODULE hModule, LPCSTR lpType, LPCSTR lpName, WORD wLanguage, LONG_PTR lParam)",
    "{",
    "  int v5; // esi",
    "",
    "  v5 = 1;",
    "  if ( lpType == *(LPCSTR *)(lParam + 8) && *(_WORD *)lParam == (wLanguage & 0x3FF) )",
    "  {",
    "    *(_DWORD *)(lParam + 4) = 1;",
    "    v5 = 0;",
    "    *(_WORD *)lParam = wLanguage;",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "int __thiscall GetResourceLanguage(HMODULE hModule, int a2, __int16 a3)",
    "{",
    "  LONG_PTR lParam; // [esp+0h] [ebp-Ch] BYREF",
    "  int v5; // [esp+4h] [ebp-8h]",
    "  int v6; // [esp+8h] [ebp-4h]",
    "",
    "  v5 = 0;",
    "  LOWORD(lParam) = a3;",
    "  v6 = 16;",
    "  EnumResourceLanguagesA(hModule, (LPCSTR)0x10, (LPCSTR)1, EnumResLangProc, (LONG_PTR)&lParam);",
    "  return v5;",
    "}",
    "",
    "",
    "int __thiscall IsBiDiLocalizedBinary(void *this, int a2)",
    "{",
    "  int v2; // esi",
    "  HMODULE v3; // edi",
    "  int v4; // ecx",
    "",
    "  v2 = dword_4081D4;",
    "  v3 = g_hInst;",
    "  if ( dword_4081D4 == -2 )",
    "  {",
    "    dword_4081D4 = 0;",
    "    v2 = 1;",
    "    if ( GetResourceLanguage(g_hInst, (int)this, 1) || GetResourceLanguage(v3, v4, 13) )",
    "      dword_4081D4 = 1;",
    "    else",
    "      return dword_4081D4;",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "int RunningOnWin95BiDiLoc()",
    "{",
    "  int v0; // edi",
    "  LSTATUS Value; // esi",
    "  int v2; // eax",
    "  STRSAFE_LPSTR Type; // [esp+8h] [ebp-B4h] BYREF",
    "  STRSAFE_LPSTR cbData; // [esp+Ch] [ebp-B0h] BYREF",
    "  int v6; // [esp+10h] [ebp-ACh] BYREF",
    "  HINSTANCE phkResult; // [esp+14h] [ebp-A8h] BYREF",
    "  struct _OSVERSIONINFOA VersionInformation; // [esp+18h] [ebp-A4h] BYREF",
    "  BYTE Data[12]; // [esp+ACh] [ebp-10h] BYREF",
    "",
    "  v0 = dword_4081D8;",
    "  cbData = (STRSAFE_LPSTR)12;",
    "  v6 = 0;",
    "  if ( dword_4081D8 == -2 )",
    "  {",
    "    dword_4081D8 = 0;",
    "    VersionInformation.dwOSVersionInfoSize = 148;",
    "    if ( GetVersionExA(&VersionInformation)",
    "      && (v0 = 1, VersionInformation.dwPlatformId == 1)",
    "      && VersionInformation.dwMajorVersion == 4",
    "      && VersionInformation.dwMinorVersion < 0xA",
    "      && GetSystemMetrics(74)",
    "      && !RegOpenKeyExA(HKEY_CURRENT_USER, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019u, (PHKEY)&phkResult)",
    "      && (Value = RegQueryValueExA((HKEY)phkResult, pszCabPath, 0, (LPDWORD)&Type, Data, (LPDWORD)&cbData),",
    "          RegCloseKey((HKEY)phkResult),",
    "          !Value)",
    "      && ConvertHexStringToIntA((LPCSTR)Data, &v6)",
    "      && ((v2 = v6 & 0x3FF, v2 == 1) || v2 == 13) )",
    "    {",
    "      dword_4081D8 = 1;",
    "    }",
    "    else",
    "    {",
    "      return dword_4081D8;",
    "    }",
    "  }",
    "  return v0;",
    "}",
    "",
    "",
    "int __thiscall GetSpace(LPCSTR lpRootPathName)",
    "{",
    "  int v1; // esi",
    "  bool v2; // zf",
    "  STRSAFE_LPSTR NumberOfFreeClusters; // [esp+4h] [ebp-10h] BYREF",
    "  STRSAFE_LPSTR TotalNumberOfClusters; // [esp+8h] [ebp-Ch] BYREF",
    "  STRSAFE_LPSTR SectorsPerCluster; // [esp+Ch] [ebp-8h] BYREF",
    "  STRSAFE_LPSTR BytesPerSector; // [esp+10h] [ebp-4h] BYREF",
    "",
    "  v1 = 0;",
    "  v2 = *lpRootPathName == 0;",
    "  SectorsPerCluster = 0;",
    "  BytesPerSector = 0;",
    "  NumberOfFreeClusters = 0;",
    "  TotalNumberOfClusters = 0;",
    "  if ( !v2",
    "    && GetDiskFreeSpaceA(",
    "         lpRootPathName,",
    "         (LPDWORD)&SectorsPerCluster,",
    "         (LPDWORD)&BytesPerSector,",
    "         (LPDWORD)&NumberOfFreeClusters,",
    "         (LPDWORD)&TotalNumberOfClusters) )",
    "  {",
    "    return MulDiv((_DWORD)SectorsPerCluster * (_DWORD)BytesPerSector, (int)TotalNumberOfClusters, 1024);",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "int pre_cpp_init()",
    "{",
    "  int result; // eax",
    "",
    "  dword_4081FC = _newmode;",
    "  result = ___getmainargs(&dword_4081E8, &unk_4081EC, &unk_4081F0, _dowildcard, &dword_4081FC);",
    "  dword_4081F4 = result;",
    "  return result;",
    "}",
    "",
    "",
    "int WinMainCRTStartup()",
    "{",
    "  __security_init_cookie();",
    "  return _mainCRTStartup();",
    "}",
    "",
    "",
    "int _mainCRTStartup()",
    "{",
    "  PVOID StackBase; // esi",
    "  int v1; // edi",
    "  signed __int32 v2; // eax",
    "  int result; // eax",
    "  char *v4; // esi",
    "  BOOL v5; // edi",
    "  unsigned __int8 v6; // cl",
    "  int wShowWindow; // eax",
    "  struct _STARTUPINFOW StartupInfo; // [esp+10h] [ebp-68h] BYREF",
    "  BOOL v9; // [esp+58h] [ebp-20h]",
    "  char *v10; // [esp+5Ch] [ebp-1Ch]",
    "  int v11; // [esp+74h] [ebp-4h]",
    "",
    "  v9 = 0;",
    "  GetStartupInfoW(&StartupInfo);",
    "  v11 = 0;",
    "  StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "  v1 = 0;",
    "  while ( 1 )",
    "  {",
    "    v2 = _InterlockedCompareExchange(&__native_startup_lock, (signed __int32)StackBase, 0);",
    "    if ( !v2 )",
    "      break;",
    "    if ( (PVOID)v2 == StackBase )",
    "    {",
    "      v1 = 1;",
    "      break;",
    "    }",
    "    Sleep(0x3E8u);",
    "  }",
    "  if ( __native_startup_state == 1 )",
    "  {",
    "    _amsg_exit(31);",
    "  }",
    "  else if ( __native_startup_state )",
    "  {",
    "    dword_4081E4 = 1;",
    "  }",
    "  else",
    "  {",
    "    __native_startup_state = 1;",
    "    if ( _initterm_e((_PIFV *)&__xi_a, (_PIFV *)&__xi_z) )",
    "    {",
    "      v11 = -2;",
    "      return 255;",
    "    }",
    "  }",
    "  if ( __native_startup_state == 1 )",
    "  {",
    "    _initterm((_PVFV *)&__xc_a, (_PVFV *)&__xc_z);",
    "    __native_startup_state = 2;",
    "  }",
    "  if ( !v1 )",
    "    _InterlockedExchange(&__native_startup_lock, 0);",
    "  if ( __dyn_tls_init_callback && _IsNonwritableInCurrentImage(&__dyn_tls_init_callback) )",
    "    __dyn_tls_init_callback(__dyn_tls_init_callback, 0, 2, 0);",
    "  v4 = __acmdln;",
    "  v10 = __acmdln;",
    "  v5 = v9;",
    "  while ( 1 )",
    "  {",
    "    v6 = *v4;",
    "    if ( (unsigned __int8)*v4 <= 0x20u )",
    "    {",
    "      if ( !v6 )",
    "        goto LABEL_26;",
    "      if ( !v5 )",
    "        break;",
    "    }",
    "    if ( v6 == 34 )",
    "    {",
    "      v5 = !v5;",
    "      v9 = v5;",
    "    }",
    "    if ( __ismbblead(v6) )",
    "      v10 = ++v4;",
    "    v10 = ++v4;",
    "  }",
    "  while ( v6 && v6 <= 0x20u )",
    "  {",
    "    v10 = ++v4;",
    "    v6 = *v4;",
    "  }",
    "LABEL_26:",
    "  if ( (StartupInfo.dwFlags & 1) != 0 )",
    "    wShowWindow = StartupInfo.wShowWindow;",
    "  else",
    "    wShowWindow = 10;",
    "  result = WinMain((HINSTANCE)0x400000, 0, v4, wShowWindow);",
    "  dword_4081E0 = result;",
    "  if ( !dword_4081F8 )",
    "    _exit(result);",
    "  if ( !dword_4081E4 )",
    "  {",
    "    __cexit();",
    "    return dword_4081E0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __cdecl _initterm_e(_PIFV *First, _PIFV *Last)",
    "{",
    "  _PIFV *v2; // esi",
    "  int result; // eax",
    "",
    "  v2 = First;",
    "  for ( result = 0; v2 < Last; ++v2 )",
    "  {",
    "    if ( result )",
    "      break;",
    "    if ( *v2 )",
    "      result = ((int (__thiscall *)(_PIFV))*v2)(*v2);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "bool check_managed_app()",
    "{",
    "  __int16 v0; // ax",
    "  bool v1; // zf",
    "",
    "  if ( LOWORD(MEMORY[0x400000].unused) == 23117 && *(_DWORD *)(MEMORY[0x40003C] + 0x400000) == 17744 )",
    "  {",
    "    v0 = *(_WORD *)(MEMORY[0x40003C] + 4194328);",
    "    if ( v0 == 267 )",
    "    {",
    "      if ( *(_DWORD *)(MEMORY[0x40003C] + 4194420) > 0xEu )",
    "      {",
    "        v1 = *(_DWORD *)(MEMORY[0x40003C] + 4194536) == 0;",
    "        return !v1;",
    "      }",
    "    }",
    "    else if ( v0 == 523 && *(_DWORD *)(MEMORY[0x40003C] + 4194436) > 0xEu )",
    "    {",
    "      v1 = *(_DWORD *)(MEMORY[0x40003C] + 4194552) == 0;",
    "      return !v1;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie)",
    "{",
    "  if ( StackCookie != __security_cookie )",
    "    __report_gsfailure();",
    "}",
    "",
    "",
    "BOOL __cdecl __raise_securityfailure(struct _EXCEPTION_POINTERS *a1)",
    "{",
    "  HANDLE CurrentProcess; // eax",
    "",
    "  SetUnhandledExceptionFilter(0);",
    "  UnhandledExceptionFilter(a1);",
    "  CurrentProcess = GetCurrentProcess();",
    "  return TerminateProcess(CurrentProcess, 0xC0000409);",
    "}",
    "",
    "",
    "void __cdecl  __report_gsfailure()",
    "{",
    "  int v0; // eax",
    "  int v1; // edx",
    "  int v2; // ecx",
    "  int v3; // ebx",
    "  int v4; // edi",
    "  int v5; // esi",
    "  unsigned int v6; // kr00_4",
    "  int vars0; // [esp+324h] [ebp+0h]",
    "  int retaddr; // [esp+328h] [ebp+4h]",
    "  char v9; // [esp+32Ch] [ebp+8h] BYREF",
    "",
    "  dword_408300 = v0;",
    "  dword_4082FC = v2;",
    "  dword_4082F8 = v1;",
    "  dword_4082F4 = v3;",
    "  dword_4082F0 = v5;",
    "  dword_4082EC = v4;",
    "  word_408318 = __SS__;",
    "  word_40830C = __CS__;",
    "  word_4082E8 = __DS__;",
    "  word_4082E4 = __ES__;",
    "  word_4082E0 = __FS__;",
    "  word_4082DC = __GS__;",
    "  v6 = __readeflags();",
    "  dword_408310 = v6;",
    "  dword_408304 = vars0;",
    "  dword_408308 = retaddr;",
    "  dword_408314 = (int)&v9;",
    "  dword_408250 = 65537;",
    "  dword_40820C = retaddr;",
    "  dword_408200 = -1073740791;",
    "  dword_408204 = 1;",
    "  dword_408210 = 3;",
    "  dword_408214 = 2;",
    "  unk_408218 = __security_cookie;",
    "  unk_40821C = __security_cookie_complement;",
    "  __raise_securityfailure((struct _EXCEPTION_POINTERS *)off_401000);",
    "}",
    "",
    "",
    "void __usercall  __report_rangecheckfailure(",
    "        int a1@<eax>,",
    "        int a2@<edx>,",
    "        int a3@<ecx>,",
    "        int a4@<ebx>,",
    "        int a5@<edi>,",
    "        int a6@<esi>,",
    "        int a7)",
    "{",
    "  unsigned int v7; // kr00_4",
    "  int retaddr; // [esp+4h] [ebp+4h]",
    "",
    "  dword_408300 = a1;",
    "  dword_4082FC = a3;",
    "  dword_4082F8 = a2;",
    "  dword_4082F4 = a4;",
    "  dword_4082F0 = a6;",
    "  dword_4082EC = a5;",
    "  word_408318 = __SS__;",
    "  word_40830C = __CS__;",
    "  word_4082E8 = __DS__;",
    "  word_4082E4 = __ES__;",
    "  word_4082E0 = __FS__;",
    "  word_4082DC = __GS__;",
    "  v7 = __readeflags();",
    "  dword_408310 = v7;",
    "  dword_408250 = 65537;",
    "  dword_408308 = retaddr;",
    "  dword_408314 = (int)&a7;",
    "  dword_40820C = retaddr;",
    "  dword_408200 = -1073740791;",
    "  dword_408204 = 1;",
    "  dword_408210 = 1;",
    "  dword_408214 = 8;",
    "  __raise_securityfailure((struct _EXCEPTION_POINTERS *)off_401000);",
    "}",
    "",
    "",
    "LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)",
    "{",
    "  PEXCEPTION_RECORD ExceptionRecord; // eax",
    "  ULONG_PTR v2; // eax",
    "",
    "  ExceptionRecord = ExceptionInfo->ExceptionRecord;",
    "  if ( ExceptionInfo->ExceptionRecord->ExceptionCode == -529697949 && ExceptionRecord->NumberParameters == 3 )",
    "  {",
    "    v2 = ExceptionRecord->ExceptionInformation[0];",
    "    if ( v2 == 429065504 || v2 == 429065505 || v2 == 429065506 || v2 == 26820608 )",
    "      terminate();",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "int __CxxSetUnhandledExceptionFilter()",
    "{",
    "  SetUnhandledExceptionFilter(__CxxUnhandledExceptionFilter);",
    "  return 0;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int _XcptFilter()",
    "{",
    "}int __stdcall RtlpImageNtHeader(int a1)",
    "{",
    "  int v1; // ecx",
    "  unsigned int v2; // edx",
    "",
    "  v1 = 0;",
    "  if ( a1 )",
    "  {",
    "    if ( a1 != -1 && *(_WORD *)a1 == 23117 )",
    "    {",
    "      v2 = *(_DWORD *)(a1 + 60);",
    "      if ( v2 < 0x10000000 )",
    "        return *(_DWORD *)(v2 + a1) == 17744 ? v2 + a1 : 0;",
    "    }",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "int __cdecl _get_image_app_type(int a1)",
    "{",
    "  HMODULE ModuleHandleW; // eax",
    "  int v2; // eax",
    "  int v3; // ecx",
    "  int result; // eax",
    "",
    "  ModuleHandleW = GetModuleHandleW(0);",
    "  if ( !ModuleHandleW )",
    "    return a1;",
    "  v2 = RtlpImageNtHeader((int)ModuleHandleW);",
    "  if ( !v2 )",
    "    return a1;",
    "  v3 = *(unsigned __int16 *)(v2 + 92);",
    "  result = 2;",
    "  if ( (_WORD)v3 == 2 )",
    "    return result;",
    "  if ( v3 == 3 )",
    "    return 1;",
    "  else",
    "    return a1;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int __cdecl _amsg_exit(int a1)",
    "{",
    "}int __cdecl _setargv()",
    "{",
    "  return 0;",
    "}",
    "",
    "",
    "int __cdecl _FindPESection(int a1, unsigned int a2)",
    "{",
    "  unsigned int v2; // edx",
    "  int v3; // ecx",
    "  int result; // eax",
    "  unsigned int v5; // esi",
    "",
    "  v2 = 0;",
    "  v3 = a1 + *(_DWORD *)(a1 + 60);",
    "  result = v3 + *(unsigned __int16 *)(v3 + 20) + 24;",
    "  if ( !*(_WORD *)(v3 + 6) )",
    "    return 0;",
    "  while ( 1 )",
    "  {",
    "    v5 = *(_DWORD *)(result + 12);",
    "    if ( a2 >= v5 && a2 < v5 + *(_DWORD *)(result + 8) )",
    "      break;",
    "    ++v2;",
    "    result += 40;",
    "    if ( v2 >= *(unsigned __int16 *)(v3 + 6) )",
    "      return 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "BOOL __cdecl _IsNonwritableInCurrentImage(int a1)",
    "{",
    "  int PESection; // eax",
    "",
    "  return _ValidateImageBase(0x400000)",
    "      && (PESection = _FindPESection(0x400000, a1 - 0x400000)) != 0",
    "      && *(int *)(PESection + 36) >= 0;",
    "}",
    "",
    "",
    "BOOL __cdecl _ValidateImageBase(int a1)",
    "{",
    "  int v1; // eax",
    "  BOOL result; // eax",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)a1 == 23117 )",
    "  {",
    "    v1 = a1 + *(_DWORD *)(a1 + 60);",
    "    if ( *(_DWORD *)v1 == 17744 && *(_WORD *)(v1 + 24) == 267 )",
    "      return 1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "// bad sp value at call has been detected, the output may be wrong!",
    "// positive sp value has been detected, the output may be wrong!",
    "void __cdecl __security_init_cookie()",
    "{",
    "}// positive sp value has been detected, the output may be wrong!",
    "unsigned int _setdefaultprecision()",
    "{",
    "}// attributes: thunk",
    "void __cdecl _initterm(_PVFV *First, _PVFV *Last)",
    "{",
    "}_DWORD *__cdecl _SEH_prolog4(int a1, int a2)",
    "{",
    "  void *v4; // esp",
    "  void *v6; // [esp-18h] [ebp-18h]",
    "  _DWORD v7[2]; // [esp-8h] [ebp-8h] BYREF",
    "  _UNKNOWN *retaddr; // [esp+0h] [ebp+0h]",
    "  int v9; // [esp+4h] [ebp+4h]",
    "",
    "  v7[1] = 4223600;",
    "  v7[0] = NtCurrentTeb()->NtTib.ExceptionList;",
    "  v4 = alloca(a2);",
    "  v9 = -2;",
    "  retaddr = v6;",
    "  return v7;",
    "}",
    "",
    "",
    "// positive sp value has been detected, the output may be wrong!",
    "void _SEH_epilog4()",
    "{",
    "}void __cdecl  _except_handler4(int a1, int a2, int a3, int a4)",
    "{",
    "  _except_handler4_common(4227076, 4222176, a1, a2, a3, a4);",
    "}",
    "",
    "",
    "void _guard_check_icall_nop()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "void __cdecl  _except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size)",
    "{",
    "}"
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "HRESULT __stdcall StringCchCatA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc);",
    "HRESULT StringCchPrintfA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszFormat, ...);",
    "HRESULT __stdcall StringCopyWorkerA(",
    "        STRSAFE_LPSTR pszDest,",
    "        size_t cchDest,",
    "        size_t *pcchNewDestLength,",
    "        STRSAFE_PCNZCH pszSrc,",
    "        size_t cchToCopy);",
    "int __fastcall AvailableBufferCch(unsigned int a1, int a2, unsigned int a3);",
    "int __thiscall CheckToken(_DWORD *this);",
    "BOOL __stdcall IsNTAdmin(DWORD dwReserved, DWORD *lpdwReserved);",
    "int __stdcall WarningDlgProc(HWND hDlg, int a2, INT_PTR nResult, UINT uID);",
    "_BYTE *__fastcall ExtractField(_BYTE **a1, const CHAR *a2);",
    "int __thiscall AnalyzeCmd(STRSAFE_LPSTR pszDest, char **a2, _DWORD *a3);",
    "int CheckReboot();",
    "int MyNTReboot();",
    "int __fastcall MyRestartDialog(char a1);",
    "void __thiscall CleanRegRunOnce(HKEY this);",
    "HLOCAL AddRegRunOnce();",
    "void ConvertRegRunOnce();",
    "void __thiscall DeleteMyDir(char *this);",
    "LONG GetWininitSize();",
    "DWORD __stdcall NeedRebootInit();",
    "BOOL __thiscall IsWindowsDrive(_BYTE *this);",
    "BOOL __fastcall DiskSpaceErrMsg(int a1, int a2, int a3, int a4);",
    "int __thiscall GetFileTobeChecked(LPSTR lpBuffer, int a2);",
    "int __fastcall CheckFileVersion(int a1, const CHAR *a2, int a3, _DWORD *a4);",
    "int __fastcall CompareVersion(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4);",
    "void __fastcall ExpandCmdParams(BYTE *lpsz, unsigned int a2, CHAR *lpsza);",
    "int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);",
    "int __fastcall Init(HMODULE hModule, const CHAR *a2, int a3);",
    "int __stdcall DoMain();",
    "LRESULT __stdcall MEditSubProc(_LUID_AND_ATTRIBUTES hWnd, ULONG Msg, tagRECT wParam, ULONG lParam);",
    "int __stdcall LicenseDlgProc(_LUID_AND_ATTRIBUTES hDlg, int a2, int a3, int a4);",
    "BOOL __thiscall IsFullPath(int this);",
    "int __stdcall TempDirDlgProc(HWND hDlg, int a2, int a3, int a4);",
    "int __stdcall OverwriteDlgProc(HWND hDlg, int a2, unsigned int nResult, int a4);",
    "int __stdcall ExtractDlgProc(HWND a1, int a2, INT_PTR a3, int a4);",
    "DWORD __thiscall WaitForObject(void *this);",
    "BOOL __thiscall CheckOSVersion(_DWORD *this);",
    "int DisplayLicense();",
    "int ExtractFiles();",
    "int RunInstallCommand();",
    "int __fastcall RunApps(CHAR *lpStartupInfo, struct _STARTUPINFOA *a2);",
    "void __fastcall savAppExitCode(int a1);",
    "HLOCAL __stdcall FinishMessage();",
    "int __stdcall BrowseCallback(_LUID_AND_ATTRIBUTES hWnd, ULONG lParam, int a3, ULONG a4);",
    "BOOL __thiscall BrowseForDir(void *this, int a2, int a3);",
    "BOOL __fastcall CenterWindow(HWND hWnd, HWND a2);",
    "int __fastcall MsgBox2Param(HWND a1, UINT a2, const char *a3, const char *a4, UINT uType, int a6);",
    "DWORD __fastcall GetResource(LPCSTR lpName, void *Destination, rsize_t DestinationSize);",
    "int __fastcall CatDirAndFile(const char *a1, char *a2, char *pszDest);",
    "int __thiscall CheckOverwrite(LPCSTR lpFileName);",
    "int __usercall AddFile@<eax>(STRSAFE_LPSTR pszDest@<ecx>, size_t a2@<ebx>);",
    "HANDLE __fastcall Win32Open(LPCSTR lpFileName, __int16 a2);",
    "void __thiscall MakeDirectory(CHAR *lpPathName);",
    "INT_PTR __cdecl openfunc(const CHAR *pszFile, __int16 oflag);",
    "UINT __cdecl readfunc(INT_PTR hf, void *pv, UINT cb);",
    "UINT __cdecl writefunc(INT_PTR hf, LPCVOID pv, UINT cb);",
    "int __cdecl closefunc(INT_PTR hf);",
    "DWORD __cdecl seekfunc(HKEY hf, LONG dist, int seektype);",
    "BOOL __fastcall AdjustFileTime(int a1, WORD a2, WORD wFatTime);",
    "HGLOBAL __cdecl allocfunc(ULONG cb);",
    "void __cdecl freefunc(DLGPROC pv);",
    "INT_PTR __cdecl fdiNotifyExtract(FDINOTIFICATIONTYPE fdint, PFDINOTIFICATION pfdin);",
    "int __thiscall UpdateCabinetInfo(int this);",
    "BOOL VerifyCabinet();",
    "STRSAFE_LPSTR __stdcall ExtractThread();",
    "int GetUsersPermission();",
    "void __thiscall DeleteExtractedFiles(char *this);",
    "int __fastcall GetNewTempDir(char *lpPathName, CHAR *a2, int a3);",
    "int __fastcall CreateAndValidateSubdir(STRSAFE_LPSTR pszDest, int a2, int a3);",
    "BOOL GetTempDirectory();",
    "int __thiscall IsGoodTempDir(char *lpFileName);",
    "BOOL __fastcall IsEnoughSpace(LPCSTR lpPathName, int a2, int a3);",
    "int __fastcall RemoveLeadTailBlanks(char *a1, _DWORD *a2);",
    "int __fastcall ParseCmdLine(LPSTR lpsz);",
    "void  CheckWinDir();",
    "signed int MyGetLastError();",
    "void __thiscall  TravelUpdatedFiles(",
    "        int (__thiscall *this)(_DWORD, _DWORD, _DWORD, const char *, const char *),",
    "        int a2);",
    "int __stdcall ProcessUpdatedFile_Size(unsigned int a1, int a2, int a3, int a4);",
    "int __thiscall ProcessUpdatedFile_Write(",
    "        size_t *pcchNewDestLength,",
    "        char *nNumberOfBytesToWrite,",
    "        int a3,",
    "        char *a4,",
    "        const void *a5);",
    "HMODULE __thiscall MyLoadLibrary(size_t *pcchNewDestLength);",
    "INT_PTR __fastcall MyDialogBox(",
    "        int a1,",
    "        const CHAR *a2,",
    "        HWND hWndParent,",
    "        INT_PTR (__stdcall *lpDialogFunc)(HWND, UINT, WPARAM, LPARAM),",
    "        LPARAM dwInitParam,",
    "        int a6);",
    "HRESULT __fastcall AddPath(CHAR *lpszStart, unsigned int a2, STRSAFE_LPSTR pszDest);",
    "int __fastcall GetParentDir(LPCSTR lpszStart);",
    "BOOL __fastcall ChrCmpA_inline(__int16 TestChar, __int16 a2);",
    "LPSTR __fastcall ANSIStrChr(LPSTR lpsz, __int16 a2);",
    "BOOL __thiscall FileExists(LPCSTR lpFileName);",
    "LPSTR __fastcall ANSIStrRChr(LPSTR lpsz, __int16 a2);",
    "BOOL __fastcall ConvertHexStringToIntA(LPCSTR lpsz, int *a2);",
    "BOOL __stdcall EnumResLangProc(HMODULE hModule, LPCSTR lpType, LPCSTR lpName, WORD wLanguage, LONG_PTR lParam);",
    "int __thiscall GetResourceLanguage(HMODULE hModule, int a2, __int16 a3);",
    "int __thiscall IsBiDiLocalizedBinary(void *this, int a2);",
    "int RunningOnWin95BiDiLoc();",
    "int __thiscall GetSpace(LPCSTR lpRootPathName);",
    "int pre_cpp_init();",
    "int WinMainCRTStartup();",
    "int _mainCRTStartup();",
    "int __cdecl _initterm_e(_PIFV *First, _PIFV *Last);",
    "bool check_managed_app();",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie);",
    "BOOL __cdecl __raise_securityfailure(struct _EXCEPTION_POINTERS *a1);",
    "void __cdecl  __report_gsfailure();",
    "void __usercall  __report_rangecheckfailure(",
    "        int a1@<eax>,",
    "        int a2@<edx>,",
    "        int a3@<ecx>,",
    "        int a4@<ebx>,",
    "        int a5@<edi>,",
    "        int a6@<esi>,",
    "        int a7);",
    "LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo);",
    "int __CxxSetUnhandledExceptionFilter();",
    "// attributes: thunk",
    "int _XcptFilter();",
    "int __stdcall RtlpImageNtHeader(int a1);",
    "int __cdecl _get_image_app_type(int a1);",
    "// attributes: thunk",
    "int __cdecl _amsg_exit(int a1);",
    "int __cdecl _setargv();",
    "int __cdecl _FindPESection(int a1, unsigned int a2);",
    "BOOL __cdecl _IsNonwritableInCurrentImage(int a1);",
    "BOOL __cdecl _ValidateImageBase(int a1);",
    "// bad sp value at call has been detected, the output may be wrong!",
    "// positive sp value has been detected, the output may be wrong!",
    "void __cdecl __security_init_cookie();",
    "// positive sp value has been detected, the output may be wrong!",
    "unsigned int _setdefaultprecision();",
    "// attributes: thunk",
    "void __cdecl _initterm(_PVFV *First, _PVFV *Last);",
    "_DWORD *__cdecl _SEH_prolog4(int a1, int a2);",
    "// positive sp value has been detected, the output may be wrong!",
    "void _SEH_epilog4();",
    "void __cdecl  _except_handler4(int a1, int a2, int a3, int a4);",
    "void _guard_check_icall_nop();",
    "// attributes: thunk",
    "void __cdecl  _except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6);",
    "// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size);",
    "// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size);"
  ],
  "summary": [],
  "yara_rules": "",
  "capa_rules": {
    "meta": {
      "timestamp": "2025-07-13T17:00:33.540934",
      "version": "9.2.1",
      "argv": [
        "-r",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-rules",
        "-s",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-sigs",
        "--json",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\9aff05fc-c392-4f61-ae38-53f789eadec0.exe"
      ],
      "sample": {
        "md5": "ff90a3408afbf8b9881e45e77e72276d",
        "sha1": "886dbb7aeb73f135b242c78a3546c468a322d3ee",
        "sha256": "6445781c5d6b6f6cb7d283e46a89a3e55ea6b2c84ebf89fabfc75fc17f3f649e",
        "path": "D:/Whitehat/web/YARRAI_Web/backend/uploads/9aff05fc-c392-4f61-ae38-53f789eadec0.exe"
      },
      "flavor": "static",
      "analysis": {
        "format": "pe",
        "arch": "i386",
        "os": "windows",
        "extractor": "VivisectFeatureExtractor",
        "rules": [
          "D:/Whitehat/web/YARRAI_Web/backend/services/CAPA/capa-rules"
        ],
        "base_address": {
          "type": "absolute",
          "value": 4194304
        },
        "layout": {
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 4200115
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200169
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200197
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200222
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200253
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200392
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200402
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200430
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200505
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200611
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200611
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200821
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4200836
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4201192
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201192
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201327
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201463
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201778
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201918
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201953
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4201995
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202151
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202200
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202384
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202275
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202347
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202384
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202394
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202447
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202465
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202480
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202538
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202538
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202653
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4202935
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203012
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203111
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203111
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203145
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203238
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203297
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203408
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203641
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203744
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203848
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203885
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4203931
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204008
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204171
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204171
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204217
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204266
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204319
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204324
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204403
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204403
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204515
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204776
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204776
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204818
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4204978
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205023
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205100
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205132
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205228
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205228
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205379
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205503
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205738
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4205738
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4206013
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4206244
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4206365
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4206365
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207072
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207085
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207120
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207368
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207409
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207696
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207827
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207856
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207917
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4207951
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208157
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4208256
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208273
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4208366
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208439
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208595
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208630
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208839
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4208884
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209023
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209048
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4209446
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209453
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209491
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4209570
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209570
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209667
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209760
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209829
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4209863
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4210462
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4210671
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4210710
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4210753
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4210809
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4210971
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4210994
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211236
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4211380
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211664
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4211664
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4211829
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211897
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212118
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212143
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212185
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212211
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212367
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212447
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212482
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212516
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212537
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212589
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212684
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212858
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212858
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212911
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212929
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212945
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4212974
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213004
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213015
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213048
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213120
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213141
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213328
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213355
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213378
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213456
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213532
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213696
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213732
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213743
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213780
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213815
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213815
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213968
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4213968
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214102
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214136
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214189
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214275
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214336
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214425
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214425
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214525
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214525
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214611
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214641
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214752
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214908
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4214966
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215478
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4215531
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215713
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4215743
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4216224
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4216624
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4216642
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4216787
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4216871
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4217032
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217113
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217179
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4217213
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217454
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217597
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217653
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4217761
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4218014
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218232
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218271
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218685
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218765
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218902
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4218972
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219076
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219173
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219307
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219422
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219496
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219544
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219631
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219707
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219776
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219789
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219840
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4219840
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220053
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220053
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220298
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220322
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220338
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220590
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220590
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220665
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220696
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220714
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220728
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220959
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4220959
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221109
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221266
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221266
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221360
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221360
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221472
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221472
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221536
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221615
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221715
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4221779
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222015
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4222052
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222506
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4222506
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222804
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4222858
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222910
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4222937
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222992
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4222992
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4223030
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4223037
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 4223046
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223264
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4223282
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223317
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 4223317
                  }
                }
              ]
            }
          ]
        },
        "feature_counts": {
          "file": 29573,
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 4200064
              },
              "count": 32
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200115
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200222
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200321
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200392
              },
              "count": 24
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200430
              },
              "count": 55
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200611
              },
              "count": 70
            },
            {
              "address": {
                "type": "absolute",
                "value": 4200928
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 4201092
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 4201192
              },
              "count": 134
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202151
              },
              "count": 27
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202384
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202465
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 4202538
              },
              "count": 91
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203111
              },
              "count": 63
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203408
              },
              "count": 83
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203744
              },
              "count": 40
            },
            {
              "address": {
                "type": "absolute",
                "value": 4203885
              },
              "count": 49
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204080
              },
              "count": 33
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204171
              },
              "count": 70
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204403
              },
              "count": 72
            },
            {
              "address": {
                "type": "absolute",
                "value": 4204776
              },
              "count": 100
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205193
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205228
              },
              "count": 70
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205563
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4205738
              },
              "count": 118
            },
            {
              "address": {
                "type": "absolute",
                "value": 4206365
              },
              "count": 61
            },
            {
              "address": {
                "type": "absolute",
                "value": 4206784
              },
              "count": 30
            },
            {
              "address": {
                "type": "absolute",
                "value": 4206848
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207072
              },
              "count": 38
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207120
              },
              "count": 113
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207696
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 4207856
              },
              "count": 84
            },
            {
              "address": {
                "type": "absolute",
                "value": 4208256
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 4208366
              },
              "count": 132
            },
            {
              "address": {
                "type": "absolute",
                "value": 4209215
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4209446
              },
              "count": 45
            },
            {
              "address": {
                "type": "absolute",
                "value": 4209570
              },
              "count": 182
            },
            {
              "address": {
                "type": "absolute",
                "value": 4210671
              },
              "count": 66
            },
            {
              "address": {
                "type": "absolute",
                "value": 4210971
              },
              "count": 37
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211049
              },
              "count": 37
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211200
              },
              "count": 24
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211236
              },
              "count": 84
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211664
              },
              "count": 44
            },
            {
              "address": {
                "type": "absolute",
                "value": 4211897
              },
              "count": 74
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212367
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212482
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212589
              },
              "count": 45
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212704
              },
              "count": 41
            },
            {
              "address": {
                "type": "absolute",
                "value": 4212858
              },
              "count": 63
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213004
              },
              "count": 54
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213120
              },
              "count": 67
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213328
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213456
              },
              "count": 47
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213600
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213696
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213815
              },
              "count": 41
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213920
              },
              "count": 14
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213952
              },
              "count": 12
            },
            {
              "address": {
                "type": "absolute",
                "value": 4213968
              },
              "count": 87
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214425
              },
              "count": 30
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214525
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 4214752
              },
              "count": 69
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215140
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215269
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215478
              },
              "count": 55
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215713
              },
              "count": 59
            },
            {
              "address": {
                "type": "absolute",
                "value": 4215911
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 4216224
              },
              "count": 115
            },
            {
              "address": {
                "type": "absolute",
                "value": 4217032
              },
              "count": 64
            },
            {
              "address": {
                "type": "absolute",
                "value": 4217213
              },
              "count": 99
            },
            {
              "address": {
                "type": "absolute",
                "value": 4217879
              },
              "count": 53
            },
            {
              "address": {
                "type": "absolute",
                "value": 4218014
              },
              "count": 142
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219422
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219544
              },
              "count": 62
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219776
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 4219840
              },
              "count": 49
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220053
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220183
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220298
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220392
              },
              "count": 41
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220488
              },
              "count": 22
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220543
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220590
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220616
              },
              "count": 30
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220665
              },
              "count": 64
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220768
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220819
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220873
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 4220959
              },
              "count": 62
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221266
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221360
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221472
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221536
              },
              "count": 84
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221935
              },
              "count": 14
            },
            {
              "address": {
                "type": "absolute",
                "value": 4221955
              },
              "count": 22
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222015
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222064
              },
              "count": 43
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222506
              },
              "count": 37
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222704
              },
              "count": 43
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222784
              },
              "count": 13
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222798
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222804
              },
              "count": 50
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222881
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222885
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222910
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222964
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222976
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 4222992
              },
              "count": 43
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223211
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223230
              },
              "count": 14
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223264
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223317
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223471
              },
              "count": 16
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223490
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223565
              },
              "count": 12
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223648
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223651
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223657
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 4223663
              },
              "count": 7
            }
          ]
        },
        "library_functions": [
          {
            "address": {
              "type": "absolute",
              "value": 4219525
            },
            "name": "?AtlHresultFromLastError@ATL@@YAJXZ"
          },
          {
            "address": {
              "type": "absolute",
              "value": 4222176
            },
            "name": "@__security_check_cookie@4"
          },
          {
            "address": {
              "type": "absolute",
              "value": 4222192
            },
            "name": "___raise_securityfailure"
          },
          {
            "address": {
              "type": "absolute",
              "value": 4223072
            },
            "name": "__IsNonwritableInCurrentImage"
          },
          {
            "address": {
              "type": "absolute",
              "value": 4223496
            },
            "name": "__SEH_prolog4"
          },
          {
            "address": {
              "type": "absolute",
              "value": 4223600
            },
            "name": "__except_handler4"
          }
        ]
      }
    },
    "rules": {
      "link function at runtime on Windows": {
        "meta": {
          "name": "link function at runtime on Windows",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x404130",
            "Practical Malware Analysis Lab 01-04.exe_:0x401350"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: link function at runtime on Windows\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetProcAddress\r\n        - api: ntdll.LdrGetProcedureAddress\r\n        - api: ntdll.LdrGetProcedureAddressEx\r\n        - api: ntdll.LdrGetProcedureAddressForCaller\r\n        - api: MmGetSystemRoutineAddress\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4200492
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4200492
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4202804
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202804
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4205608
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4205608
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4206534
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4206534
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4210214
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4210214
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211276
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4211276
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211299
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4211299
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211322
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4211322
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "modify access privileges": {
        "meta": {
          "name": "modify access privileges",
          "namespace": "host-interaction/process/modify",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Privilege Escalation",
                "Access Token Manipulation"
              ],
              "tactic": "Privilege Escalation",
              "technique": "Access Token Manipulation",
              "subtechnique": "",
              "id": "T1134"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403BE0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: modify access privileges\r\n    namespace: host-interaction/process/modify\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Privilege Escalation::Access Token Manipulation [T1134]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403BE0\r\n  features:\r\n    - and:\r\n      - api: advapi32.AdjustTokenPrivileges\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202317
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "AdjustTokenPrivileges"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202317
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open mutex on Windows": {
        "meta": {
          "name": "create or open mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Mutex"
              ],
              "objective": "Process",
              "behavior": "Create Mutex",
              "method": "",
              "id": "C0042"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-01.dll_:0x10001010"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Mutex [C0042]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-01.dll_:0x10001010\r\n  features:\r\n    - or:\r\n      - api: kernel32.OpenMutex\r\n      - api: kernel32.CreateMutex\r\n      - api: kernel32.CreateMutexEx\r\n      - api: ntdll.NtCreateMutant\r\n      - api: ntdll.NtOpenMutant\r\n      - and:\r\n        - format: dotnet\r\n        - or:\r\n          - api: System.Threading.Mutex::ctor\r\n          - api: System.Threading.Mutex::OpenExisting\r\n          - api: System.Threading.Mutex::TryOpenExisting\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4205998
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205998
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open file": {
        "meta": {
          "name": "create or open file",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Create File"
              ],
              "objective": "File System",
              "behavior": "Create File",
              "method": "",
              "id": "C0016"
            }
          ],
          "references": [],
          "examples": [
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open file\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n    lib: true\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Create File [C0016]\r\n    examples:\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E\r\n  features:\r\n    - or:\r\n      - api: CreateFile\r\n      - api: CreateFileEx\r\n      - api: IoCreateFile\r\n      - api: IoCreateFileEx\r\n      - api: ZwOpenFile\r\n      - api: ZwCreateFile\r\n      - api: NtOpenFile\r\n      - api: NtCreateFile\r\n      - api: LZCreateFile\r\n      - api: LZOpenFile\r\n      - api: fopen\r\n      - api: fopen64\r\n      - api: fdopen\r\n      - api: freopen\r\n      - api: open\r\n      - api: openat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4212958
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212958
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4212994
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212994
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217155
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217155
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219949
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219949
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "compare security identifiers": {
        "meta": {
          "name": "compare security identifiers",
          "namespace": "host-interaction/sid",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "# generated using capa explorer for IDA Pro\r\nrule:\r\n  meta:\r\n    name: compare security identifiers\r\n    namespace: host-interaction/sid\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n  features:\r\n    - or:\r\n      - api: advapi32.EqualSid\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4200821
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "EqualSid"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4200826
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get file attributes": {
        "meta": {
          "name": "get file attributes",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Get File Attributes"
              ],
              "objective": "File System",
              "behavior": "Get File Attributes",
              "method": "",
              "id": "C0049"
            }
          ],
          "references": [],
          "examples": [
            "03B236B23B1EC37C663527C1F53AF3FE:0x180019824",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get file attributes\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Get File Attributes [C0049]\r\n    examples:\r\n      - 03B236B23B1EC37C663527C1F53AF3FE:0x180019824\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetFileAttributes\r\n      - api: ZwQueryDirectoryFile\r\n      - api: ZwQueryInformationFile\r\n      - api: NtQueryDirectoryFile\r\n      - api: NtQueryInformationFile\r\n      - api: System.IO.File::GetAttributes\r\n      - api: System.IO.File::GetCreationTime\r\n      - api: System.IO.File::GetCreationTimeUtc\r\n      - api: System.IO.File::GetLastAccessTime\r\n      - api: System.IO.File::GetLastAccessTimeUtc\r\n      - api: System.IO.File::GetLastWriteTime\r\n      - api: System.IO.File::GetLastWriteTimeUtc\r\n      - property/read: System.IO.FileSystemInfo::Attributes\r\n      - api: stat\r\n      - api: fstat\r\n      - api: lstat\r\n      - api: fstatat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4201463
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4201470
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4201995
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202002
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4207409
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207410
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215743
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215810
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216631
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216787
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216815
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217179
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217187
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220053
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220127
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220590
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220593
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open registry key": {
        "meta": {
          "name": "create or open registry key",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Create Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Create Registry Key",
              "id": "C0036.004"
            },
            {
              "parts": [
                "Operating System",
                "Registry",
                "Open Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Open Registry Key",
              "id": "C0036.003"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10004706",
            "Practical Malware Analysis Lab 11-01.exe_:0x401000",
            "493167E85E45363D09495D0841C30648:0x404D60",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open registry key\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Create Registry Key [C0036.004]\r\n      - Operating System::Registry::Open Registry Key [C0036.003]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10004706\r\n      - Practical Malware Analysis Lab 11-01.exe_:0x401000\r\n      - 493167E85E45363D09495D0841C30648:0x404D60\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: advapi32.RegOpenKey\r\n      - api: advapi32.RegOpenKeyEx\r\n      - api: advapi32.RegCreateKey\r\n      - api: advapi32.RegCreateKeyEx\r\n      - api: advapi32.RegOpenCurrentUser\r\n      - api: advapi32.RegOpenKeyTransacted\r\n      - api: advapi32.RegOpenUserClassesRoot\r\n      - api: advapi32.RegCreateKeyTransacted\r\n      - api: ZwOpenKey\r\n      - api: ZwOpenKeyEx\r\n      - api: ZwCreateKey\r\n      - api: ZwOpenKeyTransacted\r\n      - api: ZwOpenKeyTransactedEx\r\n      - api: ZwCreateKeyTransacted\r\n      - api: NtOpenKey\r\n      - api: NtCreateKey\r\n      - api: SHRegOpenUSKey\r\n      - api: SHRegCreateUSKey\r\n      - api: RtlCreateRegistryKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::CreateSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202480
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202501
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202636
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203145
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203171
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203931
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203954
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204008
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204031
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204515
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204585
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4221109
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4221132
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set file attributes": {
        "meta": {
          "name": "set file attributes",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "File and Directory Permissions Modification"
              ],
              "tactic": "Defense Evasion",
              "technique": "File and Directory Permissions Modification",
              "subtechnique": "",
              "id": "T1222"
            }
          ],
          "mbc": [
            {
              "parts": [
                "File System",
                "Set File Attributes"
              ],
              "objective": "File System",
              "behavior": "Set File Attributes",
              "method": "",
              "id": "C0050"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x100015f0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set file attributes\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    att&ck:\r\n      - Defense Evasion::File and Directory Permissions Modification [T1222]\r\n    mbc:\r\n      - File System::Set File Attributes [C0050]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x100015f0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6\r\n  features:\r\n    - or:\r\n      - api: kernel32.SetFileAttributes\r\n      - api: ZwSetInformationFile\r\n      - api: NtSetInformationFile\r\n      - api: System.IO.File::SetAttributes\r\n      - api: System.IO.File::SetCreationTime\r\n      - api: System.IO.File::SetCreationTimeUtc\r\n      - api: System.IO.File::SetLastAccessTime\r\n      - api: System.IO.File::SetLastAccessTimeUtc\r\n      - api: System.IO.File::SetLastWriteTime\r\n      - api: System.IO.File::SetLastWriteTimeUtc\r\n      - property/write: System.IO.FileSystemInfo::Attributes\r\n      - api: utime\r\n      - api: utimes\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203641
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203669
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4212684
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212690
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4214189
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4214197
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215531
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215538
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216871
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216880
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "terminate thread": {
        "meta": {
          "name": "terminate thread",
          "namespace": "host-interaction/thread/terminate",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Terminate Thread"
              ],
              "objective": "Process",
              "behavior": "Terminate Thread",
              "method": "",
              "id": "C0039"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003286",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x407E90"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: terminate thread\r\n    namespace: host-interaction/thread/terminate\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Terminate Thread [C0039]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003286\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x407E90\r\n  features:\r\n    - or:\r\n      - api: kernel32.TerminateThread\r\n      - api: PsTerminateSystemThread\r\n      - api: System.Threading.Thread.Abort\r\n      - api: pthread_terminate\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4207917
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "TerminateThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207925
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsTerminateSystemThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Threading.Thread.Abort"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "pthread_terminate"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create thread": {
        "meta": {
          "name": "create thread",
          "namespace": "host-interaction/thread/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Thread"
              ],
              "objective": "Process",
              "behavior": "Create Thread",
              "method": "",
              "id": "C0038"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x10001DA0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create thread\r\n    namespace: host-interaction/thread/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Create Thread [C0038]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.CreateThread\r\n          - api: _beginthread\r\n          - api: _beginthreadex\r\n          - api: PsCreateSystemThread\r\n          - api: SHCreateThread\r\n          - api: SHCreateThreadWithHandle\r\n          - api: kernel32.CreateRemoteThread\r\n          - api: kernel32.CreateRemoteThreadEx\r\n          - api: RtlCreateUserThread\r\n          - api: ntdll.NtCreateThread\r\n          - api: ntdll.NtCreateThreadEx\r\n          - api: ntdll.ZwCreateThread\r\n          - api: ntdll.ZwCreateThreadEx\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - api: pthread_create\r\n      - and:\r\n        - api: System.Threading.Thread::Start\r\n        - optional:\r\n          - api: System.Threading.Thread::ctor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4208157
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "pthread_create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Threading.Thread::Start"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Thread::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateThread"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4208183
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthreadex"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsCreateSystemThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThreadWithHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlCreateUserThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delay execution": {
        "meta": {
          "name": "delay execution",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@ramen0x3f"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Dynamic Analysis Evasion",
                "Delayed Execution"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Dynamic Analysis Evasion",
              "method": "Delayed Execution",
              "id": "B0003.003"
            }
          ],
          "references": [
            "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x449770",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delay execution\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@ramen0x3f\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\r\n    references:\r\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x449770\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.Sleep\r\n          - api: kernel32.SleepEx\r\n          - api: kernel32.WaitForSingleObject\r\n          - api: kernel32.SignalObjectAndWait\r\n          - api: kernel32.WaitForSingleObjectEx\r\n          - api: kernel32.WaitForMultipleObjects\r\n          - api: kernel32.WaitForMultipleObjectsEx\r\n          - api: kernel32.RegisterWaitForSingleObject\r\n          - api: WaitOnAddress\r\n          - api: user32.MsgWaitForMultipleObjects\r\n          - api: user32.MsgWaitForMultipleObjectsEx\r\n          - api: NtDelayExecution\r\n          - api: KeWaitForSingleObject\r\n          - api: KeDelayExecutionThread\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - or:\r\n          - api: sleep\r\n          - api: usleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4208273
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4208287
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4210753
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4210761
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4221615
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4221620
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create process on Windows": {
        "meta": {
          "name": "create process on Windows",
          "namespace": "host-interaction/process/create",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Process"
              ],
              "objective": "Process",
              "behavior": "Create Process",
              "method": "",
              "id": "C0017"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x406DB0",
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create process on Windows\r\n    namespace: host-interaction/process/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Process [C0017]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x406DB0\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: kernel32.WinExec\r\n      - api: kernel32.CreateProcess\r\n      - api: shell32.ShellExecute\r\n      - api: shell32.ShellExecuteEx\r\n      - api: advapi32.CreateProcessAsUser\r\n      - api: advapi32.CreateProcessWithLogon\r\n      - api: advapi32.CreateProcessWithToken\r\n      - api: kernel32.CreateProcessInternal\r\n      - api: ntdll.NtCreateUserProcess\r\n      - api: ntdll.NtCreateProcess\r\n      - api: ntdll.NtCreateProcessEx\r\n      - api: ntdll.ZwCreateProcess\r\n      - api: ZwCreateProcessEx\r\n      - api: ntdll.ZwCreateUserProcess\r\n      - api: ntdll.RtlCreateUserProcess\r\n      - api: System.Diagnostics.Process::Start\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4210710
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WinExec"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4210739
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecute"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecuteEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessAsUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithLogon"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithToken"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessInternal"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Start"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain loop": {
        "meta": {
          "name": "contain loop",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain loop\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    examples:\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - characteristic: loop\r\n      - characteristic: tight loop\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4200115
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4200115
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4200321
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4200321
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4200611
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4200611
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4201092
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4201092
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4201192
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4201320
                    },
                    {
                      "type": "absolute",
                      "value": 4201893
                    },
                    {
                      "type": "absolute",
                      "value": 4201911
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202538
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202928
                    },
                    {
                      "type": "absolute",
                      "value": 4203040
                    },
                    {
                      "type": "absolute",
                      "value": 4202911
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203340
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203408
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203408
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203408
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204776
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204776
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205023
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4205228
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205228
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205496
                    },
                    {
                      "type": "absolute",
                      "value": 4205444
                    },
                    {
                      "type": "absolute",
                      "value": 4205372
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4207072
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207078
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4207120
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207361
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4208256
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4208256
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4208366
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4208366
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4209446
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4209453
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4209570
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4209570
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211236
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4211373
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211897
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212178
                    },
                    {
                      "type": "absolute",
                      "value": 4212075
                    },
                    {
                      "type": "absolute",
                      "value": 4212099
                    },
                    {
                      "type": "absolute",
                      "value": 4212111
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4212482
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212530
                    },
                    {
                      "type": "absolute",
                      "value": 4212509
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4212704
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4212756
                    },
                    {
                      "type": "absolute",
                      "value": 4212821
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4213004
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4213004
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4213120
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4213120
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4213968
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4214080
                    },
                    {
                      "type": "absolute",
                      "value": 4214268
                    },
                    {
                      "type": "absolute",
                      "value": 4214253
                    },
                    {
                      "type": "absolute",
                      "value": 4214095
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215478
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215478
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215713
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216224
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217032
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217048
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217213
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217213
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217879
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217879
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217948
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4218014
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4218014
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219000
                    },
                    {
                      "type": "absolute",
                      "value": 4219201
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219544
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219544
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219624
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219776
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219789
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220298
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220298
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220315
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220392
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220392
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220404
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220543
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220543
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220616
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220616
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220665
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220665
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4221536
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4221536
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4222015
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4222015
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4222992
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4222992
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read .ini file": {
        "meta": {
          "name": "read .ini file",
          "namespace": "host-interaction/file-system/read",
          "authors": [
            "@_re_fox",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Read File"
              ],
              "objective": "File System",
              "behavior": "Read File",
              "method": "",
              "id": "C0051"
            }
          ],
          "references": [],
          "examples": [
            "1d8fd13c890060464019c0f07b928b1a:0x401070",
            "E6234FB98F17201C232F4502015B47B3:0x701312FA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read .ini file\r\n    namespace: host-interaction/file-system/read\r\n    authors:\r\n      - \"@_re_fox\"\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Read File [C0051]\r\n    examples:\r\n      - 1d8fd13c890060464019c0f07b928b1a:0x401070\r\n      - E6234FB98F17201C232F4502015B47B3:0x701312FA\r\n  features:\r\n    - and:\r\n      - or:\r\n        - api: GetPrivateProfileInt\r\n        - api: GetPrivateProfileString\r\n        - api: GetPrivateProfileStruct\r\n        - api: GetPrivateProfileSection\r\n        - api: GetPrivateProfileSectionNames\r\n      - optional:\r\n        - string: /\\.ini/i\r\n        - api: GetFullPathName\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4201192
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/\\.ini/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFullPathName"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileInt"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4201608
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileString"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4201656
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileStruct"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileSection"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileSectionNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check if file exists": {
        "meta": {
          "name": "check if file exists",
          "namespace": "host-interaction/file-system/exists",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "31600AD0D1A7EA615690DF111AE36C73:0x401284"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check if file exists\r\n    namespace: host-interaction/file-system/exists\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401284\r\n  features:\r\n    - or:\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetFileAttributes\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 0xFFFFFFFF = INVALID_FILE_ATTRIBUTES\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetLastError\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 2 = ERROR_FILE_NOT_FOUND\r\n      - api: shlwapi.PathFileExists\r\n      - api: System.IO.File::Exists\r\n      - property/read: System.IO.FileSystemInfo::Exists\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4201192
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4202002
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4202008
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4202008
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4202008
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4201470
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4201476
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4201476
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4201476
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4201995
                    },
                    {
                      "type": "absolute",
                      "value": 4201463
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4207120
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4207410
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4207418
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4207418
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4207418
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207409
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4215810
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4215816
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4215816
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4215816
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215743
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4216631
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4216637
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4216637
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4216637
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4216815
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4216821
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4216821
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4216821
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216624
                    },
                    {
                      "type": "absolute",
                      "value": 4216787
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217032
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4217187
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4217193
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4217193
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4217193
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217179
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220053
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220127
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4220133
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4220133
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220133
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220053
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220590
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220593
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4220599
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4220599
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220599
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220590
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "shutdown system": {
        "meta": {
          "name": "shutdown system",
          "namespace": "host-interaction/os",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Impact",
                "System Shutdown/Reboot"
              ],
              "tactic": "Impact",
              "technique": "System Shutdown/Reboot",
              "subtechnique": "",
              "id": "T1529"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "39C05B15E9834AC93F206BC114D0A00C357C888DB567BA8F5345DA0529CBED41:0x10008D60"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: shutdown system\r\n    namespace: host-interaction/os\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Impact::System Shutdown/Reboot [T1529]\r\n    examples:\r\n      - 39C05B15E9834AC93F206BC114D0A00C357C888DB567BA8F5345DA0529CBED41:0x10008D60\r\n  features:\r\n    - or:\r\n      - api: user32.ExitWindowsEx\r\n      - api: user32.ExitWindows\r\n      - api: advapi32.InitiateSystemShutdownEx\r\n      - api: advapi32.InitiateSystemShutdown\r\n      - api: advapi32.InitiateShutdown\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202384
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindowsEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202451
                    },
                    {
                      "type": "absolute",
                      "value": 4202349
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindows"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdownEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "persist via Run registry key": {
        "meta": {
          "name": "persist via Run registry key",
          "namespace": "persistence/registry/run",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Persistence",
                "Boot or Logon Autostart Execution",
                "Registry Run Keys / Startup Folder"
              ],
              "tactic": "Persistence",
              "technique": "Boot or Logon Autostart Execution",
              "subtechnique": "Registry Run Keys / Startup Folder",
              "id": "T1547.001"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Persistence",
                "Registry Run Keys / Startup Folder"
              ],
              "objective": "Persistence",
              "behavior": "Registry Run Keys / Startup Folder",
              "method": "",
              "id": "F0012"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 06-03.exe_:0x401130",
            "b87e9dd18a5533a09d3e48a7a1efbcf6:0x1400070E0",
            "9ff8e68343cc29c1036650fc153e69f7:0x470624"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: persist via Run registry key\r\n    namespace: persistence/registry/run\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Persistence::Boot or Logon Autostart Execution::Registry Run Keys / Startup Folder [T1547.001]\r\n    mbc:\r\n      - Persistence::Registry Run Keys / Startup Folder [F0012]\r\n    examples:\r\n      - Practical Malware Analysis Lab 06-03.exe_:0x401130\r\n      - b87e9dd18a5533a09d3e48a7a1efbcf6:0x1400070E0\r\n      - 9ff8e68343cc29c1036650fc153e69f7:0x470624\r\n  features:\r\n    - and:\r\n      - or:\r\n        - match: set registry value\r\n        - number: 0x80000001 = HKEY_CURRENT_USER\r\n        - number: 0x80000002 = HKEY_LOCAL_MACHINE\r\n      - or:\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i\r\n        - string: /Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i\r\n        - string: /System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202465
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202496
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202491
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 4202491
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4202636
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4202538
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203069
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202538
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202631
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202626
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 4202626
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4202636
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4202538
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203069
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202538
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202631
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202626
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 4202626
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203171
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203145
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203374
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203111
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203166
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203161
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 4203161
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203171
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203145
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203374
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203111
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203166
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203161
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 4203161
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete registry value": {
        "meta": {
          "name": "delete registry value",
          "namespace": "host-interaction/registry/delete",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Modify Registry"
              ],
              "tactic": "Defense Evasion",
              "technique": "Modify Registry",
              "subtechnique": "",
              "id": "T1112"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Delete Registry Value"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Delete Registry Value",
              "id": "C0036.007"
            }
          ],
          "references": [],
          "examples": [
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4041A0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete registry value\r\n    namespace: host-interaction/registry/delete\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Defense Evasion::Modify Registry [T1112]\r\n    mbc:\r\n      - Operating System::Registry::Delete Registry Value [C0036.007]\r\n    examples:\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4041A0\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegDeleteValue\r\n        - api: advapi32.RegDeleteKeyValue\r\n        - api: ZwDeleteValueKey\r\n        - api: NtDeleteValueKey\r\n        - api: RtlDeleteRegistryValue\r\n        - api: SHDeleteValue\r\n        - api: SHRegDeleteUSValue\r\n        - api: Microsoft.Win32.RegistryKey::DeleteValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202465
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4202501
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202480
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegDeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202519
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegDeleteKeyValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwDeleteValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtDeleteValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlDeleteRegistryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHDeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegDeleteUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::DeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set registry value": {
        "meta": {
          "name": "set registry value",
          "namespace": "host-interaction/registry/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Set Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Set Registry Key",
              "id": "C0036.001"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x13147AF0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40415E",
            "98c37c3c23bbfb362dac7754c6ba48e75cf24d73bc963a4cdfca557b9e016909:0x40294D"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set registry value\r\n    namespace: host-interaction/registry/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Set Registry Key [C0036.001]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13147AF0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40415E\r\n      - 98c37c3c23bbfb362dac7754c6ba48e75cf24d73bc963a4cdfca557b9e016909:0x40294D\r\n  features:\r\n    - or:\r\n      - and:\r\n        - optional:\r\n          - match: create or open registry key\r\n        - or:\r\n          - api: advapi32.RegSetValue\r\n          - api: advapi32.RegSetValueEx\r\n          - api: advapi32.RegSetKeyValue\r\n          - api: ZwSetValueKey\r\n          - api: NtSetValueKey\r\n          - api: RtlWriteRegistryValue\r\n          - api: SHSetValue\r\n          - api: SHRegSetPath\r\n          - api: SHRegSetValue\r\n          - api: SHRegSetUSValue\r\n          - api: SHRegWriteUSValue\r\n          - api: Microsoft.Win32.RegistryKey::SetValue\r\n          - api: Microsoft.Win32.Registry::SetValue\r\n      - and:\r\n        - match: host-interaction/process/create\r\n        - string: \"/add/i\"\r\n        - or:\r\n          - string: \"/reg(|.exe)/i\"\r\n          - string: \"/hklm/i\"\r\n          - string: \"/HKEY_LOCAL_MACHINE/i\"\r\n          - string: \"/hkcu/i\"\r\n          - string: \"/HKEY_CURRENT_USER/i\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "host-interaction/process/create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/add/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/reg(|.exe)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hklm/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_LOCAL_MACHINE/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hkcu/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_CURRENT_USER/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "create or open registry key"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4202636
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenCurrentUser"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenUserClassesRoot"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransactedEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegOpenUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegCreateUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RtlCreateRegistryKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4202538
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValueEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203069
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetKeyValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlWriteRegistryValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetPath"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegWriteUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.RegistryKey::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.Registry::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "host-interaction/process/create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/add/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/reg(|.exe)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hklm/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_LOCAL_MACHINE/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hkcu/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_CURRENT_USER/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "create or open registry key"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4203171
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenCurrentUser"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenUserClassesRoot"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransactedEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegOpenUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegCreateUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RtlCreateRegistryKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203145
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValueEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203374
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetKeyValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlWriteRegistryValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetPath"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegWriteUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.RegistryKey::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.Registry::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry value": {
        "meta": {
          "name": "query or enumerate registry value",
          "namespace": "host-interaction/registry",
          "authors": [
            "william.ballenthin@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Value"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Value",
              "id": "C0036.006"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A",
            "Practical Malware Analysis Lab 03-02.dll_:0x100047AD"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry value\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Value [C0036.006]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x100047AD\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegGetValue\r\n        - api: advapi32.RegEnumValue\r\n        - api: advapi32.RegQueryValue\r\n        - api: advapi32.RegQueryValueEx\r\n        - api: advapi32.RegQueryMultipleValues\r\n        - api: ZwQueryValueKey\r\n        - api: ZwEnumerateValueKey\r\n        - api: NtQueryValueKey\r\n        - api: NtEnumerateValueKey\r\n        - api: RtlQueryRegistryValues\r\n        - api: SHGetValue\r\n        - api: SHEnumValue\r\n        - api: SHRegGetInt\r\n        - api: SHRegGetPath\r\n        - api: SHRegGetValue\r\n        - api: SHQueryValueEx\r\n        - api: SHRegGetUSValue\r\n        - api: SHOpenRegStream\r\n        - api: SHRegEnumUSValue\r\n        - api: SHOpenRegStream2\r\n        - api: SHRegQueryUSValue\r\n        - api: SHRegGetBoolUSValue\r\n        - api: SHRegGetValueFromHKCUHKLM\r\n        - api: SHRegGetBoolValueFromHKCUHKLM\r\n        - api: Microsoft.Win32.RegistryKey::GetValue\r\n        - api: Microsoft.Win32.RegistryKey::GetValueKind\r\n        - api: Microsoft.Win32.RegistryKey::GetValueNames\r\n        - api: Microsoft.Win32.Registry::GetValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4202636
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202538
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4202697
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4203171
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203145
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203224
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203885
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4204031
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4203954
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204008
                        },
                        {
                          "type": "absolute",
                          "value": 4203931
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203979
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204403
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4204585
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204515
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204626
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220959
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4221132
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4221109
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4221172
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get common file path": {
        "meta": {
          "name": "get common file path",
          "namespace": "host-interaction/file-system",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003415",
            "972B219F18379907A045431303F4DA7D:0x404887"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get common file path\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003415\r\n      - 972B219F18379907A045431303F4DA7D:0x404887\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetTempPath\r\n      - api: kernel32.GetTempFileName\r\n      - api: kernel32.GetSystemDirectory\r\n      - api: kernel32.GetWindowsDirectory\r\n      - api: kernel32.GetSystemWow64Directory\r\n      - api: GetAllUsersProfileDirectory\r\n      - api: GetAppContainerFolderPath\r\n      - api: GetCurrentDirectory\r\n      - api: GetDefaultUserProfileDirectory\r\n      - api: GetProfilesDirectory\r\n      - api: GetUserProfileDirectory\r\n      - api: SHGetFolderPathAndSubDir\r\n      - api: shell32.SHGetFolderPath\r\n      - api: shell32.SHGetFolderLocation\r\n      - api: shell32.SHGetKnownFolderPath\r\n      - api: shell32.SHGetSpecialFolderPath\r\n      - api: shell32.SHGetSpecialFolderLocation\r\n      - api: System.IO.Directory::GetCurrentDirectory\r\n      - api: System.Environment::GetFolderPath\r\n      - property/read: System.Environment::SystemDirectory\r\n      - property/read: System.Environment::CurrentDirectory\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4202538
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4202843
                    },
                    {
                      "type": "absolute",
                      "value": 4202755
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203111
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203269
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4203744
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203782
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204080
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204116
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4204403
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204729
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204714
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4206365
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4206483
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4211236
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4211359
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215839
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216505
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216952
                    },
                    {
                      "type": "absolute",
                      "value": 4216781
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217213
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217256
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219422
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4219455
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete directory": {
        "meta": {
          "name": "delete directory",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete Directory"
              ],
              "objective": "File System",
              "behavior": "Delete Directory",
              "method": "",
              "id": "C0048"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 05-01.dll_:0x10009236",
            "AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete directory\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Delete Directory [C0048]\r\n    examples:\r\n      - Practical Malware Analysis Lab 05-01.dll_:0x10009236\r\n      - AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0\r\n  features:\r\n    - or:\r\n      - api: RemoveDirectory\r\n      - api: RemoveDirectoryTransacted\r\n      - api: rmdir\r\n      - api: _rmdir\r\n      - api: _wrmdir\r\n      - api: System.IO.DirectoryInfo::Delete\r\n      - api: System.IO.Directory::Delete\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203408
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203717
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215803
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215911
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216175
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete file": {
        "meta": {
          "name": "delete file",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete File"
              ],
              "objective": "File System",
              "behavior": "Delete File",
              "method": "",
              "id": "C0047"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x100015F0",
            "31600AD0D1A7EA615690DF111AE36C73:0x401A15",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete file\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Delete File [C0047]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x100015F0\r\n      # MoveFileEx\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401A15\r\n      # NtDeleteFile\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04\r\n  features:\r\n    - or:\r\n      - api: kernel32.DeleteFile\r\n      - api: DeleteFileTransacted\r\n      - api: NtDeleteFile\r\n      - api: ZwDeleteFile\r\n      - api: remove\r\n      - api: _wremove\r\n      - api: System.IO.File::Delete\r\n      - api: System.IO.FileSystemInfo::Delete\r\n      # static\r\n      - basic block:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - basic block:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n      # dynamic\r\n      - call:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - call:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203408
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203683
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215478
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215546
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215851
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate files on Windows": {
        "meta": {
          "name": "enumerate files on Windows",
          "namespace": "host-interaction/file-system/files/list",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [
            "https://github.com/hfiref0x/TDL/blob/cc4b46ae1c939b14a22a734a727b163f873a41b5/Source/Furutaka/sup.c#L315"
          ],
          "examples": [
            "Practical Malware Analysis Lab 01-01.exe_:0x4011E0",
            "Practical Malware Analysis Lab 20-02.exe_:0x401000",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x14000203C"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate files on Windows\r\n    namespace: host-interaction/file-system/files/list\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    references:\r\n      - https://github.com/hfiref0x/TDL/blob/cc4b46ae1c939b14a22a734a727b163f873a41b5/Source/Furutaka/sup.c#L315\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-01.exe_:0x4011E0\r\n      - Practical Malware Analysis Lab 20-02.exe_:0x401000\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x14000203C\r\n  features:\r\n    - or:\r\n      - and:\r\n        - or:\r\n          - api: kernel32.FindFirstFile\r\n          - api: kernel32.FindFirstFileEx\r\n          - api: kernel32.FindFirstFileTransacted\r\n          - api: kernel32.FindFirstFileName\r\n          - api: kernel32.FindFirstFileNameTransacted\r\n        - or:\r\n          - api: kernel32.FindNextFile\r\n          - api: kernel32.FindNextFileName\r\n        - optional:\r\n          - api: kernel32.FindClose\r\n          - match: contain loop\r\n      - and:\r\n        - or:\r\n          - basic block:\r\n            - and:\r\n              - number: 1 = DIRECTORY_QUERY\r\n              - api: ntdll.NtOpenDirectoryObject\r\n          - call:\r\n            - and:\r\n              - number: 1 = DIRECTORY_QUERY\r\n              - api: ntdll.NtOpenDirectoryObject\r\n        - api: ntdll.NtQueryDirectoryObject\r\n        - optional:\r\n          - api: RtlAllocateHeap\r\n          - match: contain loop\r\n          - characteristic: indirect call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203408
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "enumerate files on Windows/bfb3d9c59bd2482cb21937b6c58ce90c"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "enumerate files on Windows/e2bc3d8bf8ff40ca879bbbc9844866f8"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryDirectoryObject"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlAllocateHeap"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "contain loop"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4203408
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "tight loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "recursive call"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4203408
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203408
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "indirect call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203510
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileTransacted"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileName"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileNameTransacted"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindNextFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203695
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindNextFileName"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindClose"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203710
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "contain loop"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4203408
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "tight loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "recursive call"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4203408
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4203408
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate files recursively": {
        "meta": {
          "name": "enumerate files recursively",
          "namespace": "host-interaction/file-system/files/list",
          "authors": [
            "@_re_fox",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "5f66b82558ca92e54e77f216ef4c066c:0x40640E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate files recursively\r\n    namespace: host-interaction/file-system/files/list\r\n    authors:\r\n      - \"@_re_fox\"\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - 5f66b82558ca92e54e77f216ef4c066c:0x40640E\r\n  features:\r\n    - and:\r\n      - or:\r\n        - match: enumerate files on Windows\r\n        - match: enumerate files on Linux\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203408
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4203408
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "enumerate files on Windows"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "enumerate files on Windows/bfb3d9c59bd2482cb21937b6c58ce90c"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "enumerate files on Windows/e2bc3d8bf8ff40ca879bbbc9844866f8"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtQueryDirectoryObject"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlAllocateHeap"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "contain loop"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203408
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "tight loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "recursive call"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203408
                                                }
                                              ],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203408
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "characteristic",
                                          "characteristic": "indirect call"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203510
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileTransacted"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileName"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileNameTransacted"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindNextFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203695
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindNextFileName"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindClose"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203710
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "contain loop"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203408
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "tight loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "recursive call"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 4203408
                                                }
                                              ],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4203408
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4203408
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "enumerate files on Linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry key": {
        "meta": {
          "name": "query or enumerate registry key",
          "namespace": "host-interaction/registry",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Key",
              "id": "C0036.005"
            }
          ],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x404930",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry key\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Key [C0036.005]\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x404930\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegEnumKey\r\n        - api: advapi32.RegEnumKeyEx\r\n        - api: advapi32.RegQueryInfoKeyA\r\n        - api: ZwQueryKey\r\n        - api: ZwEnumerateKey\r\n        - api: NtQueryKey\r\n        - api: NtEnumerateKey\r\n        - api: RtlCheckRegistryKey\r\n        - api: SHEnumKeyEx\r\n        - api: SHQueryInfoKey\r\n        - api: SHRegEnumUSKey\r\n        - api: SHRegQueryInfoUSKey\r\n        - api: Microsoft.Win32.RegistryKey::GetSubKeyNames\r\n        - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4203885
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4204031
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4203954
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204008
                        },
                        {
                          "type": "absolute",
                          "value": 4203931
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryInfoKeyA"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204058
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlCheckRegistryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryInfoKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryInfoUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetSubKeyNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query environment variable": {
        "meta": {
          "name": "query environment variable",
          "namespace": "host-interaction/environment-variable",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@_re_fox"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 14-02.exe_:0x401880",
            "0761142efbda6c4b1e801223de723578:0x65483490"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query environment variable\r\n    namespace: host-interaction/environment-variable\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@_re_fox\"\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - Practical Malware Analysis Lab 14-02.exe_:0x401880\r\n      - 0761142efbda6c4b1e801223de723578:0x65483490\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetEnvironmentVariable\r\n      - api: kernel32.GetEnvironmentStrings\r\n      - api: kernel32.ExpandEnvironmentStrings\r\n      - api: msvcr90.getenv\r\n      - api: msvcrt.getenv\r\n      - api: System.Environment::GetEnvironmentVariable\r\n      - api: System.Environment::GetEnvironmentVariables\r\n      - api: System.Environment::ExpandEnvironmentVariables\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4204403
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExpandEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4204656
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "getenv"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::ExpandEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get file version info": {
        "meta": {
          "name": "get file version info",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "mimikatz.exe_:0x45E308"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get file version info\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - mimikatz.exe_:0x45E308\r\n  features:\r\n    - and:\r\n      - or:\r\n        - api: version.GetFileVersionInfo\r\n        - api: version.GetFileVersionInfoEx\r\n        - api: System.Diagnostics.FileVersionInfo::GetVersionInfo\r\n      - optional:\r\n        - description: retrieve specified version information from the version-information resource\r\n        - api: version.VerQueryValue\r\n        - or:\r\n          - api: version.GetFileVersionInfoSize\r\n          - api: version.GetFileVersionInfoSizeEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4204776
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFileVersionInfo"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204932
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFileVersionInfoEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Diagnostics.FileVersionInfo::GetVersionInfo"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional",
                      "description": "retrieve specified version information from the version-information resource"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "VerQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4204962
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileVersionInfoSize"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4204868
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileVersionInfoSizeEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get OS version": {
        "meta": {
          "name": "get OS version",
          "authors": [
            "@mr-tz"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x401000",
            "5f66b82558ca92e54e77f216ef4c066c:0x44580A"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get OS version\r\n    authors:\r\n      - \"@mr-tz\"\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x401000\r\n      - 5f66b82558ca92e54e77f216ef4c066c:0x44580A\r\n  features:\r\n    - or:\r\n      - api: RtlGetVersion\r\n      - api: ntoskrnl.PsGetVersion\r\n      - api: GetVersion\r\n      - api: GetVersionEx\r\n      - api: VerifyVersionInfo\r\n      - api: VerSetConditionMask\r\n      - api: RtlGetNtVersionNumbers\r\n      - api: GetProductInfo\r\n      - and:\r\n        - match: PEB access\r\n        - or:\r\n          - and:\r\n            - arch: i386\r\n            - or:\r\n              - offset: 0xA4 = PEB->OSMajorVersion\r\n              - offset: 0xA8 = PEB->OSMinorVersion\r\n              - offset: 0xAC = PEB->OSBuildNumber\r\n          - and:\r\n            - arch: amd64\r\n            - or:\r\n              - offset: 0x118 = PEB->OSMajorVersion\r\n              - offset: 0x11C = PEB->OSMinorVersion\r\n              - offset: 0x120 = PEB->OSBuildNumber\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4205563
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205571
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4208366
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4208419
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220959
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4221038
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check OS version": {
        "meta": {
          "name": "check OS version",
          "namespace": "host-interaction/os/version",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "johnk3r"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x401000"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check OS version\r\n    namespace: host-interaction/os/version\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - johnk3r\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic features\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x401000\r\n  features:\r\n    - and:\r\n      - match: get OS version\r\n      - or:\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 5 = Windows 2000\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - or:\r\n                - number: 0\r\n                - number: 1 = Windows XP\r\n                - number: 2 = Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 6 = Windows Vista / Windows Server 2008\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - or:\r\n                - number: 0\r\n                - number: 1 = Windows Server 2008 R2 / Windows 7\r\n                - number: 2 = Windows Server 2012 / Windows 8\r\n                - number: 3 = Windows Server 2012 R2 / Windows 8.1\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 10 = Windows Server 2016 / Windows Server 2019 / Windows 10\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - number: 0\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4205563
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4205571
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4205563
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/95f5a9f380c141e489e3b1a46da29068"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/22b879dcdd4a431986a1d151fba6f3da"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4205583
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 6,
                                      "description": "Windows Vista / Windows Server 2008"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4205583
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4205583
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/81ad33bb1e4f4643b627f425f44def8c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/d08bc54315f94dbcba089f7211f55dd5"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/c134927893974ac494c043d8965a2196"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4208366
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4208419
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4208366
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4208540
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 5,
                                      "description": "Windows 2000"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4208540
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4208540
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208897
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208897
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209158
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4209158
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208923
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208923
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209084
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4209084
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208875
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208875
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4208897
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209158
                                },
                                {
                                  "type": "absolute",
                                  "value": 4208923
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209084
                                },
                                {
                                  "type": "absolute",
                                  "value": 4208875
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4209148
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 6,
                                      "description": "Windows Vista / Windows Server 2008"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4209148
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4209148
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208897
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208897
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209158
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4209158
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208923
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208923
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209084
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4209084
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208494
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208494
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208875
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4208875
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4208897
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209158
                                },
                                {
                                  "type": "absolute",
                                  "value": 4208923
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209084
                                },
                                {
                                  "type": "absolute",
                                  "value": 4208494
                                },
                                {
                                  "type": "absolute",
                                  "value": 4208875
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/d08bc54315f94dbcba089f7211f55dd5"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208923
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 0
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4208923
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209084
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 0
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4209084
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4208923
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209084
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220959
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4221038
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4220959
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/95f5a9f380c141e489e3b1a46da29068"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/22b879dcdd4a431986a1d151fba6f3da"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/75cf603f270d4a839342e4a0d7ef76b2"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/81ad33bb1e4f4643b627f425f44def8c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4221080
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 10,
                                      "description": "Windows Server 2016 / Windows Server 2019 / Windows 10"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4221080
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4221080
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/c134927893974ac494c043d8965a2196"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "extract resource via kernel32 functions": {
        "meta": {
          "name": "extract resource via kernel32 functions",
          "namespace": "executable/resource",
          "authors": [
            "william.ballenthin@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "BF88E1BD4A3BDE10B419A622278F1FF7:0x401000",
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: extract resource via kernel32 functions\r\n    namespace: executable/resource\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    examples:\r\n      - BF88E1BD4A3BDE10B419A622278F1FF7:0x401000\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\r\n  features:\r\n    - or:\r\n      - and:\r\n        - or:\r\n          - api: kernel32.LoadResource\r\n          - api: kernel32.LockResource\r\n          - api: LdrAccessResource\r\n        - optional:\r\n          - api: kernel32.GetModuleHandle\r\n          # may occur in parent function, see 0664B09A86EC2DF7DFE01A93E184A1FA23DF66EA82CAB39000944E418EC1F7B2\r\n          - or:\r\n            - api: kernel32.FindResource\r\n            - api: kernel32.FindResourceEx\r\n            - api: LdrFindResource_U\r\n            - api: LdrFindResourceEx_U\r\n          - api: kernel32.SizeofResource\r\n          - api: kernel32.FreeResource\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4205738
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4206182
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4206170
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4212367
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4212428
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4212435
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4212384
                                },
                                {
                                  "type": "absolute",
                                  "value": 4212419
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4212393
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4212463
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4214752
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4214790
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4214797
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4214782
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4215057
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219544
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219597
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219604
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4219717
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219675
                            },
                            {
                              "type": "absolute",
                              "value": 4219735
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4220183
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220216
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4220202
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4220256
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check mutex on Windows": {
        "meta": {
          "name": "check mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Check Mutex"
              ],
              "objective": "Process",
              "behavior": "Check Mutex",
              "method": "",
              "id": "C0043"
            }
          ],
          "references": [],
          "examples": [
            "1d8fd13c890060464019c0f07b928b1a:0x402eb0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Check Mutex [C0043]\r\n    examples:\r\n      - 1d8fd13c890060464019c0f07b928b1a:0x402eb0\r\n  features:\r\n    - or:\r\n      - api: ntdll.NtQueryMutant\r\n      - and:\r\n        - match: create or open mutex on Windows\r\n        - or:\r\n          - api: WaitForSingleObject\r\n          - basic block:\r\n            - and:\r\n              - api: GetLastError\r\n              - or:\r\n                - number: 2 = ERROR_FILE_NOT_FOUND\r\n                - number: 0xB7 = ERROR_ALREADY_EXISTS\r\n                - number: 5 = ERROR_ACCESS_DENIED\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4205738
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open mutex on Windows"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "OpenMutex"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutex"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4205998
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutexEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "format",
                                      "format": "dotnet"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::ctor"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::OpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::TryOpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4205998
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "GetLastError"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4206013
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 2,
                                          "description": "ERROR_FILE_NOT_FOUND"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 183,
                                          "description": "ERROR_ALREADY_EXISTS"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4206019
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 5,
                                          "description": "ERROR_ACCESS_DENIED"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4206013
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set current directory": {
        "meta": {
          "name": "set current directory",
          "namespace": "host-interaction/file-system",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set current directory\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n  features:\r\n    - or:\r\n      - api: System.IO.Directory::SetCurrentDirectory\r\n      - api: kernel32.SetCurrentDirectory\r\n      - api: chdir\r\n      - api: fchdir\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4206365
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4206620
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215478
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215651
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217213
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217852
                    },
                    {
                      "type": "absolute",
                      "value": 4217532
                    },
                    {
                      "type": "absolute",
                      "value": 4217263
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create directory": {
        "meta": {
          "name": "create directory",
          "namespace": "host-interaction/file-system/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Create Directory"
              ],
              "objective": "File System",
              "behavior": "Create Directory",
              "method": "",
              "id": "C0046"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 17-02.dll_:0x10008f62",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create directory\r\n    namespace: host-interaction/file-system/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Create Directory [C0046]\r\n    examples:\r\n      - Practical Malware Analysis Lab 17-02.dll_:0x10008f62\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: kernel32.CreateDirectory\r\n      - api: kernel32.CreateDirectoryEx\r\n      - api: kernel32.CreateDirectoryTransacted\r\n      - api: NtCreateDirectoryObject\r\n      - api: ZwCreateDirectoryObject\r\n      - api: SHCreateDirectory\r\n      - api: SHCreateDirectoryEx\r\n      - api: mkdir\r\n      - api: _mkdir\r\n      - api: _wmkdir\r\n      - api: System.IO.Directory::CreateDirectory\r\n      - api: System.IO.DirectoryInfo::Create\r\n      - api: System.IO.DirectoryInfo::CreateSubdirectory\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4207120
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4207452
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4213004
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4213081
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4215890
                    },
                    {
                      "type": "absolute",
                      "value": 4215860
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4215911
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216125
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4216224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216834
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "resolve function by parsing PE exports": {
        "meta": {
          "name": "resolve function by parsing PE exports",
          "namespace": "load-code/pe",
          "authors": [
            "sara-rn"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "73CE04892E5F39EC82B00C02FC04C70F:0x406BA1"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: resolve function by parsing PE exports\r\n    namespace: load-code/pe\r\n    authors:\r\n      - sara-rn\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, offset, mnemonic features\r\n    examples:\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x406BA1\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - characteristic: loop\r\n        - mnemonic: movzx\r\n      - and:\r\n        - offset: 0x3C = IMAGE_DOS_HEADER.PE.e_lfanew\r\n        - or:\r\n          - and:\r\n            - arch: i386\r\n            - offset: 0x78 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\r\n          - and:\r\n            - arch: amd64\r\n            - offset: 0x88 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\r\n        - 3 or more:\r\n          - offset: 0x14 = IMAGE_EXPORT_DIRECTORY.NumberOfFunctions\r\n          - offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals\r\n          - offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames\r\n          - offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames\r\n          - offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions\r\n      - optional:\r\n        - or:\r\n          - api: LoadLibrary\r\n          - api: strcmp\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4209570
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "loop"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4209570
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "movzx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4210273
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadLibrary"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "strcmp"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.PE.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4210268
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "offset",
                                  "offset": 120,
                                  "description": "offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4209769
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209794
                                },
                                {
                                  "type": "absolute",
                                  "value": 4209774
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "offset",
                                  "offset": 136,
                                  "description": "offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "some",
                          "count": 3
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 20,
                              "description": "IMAGE_EXPORT_DIRECTORY.NumberOfFunctions"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4210224
                            },
                            {
                              "type": "absolute",
                              "value": 4209667
                            },
                            {
                              "type": "absolute",
                              "value": 4210083
                            },
                            {
                              "type": "absolute",
                              "value": 4210108
                            },
                            {
                              "type": "absolute",
                              "value": 4210078
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 36,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4210487
                            },
                            {
                              "type": "absolute",
                              "value": 4210141
                            },
                            {
                              "type": "absolute",
                              "value": 4209615
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 32,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfNames"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4210483
                            },
                            {
                              "type": "absolute",
                              "value": 4209611
                            },
                            {
                              "type": "absolute",
                              "value": 4209901
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 24,
                              "description": "IMAGE_EXPORT_DIRECTORY.NumberOfNames"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4209760
                            },
                            {
                              "type": "absolute",
                              "value": 4209746
                            },
                            {
                              "type": "absolute",
                              "value": 4209784
                            },
                            {
                              "type": "absolute",
                              "value": 4210406
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 28,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfFunctions"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4209712
                            },
                            {
                              "type": "absolute",
                              "value": 4210437
                            },
                            {
                              "type": "absolute",
                              "value": 4210470
                            },
                            {
                              "type": "absolute",
                              "value": 4209663
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read file on Windows": {
        "meta": {
          "name": "read file on Windows",
          "namespace": "host-interaction/file-system/read",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Read File"
              ],
              "objective": "File System",
              "behavior": "Read File",
              "method": "",
              "id": "C0051"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read file on Windows\r\n    namespace: host-interaction/file-system/read\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Read File [C0051]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - and:\r\n            - number: 0x80000000 = GENERIC_READ\r\n            - match: create or open file\r\n        - or:\r\n          - api: kernel32.ReadFile\r\n          - api: ReadFileEx\r\n          - api: NtReadFile\r\n          - api: ZwReadFile\r\n          - api: LZRead\r\n          - api: _read\r\n          - api: fread\r\n      - api: System.IO.File::ReadAllBytes\r\n      - api: System.IO.File::ReadAllBytesAsync\r\n      - api: System.IO.File::ReadAllLines\r\n      - api: System.IO.File::ReadAllLinesAsync\r\n      - api: System.IO.File::ReadAllText\r\n      - api: System.IO.File::ReadAllTextAsync\r\n      - api: System.IO.File::ReadLines\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4213328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2147483648,
                                  "description": "GENERIC_READ"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "create or open file"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4213425
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LZRead"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_read"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "write file on Windows": {
        "meta": {
          "name": "write file on Windows",
          "namespace": "host-interaction/file-system/write",
          "authors": [
            "william.ballenthin@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Writes File"
              ],
              "objective": "File System",
              "behavior": "Writes File",
              "method": "",
              "id": "C0052"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: write file on Windows\r\n    namespace: host-interaction/file-system/write\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Writes File [C0052]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - basic block:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n          - call:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n        - or:\r\n          - api: kernel32.WriteFile\r\n          - api: kernel32.WriteFileEx\r\n          - api: NtWriteFile\r\n          - api: ZwWriteFile\r\n          - api: _fwrite\r\n          - api: fwrite\r\n      - api: System.IO.File::WriteAllBytes\r\n      - api: System.IO.File::WriteAllBytesAsync\r\n      - api: System.IO.File::WriteAllLines\r\n      - api: System.IO.File::WriteAllLinesAsync\r\n      - api: System.IO.File::WriteAllText\r\n      - api: System.IO.File::WriteAllTextAsync\r\n      - api: System.IO.File::AppendAllLines\r\n      - api: System.IO.File::AppendAllLinesAsync\r\n      - api: System.IO.File::AppendAllText\r\n      - api: System.IO.File::AppendAllTextAsync\r\n      - api: System.IO.File::AppendText\r\n      - api: System.IO.FileInfo::AppendText\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4213456
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/8c961232a5c44a7fa0a6a7421e1864e6"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/38a6be563e9a45669b4c21957bc154d9"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4213509
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4219840
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 1073741824,
                                      "description": "GENERIC_WRITE"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4219943
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2,
                                      "description": "FILE_WRITE_DATA"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4219939
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "create or open file"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4219949
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen64"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fdopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "freopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "open"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "openat"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 4219949
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219840
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/38a6be563e9a45669b4c21957bc154d9"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219995
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get system information on Windows": {
        "meta": {
          "name": "get system information on Windows",
          "namespace": "host-interaction/os/info",
          "authors": [
            "moritz.raabe@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get system information on Windows\r\n    namespace: host-interaction/os/info\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - joakim@intezer.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    examples:\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetSystemInfo\r\n        - api: kernel32.GetNativeSystemInfo\r\n        - api: NtQuerySystemInformation\r\n        - api: NtQuerySystemInformationEx\r\n        - api: ntdll.RtlGetNativeSystemInformation\r\n        - api: ZwQuerySystemInformation\r\n        - api: ZwQuerySystemInformationEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4215911
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4216009
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetNativeSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlGetNativeSystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get disk information": {
        "meta": {
          "name": "get disk information",
          "namespace": "host-interaction/hardware/storage",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4052A0",
            "972B219F18379907A045431303F4DA7D:0x41064E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get disk information\r\n    namespace: host-interaction/hardware/storage\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4052A0\r\n      - 972B219F18379907A045431303F4DA7D:0x41064E\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetDriveType\r\n      - api: kernel32.GetLogicalDrives\r\n      - api: kernel32.GetVolumeInformation\r\n      - api: kernel32.GetVolumeNameForVolumeMountPoint\r\n      - api: kernel32.GetVolumePathNamesForVolumeName\r\n      - api: kernel32.GetLogicalDriveStrings\r\n      - api: kernel32.QueryDosDevice\r\n      - property/read: System.IO.DriveInfo::VolumeLabel\r\n      - property/read: System.IO.DriveInfo::DriveType\r\n      - property/read: System.IO.DriveInfo::DriveFormat\r\n      - property/read: System.IO.DriveInfo::Name\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4216224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDriveType"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4216606
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDrives"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeInformation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeNameForVolumeMountPoint"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumePathNamesForVolumeName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDriveStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "QueryDosDevice"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::VolumeLabel"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveFormat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::Name"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4217213
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDrives"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeInformation"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217444
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeNameForVolumeMountPoint"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumePathNamesForVolumeName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDriveStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "QueryDosDevice"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::VolumeLabel"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveFormat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::Name"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get disk size": {
        "meta": {
          "name": "get disk size",
          "namespace": "host-interaction/hardware/storage",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x4343D0",
            "al-khaser_x86.exe_:0x434010"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get disk size\r\n    namespace: host-interaction/hardware/storage\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347\r\n    examples:\r\n      - al-khaser_x86.exe_:0x4343D0\r\n      - al-khaser_x86.exe_:0x434010\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetDiskFreeSpace\r\n      - api: kernel32.GetDiskFreeSpaceEx\r\n      - property/read: System.IO.DriveInfo::TotalSize\r\n      - property/read: System.IO.DriveInfo::TotalFreeSpace\r\n      - property/read: System.IO.DriveInfo::AvailableFreeSpace\r\n      - basic block:\r\n        - and:\r\n          - match: interact with driver via IOCTL\r\n          - number: 0x7405C = IOCTL_DISK_GET_LENGTH_INFO\r\n      - call:\r\n        - and:\r\n          - match: interact with driver via IOCTL\r\n          - number: 0x7405C = IOCTL_DISK_GET_LENGTH_INFO\r\n      - and:\r\n        - or:\r\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i\r\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i\r\n        - string: \"Size\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4217213
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4217363
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpaceEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalSize"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::AvailableFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/cd109c672fa34715b8a995e32334d731"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/47484587dde544c7b23751f162dccbc3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Size"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4221266
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4221311
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpaceEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalSize"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::AvailableFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/cd109c672fa34715b8a995e32334d731"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/47484587dde544c7b23751f162dccbc3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Size"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "terminate process": {
        "meta": {
          "name": "terminate process",
          "namespace": "host-interaction/process/terminate",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Terminate Process"
              ],
              "objective": "Process",
              "behavior": "Terminate Process",
              "method": "",
              "id": "C0018"
            }
          ],
          "references": [],
          "examples": [
            "C91887D861D9BD4A5872249B641BC9F9:0x401A77",
            "9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: terminate process\r\n    namespace: host-interaction/process/terminate\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Terminate Process [C0018]\r\n    examples:\r\n      - C91887D861D9BD4A5872249B641BC9F9:0x401A77\r\n      - 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307\r\n  features:\r\n    - or:\r\n      - api: System.Diagnostics.Process::Kill\r\n      - api: System.Diagnostics.Process::WaitForExit\r\n      - api: System.Diagnostics.Process::WaitForExitAsync\r\n      - api: System.Environment::Exit\r\n      - api: System.Windows.Forms.Application::Exit\r\n      - api: exit\r\n      - api: Exit\r\n      - and:\r\n        - os: linux\r\n        - api: exit_group\r\n      - and:\r\n        - optional:\r\n          - match: open process\r\n        - or:\r\n          - api: kernel32.TerminateProcess\r\n          - api: ntdll.NtTerminateProcess\r\n          - api: kernel32.ExitProcess\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4218014
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Kill"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExitAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Windows.Forms.Application::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "exit_group"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "open process"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "TerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtTerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ExitProcess"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4219384
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4221536
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Kill"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExitAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Windows.Forms.Application::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "exit"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4221887
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "exit_group"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "open process"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "TerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtTerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ExitProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "parse PE header": {
        "meta": {
          "name": "parse PE header",
          "namespace": "load-code/pe",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403DD0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: parse PE header\r\n    namespace: load-code/pe\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic, operand[1].offset features\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - and:\r\n        - mnemonic: cmp\r\n        - or:\r\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\r\n          - and:\r\n            - number: 0x50\r\n            - number: 0x45\r\n        - or:\r\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\r\n          - and:\r\n            - number: 0x4D\r\n            - number: 0x5A\r\n        - optional:\r\n          - and:\r\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\r\n          - basic block:\r\n            - and:\r\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n              - 3 or more:\r\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\r\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\r\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\r\n                - or:\r\n                  - and:\r\n                    - arch: i386\r\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                  - and:\r\n                    - arch: amd64\r\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4222064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4222144
                        },
                        {
                          "type": "absolute",
                          "value": 4222084
                        },
                        {
                          "type": "absolute",
                          "value": 4222118
                        },
                        {
                          "type": "absolute",
                          "value": 4222123
                        },
                        {
                          "type": "absolute",
                          "value": 4222155
                        },
                        {
                          "type": "absolute",
                          "value": 4222069
                        },
                        {
                          "type": "absolute",
                          "value": 4222134
                        },
                        {
                          "type": "absolute",
                          "value": 4222108
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4222084
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4222064
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/3a0d016707f44fa5b41262f634a21c96"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4222804
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4222825
                        },
                        {
                          "type": "absolute",
                          "value": 4222850
                        },
                        {
                          "type": "absolute",
                          "value": 4222838
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4222865
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4222833
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4222843
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/3a0d016707f44fa5b41262f634a21c96"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 4223264
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4223300
                        },
                        {
                          "type": "absolute",
                          "value": 4223277
                        },
                        {
                          "type": "absolute",
                          "value": 4223287
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4223287
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4223272
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4223282
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/3a0d016707f44fa5b41262f634a21c96"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate PE sections": {
        "meta": {
          "name": "enumerate PE sections",
          "namespace": "load-code/pe",
          "authors": [
            "@Ana06",
            "@mr-tz"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "Code Discovery",
                "Enumerate PE Sections"
              ],
              "objective": "Discovery",
              "behavior": "Code Discovery",
              "method": "Enumerate PE Sections",
              "id": "B0046.001"
            }
          ],
          "references": [
            "https://0x00sec.org/t/reflective-dll-injection/3080",
            "https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection"
          ],
          "examples": [
            "E4C33AC3638EEF68311F8AC0D72483C7:0x401510"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate PE sections\r\n    namespace: load-code/pe\r\n    authors:\r\n      - \"@Ana06\"\r\n      - \"@mr-tz\"\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires offset, operand[1].offset, characteristic, mnemonic, basicblock features\r\n    mbc:\r\n      - Discovery::Code Discovery::Enumerate PE Sections [B0046.001]\r\n    references:\r\n      - https://0x00sec.org/t/reflective-dll-injection/3080\r\n      - https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection\r\n    examples:\r\n      - E4C33AC3638EEF68311F8AC0D72483C7:0x401510\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      # there should be some complexity to functions like this\r\n      - count(basic blocks): 3 or more\r\n      - optional:\r\n        - offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n      - instruction:\r\n        - or:\r\n          - mnemonic: mov\r\n          - mnemonic: movzx\r\n        - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n      - basic block:\r\n        - or:\r\n          - and:\r\n            - description: IMAGE_FIRST_SECTION(nt_header)\r\n            - instruction:\r\n              - or:\r\n                - mnemonic: add\r\n                - mnemonic: mov\r\n                - mnemonic: movzx\r\n              - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n            - operand[1].offset: 0x18 = FileHeader.SizeOfOptionalHeader\r\n          - and:\r\n            - description: (DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i\r\n            - number: 0x28 = sizeof(IMAGE_SECTION_HEADER)\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0xF8 = sizeof(IMAGE_NT_HEADERS32)\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x108 = sizeof(IMAGE_NT_HEADERS64)\r\n      - 2 or more:\r\n        - operand[1].offset: 0xC = IMAGE_SECTION_HEADER.VirtualAddress\r\n        - operand[1].offset: 0x14 = IMAGE_SECTION_HEADER.PointerToRawData\r\n        - operand[1].offset: 0x10 = IMAGE_SECTION_HEADER.SizeOfRawData\r\n        # there's also offset 0x8 = IMAGE_SECTION_HEADER.Misc.PhysicalAddress, but it's likely too common\r\n      - not:\r\n        # non-zeroing XOR was observed in FPs\r\n        - characteristic: nzxor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 4222992
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "instruction"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "operand offset",
                              "index": 1,
                              "operand_offset": 6,
                              "description": "IMAGE_NT_HEADERS.FileHeader.NumberOfSections"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 4223014
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "mov"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "movzx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4223014
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4223014
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "IMAGE_FIRST_SECTION(nt_header)"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 20,
                                          "description": "IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 4223010
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "add"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "mov"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "movzx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 4223010
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4223010
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 24,
                                  "description": "FileHeader.SizeOfOptionalHeader"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 4223018
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "(DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 40,
                                  "description": "sizeof(IMAGE_SECTION_HEADER)"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 248,
                                          "description": "sizeof(IMAGE_NT_HEADERS32)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 264,
                                          "description": "sizeof(IMAGE_NT_HEADERS64)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4222992
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 3,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 4222992
                    },
                    {
                      "type": "absolute",
                      "value": 4223056
                    },
                    {
                      "type": "absolute",
                      "value": 4223027
                    },
                    {
                      "type": "absolute",
                      "value": 4223030
                    },
                    {
                      "type": "absolute",
                      "value": 4223046
                    },
                    {
                      "type": "absolute",
                      "value": 4223037
                    },
                    {
                      "type": "absolute",
                      "value": 4223054
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4223005
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "some",
                      "count": 2
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 12,
                          "description": "IMAGE_SECTION_HEADER.VirtualAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4223030
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 20,
                          "description": "IMAGE_SECTION_HEADER.PointerToRawData"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 4223010
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 16,
                          "description": "IMAGE_SECTION_HEADER.SizeOfRawData"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "packaged as an IExpress self-extracting archive": {
        "meta": {
          "name": "packaged as an IExpress self-extracting archive",
          "namespace": "executable/installer/iexpress",
          "authors": [
            "awillia2@cisco.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [
            "https://en.wikipedia.org/wiki/IExpress"
          ],
          "examples": [
            "ac742739cae0d411dfcb78ae99a7baee:0xA4C0",
            "ac742739cae0d411dfcb78ae99a7baee:0xA488",
            "ac742739cae0d411dfcb78ae99a7baee:0x34BA2"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: packaged as an IExpress self-extracting archive\r\n    namespace: executable/installer/iexpress\r\n    authors:\r\n      - awillia2@cisco.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    references:\r\n      - https://en.wikipedia.org/wiki/IExpress\r\n    examples:\r\n      - ac742739cae0d411dfcb78ae99a7baee:0xA4C0 # wextract_cleanup%d\r\n      - ac742739cae0d411dfcb78ae99a7baee:0xA488 # Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n      - ac742739cae0d411dfcb78ae99a7baee:0x34BA2 # '  <description>IExpress extraction tool</description>'\r\n  features:\r\n    - or:\r\n      - and:\r\n        - string: \"wextract_cleanup%d\"\r\n        - string: \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\"\r\n      - string: \"  <description>IExpress extraction tool</description>\"\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "string",
                      "string": "  <description>IExpress extraction tool</description>"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 2380140
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "wextract_cleanup%d"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "file",
                          "value": 26788
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "file",
                          "value": 26736
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "(internal) installer file limitation": {
        "meta": {
          "name": "(internal) installer file limitation",
          "namespace": "internal/limitation/static",
          "authors": [
            "william.ballenthin@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "70FD3347786ED7A4A43910E6778EF296"
          ],
          "description": "This sample appears to be an installer.\n\ncapa cannot handle installers well. This means the results may be misleading or incomplete.\nYou should try to understand the install mechanism and analyze created files with capa.\n",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: (internal) installer file limitation\r\n    # capa will likely detect installer specific functionality.\r\n    # this is probably not what the user wants.\r\n    namespace: internal/limitation/static\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n    description: |\r\n      This sample appears to be an installer.\r\n\r\n      capa cannot handle installers well. This means the results may be misleading or incomplete.\r\n      You should try to understand the install mechanism and analyze created files with capa.\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    examples:\r\n      - 70FD3347786ED7A4A43910E6778EF296\r\n  features:\r\n    - or:\r\n      - match: executable/installer\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "executable/installer"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "string",
                              "string": "  <description>IExpress extraction tool</description>"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "file",
                              "value": 2380140
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "string",
                                  "string": "wextract_cleanup%d"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "file",
                                  "value": 26788
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "string",
                                  "string": "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "file",
                                  "value": 26736
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "reference analysis tools strings": {
        "meta": {
          "name": "reference analysis tools strings",
          "namespace": "anti-analysis",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "Analysis Tool Discovery",
                "Process detection"
              ],
              "objective": "Discovery",
              "behavior": "Analysis Tool Discovery",
              "method": "Process detection",
              "id": "B0013.001"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiAnalysis/process.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: reference analysis tools strings\r\n    namespace: anti-analysis\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    mbc:\r\n      - Discovery::Analysis Tool Discovery::Process detection [B0013.001]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiAnalysis/process.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_\r\n  features:\r\n    - or:\r\n      - string: /ollydbg(\\.exe)?/i\r\n      - string: /ProcessHacker(\\.exe)?/i\r\n      - string: /tcpview(\\.exe)?/i\r\n      - string: /autoruns(\\.exe)?/i\r\n      - string: /autorunsc(\\.exe)?/i\r\n      - string: /filemon(\\.exe)?/i\r\n      - string: /procmon(\\.exe)?/i\r\n      - string: /regmon(\\.exe)?/i\r\n      - string: /procexp(\\.exe)?/i\r\n      - string: /(?<!\\w)ida[gqtuw]?(\\.exe)?$/i\r\n      - string: /ida[gqtuw]?64(\\.exe)?$/i\r\n      - string: /ImmunityDebugger(\\.exe)?/i\r\n      - string: /Wireshark(\\.exe)?/i\r\n      - string: /dumpcap(\\.exe)?/i\r\n      - string: /HookExplorer(\\.exe)?/i\r\n      - string: /ImportREC(\\.exe)?/i\r\n      - string: /PETools(\\.exe)?/i\r\n      - string: /LordPE(\\.exe)?/i\r\n      - string: /SysInspector(\\.exe)?/i\r\n      - string: /proc_analyzer(\\.exe)?/i\r\n      - string: /sysAnalyzer(\\.exe)?/i\r\n      - string: /sniff_hit(\\.exe)?/i\r\n      - string: /windbg(\\.exe)?/i\r\n      - string: /joeboxcontrol(\\.exe)?/i\r\n      - string: /joeboxserver(\\.exe)?/i\r\n      - string: /ResourceHacker(\\.exe)?/i\r\n      - string: /x32dbg(\\.exe)?/i\r\n      - string: /x64dbg(\\.exe)?/i\r\n      - string: /Fiddler(\\.exe)?/i\r\n      - string: /httpdebugger(\\.exe)?/i\r\n      - string: /fakenet(\\.exe)?/i\r\n      - string: /netmon(\\.exe)?/i\r\n      - string: /WPE PRO(\\.exe)?/i\r\n      - string: /decompile(\\.exe)?/i\r\n      - string: /scylla/i\r\n      - string: /megadumper/i\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ollydbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ProcessHacker(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/tcpview(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/autoruns(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/autorunsc(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/filemon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/procmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/regmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/procexp(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/(?<!\\w)ida[gqtuw]?(\\.exe)?$/i"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 91521
                    },
                    {
                      "type": "file",
                      "value": 83317
                    },
                    {
                      "type": "file",
                      "value": 505653
                    },
                    {
                      "type": "file",
                      "value": 75113
                    },
                    {
                      "type": "file",
                      "value": 66909
                    },
                    {
                      "type": "file",
                      "value": 99725
                    }
                  ],
                  "captures": {
                    "IDAT": [
                      {
                        "type": "file",
                        "value": 91521
                      },
                      {
                        "type": "file",
                        "value": 83317
                      },
                      {
                        "type": "file",
                        "value": 75113
                      },
                      {
                        "type": "file",
                        "value": 66909
                      },
                      {
                        "type": "file",
                        "value": 99725
                      }
                    ],
                    "!IdA": [
                      {
                        "type": "file",
                        "value": 505653
                      }
                    ]
                  }
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ida[gqtuw]?64(\\.exe)?$/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ImmunityDebugger(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Wireshark(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/dumpcap(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HookExplorer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ImportREC(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/PETools(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/LordPE(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/SysInspector(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/proc_analyzer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sysAnalyzer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sniff_hit(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/windbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/joeboxcontrol(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/joeboxserver(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ResourceHacker(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/x32dbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/x64dbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Fiddler(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/httpdebugger(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/fakenet(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/netmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/WPE PRO(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/decompile(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/scylla/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/megadumper/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      }
    }
  },
  "MITRE": [
    "T1012",
    "T1082",
    "T1083",
    "T1112",
    "T1129",
    "T1134",
    "T1222",
    "T1529",
    "T1547.001"
  ],
  "CWE": [
    [
      "external control of system or configuration setting",
      "CWE-15",
      "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:Because setting manipulation covers a diverse set of functions, any attempt at illustrating it will inevitably be incomplete. Rather than searching for a tight-knit relationship between the functions addressed in the setting manipulation category, take a step back and consider the sorts of system values that an attacker should not be allowed to control.::PHASE:Implementation Architecture and Design:DESCRIPTION:In general, do not allow user-provided or otherwise untrusted data to control sensitive values. The leverage that an attacker gains by controlling these values is not always immediately obvious, but do not underestimate the creativity of the attacker.::"
    ],
    [
      "path equivalence: windows 8.3 filename",
      "CWE-58",
      "::PHASE:System Configuration:DESCRIPTION:Disable Windows from supporting 8.3 filenames by editing the Windows registry. Preventing 8.3 filenames will not remove previously generated 8.3 filenames.::"
    ],
    [
      "external control of file name or path",
      "CWE-73",
      "::PHASE:Architecture and Design:DESCRIPTION:When the set of filenames is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames, and reject all other inputs. For example, ID 1 could map to inbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI AccessReferenceMap provide this capability.::PHASE:Architecture and Design Operation:DESCRIPTION:Run your code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict all access to files within a particular directory. Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single . character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as / to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering / is insufficient protection if the filesystem also supports the use of as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if ../ sequences are removed from the .../...// string in a sequential fashion, two instances of ../ would be removed from the original string, but the remaining characters would still form the ../ string.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes .. sequences and symbolic links (CWE-23, CWE-59).::PHASE:Installation Operation:DESCRIPTION:Use OS-level permissions and run as a low-privileged user to limit the scope of any successful attack.::PHASE:Operation Implementation:DESCRIPTION:If you are using PHP, configure your application so that it does not use register_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.::PHASE:Testing:DESCRIPTION:Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.::"
    ],
    [
      "direct use of unsafe jni",
      "CWE-111",
      "::PHASE:Implementation:DESCRIPTION:Implement error handling around the JNI call.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Do not use JNI calls if you don't trust the native library.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Be reluctant to use JNI calls. A Java API equivalent may exist.::"
    ],
    [
      "process control",
      "CWE-114",
      "::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Libraries that are loaded should be well understood and come from a trusted source. The application can execute code contained in the native libraries, which often contain calls that are susceptible to other security problems, such as buffer overflows or command injection. All native libraries should be validated to determine if the application requires the use of the library. It is very difficult to determine what these native libraries actually do, and the potential for malicious code is high. In addition, the potential for an inadvertent mistake in these native libraries is also high, as many are written in C or C++ and may be susceptible to buffer overflow or race condition problems. To help prevent buffer overflow attacks, validate all input to native calls for content and length. If the native library does not come from a trusted source, review the source code of the library. The library should be built from the reviewed source before using it.::"
    ],
    [
      "incorrect calculation of buffer size",
      "CWE-131",
      "::PHASE:Implementation:DESCRIPTION:When allocating a buffer for the purpose of transforming, converting, or encoding an input, allocate enough memory to handle the largest possible encoding. For example, in a routine that converts & characters to &amp; for HTML entity encoding, the output buffer needs to be at least 5 times as large as the input buffer.::PHASE:Implementation:DESCRIPTION:Understand the programming language's underlying representation and how it interacts with numeric calculation (CWE-681). Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conversion and casting between types, not-a-number calculations, and how the language handles numbers that are too large or too small for its underlying representation. [REF-7] Also be careful to account for 32-bit, 64-bit, and other potential differences that may affect the numeric representation.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Perform input validation on any numeric input by ensuring that it is within the expected range. Enforce that the input meets both the minimum and maximum requirements for the expected range.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:DESCRIPTION:When processing structured incoming data containing a size field followed by raw data, identify and resolve any inconsistencies between the size field and the actual size of the data (CWE-130).::PHASE:Implementation:DESCRIPTION:When allocating memory that uses sentinels to mark the end of a data structure - such as NUL bytes in strings - make sure you also include the sentinel in your calculation of the total amount of memory that must be allocated.::PHASE:Implementation:DESCRIPTION:Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:Use sizeof() on the appropriate data type to avoid CWE-467.::PHASE:Implementation:DESCRIPTION:Use the appropriate type for the desired action. For example, in C/C++, only use unsigned types for values that could never be negative, such as height, width, or other numbers related to quantity. This will simplify validation and will reduce surprises related to unexpected casting.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Use libraries or frameworks that make it easier to handle numbers without unexpected consequences, or buffer allocation routines that automatically track buffer size. Examples include safe integer handling packages such as SafeInt (C++) or IntegerLib (C or C++). [REF-106]::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:STRATEGY:Compilation or Build Hardening:DESCRIPTION:Examine compiler warnings closely and eliminate problems with potential security implications, such as signed / unsigned mismatch in memory operations, or use of uninitialized variables. Even if the weakness is rarely exploitable, a single failure may lead to the compromise of the entire system.::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design Operation:STRATEGY:Sandbox or Jail:DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.:EFFECTIVENESS:Limited::"
    ],
    [
      "use of externally-controlled format string",
      "CWE-134",
      "::PHASE:Requirements:DESCRIPTION:Choose a language that is not subject to this flaw.::PHASE:Implementation:DESCRIPTION:Ensure that all format string functions are passed a static string which cannot be controlled by the user, and that the proper number of arguments are always sent to that function as well. If at all possible, use functions that do not support the %n operator in format strings. [REF-116] [REF-117]::PHASE:Build and Compilation:DESCRIPTION:Run compilers and linkers with high warning levels, since they may detect incorrect usage.::"
    ],
    [
      "partial string comparison",
      "CWE-187",
      "::PHASE:Testing:DESCRIPTION:Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.::"
    ],
    [
      "signed to unsigned conversion error",
      "CWE-195",
      ""
    ],
    [
      "unsigned to signed conversion error",
      "CWE-196",
      "::PHASE:Requirements:DESCRIPTION:Choose a language which is not subject to these casting flaws.::PHASE:Architecture and Design:DESCRIPTION:Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which will be used as a size are checked previous to use as a size. If the language permits, throw exceptions rather than using in-band errors.::PHASE:Implementation:DESCRIPTION:Error check the return values of all functions. Be aware of implicit casts made, and use unsigned variables for sizes if at all possible.::"
    ],
    [
      "use of incorrect byte ordering",
      "CWE-198",
      ""
    ],
    [
      "generation of error message containing sensitive information",
      "CWE-209",
      "::PHASE:Implementation:DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success. If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.::PHASE:Implementation:DESCRIPTION:Handle exceptions internally and do not display errors containing potentially sensitive information to a user.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation Build and Compilation:STRATEGY:Compilation or Build Hardening:DESCRIPTION:Debugging information should not make its way into a production release.::PHASE:Implementation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Debugging information should not make its way into a production release.::PHASE:System Configuration:DESCRIPTION:Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.::PHASE:System Configuration:DESCRIPTION:Create default error pages or messages that do not leak any information.::"
    ],
    [
      "sensitive information in resource not removed before reuse",
      "CWE-226",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:During critical state transitions, information not needed in the next state should be removed or overwritten with fixed patterns (such as all 0's) or random data, before the transition to the next state.:EFFECTIVENESS:High::PHASE:Architecture and Design Implementation:DESCRIPTION:When releasing, de-allocating, or deleting a resource, overwrite its data and relevant metadata with fixed patterns or random data. Be cautious about complex resource types whose underlying representation might be non-contiguous or change at a low level, such as how a file might be split into different chunks on a file system, even though logical file positions are contiguous at the application layer. Such resource types might require invocation of special modes or APIs to tell the underlying operating system to perform the necessary clearing, such as SDelete (Secure Delete) on Windows, although the appropriate functionality might not be available at the application layer.:EFFECTIVENESS:High::"
    ],
    [
      "failure to handle missing parameter",
      "CWE-234",
      "::PHASE:Build and Compilation:DESCRIPTION:This issue can be simply combated with the use of proper build process.::PHASE:Implementation:DESCRIPTION:Forward declare all functions. This is the recommended solution. Properly forward declaration of all used functions will result in a compiler error if too few arguments are sent to a function.::"
    ],
    [
      "improper handling of extra parameters",
      "CWE-235",
      ""
    ],
    [
      "failure to handle incomplete element",
      "CWE-239",
      ""
    ],
    [
      "j2ee bad practices: direct use of sockets",
      "CWE-246",
      "::PHASE:Architecture and Design:DESCRIPTION:Use framework method calls instead of using sockets directly.::"
    ],
    [
      "unchecked return value",
      "CWE-252",
      "::PHASE:Implementation:DESCRIPTION:Check the results of all functions that return a value and verify that the value is expected.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Ensure that you account for all possible return values from the function.::PHASE:Implementation:DESCRIPTION:When designing a function, make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "incorrect check of function return value",
      "CWE-253",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Use a language or compiler that uses exceptions and requires the catching of those exceptions.::PHASE:Implementation:DESCRIPTION:Properly check all functions which return a value.::PHASE:Implementation:DESCRIPTION:When designing any function make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "improper check for dropped privileges",
      "CWE-273",
      "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation:DESCRIPTION:Check the results of all functions that return a value and verify that the value is expected.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:In Windows, make sure that the process token has the SeImpersonatePrivilege(Microsoft Server 2003). Code that relies on impersonation for security must ensure that the impersonation succeeded, i.e., that a proper privilege demotion happened.::"
    ],
    [
      "reliance on ip address for authentication",
      "CWE-291",
      "::PHASE:Architecture and Design:DESCRIPTION:Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate.::"
    ],
    [
      "use of password system for primary authentication",
      "CWE-309",
      "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::"
    ],
    [
      "cleartext storage in a file or on disk",
      "CWE-313",
      ""
    ],
    [
      "cleartext storage of sensitive information in a cookie",
      "CWE-315",
      ""
    ],
    [
      "cleartext storage of sensitive information in memory",
      "CWE-316",
      ""
    ],
    [
      "use of hard-coded cryptographic key",
      "CWE-321",
      "::PHASE:Architecture and Design:DESCRIPTION:Prevention schemes mirror that of hard-coded password storage.::"
    ],
    [
      "use of a key past its expiration date",
      "CWE-324",
      "::PHASE:Architecture and Design:DESCRIPTION:Adequate consideration should be put in to the user interface in order to notify users previous to the key's expiration, to explain the importance of new key generation and to walk users through the process as painlessly as possible.::"
    ],
    [
      "generation of predictable iv with cbc mode",
      "CWE-329",
      "::PHASE:Implementation:DESCRIPTION:NIST recommends two methods of generating unpredictable IVs for CBC mode [REF-1172]. The first is to generate the IV randomly. The second method is to encrypt a nonce with the same key and cipher to be used to encrypt the plaintext. In this case the nonce must be unique but can be predictable, since the block cipher will act as a pseudo random permutation.::"
    ],
    [
      "use of less trusted source",
      "CWE-348",
      ""
    ],
    [
      "missing support for integrity check",
      "CWE-353",
      "::PHASE:Architecture and Design:DESCRIPTION:Add an appropriately sized checksum to the protocol, ensuring that data received may be simply validated before it is parsed and used.::PHASE:Implementation:DESCRIPTION:Ensure that the checksums present in the protocol design are properly implemented and added to each message before it is sent.::"
    ],
    [
      "product ui does not warn user of unsafe actions",
      "CWE-356",
      ""
    ],
    [
      "exposure of private personal information to an unauthorized actor",
      "CWE-359",
      "::PHASE:Requirements:DESCRIPTION:Identify and consult all relevant regulations for personal privacy. An organization may be required to comply with certain federal and state regulations, depending on its location, the type of business it conducts, and the nature of any private data it handles. Regulations may include Safe Harbor Privacy Framework [REF-340], Gramm-Leach Bliley Act (GLBA) [REF-341], Health Insurance Portability and Accountability Act (HIPAA) [REF-342], General Data Protection Regulation (GDPR) [REF-1047], California Consumer Privacy Act (CCPA) [REF-1048], and others.::PHASE:Architecture and Design:DESCRIPTION:Carefully evaluate how secure design may interfere with privacy, and vice versa. Security and privacy concerns often seem to compete with each other. From a security perspective, all important operations should be recorded so that any anomalous activity can later be identified. However, when private data is involved, this practice can in fact create risk. Although there are many ways in which private data can be handled unsafely, a common risk stems from misplaced trust. Programmers often trust the operating environment in which a program runs, and therefore believe that it is acceptable store private information on the file system, in the registry, or in other locally-controlled resources. However, even if access to certain resources is restricted, this does not guarantee that the individuals who do have access can be trusted.::"
    ],
    [
      "trust of system event data",
      "CWE-360",
      "::PHASE:Architecture and Design:DESCRIPTION:Never trust or rely any of the information in an Event for security.::"
    ],
    [
      "creation of temporary file in directory with insecure permissions",
      "CWE-379",
      "::PHASE:Requirements:DESCRIPTION:Many contemporary languages have functions which properly handle this condition. Older C temp file functions are especially susceptible.::PHASE:Implementation:DESCRIPTION:Try to store sensitive tempfiles in a directory which is not world readable -- i.e., per-user directories.::PHASE:Implementation:DESCRIPTION:Avoid using vulnerable temp file functions.::"
    ],
    [
      "j2ee bad practices: direct use of threads",
      "CWE-383",
      "::PHASE:Architecture and Design:DESCRIPTION:For EJB, use framework approaches for parallel execution, instead of using threads.::"
    ],
    [
      "symbolic name not mapping to correct object",
      "CWE-386",
      ""
    ],
    [
      "missing report of error condition",
      "CWE-392",
      ""
    ],
    [
      "return of wrong status code",
      "CWE-393",
      ""
    ],
    [
      "unexpected status code or return value",
      "CWE-394",
      ""
    ],
    [
      "use of nullpointerexception catch to detect null pointer dereference",
      "CWE-395",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not extensively rely on catching exceptions (especially for validating user input) to handle errors. Handling exceptions can decrease the performance of an application.::"
    ],
    [
      "improper resource shutdown or release",
      "CWE-404",
      "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::"
    ],
    [
      "missing lock check",
      "CWE-414",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Implement a reliable lock mechanism.::"
    ],
    [
      "use after free",
      "CWE-416",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Choose a language that provides automatic memory management.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "deployment of wrong handler",
      "CWE-430",
      "::PHASE:Architecture and Design:DESCRIPTION:Perform a type check before interpreting an object.::PHASE:Architecture and Design:DESCRIPTION:Reject any inconsistent types, such as a file with a .GIF extension that appears to consist of PHP code.::"
    ],
    [
      "behavioral change in new version or environment",
      "CWE-439",
      ""
    ],
    [
      "ui discrepancy for security feature",
      "CWE-446",
      ""
    ],
    [
      "the ui performs the wrong action",
      "CWE-449",
      "::PHASE:Testing:DESCRIPTION:Perform extensive functionality testing of the UI. The UI should behave as specified.::"
    ],
    [
      "multiple interpretations of ui input",
      "CWE-450",
      "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::"
    ],
    [
      "improper cleanup on thrown exception",
      "CWE-460",
      "::PHASE:Implementation:DESCRIPTION:If one breaks from a loop or function by throwing an exception, make sure that cleanup happens or that you should exit the program. Use throwing exceptions sparsely.::"
    ],
    [
      "return of pointer value outside of expected range",
      "CWE-466",
      ""
    ],
    [
      "use of sizeof() on a pointer type",
      "CWE-467",
      "::PHASE:Implementation:DESCRIPTION:Use expressions such as sizeof(*pointer) instead of sizeof(pointer), unless you intend to run sizeof() on a pointer type to gain some platform independence or if you are allocating a variable on the stack.::"
    ],
    [
      "use of pointer subtraction to determine size",
      "CWE-469",
      "::PHASE:Implementation:DESCRIPTION:Save an index variable. This is the recommended solution. Rather than subtract pointers from one another, use an index variable of the same size as the pointers in question. Use this variable to walk from one pointer to the other and calculate the difference. Always validate this number.::"
    ],
    [
      "missing default case in multiple condition expression",
      "CWE-478",
      "::PHASE:Implementation:DESCRIPTION:Ensure that there are no cases unaccounted for when adjusting program flow or values based on the value of a given variable. In the case of switch style statements, the very simple act of creating a default case can, if done correctly, mitigate this situation. Often however, the default case is used simply to represent an assumed option, as opposed to working as a check for invalid input. This is poor practice and in some cases is as bad as omitting a default case entirely.::"
    ],
    [
      "signal handler use of a non-reentrant function",
      "CWE-479",
      "::PHASE:Requirements:DESCRIPTION:Require languages or libraries that provide reentrant functionality, or otherwise make it easier to avoid this weakness.::PHASE:Architecture and Design:DESCRIPTION:Design signal handlers to only set flags rather than perform complex functionality.::PHASE:Implementation:DESCRIPTION:Ensure that non-reentrant functions are not found in signal handlers.::PHASE:Implementation:DESCRIPTION:Use sanity checks to reduce the timing window for exploitation of race conditions. This is only a partial solution, since many attacks might fail, but other attacks still might work within the narrower window, even accidentally.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "omitted break statement in switch",
      "CWE-484",
      "::PHASE:Implementation:DESCRIPTION:Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.::PHASE:Implementation:DESCRIPTION:The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.::"
    ],
    [
      "comparison of classes by name",
      "CWE-486",
      "::PHASE:Implementation:DESCRIPTION:Use class equivalency to determine type. Rather than use the class name to determine if an object is of a given type, use the getClass() method, and == operator.::"
    ],
    [
      "exposure of data element to wrong session",
      "CWE-488",
      "::PHASE:Architecture and Design:DESCRIPTION:Protect the application's sessions from information leakage. Make sure that a session's data is not used or visible by other sessions.::PHASE:Testing:DESCRIPTION:Use a static analysis tool to scan the code for information leakage vulnerabilities (e.g. Singleton Member Field).::PHASE:Architecture and Design:DESCRIPTION:In a multithreading environment, storing user data in Servlet member fields introduces a data access race condition. Do not use member fields to store information in the Servlet.::"
    ],
    [
      "use of inner class containing sensitive data",
      "CWE-492",
      "::PHASE:Implementation:DESCRIPTION:Using sealed classes protects object-oriented encapsulation paradigms and therefore protects code from being extended in unforeseen ways.::PHASE:Implementation:DESCRIPTION:Inner Classes do not provide security. Warning: Never reduce the security of the object from an outer class, going to an inner class. If an outer class is final or private, ensure that its inner class is private as well.::"
    ],
    [
      "public data assigned to private array-typed field",
      "CWE-496",
      "::PHASE:Implementation:DESCRIPTION:Do not allow objects to modify private members of a class.::"
    ],
    [
      "exposure of sensitive system information to an unauthorized control sphere",
      "CWE-497",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewable by the end user. All error message text should be HTML entity encoded before being written to the log file to protect against potential cross-site scripting attacks against the viewer of the logs::"
    ],
    [
      "cleartext storage of sensitive information in an environment variable",
      "CWE-526",
      "::PHASE:Architecture and Design:DESCRIPTION:Encrypt information stored in the environment variable to protect it from being exposed to an unauthorized user. If encryption is not feasible or is considered too expensive for the business use of the application, then consider using a properly protected configuration file instead of an environment variable. It should be understood that unencrypted information in a config file is also not guaranteed to be protected, but it is still a better choice, because it reduces attack surface related to weaknesses such as CWE-214. In some settings, vaults might be a feasible option for safer data transfer. Users should be notified of the business choice made to not protect the sensitive information through encryption.::PHASE:Implementation:DESCRIPTION:If the environment variable is not necessary for the desired behavior, then remove it entirely, or clear it to an empty value.::"
    ],
    [
      "exposure of access control list files to an unauthorized control sphere",
      "CWE-529",
      "::PHASE:System Configuration:DESCRIPTION:Protect access control list files.::"
    ],
    [
      "exposure of backup file to an unauthorized control sphere",
      "CWE-530",
      "::PHASE:Policy:DESCRIPTION:Recommendations include implementing a security policy within your organization that prohibits backing up web application source code in the webroot.::"
    ],
    [
      "inclusion of sensitive information in test code",
      "CWE-531",
      "::PHASE:Distribution Installation:DESCRIPTION:Remove test code before deploying the application into production.::"
    ],
    [
      "insertion of sensitive information into log file",
      "CWE-532",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Consider seriously the sensitivity of the information written into log files. Do not write secrets into the log files.::PHASE:Distribution:DESCRIPTION:Remove debug log files before deploying the application into production.::PHASE:Operation:DESCRIPTION:Protect log files against unauthorized read/write.::PHASE:Implementation:DESCRIPTION:Adjust configurations appropriately when software is transitioned from a debug state to production.::"
    ],
    [
      "exposure of information through shell error message",
      "CWE-535",
      ""
    ],
    [
      "insertion of sensitive information into externally-accessible file or directory",
      "CWE-538",
      "::PHASE:Architecture and Design Operation System Configuration:DESCRIPTION:Do not expose file and directory information to the user.::"
    ],
    [
      "inclusion of sensitive information in source code",
      "CWE-540",
      "::PHASE:Architecture and Design System Configuration:DESCRIPTION:Recommendations include removing this script from the web server and moving it to a location not accessible from the Internet.::"
    ],
    [
      "inclusion of sensitive information in an include file",
      "CWE-541",
      "::PHASE:Architecture and Design:DESCRIPTION:Do not store sensitive information in include files.::PHASE:Architecture and Design System Configuration:DESCRIPTION:Protect include files from being exposed.::"
    ],
    [
      "return of stack variable address",
      "CWE-562",
      "::PHASE:Testing:DESCRIPTION:Use static analysis tools to spot return of the address of a stack variable.::"
    ],
    [
      "call to thread run() instead of start()",
      "CWE-572",
      "::PHASE:Implementation:DESCRIPTION:Use the start() method instead of the run() method.::"
    ],
    [
      "ejb bad practices: use of class loader",
      "CWE-578",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not use the Class Loader when writing EJBs.::"
    ],
    [
      "object model violation: just one of equals and hashcode defined",
      "CWE-581",
      "::PHASE:Implementation:DESCRIPTION:Both Equals() and Hashcode() should be defined.::"
    ],
    [
      "assignment of a fixed address to a pointer",
      "CWE-587",
      "::PHASE:Implementation:DESCRIPTION:Never set a pointer to a fixed address.::"
    ],
    [
      "call to non-ubiquitous api",
      "CWE-589",
      "::PHASE:Implementation:DESCRIPTION:Always test your code on any platform on which it is targeted to run on.::PHASE:Testing:DESCRIPTION:Test your code on the newest and oldest platform on which it is targeted to run on.::PHASE:Testing:DESCRIPTION:Develop a system to test for API functions that are not portable.::"
    ],
    [
      "free of memory not on the heap",
      "CWE-590",
      "::PHASE:Implementation:DESCRIPTION:Only free pointers that you have called malloc on previously. This is the recommended solution. Keep track of which pointers point at the beginning of valid chunks and free them only once.::PHASE:Implementation:DESCRIPTION:Before freeing a pointer, the programmer should make sure that the pointer was previously allocated on the heap and that the memory belongs to the programmer. Freeing an unallocated pointer will cause undefined behavior in the program.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "sensitive data storage in improperly locked memory",
      "CWE-591",
      "::PHASE:Architecture and Design:DESCRIPTION:Identify data that needs to be protected from swapping and choose platform-appropriate protection mechanisms.::PHASE:Implementation:DESCRIPTION:Check return values to ensure locking operations are successful.::"
    ],
    [
      "use of wrong operator in string comparison",
      "CWE-597",
      "::PHASE:Implementation:DESCRIPTION:Within Java, use .equals() to compare string values. Within JavaScript, use == to compare string values. Within PHP, use == to compare a numeric value to a string value. (PHP converts the string to a number.):EFFECTIVENESS:High::"
    ],
    [
      "use of get request method with sensitive query strings",
      "CWE-598",
      "::PHASE:Implementation:DESCRIPTION:When sensitive information is sent, use the POST method (e.g. registration form).::"
    ],
    [
      "multiple binds to the same port",
      "CWE-605",
      "::PHASE:Policy:DESCRIPTION:Restrict server socket address to known local addresses.::"
    ],
    [
      "inclusion of sensitive information in source code comments",
      "CWE-615",
      "::PHASE:Distribution:DESCRIPTION:Remove comments which have sensitive information about the design/implementation of the application. Some of the comments may be exposed to the user and affect the security posture of the application.::"
    ],
    [
      "external control of critical state data",
      "CWE-642",
      "::PHASE:Architecture and Design:DESCRIPTION:Understand all the potential locations that are accessible to attackers. For example, some programmers assume that cookies and hidden form fields cannot be modified by an attacker, or they may not consider that environment variables can be modified before a privileged program is invoked.::PHASE:Architecture and Design:STRATEGY:Attack Surface Reduction:DESCRIPTION:Store state information and sensitive data on the server side only. Ensure that the system definitively and unambiguously keeps track of its own state and user state and has rules defined for legitimate state transitions. Do not allow any application user to affect state directly in any way other than through legitimate actions leading to state transitions. If information must be stored on the client, do not do so without encryption and integrity checking, or otherwise having a mechanism on the server side to catch tampering. Use a message authentication code (MAC) algorithm, such as Hash Message Authentication Code (HMAC) [REF-529]. Apply this against the state or sensitive data that has to be exposed, which can guarantee the integrity of the data - i.e., that the data has not been modified. Ensure that a strong hash function is used (CWE-328).::PHASE:Architecture and Design:DESCRIPTION:Store state information on the server side only. Ensure that the system definitively and unambiguously keeps track of its own state and user state and has rules defined for legitimate state transitions. Do not allow any application user to affect state directly in any way other than through legitimate actions leading to state transitions.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. With a stateless protocol such as HTTP, use some frameworks can maintain the state for you. Examples include ASP.NET View State and the OWASP ESAPI Session Management feature. Be careful of language features that provide state support, since these might be provided as a convenience to the programmer and may not be considering security.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Operation Implementation:STRATEGY:Environment Hardening:DESCRIPTION:When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.::PHASE:Testing:DESCRIPTION:Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.::PHASE:Testing:DESCRIPTION:Use dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.::PHASE:Testing:DESCRIPTION:Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.::"
    ],
    [
      "reliance on file name or extension of externally-supplied file",
      "CWE-646",
      "::PHASE:Architecture and Design:DESCRIPTION:Make decisions on the server side based on file content and not on file name or extension.::"
    ],
    [
      "reliance on a single factor in a security decision",
      "CWE-654",
      "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::"
    ],
    [
      "use of a non-reentrant function in a concurrent context",
      "CWE-663",
      "::PHASE:Implementation:DESCRIPTION:Use reentrant functions if available.::PHASE:Implementation:DESCRIPTION:Add synchronization to your non-reentrant function.::PHASE:Implementation:DESCRIPTION:In Java, use the ReentrantLock Class.::"
    ],
    [
      "improper control of a resource through its lifetime",
      "CWE-664",
      "::PHASE:Testing:DESCRIPTION:Use Static analysis tools to check for unreleased resources.::"
    ],
    [
      "operation on resource in wrong phase of lifetime",
      "CWE-666",
      "::PHASE:Architecture and Design:DESCRIPTION:Follow the resource's lifecycle from creation to release.::"
    ],
    [
      "exposure of resource to wrong sphere",
      "CWE-668",
      ""
    ],
    [
      "lack of administrator control over security",
      "CWE-671",
      ""
    ],
    [
      "operation on a resource after expiration or release",
      "CWE-672",
      ""
    ],
    [
      "multiple operations on resource in single-operation context",
      "CWE-675",
      ""
    ],
    [
      "unchecked return value to null pointer dereference",
      "CWE-690",
      ""
    ],
    [
      "use of multiple resources with duplicate identifier",
      "CWE-694",
      "::PHASE:Architecture and Design:DESCRIPTION:Where possible, use unique identifiers. If non-unique identifiers are detected, then do not operate any resource with a non-unique identifier and report the error appropriately.::"
    ],
    [
      "use of incorrectly-resolved name or reference",
      "CWE-706",
      ""
    ],
    [
      "free of pointer not at start of buffer",
      "CWE-761",
      "::PHASE:Implementation:DESCRIPTION:When utilizing pointer arithmetic to traverse a buffer, use a separate variable to track progress through memory and preserve the originally allocated address for later freeing.::PHASE:Implementation:DESCRIPTION:When programming in C++, consider using smart pointers provided by the boost library to help correctly and consistently manage memory.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "release of invalid pointer or reference",
      "CWE-763",
      "::PHASE:Implementation:DESCRIPTION:Only call matching memory management functions. Do not mix and match routines. For example, when you allocate a buffer with malloc(), dispose of the original pointer with free().::PHASE:Implementation:DESCRIPTION:When programming in C++, consider using smart pointers provided by the boost library to help correctly and consistently manage memory.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "multiple locks of a critical resource",
      "CWE-764",
      "::PHASE:Implementation:DESCRIPTION:When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the software acquires a lock and then determines it is not able to perform its intended behavior, be sure to release the lock(s) before waiting for conditions to improve. Reacquire the lock(s) before trying again.::"
    ],
    [
      "multiple unlocks of a critical resource",
      "CWE-765",
      "::PHASE:Implementation:DESCRIPTION:When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the product acquires a lock and then determines it is not able to perform its intended behavior, be sure to release the lock(s) before waiting for conditions to improve. Reacquire the lock(s) before trying again.::"
    ],
    [
      "access of memory location before start of buffer",
      "CWE-786",
      ""
    ],
    [
      "access of memory location after end of buffer",
      "CWE-788",
      ""
    ],
    [
      "buffer access using size of source buffer",
      "CWE-806",
      "::PHASE:Architecture and Design:DESCRIPTION:Use an abstraction library to abstract away risky APIs. Examples include the Safe C String Library (SafeStr) by Viega, and the Strsafe.h library from Microsoft. This is not a complete solution, since many buffer overflows are not related to strings.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:DESCRIPTION:Programmers should adhere to the following rules when allocating and managing their applications memory: Double check that your buffer is as large as you specify. When using functions that accept a number of bytes to copy, such as strncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if calling this function in a loop and make sure there is no danger of writing past the allocated space. Truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Build and Compilation Operation:DESCRIPTION:Most mitigating technologies at the compiler or OS level to date address only a subset of buffer overflow problems and rarely provide complete protection against even that subset. It is good practice to implement strategies to increase the workload of an attacker, such as leaving the attacker to guess an unknown value that changes every program execution.::"
    ],
    [
      "use of out-of-range pointer offset",
      "CWE-823",
      ""
    ],
    [
      "unlock of a resource that is not locked",
      "CWE-832",
      ""
    ],
    [
      "use of uninitialized resource",
      "CWE-908",
      "::PHASE:Implementation:DESCRIPTION:Explicitly initialize the resource before use. If this is performed through an API function or standard procedure, follow all required steps.::PHASE:Implementation:DESCRIPTION:Pay close attention to complex conditionals that affect initialization, since some branches might not perform the initialization.::PHASE:Implementation:DESCRIPTION:Avoid race conditions (CWE-362) during initialization routines.::PHASE:Build and Compilation:DESCRIPTION:Run or compile the product with settings that generate warnings about uninitialized variables or data.::"
    ],
    [
      "use of expired file descriptor",
      "CWE-910",
      ""
    ],
    [
      "improper update of reference count",
      "CWE-911",
      ""
    ],
    [
      "use of redundant code",
      "CWE-1041",
      "::PHASE:Implementation:DESCRIPTION:Merge common functionality into a single function and then call that function from across the entire code base.::"
    ],
    [
      "creation of immutable text using string concatenation",
      "CWE-1046",
      ""
    ],
    [
      "excessive data query operations in a large data table",
      "CWE-1049",
      ""
    ],
    [
      "parent class with references to child class",
      "CWE-1062",
      ""
    ],
    [
      "creation of class instance within a static code block",
      "CWE-1063",
      ""
    ],
    [
      "runtime resource management control element in a component built to run on application servers",
      "CWE-1065",
      ""
    ],
    [
      "empty exception block",
      "CWE-1069",
      "::PHASE:Implementation:DESCRIPTION:For every exception block add code that handles the specific exception in the way intended by the application.::"
    ],
    [
      "empty code block",
      "CWE-1071",
      ""
    ],
    [
      "source code file with excessive number of lines of code",
      "CWE-1080",
      ""
    ],
    [
      "excessive index range scan for a data resource",
      "CWE-1094",
      ""
    ],
    [
      "reliance on runtime component in generated code",
      "CWE-1101",
      ""
    ],
    [
      "use of same variable for multiple purposes",
      "CWE-1109",
      ""
    ],
    [
      "excessive use of self-modifying code",
      "CWE-1123",
      ""
    ],
    [
      "use of prohibited code",
      "CWE-1177",
      ""
    ],
    [
      "initialization of a resource with an insecure default",
      "CWE-1188",
      ""
    ],
    [
      "improper identifier for ip block used in system-on-chip (soc)",
      "CWE-1192",
      "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Every identity generated in the SoC should be unique and immutable in hardware. The actions that an IP is trusted or not trusted should be clearly defined, implemented, configured, and tested. If the definition is implemented via a policy, then the policy should be immutable or protected with clear authentication and authorization.::"
    ],
    [
      "failure to disable reserved bits",
      "CWE-1209",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Include a feature to disable reserved bits.::PHASE:Integration:DESCRIPTION:Any writes to these reserve bits are blocked (e.g., ignored, access-protected, etc.), or an exception can be asserted.::"
    ],
    [
      "creation of emergent resource",
      "CWE-1229",
      ""
    ],
    [
      "uninitialized value on reset for registers holding security settings",
      "CWE-1271",
      "::PHASE:Implementation:DESCRIPTION:Design checks should be performed to identify any uninitialized flip-flops used for security-critical functions.::PHASE:Architecture and Design:DESCRIPTION:All registers holding security-critical information should be set to a specific value on reset.::"
    ],
    [
      "improper access control for volatile memory containing boot code",
      "CWE-1274",
      "::PHASE:Architecture and Design:DESCRIPTION:Ensure that the design of volatile-memory protections is enough to prevent modification from an adversary or untrusted code.::PHASE:Testing:DESCRIPTION:Test the volatile-memory protections to ensure they are safe from modification or untrusted code.::"
    ],
    [
      "assumed-immutable data is stored in writable memory",
      "CWE-1282",
      "::PHASE:Implementation:DESCRIPTION:All immutable code or data should be programmed into ROM or write-once memory.::"
    ],
    [
      "missing source correlation of multiple independent data",
      "CWE-1293",
      "::PHASE:Requirements:DESCRIPTION:Design system to use a Practical Byzantine fault method, to request information from multiple sources to verify the data and report on potentially compromised information sources.::PHASE:Implementation:DESCRIPTION:Failure to use a Practical Byzantine fault method when requesting data. Lack of place to report potentially compromised information sources. Relying on non-independent information sources for integrity checking. Failure to report information sources that respond in the minority to incident response procedures.::"
    ],
    [
      "missing ability to patch rom code",
      "CWE-1310",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Secure patch support to allow ROM code to be patched on the next boot.:EFFECTIVENESS:Moderate::PHASE:Architecture and Design Implementation:DESCRIPTION:Support patches that can be programmed in-field or during manufacturing through hardware fuses. This feature can be used for limited patching of devices after shipping, or for the next batch of silicon devices manufactured, without changing the full device ROM.:EFFECTIVENESS:Moderate::"
    ],
    [
      "binding to an unrestricted ip address",
      "CWE-1327",
      "::PHASE:System Configuration:DESCRIPTION:Assign IP addresses that are not 0.0.0.0.:EFFECTIVENESS:High::PHASE:System Configuration:STRATEGY:Firewall:DESCRIPTION:Unwanted connections to the configured server may be denied through a firewall or other packet filtering measures.:EFFECTIVENESS:High::"
    ],
    [
      "security version number mutable to older versions",
      "CWE-1328",
      "::PHASE:Architecture and Design:DESCRIPTION:When architecting the system, security version data should be designated for storage in registers that are either read-only or have access controls that prevent modification by an untrusted agent.::PHASE:Implementation:DESCRIPTION:During implementation and test, security version data should be demonstrated to be read-only and access controls should be validated.::"
    ],
    [
      "reliance on component that is not updateable",
      "CWE-1329",
      "::PHASE:Requirements:DESCRIPTION:Specify requirements that each component should be updateable, including ROM, firmware, etc.::PHASE:Architecture and Design:DESCRIPTION:Design the product to allow for updating of its components. Include the external infrastructure that might be necessary to support updates, such as distribution servers.::PHASE:Architecture and Design Implementation:DESCRIPTION:With hardware, support patches that can be programmed in-field or during manufacturing through hardware fuses. This feature can be used for limited patching of devices after shipping, or for the next batch of silicon devices manufactured, without changing the full device ROM.:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:Implement the necessary functionality to allow each component to be updated.::"
    ],
    [
      "insufficient precision or accuracy of a real number",
      "CWE-1339",
      "::PHASE:Implementation Patching and Maintenance:DESCRIPTION:The developer or maintainer can move to a more accurate representation of real numbers. In extreme cases, the programmer can move to representations such as ratios of BigInts which can represent real numbers to extremely fine precision. The programmer can also use the concept of an Unum real. The memory and CPU tradeoffs of this change must be examined. Since floating point reals are used in many products and many locations, they are implemented in hardware and most format changes will cause the calculations to be moved into software resulting in slower products.::"
    ],
    [
      "multiple releases of same resource or handle",
      "CWE-1341",
      "::PHASE:Implementation:DESCRIPTION:Change the code's logic so that the resource is only closed once. This might require simplifying or refactoring. This fix can be simple to do in small code blocks, but more difficult when multiple closes are buried within complex conditionals.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:It can be effective to implement a flag that is (1) set when the resource is opened, (2) cleared when it is closed, and (3) checked before closing. This approach can be useful when there are disparate cases in which closes must be performed. However, flag-tracking can increase code complexity and requires diligent compliance by the programmer.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:When closing a resource, set the resource's associated variable to NULL or equivalent value for the given language. Some APIs will ignore this null value without causing errors. For other APIs, this can lead to application crashes or exceptions, which may still be preferable to corrupting an unintended resource such as memory or data.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "use of default credentials",
      "CWE-1392",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default password",
      "CWE-1393",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Documentation:DESCRIPTION:Ensure that product documentation clearly emphasizes the presence of default passwords and provides steps for the administrator to change them.:EFFECTIVENESS:Limited::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default cryptographic key",
      "CWE-1394",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ]
  ],
  "suricata_rule": "alert tcp any any -> any any (\n    msg:\"Auto-generated Suricata rule from YARA\";\n    flow:established,to_server;\n    content:\"ADMQCMD\"; nocase;\n    content:\"ANSIStrChr\"; nocase;\n    content:\"ANSIStrRChr\"; nocase;\n    content:\"AddFile\"; nocase;\n    content:\"AddPath\"; nocase;\n    content:\"AddRegRunOnce\"; nocase;\n    content:\"AdjustFileTime\"; nocase;\n    content:\"AdjustTokenPrivileges\"; nocase;\n    content:\"AdvancedINF\"; nocase;\n    content:\"AllocateAndInitializeSid\"; nocase;\n    content:\"AnalyzeCmd\"; nocase;\n    content:\"ArgList\"; nocase;\n    content:\"AvailableBufferCch\"; nocase;\n    content:\"BYTE\"; nocase;\n    content:\"BrowseCallback\"; nocase;\n    content:\"BrowseForDir\"; nocase;\n    content:\"Buffer\"; nocase;\n    content:\"BytesPerSector\"; nocase;\n    content:\"CABINET\"; nocase;\n    content:\"CallWindowProcA\"; nocase;\n    content:\"Caption\"; nocase;\n    content:\"CatDirAndFile\"; nocase;\n    content:\"CenterWindow\"; nocase;\n    content:\"CheckFileVersion\"; nocase;\n    content:\"CheckOSVersion\"; nocase;\n    content:\"CheckOverwrite\"; nocase;\n    content:\"CheckReboot\"; nocase;\n    content:\"CheckToken\"; nocase;\n    content:\"CheckTokenMembership\"; nocase;\n    content:\"CheckWinDir\"; nocase;\n    content:\"ChrCmpA_inline\"; nocase;\n    content:\"CleanRegRunOnce\"; nocase;\n    content:\"CloseHandle\"; nocase;\n    content:\"Command\"; nocase;\n    content:\"CompareStringA\"; nocase;\n    content:\"CompareVersion\"; nocase;\n    content:\"Control\"; nocase;\n    content:\"ConvertHexStringToIntA\"; nocase;\n    content:\"ConvertRegRunOnce\"; nocase;\n    content:\"Could\"; nocase;\n    content:\"CreateAndValidateSubdir\"; nocase;\n    content:\"CreateDirectoryA\"; nocase;\n    content:\"CreateEventA\"; nocase;\n    content:\"CreateFileA\"; nocase;\n    content:\"CreateMutexA\"; nocase;\n    content:\"CreateProcessA\"; nocase;\n    content:\"CreateThread\"; nocase;\n    content:\"CreationTime\"; nocase;\n    content:\"CurrentProcess\"; nocase;\n    content:\"CurrentVersion\"; nocase;\n    content:\"DLGPROC\"; nocase;\n    content:\"DLGTEMPLATE\"; nocase;\n    content:\"Data\"; nocase;\n    content:\"DecryptFileA\"; nocase;\n    content:\"DelNodeRunDLL32\"; nocase;\n    content:\"DeleteExtractedFiles\"; nocase;\n    content:\"DeleteFileA\"; nocase;\n    content:\"DeleteMyDir\"; nocase;\n    content:\"Desktop\"; nocase;\n    content:\"DesktopWindow\"; nocase;\n    content:\"Destination\"; nocase;\n    content:\"DestinationSize\"; nocase;\n    content:\"DeviceCaps\"; nocase;\n    content:\"DialogBoxIndirectParamA\"; nocase;\n    content:\"DirectoryA\"; nocase;\n    content:\"DiskSpaceErrMsg\"; nocase;\n    content:\"DispatchMessageA\"; nocase;\n    content:\"DisplayLicense\"; nocase;\n    content:\"DlgItem\"; nocase;\n    content:\"DoInfInstall\"; nocase;\n    content:\"DoMain\"; nocase;\n    content:\"DosDateTimeToFileTime\"; nocase;\n    content:\"DriveTypeA\"; nocase;\n    content:\"EXTRACTOPT\"; nocase;\n    content:\"EnableWindow\"; nocase;\n    content:\"EndDialog\"; nocase;\n    content:\"EnumResLangProc\"; nocase;\n    content:\"EnumResourceLanguagesA\"; nocase;\n    content:\"EqualSid\"; nocase;\n    content:\"Error\"; nocase;\n    content:\"ExceptionCode\"; nocase;\n    content:\"ExceptionInfo\"; nocase;\n    content:\"ExceptionInformation\"; nocase;\n    content:\"ExceptionRecord\"; nocase;\n    content:\"ExitCode\"; nocase;\n    content:\"ExitProcess\"; nocase;\n    content:\"ExitWindowsEx\"; nocase;\n    content:\"ExpandCmdParams\"; nocase;\n    content:\"ExpandEnvironmentStringsA\"; nocase;\n    content:\"ExtractDlgProc\"; nocase;\n    content:\"ExtractField\"; nocase;\n    content:\"ExtractFiles\"; nocase;\n    content:\"ExtractThread\"; nocase;\n    content:\"FARPROC\"; nocase;\n    content:\"FDICABINETINFO\"; nocase;\n    content:\"FDINOTIFICATIONTYPE\"; nocase;\n    content:\"FILETIME\"; nocase;\n    content:\"FINISHMSG\"; nocase;\n    content:\"FileA\"; nocase;\n    content:\"FileExists\"; nocase;\n    content:\"FileName\"; nocase;\n    content:\"FileSystemFlags\"; nocase;\n    content:\"FileTime\"; nocase;\n    content:\"FileVersionInfoSizeA\"; nocase;\n    content:\"Filename\"; nocase;\n    content:\"FindClose\"; nocase;\n    content:\"FindFileData\"; nocase;\n    content:\"FindFirstFileA\"; nocase;\n    content:\"FindNextFileA\"; nocase;\n    content:\"FindResourceA\"; nocase;\n    content:\"FinishMessage\"; nocase;\n    content:\"First\"; nocase;\n    content:\"FirstFileA\"; nocase;\n    content:\"FormatMessageA\"; nocase;\n    content:\"FreeLibrary\"; nocase;\n    content:\"FreeResource\"; nocase;\n    content:\"FreeSid\"; nocase;\n    content:\"GetCurrentDirectoryA\"; nocase;\n    content:\"GetCurrentProcess\"; nocase;\n    content:\"GetDC\"; nocase;\n    content:\"GetDesktopWindow\"; nocase;\n    content:\"GetDeviceCaps\"; nocase;\n    content:\"GetDiskFreeSpaceA\"; nocase;\n    content:\"GetDlgItem\"; nocase;\n    content:\"GetDlgItemTextA\"; nocase;\n    content:\"GetDriveTypeA\"; nocase;\n    content:\"GetExitCodeProcess\"; nocase;\n    content:\"GetFileList\"; nocase;\n    content:\"GetFileTobeChecked\"; nocase;\n    content:\"GetFileVersionInfoA\"; nocase;\n    content:\"GetFileVersionInfoSizeA\"; nocase;\n    content:\"GetLastError\"; nocase;\n    content:\"GetModuleFileNameA\"; nocase;\n    content:\"GetModuleHandleW\"; nocase;\n    content:\"GetNewTempDir\"; nocase;\n    content:\"GetParentDir\"; nocase;\n    content:\"GetPrivateProfileIntA\"; nocase;\n    content:\"GetPrivateProfileStringA\"; nocase;\n    content:\"GetProcAddress\"; nocase;\n    content:\"GetResource\"; nocase;\n    content:\"GetResourceLanguage\"; nocase;\n    content:\"GetShortPathNameA\"; nocase;\n    content:\"GetSpace\"; nocase;\n    content:\"GetStartupInfoW\"; nocase;\n    content:\"GetSystemDirectoryA\"; nocase;\n    content:\"GetSystemInfo\"; nocase;\n    content:\"GetSystemMetrics\"; nocase;\n    content:\"GetTempDirectory\"; nocase;\n    content:\"GetTempFileNameA\"; nocase;\n    content:\"GetTempPathA\"; nocase;\n    content:\"GetTokenInformation\"; nocase;\n    content:\"GetUsersPermission\"; nocase;\n    content:\"GetVersion\"; nocase;\n    content:\"GetVersionExA\"; nocase;\n    content:\"GetVolumeInformationA\"; nocase;\n    content:\"GetWindowRect\"; nocase;\n    content:\"GetWindowsDirectoryA\"; nocase;\n    content:\"GetWininitSize\"; nocase;\n    content:\"GlobalAlloc\"; nocase;\n    content:\"GlobalFree\"; nocase;\n    content:\"GlobalLock\"; nocase;\n    content:\"GlobalUnlock\"; nocase;\n    content:\"HANDLE\"; nocase;\n    content:\"HEAP_INFORMATION_CLASS\"; nocase;\n    content:\"HFDI\"; nocase;\n    content:\"HFILE\"; nocase;\n    content:\"HGLOBAL\"; nocase;\n    content:\"HKEY\"; nocase;\n    content:\"HKEY_CURRENT_USER\"; nocase;\n    content:\"HKEY_LOCAL_MACHINE\"; nocase;\n    content:\"HLOCAL\"; nocase;\n    content:\"HMODULE\"; nocase;\n    content:\"HRESULT\"; nocase;\n    content:\"HRSRC\"; nocase;\n    content:\"HWND\"; nocase;\n    content:\"HeapSetInformation\"; nocase;\n    content:\"HighPart\"; nocase;\n    content:\"INSTANCECHECK\"; nocase;\n    content:\"INT_PTR\"; nocase;\n    content:\"Init\"; nocase;\n    content:\"InitCommonControls\"; nocase;\n    content:\"InstallHinfSection\"; nocase;\n    content:\"IsBiDiLocalizedBinary\"; nocase;\n    content:\"IsDBCSLeadByte\"; nocase;\n    content:\"IsEnoughSpace\"; nocase;\n    content:\"IsFullPath\"; nocase;\n    content:\"IsGoodTempDir\"; nocase;\n    content:\"IsNTAdmin\"; nocase;\n    content:\"IsWindowsDrive\"; nocase;\n    content:\"Kernel32\"; nocase;\n    content:\"LICENSE\"; nocase;\n    content:\"LOWORD\"; nocase;\n    content:\"LPARAM\"; nocase;\n    content:\"LPBYTE\"; nocase;\n    content:\"LPCSTR\"; nocase;\n    content:\"LPSTARTUPINFOA\"; nocase;\n    content:\"LPSTR\"; nocase;\n    content:\"LPTHREAD_START_ROUTINE\"; nocase;\n    content:\"LRESULT\"; nocase;\n    content:\"LSTATUS\"; nocase;\n    content:\"Last\"; nocase;\n    content:\"LastError\"; nocase;\n    content:\"LibFileName\"; nocase;\n    content:\"Library\"; nocase;\n    content:\"LibraryA\"; nocase;\n    content:\"LicenseDlgProc\"; nocase;\n    content:\"LoadLibraryA\"; nocase;\n    content:\"LoadLibraryExA\"; nocase;\n    content:\"LoadResource\"; nocase;\n    content:\"LoadString\"; nocase;\n    content:\"LoadStringA\"; nocase;\n    content:\"LocalAlloc\"; nocase;\n    content:\"LocalFileTimeToFileTime\"; nocase;\n    content:\"LocalFree\"; nocase;\n    content:\"LockResource\"; nocase;\n    content:\"LookupPrivilegeValueA\"; nocase;\n    content:\"LowPart\"; nocase;\n    content:\"Luid\"; nocase;\n    content:\"MEMORY\"; nocase;\n    content:\"MEditSubProc\"; nocase;\n    content:\"MakeDirectory\"; nocase;\n    content:\"MaximumComponentLength\"; nocase;\n    content:\"MessageBeep\"; nocase;\n    content:\"MessageBoxA\"; nocase;\n    content:\"Microsoft\"; nocase;\n    content:\"ModuleHandleW\"; nocase;\n    content:\"MsgBox2Param\"; nocase;\n    content:\"MsgWaitForMultipleObjects\"; nocase;\n    content:\"MulDiv\"; nocase;\n    content:\"MyDialogBox\"; nocase;\n    content:\"MyGetLastError\"; nocase;\n    content:\"MyLoadLibrary\"; nocase;\n    content:\"MyNTReboot\"; nocase;\n    content:\"MyRestartDialog\"; nocase;\n    content:\"Name\"; nocase;\n    content:\"NeedRebootInit\"; nocase;\n    content:\"NewState\"; nocase;\n    content:\"None\"; nocase;\n    content:\"NtTib\"; nocase;\n    content:\"NumberOfBytesWritten\"; nocase;\n    content:\"NumberOfFreeClusters\"; nocase;\n    content:\"NumberParameters\"; nocase;\n    content:\"OpenProcessToken\"; nocase;\n    content:\"OverwriteDlgProc\"; nocase;\n    content:\"PESection\"; nocase;\n    content:\"PEXCEPTION_RECORD\"; nocase;\n    content:\"PFDINOTIFICATION\"; nocase;\n    content:\"PFNFREE\"; nocase;\n    content:\"PFNOPEN\"; nocase;\n    content:\"PFNSEEK\"; nocase;\n    content:\"PFNWRITE\"; nocase;\n    content:\"PHKEY\"; nocase;\n    content:\"POSTRUNPROGRAM\"; nocase;\n    content:\"PSID\"; nocase;\n    content:\"PSID_IDENTIFIER_AUTHORITY\"; nocase;\n    content:\"Panel\"; nocase;\n    content:\"ParseCmdLine\"; nocase;\n    content:\"Paths\"; nocase;\n    content:\"PeekMessageA\"; nocase;\n    content:\"PrivilegeCount\"; nocase;\n    content:\"Privileges\"; nocase;\n    content:\"ProcAddress\"; nocase;\n    content:\"ProcessInformation\"; nocase;\n    content:\"ProcessUpdatedFile_Size\"; nocase;\n    content:\"ProcessUpdatedFile_Write\"; nocase;\n    content:\"REBOOT\"; nocase;\n    content:\"RUNPROGRAM\"; nocase;\n    content:\"ReadFile\"; nocase;\n    content:\"Reboot\"; nocase;\n    content:\"Rect\"; nocase;\n    content:\"RegCloseKey\"; nocase;\n    content:\"RegCreateKeyExA\"; nocase;\n    content:\"RegDeleteValueA\"; nocase;\n    content:\"RegOpenKeyExA\"; nocase;\n    content:\"RegQueryInfoKeyA\"; nocase;\n    content:\"RegQueryValueExA\"; nocase;\n    content:\"RegServer\"; nocase;\n    content:\"RegSetValueExA\"; nocase;\n    content:\"ReleaseDC\"; nocase;\n    content:\"RemoveDirectoryA\"; nocase;\n    content:\"RemoveLeadTailBlanks\"; nocase;\n    content:\"ResetEvent\"; nocase;\n    content:\"Resource\"; nocase;\n    content:\"ResourceA\"; nocase;\n    content:\"ResourceLocale\"; nocase;\n    content:\"ReturnLength\"; nocase;\n    content:\"RootPathName\"; nocase;\n    content:\"RtlpImageNtHeader\"; nocase;\n    content:\"RunApps\"; nocase;\n    content:\"RunInstallCommand\"; nocase;\n    content:\"RunningOnWin95BiDiLoc\"; nocase;\n    content:\"SHBrowseForFolder\"; nocase;\n    content:\"SHGetPathFromIDList\"; nocase;\n    content:\"SHOWWINDOW\"; nocase;\n    content:\"SIZE_T\"; nocase;\n    content:\"STRSAFE_LPCSTR\"; nocase;\n    content:\"STRSAFE_LPSTR\"; nocase;\n    content:\"STRSAFE_PCNZCH\"; nocase;\n    content:\"SeShutdownPrivilege\"; nocase;\n    content:\"SectorsPerCluster\"; nocase;\n    content:\"SendDlgItemMessageA\"; nocase;\n    content:\"SendMessageA\"; nocase;\n    content:\"SetCurrentDirectoryA\"; nocase;\n    content:\"SetDlgItemTextA\"; nocase;\n    content:\"SetEvent\"; nocase;\n    content:\"SetFilePointer\"; nocase;\n    content:\"SetFileTime\"; nocase;\n    content:\"SetForegroundWindow\"; nocase;\n    content:\"SetUnhandledExceptionFilter\"; nocase;\n    content:\"SetWindowPos\"; nocase;\n    content:\"SetWindowTextA\"; nocase;\n    content:\"ShowWindow\"; nocase;\n    content:\"Size\"; nocase;\n    content:\"SizeofResource\"; nocase;\n    content:\"Sleep\"; nocase;\n    content:\"Software\"; nocase;\n    content:\"StartupInfo\"; nocase;\n    content:\"String\"; nocase;\n    content:\"String2\"; nocase;\n    content:\"StringCchCatA\"; nocase;\n    content:\"StringCchCopyA\"; nocase;\n    content:\"StringCchPrintfA\"; nocase;\n    content:\"StringCopyWorkerA\"; nocase;\n    content:\"SubKey\"; nocase;\n    content:\"SystemInfo\"; nocase;\n    content:\"TITLE\"; nocase;\n    content:\"TMP4351\"; nocase;\n    content:\"TempDirDlgProc\"; nocase;\n    content:\"TerminateProcess\"; nocase;\n    content:\"TerminateThread\"; nocase;\n    content:\"Text\"; nocase;\n    content:\"Thread\"; nocase;\n    content:\"ThreadId\"; nocase;\n    content:\"TokenGroups\"; nocase;\n    content:\"TokenHandle\"; nocase;\n    content:\"TotalNumberOfClusters\"; nocase;\n    content:\"TravelUpdatedFiles\"; nocase;\n    content:\"Type\"; nocase;\n    content:\"UINT\"; nocase;\n    content:\"UPDFILE\"; nocase;\n    content:\"UPROMPT\"; nocase;\n    content:\"USHORT\"; nocase;\n    content:\"USRQCMD\"; nocase;\n    content:\"UnhandledExceptionFilter\"; nocase;\n    content:\"UpdateCabinetInfo\"; nocase;\n    content:\"VERCHECK\"; nocase;\n    content:\"Value\"; nocase;\n    content:\"ValueName\"; nocase;\n    content:\"VerQueryValueA\"; nocase;\n    content:\"VerifyCabinet\"; nocase;\n    content:\"Version\"; nocase;\n    content:\"VersionInformation\"; nocase;\n    content:\"WNDPROC\"; nocase;\n    content:\"WORD\"; nocase;\n    content:\"WPARAM\"; nocase;\n    content:\"WaitForObject\"; nocase;\n    content:\"WaitForSingleObject\"; nocase;\n    content:\"WarningDlgProc\"; nocase;\n    content:\"Win32Open\"; nocase;\n    content:\"WinMain\"; nocase;\n    content:\"WinMainCRTStartup\"; nocase;\n    content:\"Windows\"; nocase;\n    content:\"WriteFile\"; nocase;\n    content:\"WritePrivateProfileStringA\"; nocase;\n    content:\"_EXCEPTION_POINTERS\"; nocase;\n    content:\"_FDICopy\"; nocase;\n    content:\"_FDICreate\"; nocase;\n    content:\"_FDIDestroy\"; nocase;\n    content:\"_FDIIsCabinet\"; nocase;\n    content:\"_FILETIME\"; nocase;\n    content:\"_FindPESection\"; nocase;\n    content:\"_InterlockedCompareExchange\"; nocase;\n    content:\"_InterlockedExchange\"; nocase;\n    content:\"_LUID\"; nocase;\n    content:\"_OSVERSIONINFOA\"; nocase;\n    content:\"_PIFV\"; nocase;\n    content:\"_PROCESS_INFORMATION\"; nocase;\n    content:\"_PVFV\"; nocase;\n    content:\"_STARTUPINFOA\"; nocase;\n    content:\"_STARTUPINFOW\"; nocase;\n    content:\"_SYSTEM_INFO\"; nocase;\n    content:\"_TOKEN_PRIVILEGES\"; nocase;\n    content:\"_ValidateImageBase\"; nocase;\n    content:\"_WIN32_FIND_DATAA\"; nocase;\n    content:\"_XcptFilter\"; nocase;\n    content:\"_amsg_exit\"; nocase;\n    content:\"_dowildcard\"; nocase;\n    content:\"_except_handler4\"; nocase;\n    content:\"_except_handler4_common\"; nocase;\n    content:\"_exit\"; nocase;\n    content:\"_get_image_app_type\"; nocase;\n    content:\"_guard_check_icall_nop\"; nocase;\n    content:\"_initterm\"; nocase;\n    content:\"_initterm_e\"; nocase;\n    content:\"_lclose\"; nocase;\n    content:\"_llseek\"; nocase;\n    content:\"_lopen\"; nocase;\n    content:\"_mainCRTStartup\"; nocase;\n    content:\"_memcpy_s\"; nocase;\n    content:\"_newmode\"; nocase;\n    content:\"_setargv\"; nocase;\n    content:\"aCommandComCS\"; nocase;\n    content:\"aDoinfinstall\"; nocase;\n    content:\"aRundll32ExeSad\"; nocase;\n    content:\"aSDS\"; nocase;\n    content:\"aShbrowseforfol\"; nocase;\n    content:\"aShgetpathfromi\"; nocase;\n    content:\"aSystemCurrentc\"; nocase;\n    content:\"aSystemCurrentc_0\"; nocase;\n    content:\"advapi32\"; nocase;\n    content:\"advpack\"; nocase;\n    content:\"alloca\"; nocase;\n    content:\"allocfunc\"; nocase;\n    content:\"alpha\"; nocase;\n    content:\"attribs\"; nocase;\n    content:\"been\"; nocase;\n    content:\"bottom\"; nocase;\n    content:\"break\"; nocase;\n    content:\"byte_408A3A\"; nocase;\n    content:\"byte_408B3F\"; nocase;\n    content:\"byte_408C42\"; nocase;\n    content:\"byte_4091E5\"; nocase;\n    content:\"cFileName\"; nocase;\n    content:\"call\"; nocase;\n    content:\"case\"; nocase;\n    content:\"cbCabinet\"; nocase;\n    content:\"cbData\"; nocase;\n    content:\"cchDest\"; nocase;\n    content:\"cchToCopy\"; nocase;\n    content:\"check_managed_app\"; nocase;\n    content:\"closefunc\"; nocase;\n    content:\"continue\"; nocase;\n    content:\"date\"; nocase;\n    content:\"detected\"; nocase;\n    content:\"dist\"; nocase;\n    content:\"dwBuildNumber\"; nocase;\n    content:\"dwDisposition\"; nocase;\n    content:\"dwFlags\"; nocase;\n    content:\"dwHandle\"; nocase;\n    content:\"dwInitParam\"; nocase;\n    content:\"dwLen\"; nocase;\n    content:\"dwMajorVersion\"; nocase;\n    content:\"dwMinorVersion\"; nocase;\n    content:\"dwOSVersionInfoSize\"; nocase;\n    content:\"dwPlatformId\"; nocase;\n    content:\"dwReserved\"; nocase;\n    content:\"else\"; nocase;\n    content:\"erfOper\"; nocase;\n    content:\"fdiNotifyExtract\"; nocase;\n    content:\"fdint\"; nocase;\n    content:\"fdintCABINET_INFO\"; nocase;\n    content:\"fdintCLOSE_FILE_INFO\"; nocase;\n    content:\"fdintCOPY_FILE\"; nocase;\n    content:\"fdintNEXT_CABINET\"; nocase;\n    content:\"fdintPARTIAL_FILE\"; nocase;\n    content:\"freefunc\"; nocase;\n    content:\"g_CMD\"; nocase;\n    content:\"g_FileTable\"; nocase;\n    content:\"g_Sess\"; nocase;\n    content:\"g_bConvertRunOnce\"; nocase;\n    content:\"g_dwExitCode\"; nocase;\n    content:\"g_dwFileSizes\"; nocase;\n    content:\"g_dwRebootCheck\"; nocase;\n    content:\"g_fOSSupportsFullUI\"; nocase;\n    content:\"g_fOSSupportsINFInstalls\"; nocase;\n    content:\"g_hCancelEvent\"; nocase;\n    content:\"g_hInst\"; nocase;\n    content:\"g_hMutex\"; nocase;\n    content:\"g_hwndExtractDlg\"; nocase;\n    content:\"g_lpfnOldMEditWndProc\"; nocase;\n    content:\"g_szBrowsePath\"; nocase;\n    content:\"g_szLicense\"; nocase;\n    content:\"g_szRegValName\"; nocase;\n    content:\"g_uInfRebootOn\"; nocase;\n    content:\"g_wOSVer\"; nocase;\n    content:\"hDlg\"; nocase;\n    content:\"hMem\"; nocase;\n    content:\"hModule\"; nocase;\n    content:\"hObject\"; nocase;\n    content:\"hPrevInstance\"; nocase;\n    content:\"hProcess\"; nocase;\n    content:\"hThread\"; nocase;\n    content:\"hWnd\"; nocase;\n    content:\"hWndParent\"; nocase;\n    content:\"hasnext\"; nocase;\n    content:\"hasprev\"; nocase;\n    content:\"i386\"; nocase;\n    content:\"include\"; nocase;\n    content:\"kr00_4\"; nocase;\n    content:\"kr04_4\"; nocase;\n    content:\"lParam\"; nocase;\n    content:\"left\"; nocase;\n    content:\"load\"; nocase;\n    content:\"lpBuffer\"; nocase;\n    content:\"lpCmdLine\"; nocase;\n    content:\"lpDialogFunc\"; nocase;\n    content:\"lpFileName\"; nocase;\n    content:\"lpName\"; nocase;\n    content:\"lpPathName\"; nocase;\n    content:\"lpRootPathName\"; nocase;\n    content:\"lpStartupInfo\"; nocase;\n    content:\"lpString\"; nocase;\n    content:\"lpType\"; nocase;\n    content:\"lpdwReserved\"; nocase;\n    content:\"lpsz\"; nocase;\n    content:\"lpszStart\"; nocase;\n    content:\"lpsza\"; nocase;\n    content:\"lptstrFilename\"; nocase;\n    content:\"lstrcmpA\"; nocase;\n    content:\"memcpy\"; nocase;\n    content:\"memset\"; nocase;\n    content:\"message\"; nocase;\n    content:\"mips\"; nocase;\n    content:\"msdownld\"; nocase;\n    content:\"nNumberOfBytesToWrite\"; nocase;\n    content:\"nResult\"; nocase;\n    content:\"nShowCmd\"; nocase;\n    content:\"oflag\"; nocase;\n    content:\"openfunc\"; nocase;\n    content:\"output\"; nocase;\n    content:\"pBlock\"; nocase;\n    content:\"pHandles\"; nocase;\n    content:\"pIdentifierAuthority\"; nocase;\n    content:\"pSid\"; nocase;\n    content:\"pcchNewDestLength\"; nocase;\n    content:\"perf\"; nocase;\n    content:\"pfdici\"; nocase;\n    content:\"pfdin\"; nocase;\n    content:\"phkResult\"; nocase;\n    content:\"positive\"; nocase;\n    content:\"pre_cpp_init\"; nocase;\n    content:\"psz1\"; nocase;\n    content:\"pszCabPath\"; nocase;\n    content:\"pszCabinet\"; nocase;\n    content:\"pszDest\"; nocase;\n    content:\"pszDesta\"; nocase;\n    content:\"pszFile\"; nocase;\n    content:\"pszFormat\"; nocase;\n    content:\"pszSrc\"; nocase;\n    content:\"puLen\"; nocase;\n    content:\"qmemcpy\"; nocase;\n    content:\"readfunc\"; nocase;\n    content:\"resource\"; nocase;\n    content:\"result\"; nocase;\n    content:\"return\"; nocase;\n    content:\"right\"; nocase;\n    content:\"rsize_t\"; nocase;\n    content:\"rundll32\"; nocase;\n    content:\"sadvpack\"; nocase;\n    content:\"savAppExitCode\"; nocase;\n    content:\"seekfunc\"; nocase;\n    content:\"seektype\"; nocase;\n    content:\"setupapi\"; nocase;\n    content:\"setupx\"; nocase;\n    content:\"signed\"; nocase;\n    content:\"size_t\"; nocase;\n    content:\"sizeof\"; nocase;\n    content:\"strcpy\"; nocase;\n    content:\"string\"; nocase;\n    content:\"strlen\"; nocase;\n    content:\"szCSDVersion\"; nocase;\n    content:\"tagMSG\"; nocase;\n    content:\"tagRECT\"; nocase;\n    content:\"terminate\"; nocase;\n    content:\"this\"; nocase;\n    content:\"thunk\"; nocase;\n    content:\"time\"; nocase;\n    content:\"uType\"; nocase;\n    content:\"unused\"; nocase;\n    content:\"va_list\"; nocase;\n    content:\"va_start\"; nocase;\n    content:\"value\"; nocase;\n    content:\"vars0\"; nocase;\n    content:\"wFatTime\"; nocase;\n    content:\"wLanguage\"; nocase;\n    content:\"wParam\"; nocase;\n    content:\"wProcessorArchitecture\"; nocase;\n    content:\"wShowWindow\"; nocase;\n    content:\"wextract_cleanup\"; nocase;\n    content:\"while\"; nocase;\n    content:\"wininit\"; nocase;\n    content:\"word_4082DC\"; nocase;\n    content:\"word_4082E0\"; nocase;\n    content:\"word_4082E4\"; nocase;\n    content:\"word_4082E8\"; nocase;\n    content:\"word_40830C\"; nocase;\n    content:\"word_408318\"; nocase;\n    content:\"word_408A38\"; nocase;\n    content:\"word_409A28\"; nocase;\n    content:\"word_409A2A\"; nocase;\n    content:\"writefunc\"; nocase;\n    content:\"wrong\"; nocase;\n    threshold:type limit, track by_src, count 1, seconds 60;\n    sid:1471721; rev:1;\n)",
  "yara_rule": "rule AutoGen_ff90a340 : Malware {\n    meta:\n        description = \"Auto-generated YARA rule based on API usage\"\n        author = \"YARRAI AutoGen\"\n        date = \"2025-07-13\"\n        md5 = \"ff90a3408afbf8b9881e45e77e72276d\"\n        sha256 = \"6445781c5d6b6f6cb7d283e46a89a3e55ea6b2c84ebf89fabfc75fc17f3f649e\"\n\n    strings:\n        $s0 = \"ADMQCMD\" fullword ascii\n        $s1 = \"ANSIStrChr\" fullword ascii\n        $s2 = \"ANSIStrRChr\" fullword ascii\n        $s3 = \"AddFile\" fullword ascii\n        $s4 = \"AddPath\" fullword ascii\n        $s5 = \"AddRegRunOnce\" fullword ascii\n        $s6 = \"AdjustFileTime\" fullword ascii\n        $s7 = \"AdjustTokenPrivileges\" fullword ascii\n        $s8 = \"AdvancedINF\" fullword ascii\n        $s9 = \"AllocateAndInitializeSid\" fullword ascii\n        $s10 = \"AnalyzeCmd\" fullword ascii\n        $s11 = \"ArgList\" fullword ascii\n        $s12 = \"Attributes\" fullword ascii\n        $s13 = \"AvailableBufferCch\" fullword ascii\n        $s14 = \"BOOL\" fullword ascii\n        $s15 = \"BYREF\" fullword ascii\n        $s16 = \"BYTE\" fullword ascii\n        $s17 = \"BrowseCallback\" fullword ascii\n        $s18 = \"BrowseForDir\" fullword ascii\n        $s19 = \"Buffer\" fullword ascii\n        $s20 = \"BytesPerSector\" fullword ascii\n        $s21 = \"CABINET\" fullword ascii\n        $s22 = \"CallWindowProcA\" fullword ascii\n        $s23 = \"Caption\" fullword ascii\n        $s24 = \"CatDirAndFile\" fullword ascii\n        $s25 = \"CenterWindow\" fullword ascii\n        $s26 = \"CharNextA\" fullword ascii\n        $s27 = \"CharPrevA\" fullword ascii\n        $s28 = \"CharUpperA\" fullword ascii\n        $s29 = \"CheckFileVersion\" fullword ascii\n        $s30 = \"CheckOSVersion\" fullword ascii\n        $s31 = \"CheckOverwrite\" fullword ascii\n        $s32 = \"CheckReboot\" fullword ascii\n        $s33 = \"CheckToken\" fullword ascii\n        $s34 = \"CheckTokenMembership\" fullword ascii\n        $s35 = \"CheckWinDir\" fullword ascii\n        $s36 = \"ChrCmpA_inline\" fullword ascii\n        $s37 = \"CleanRegRunOnce\" fullword ascii\n        $s38 = \"CloseHandle\" fullword ascii\n        $s39 = \"Command\" fullword ascii\n        $s40 = \"CompareStringA\" fullword ascii\n        $s41 = \"CompareVersion\" fullword ascii\n        $s42 = \"Control\" fullword ascii\n        $s43 = \"ConvertHexStringToIntA\" fullword ascii\n        $s44 = \"ConvertRegRunOnce\" fullword ascii\n        $s45 = \"Could\" fullword ascii\n        $s46 = \"CreateAndValidateSubdir\" fullword ascii\n        $s47 = \"CreateDirectoryA\" fullword ascii\n        $s48 = \"CreateEventA\" fullword ascii\n        $s49 = \"CreateFileA\" fullword ascii\n        $s50 = \"CreateMutexA\" fullword ascii\n        $s51 = \"CreateProcessA\" fullword ascii\n        $s52 = \"CreateThread\" fullword ascii\n        $s53 = \"CreationTime\" fullword ascii\n        $s54 = \"CurrentProcess\" fullword ascii\n        $s55 = \"CurrentVersion\" fullword ascii\n        $s56 = \"DLGPROC\" fullword ascii\n        $s57 = \"DLGTEMPLATE\" fullword ascii\n        $s58 = \"DWORD\" fullword ascii\n        $s59 = \"Data\" fullword ascii\n        $s60 = \"DecryptFileA\" fullword ascii\n        $s61 = \"DelNodeRunDLL32\" fullword ascii\n        $s62 = \"DeleteExtractedFiles\" fullword ascii\n        $s63 = \"DeleteFileA\" fullword ascii\n        $s64 = \"DeleteMyDir\" fullword ascii\n        $s65 = \"Desktop\" fullword ascii\n        $s66 = \"DesktopWindow\" fullword ascii\n        $s67 = \"Destination\" fullword ascii\n        $s68 = \"DestinationSize\" fullword ascii\n        $s69 = \"DeviceCaps\" fullword ascii\n        $s70 = \"DialogBoxIndirectParamA\" fullword ascii\n        $s71 = \"DirectoryA\" fullword ascii\n        $s72 = \"DiskSpaceErrMsg\" fullword ascii\n        $s73 = \"DispatchMessageA\" fullword ascii\n        $s74 = \"DisplayLicense\" fullword ascii\n        $s75 = \"DlgItem\" fullword ascii\n        $s76 = \"DoInfInstall\" fullword ascii\n        $s77 = \"DoMain\" fullword ascii\n        $s78 = \"DosDateTimeToFileTime\" fullword ascii\n        $s79 = \"DriveTypeA\" fullword ascii\n        $s80 = \"EXTRACTOPT\" fullword ascii\n        $s81 = \"EnableWindow\" fullword ascii\n        $s82 = \"EndDialog\" fullword ascii\n        $s83 = \"EnumResLangProc\" fullword ascii\n        $s84 = \"EnumResourceLanguagesA\" fullword ascii\n        $s85 = \"EqualSid\" fullword ascii\n        $s86 = \"Error\" fullword ascii\n        $s87 = \"ExceptionCode\" fullword ascii\n        $s88 = \"ExceptionInfo\" fullword ascii\n        $s89 = \"ExceptionInformation\" fullword ascii\n        $s90 = \"ExceptionList\" fullword ascii\n        $s91 = \"ExceptionRecord\" fullword ascii\n        $s92 = \"ExitCode\" fullword ascii\n        $s93 = \"ExitProcess\" fullword ascii\n        $s94 = \"ExitWindowsEx\" fullword ascii\n        $s95 = \"ExpandCmdParams\" fullword ascii\n        $s96 = \"ExpandEnvironmentStringsA\" fullword ascii\n        $s97 = \"ExtractDlgProc\" fullword ascii\n        $s98 = \"ExtractField\" fullword ascii\n        $s99 = \"ExtractFiles\" fullword ascii\n        $s100 = \"ExtractThread\" fullword ascii\n        $s101 = \"FARPROC\" fullword ascii\n        $s102 = \"FDICABINETINFO\" fullword ascii\n        $s103 = \"FDINOTIFICATIONTYPE\" fullword ascii\n        $s104 = \"FILETIME\" fullword ascii\n        $s105 = \"FINISHMSG\" fullword ascii\n        $s106 = \"FileA\" fullword ascii\n        $s107 = \"FileAttributesA\" fullword ascii\n        $s108 = \"FileExists\" fullword ascii\n        $s109 = \"FileName\" fullword ascii\n        $s110 = \"FileSystemFlags\" fullword ascii\n        $s111 = \"FileTime\" fullword ascii\n        $s112 = \"FileVersionInfoSizeA\" fullword ascii\n        $s113 = \"Filename\" fullword ascii\n        $s114 = \"FindClose\" fullword ascii\n        $s115 = \"FindFileData\" fullword ascii\n        $s116 = \"FindFirstFileA\" fullword ascii\n        $s117 = \"FindNextFileA\" fullword ascii\n        $s118 = \"FindResourceA\" fullword ascii\n        $s119 = \"FinishMessage\" fullword ascii\n        $s120 = \"First\" fullword ascii\n        $s121 = \"FirstFileA\" fullword ascii\n        $s122 = \"FormatMessageA\" fullword ascii\n        $s123 = \"FreeLibrary\" fullword ascii\n        $s124 = \"FreeResource\" fullword ascii\n        $s125 = \"FreeSid\" fullword ascii\n        $s126 = \"GetCurrentDirectoryA\" fullword ascii\n        $s127 = \"GetCurrentProcess\" fullword ascii\n        $s128 = \"GetDC\" fullword ascii\n        $s129 = \"GetDesktopWindow\" fullword ascii\n        $s130 = \"GetDeviceCaps\" fullword ascii\n        $s131 = \"GetDiskFreeSpaceA\" fullword ascii\n        $s132 = \"GetDlgItem\" fullword ascii\n        $s133 = \"GetDlgItemTextA\" fullword ascii\n        $s134 = \"GetDriveTypeA\" fullword ascii\n        $s135 = \"GetExitCodeProcess\" fullword ascii\n        $s136 = \"GetFileAttributesA\" fullword ascii\n        $s137 = \"GetFileList\" fullword ascii\n        $s138 = \"GetFileTobeChecked\" fullword ascii\n        $s139 = \"GetFileVersionInfoA\" fullword ascii\n        $s140 = \"GetFileVersionInfoSizeA\" fullword ascii\n        $s141 = \"GetLastError\" fullword ascii\n        $s142 = \"GetModuleFileNameA\" fullword ascii\n        $s143 = \"GetModuleHandleW\" fullword ascii\n        $s144 = \"GetNewTempDir\" fullword ascii\n        $s145 = \"GetParentDir\" fullword ascii\n        $s146 = \"GetPrivateProfileIntA\" fullword ascii\n        $s147 = \"GetPrivateProfileStringA\" fullword ascii\n        $s148 = \"GetProcAddress\" fullword ascii\n        $s149 = \"GetResource\" fullword ascii\n        $s150 = \"GetResourceLanguage\" fullword ascii\n        $s151 = \"GetShortPathNameA\" fullword ascii\n        $s152 = \"GetSpace\" fullword ascii\n        $s153 = \"GetStartupInfoW\" fullword ascii\n        $s154 = \"GetSystemDirectoryA\" fullword ascii\n        $s155 = \"GetSystemInfo\" fullword ascii\n        $s156 = \"GetSystemMetrics\" fullword ascii\n        $s157 = \"GetTempDirectory\" fullword ascii\n        $s158 = \"GetTempFileNameA\" fullword ascii\n        $s159 = \"GetTempPathA\" fullword ascii\n        $s160 = \"GetTokenInformation\" fullword ascii\n        $s161 = \"GetUsersPermission\" fullword ascii\n        $s162 = \"GetVersion\" fullword ascii\n        $s163 = \"GetVersionExA\" fullword ascii\n        $s164 = \"GetVolumeInformationA\" fullword ascii\n        $s165 = \"GetWindowLongA\" fullword ascii\n        $s166 = \"GetWindowRect\" fullword ascii\n        $s167 = \"GetWindowsDirectoryA\" fullword ascii\n        $s168 = \"GetWininitSize\" fullword ascii\n        $s169 = \"GlobalAlloc\" fullword ascii\n        $s170 = \"GlobalFree\" fullword ascii\n        $s171 = \"GlobalLock\" fullword ascii\n        $s172 = \"GlobalUnlock\" fullword ascii\n        $s173 = \"HANDLE\" fullword ascii\n        $s174 = \"HEAP_INFORMATION_CLASS\" fullword ascii\n        $s175 = \"HFDI\" fullword ascii\n        $s176 = \"HFILE\" fullword ascii\n        $s177 = \"HGLOBAL\" fullword ascii\n        $s178 = \"HINSTANCE\" fullword ascii\n        $s179 = \"HKEY\" fullword ascii\n        $s180 = \"HKEY_CURRENT_USER\" fullword ascii\n        $s181 = \"HKEY_LOCAL_MACHINE\" fullword ascii\n        $s182 = \"HLOCAL\" fullword ascii\n        $s183 = \"HMODULE\" fullword ascii\n        $s184 = \"HRESULT\" fullword ascii\n        $s185 = \"HRSRC\" fullword ascii\n        $s186 = \"HWND\" fullword ascii\n        $s187 = \"HeapSetInformation\" fullword ascii\n        $s188 = \"HighPart\" fullword ascii\n        $s189 = \"INSTANCECHECK\" fullword ascii\n        $s190 = \"INT_PTR\" fullword ascii\n        $s191 = \"Init\" fullword ascii\n        $s192 = \"InitCommonControls\" fullword ascii\n        $s193 = \"InstallHinfSection\" fullword ascii\n        $s194 = \"IsBiDiLocalizedBinary\" fullword ascii\n        $s195 = \"IsDBCSLeadByte\" fullword ascii\n        $s196 = \"IsEnoughSpace\" fullword ascii\n        $s197 = \"IsFullPath\" fullword ascii\n        $s198 = \"IsGoodTempDir\" fullword ascii\n        $s199 = \"IsNTAdmin\" fullword ascii\n        $s200 = \"IsWindowsDrive\" fullword ascii\n        $s201 = \"Kernel32\" fullword ascii\n        $s202 = \"LABEL_10\" fullword ascii\n        $s203 = \"LABEL_11\" fullword ascii\n        $s204 = \"LABEL_12\" fullword ascii\n        $s205 = \"LABEL_13\" fullword ascii\n        $s206 = \"LABEL_14\" fullword ascii\n        $s207 = \"LABEL_15\" fullword ascii\n        $s208 = \"LABEL_16\" fullword ascii\n        $s209 = \"LABEL_17\" fullword ascii\n        $s210 = \"LABEL_18\" fullword ascii\n        $s211 = \"LABEL_19\" fullword ascii\n        $s212 = \"LABEL_2\" fullword ascii\n        $s213 = \"LABEL_20\" fullword ascii\n        $s214 = \"LABEL_26\" fullword ascii\n        $s215 = \"LABEL_27\" fullword ascii\n        $s216 = \"LABEL_28\" fullword ascii\n        $s217 = \"LABEL_29\" fullword ascii\n        $s218 = \"LABEL_3\" fullword ascii\n        $s219 = \"LABEL_30\" fullword ascii\n        $s220 = \"LABEL_31\" fullword ascii\n        $s221 = \"LABEL_32\" fullword ascii\n        $s222 = \"LABEL_33\" fullword ascii\n        $s223 = \"LABEL_35\" fullword ascii\n        $s224 = \"LABEL_36\" fullword ascii\n        $s225 = \"LABEL_37\" fullword ascii\n        $s226 = \"LABEL_38\" fullword ascii\n        $s227 = \"LABEL_39\" fullword ascii\n        $s228 = \"LABEL_4\" fullword ascii\n        $s229 = \"LABEL_41\" fullword ascii\n        $s230 = \"LABEL_42\" fullword ascii\n        $s231 = \"LABEL_43\" fullword ascii\n        $s232 = \"LABEL_48\" fullword ascii\n        $s233 = \"LABEL_49\" fullword ascii\n        $s234 = \"LABEL_50\" fullword ascii\n        $s235 = \"LABEL_51\" fullword ascii\n        $s236 = \"LABEL_56\" fullword ascii\n        $s237 = \"LABEL_57\" fullword ascii\n        $s238 = \"LABEL_6\" fullword ascii\n        $s239 = \"LABEL_60\" fullword ascii\n        $s240 = \"LABEL_63\" fullword ascii\n        $s241 = \"LABEL_66\" fullword ascii\n        $s242 = \"LABEL_7\" fullword ascii\n        $s243 = \"LABEL_71\" fullword ascii\n        $s244 = \"LABEL_72\" fullword ascii\n        $s245 = \"LABEL_77\" fullword ascii\n        $s246 = \"LABEL_8\" fullword ascii\n        $s247 = \"LABEL_84\" fullword ascii\n        $s248 = \"LABEL_9\" fullword ascii\n        $s249 = \"LICENSE\" fullword ascii\n        $s250 = \"LONG\" fullword ascii\n        $s251 = \"LONG_PTR\" fullword ascii\n        $s252 = \"LOWORD\" fullword ascii\n        $s253 = \"LPARAM\" fullword ascii\n        $s254 = \"LPBYTE\" fullword ascii\n        $s255 = \"LPCSTR\" fullword ascii\n        $s256 = \"LPCVOID\" fullword ascii\n        $s257 = \"LPDWORD\" fullword ascii\n        $s258 = \"LPSTARTUPINFOA\" fullword ascii\n        $s259 = \"LPSTR\" fullword ascii\n        $s260 = \"LPTHREAD_START_ROUTINE\" fullword ascii\n        $s261 = \"LPVOID\" fullword ascii\n        $s262 = \"LRESULT\" fullword ascii\n        $s263 = \"LSTATUS\" fullword ascii\n        $s264 = \"Last\" fullword ascii\n        $s265 = \"LastError\" fullword ascii\n        $s266 = \"LibFileName\" fullword ascii\n        $s267 = \"Library\" fullword ascii\n        $s268 = \"LibraryA\" fullword ascii\n        $s269 = \"LicenseDlgProc\" fullword ascii\n        $s270 = \"LoadLibraryA\" fullword ascii\n        $s271 = \"LoadLibraryExA\" fullword ascii\n        $s272 = \"LoadResource\" fullword ascii\n        $s273 = \"LoadString\" fullword ascii\n        $s274 = \"LoadStringA\" fullword ascii\n        $s275 = \"LocalAlloc\" fullword ascii\n        $s276 = \"LocalFileTimeToFileTime\" fullword ascii\n        $s277 = \"LocalFree\" fullword ascii\n        $s278 = \"LockResource\" fullword ascii\n        $s279 = \"LookupPrivilegeValueA\" fullword ascii\n        $s280 = \"LowPart\" fullword ascii\n        $s281 = \"Luid\" fullword ascii\n        $s282 = \"MEMORY\" fullword ascii\n        $s283 = \"MEditSubProc\" fullword ascii\n        $s284 = \"MakeDirectory\" fullword ascii\n        $s285 = \"MaximumComponentLength\" fullword ascii\n        $s286 = \"MessageBeep\" fullword ascii\n        $s287 = \"MessageBoxA\" fullword ascii\n        $s288 = \"Microsoft\" fullword ascii\n        $s289 = \"ModuleHandleW\" fullword ascii\n        $s290 = \"MsgBox2Param\" fullword ascii\n        $s291 = \"MsgWaitForMultipleObjects\" fullword ascii\n        $s292 = \"MulDiv\" fullword ascii\n        $s293 = \"MyDialogBox\" fullword ascii\n        $s294 = \"MyGetLastError\" fullword ascii\n        $s295 = \"MyLoadLibrary\" fullword ascii\n        $s296 = \"MyNTReboot\" fullword ascii\n        $s297 = \"MyRestartDialog\" fullword ascii\n        $s298 = \"Name\" fullword ascii\n        $s299 = \"NeedRebootInit\" fullword ascii\n        $s300 = \"NewState\" fullword ascii\n        $s301 = \"None\" fullword ascii\n        $s302 = \"NtCurrentTeb\" fullword ascii\n        $s303 = \"NtTib\" fullword ascii\n        $s304 = \"NumberOfBytesWritten\" fullword ascii\n        $s305 = \"NumberOfFreeClusters\" fullword ascii\n        $s306 = \"NumberParameters\" fullword ascii\n        $s307 = \"OpenProcessToken\" fullword ascii\n        $s308 = \"OverwriteDlgProc\" fullword ascii\n        $s309 = \"PBOOL\" fullword ascii\n        $s310 = \"PDWORD\" fullword ascii\n        $s311 = \"PESection\" fullword ascii\n        $s312 = \"PEXCEPTION_RECORD\" fullword ascii\n        $s313 = \"PFDINOTIFICATION\" fullword ascii\n        $s314 = \"PFNFREE\" fullword ascii\n        $s315 = \"PFNOPEN\" fullword ascii\n        $s316 = \"PFNSEEK\" fullword ascii\n        $s317 = \"PFNWRITE\" fullword ascii\n        $s318 = \"PHKEY\" fullword ascii\n        $s319 = \"POSTRUNPROGRAM\" fullword ascii\n        $s320 = \"PSID\" fullword ascii\n        $s321 = \"PSID_IDENTIFIER_AUTHORITY\" fullword ascii\n        $s322 = \"PVOID\" fullword ascii\n        $s323 = \"Panel\" fullword ascii\n        $s324 = \"ParseCmdLine\" fullword ascii\n        $s325 = \"Paths\" fullword ascii\n        $s326 = \"PeekMessageA\" fullword ascii\n        $s327 = \"PrivilegeCount\" fullword ascii\n        $s328 = \"Privileges\" fullword ascii\n        $s329 = \"ProcAddress\" fullword ascii\n        $s330 = \"ProcessInformation\" fullword ascii\n        $s331 = \"ProcessUpdatedFile_Size\" fullword ascii\n        $s332 = \"ProcessUpdatedFile_Write\" fullword ascii\n        $s333 = \"REBOOT\" fullword ascii\n        $s334 = \"RUNPROGRAM\" fullword ascii\n        $s335 = \"ReadFile\" fullword ascii\n        $s336 = \"Reboot\" fullword ascii\n        $s337 = \"Rect\" fullword ascii\n        $s338 = \"RegCloseKey\" fullword ascii\n        $s339 = \"RegCreateKeyExA\" fullword ascii\n        $s340 = \"RegDeleteValueA\" fullword ascii\n        $s341 = \"RegOpenKeyExA\" fullword ascii\n        $s342 = \"RegQueryInfoKeyA\" fullword ascii\n        $s343 = \"RegQueryValueExA\" fullword ascii\n        $s344 = \"RegServer\" fullword ascii\n        $s345 = \"RegSetValueExA\" fullword ascii\n        $s346 = \"ReleaseDC\" fullword ascii\n        $s347 = \"RemoveDirectoryA\" fullword ascii\n        $s348 = \"RemoveLeadTailBlanks\" fullword ascii\n        $s349 = \"ResetEvent\" fullword ascii\n        $s350 = \"Resource\" fullword ascii\n        $s351 = \"ResourceA\" fullword ascii\n        $s352 = \"ResourceLocale\" fullword ascii\n        $s353 = \"ReturnLength\" fullword ascii\n        $s354 = \"RootPathName\" fullword ascii\n        $s355 = \"RtlpImageNtHeader\" fullword ascii\n        $s356 = \"RunApps\" fullword ascii\n        $s357 = \"RunInstallCommand\" fullword ascii\n        $s358 = \"RunningOnWin95BiDiLoc\" fullword ascii\n        $s359 = \"SHBrowseForFolder\" fullword ascii\n        $s360 = \"SHGetPathFromIDList\" fullword ascii\n        $s361 = \"SHOWWINDOW\" fullword ascii\n        $s362 = \"SIZE_T\" fullword ascii\n        $s363 = \"STRSAFE_LPCSTR\" fullword ascii\n        $s364 = \"STRSAFE_LPSTR\" fullword ascii\n        $s365 = \"STRSAFE_PCNZCH\" fullword ascii\n        $s366 = \"SeShutdownPrivilege\" fullword ascii\n        $s367 = \"SectorsPerCluster\" fullword ascii\n        $s368 = \"SendDlgItemMessageA\" fullword ascii\n        $s369 = \"SendMessageA\" fullword ascii\n        $s370 = \"SetCurrentDirectoryA\" fullword ascii\n        $s371 = \"SetDlgItemTextA\" fullword ascii\n        $s372 = \"SetEvent\" fullword ascii\n        $s373 = \"SetFileAttributesA\" fullword ascii\n        $s374 = \"SetFilePointer\" fullword ascii\n        $s375 = \"SetFileTime\" fullword ascii\n        $s376 = \"SetForegroundWindow\" fullword ascii\n        $s377 = \"SetUnhandledExceptionFilter\" fullword ascii\n        $s378 = \"SetWindowLongA\" fullword ascii\n        $s379 = \"SetWindowPos\" fullword ascii\n        $s380 = \"SetWindowTextA\" fullword ascii\n        $s381 = \"ShowWindow\" fullword ascii\n        $s382 = \"Size\" fullword ascii\n        $s383 = \"SizeofResource\" fullword ascii\n        $s384 = \"Sleep\" fullword ascii\n        $s385 = \"Software\" fullword ascii\n        $s386 = \"StackBase\" fullword ascii\n        $s387 = \"StackCookie\" fullword ascii\n        $s388 = \"StartupInfo\" fullword ascii\n        $s389 = \"String\" fullword ascii\n        $s390 = \"String2\" fullword ascii\n        $s391 = \"StringCchCatA\" fullword ascii\n        $s392 = \"StringCchCopyA\" fullword ascii\n        $s393 = \"StringCchPrintfA\" fullword ascii\n        $s394 = \"StringCopyWorkerA\" fullword ascii\n        $s395 = \"SubKey\" fullword ascii\n        $s396 = \"SystemInfo\" fullword ascii\n        $s397 = \"TITLE\" fullword ascii\n        $s398 = \"TMP4351\" fullword ascii\n        $s399 = \"TempDirDlgProc\" fullword ascii\n        $s400 = \"TerminateProcess\" fullword ascii\n        $s401 = \"TerminateThread\" fullword ascii\n        $s402 = \"TestChar\" fullword ascii\n        $s403 = \"Text\" fullword ascii\n        $s404 = \"Thread\" fullword ascii\n        $s405 = \"ThreadId\" fullword ascii\n        $s406 = \"TokenGroups\" fullword ascii\n        $s407 = \"TokenHandle\" fullword ascii\n        $s408 = \"TotalNumberOfClusters\" fullword ascii\n        $s409 = \"TravelUpdatedFiles\" fullword ascii\n        $s410 = \"Type\" fullword ascii\n        $s411 = \"UINT\" fullword ascii\n        $s412 = \"ULONG\" fullword ascii\n        $s413 = \"ULONG_PTR\" fullword ascii\n        $s414 = \"UPDFILE\" fullword ascii\n        $s415 = \"UPROMPT\" fullword ascii\n        $s416 = \"USHORT\" fullword ascii\n        $s417 = \"USRQCMD\" fullword ascii\n        $s418 = \"UnhandledExceptionFilter\" fullword ascii\n        $s419 = \"UpdateCabinetInfo\" fullword ascii\n        $s420 = \"VERCHECK\" fullword ascii\n        $s421 = \"Value\" fullword ascii\n        $s422 = \"ValueName\" fullword ascii\n        $s423 = \"VerQueryValueA\" fullword ascii\n        $s424 = \"VerifyCabinet\" fullword ascii\n        $s425 = \"Version\" fullword ascii\n        $s426 = \"VersionInformation\" fullword ascii\n        $s427 = \"WNDPROC\" fullword ascii\n        $s428 = \"WORD\" fullword ascii\n        $s429 = \"WPARAM\" fullword ascii\n        $s430 = \"WaitForObject\" fullword ascii\n        $s431 = \"WaitForSingleObject\" fullword ascii\n        $s432 = \"WarningDlgProc\" fullword ascii\n        $s433 = \"Win32Open\" fullword ascii\n        $s434 = \"WinMain\" fullword ascii\n        $s435 = \"WinMainCRTStartup\" fullword ascii\n        $s436 = \"Windows\" fullword ascii\n        $s437 = \"WriteFile\" fullword ascii\n        $s438 = \"WritePrivateProfileStringA\" fullword ascii\n        $s439 = \"_BYTE\" fullword ascii\n        $s440 = \"_DWORD\" fullword ascii\n        $s441 = \"_EXCEPTION_POINTERS\" fullword ascii\n        $s442 = \"_FDICopy\" fullword ascii\n        $s443 = \"_FDICreate\" fullword ascii\n        $s444 = \"_FDIDestroy\" fullword ascii\n        $s445 = \"_FDIIsCabinet\" fullword ascii\n        $s446 = \"_FILETIME\" fullword ascii\n        $s447 = \"_FindPESection\" fullword ascii\n        $s448 = \"_InterlockedCompareExchange\" fullword ascii\n        $s449 = \"_InterlockedExchange\" fullword ascii\n        $s450 = \"_IsNonwritableInCurrentImage\" fullword ascii\n        $s451 = \"_LUID\" fullword ascii\n        $s452 = \"_LUID_AND_ATTRIBUTES\" fullword ascii\n        $s453 = \"_OSVERSIONINFOA\" fullword ascii\n        $s454 = \"_PIFV\" fullword ascii\n        $s455 = \"_PROCESS_INFORMATION\" fullword ascii\n        $s456 = \"_PVFV\" fullword ascii\n        $s457 = \"_SEH_epilog4\" fullword ascii\n        $s458 = \"_SEH_prolog4\" fullword ascii\n        $s459 = \"_STARTUPINFOA\" fullword ascii\n        $s460 = \"_STARTUPINFOW\" fullword ascii\n        $s461 = \"_SYSTEM_INFO\" fullword ascii\n        $s462 = \"_TOKEN_PRIVILEGES\" fullword ascii\n        $s463 = \"_UNKNOWN\" fullword ascii\n        $s464 = \"_ValidateImageBase\" fullword ascii\n        $s465 = \"_WIN32_FIND_DATAA\" fullword ascii\n        $s466 = \"_WORD\" fullword ascii\n        $s467 = \"_XcptFilter\" fullword ascii\n        $s468 = \"__CS__\" fullword ascii\n        $s469 = \"__CxxSetUnhandledExceptionFilter\" fullword ascii\n        $s470 = \"__CxxUnhandledExceptionFilter\" fullword ascii\n        $s471 = \"__DS__\" fullword ascii\n        $s472 = \"__ES__\" fullword ascii\n        $s473 = \"__FS__\" fullword ascii\n        $s474 = \"__GS__\" fullword ascii\n        $s475 = \"__SS__\" fullword ascii\n        $s476 = \"___getmainargs\" fullword ascii\n        $s477 = \"__acmdln\" fullword ascii\n        $s478 = \"__cdecl\" fullword ascii\n        $s479 = \"__cexit\" fullword ascii\n        $s480 = \"__dyn_tls_init_callback\" fullword ascii\n        $s481 = \"__fastcall\" fullword ascii\n        $s482 = \"__fastfail\" fullword ascii\n        $s483 = \"__int16\" fullword ascii\n        $s484 = \"__int32\" fullword ascii\n        $s485 = \"__int8\" fullword ascii\n        $s486 = \"__ismbblead\" fullword ascii\n        $s487 = \"__native_startup_lock\" fullword ascii\n        $s488 = \"__native_startup_state\" fullword ascii\n        $s489 = \"__raise_securityfailure\" fullword ascii\n        $s490 = \"__readeflags\" fullword ascii\n        $s491 = \"__report_gsfailure\" fullword ascii\n        $s492 = \"__report_rangecheckfailure\" fullword ascii\n        $s493 = \"__security_check_cookie\" fullword ascii\n        $s494 = \"__security_cookie\" fullword ascii\n        $s495 = \"__security_cookie_complement\" fullword ascii\n        $s496 = \"__security_init_cookie\" fullword ascii\n        $s497 = \"__stdcall\" fullword ascii\n        $s498 = \"__thiscall\" fullword ascii\n        $s499 = \"__usercall\" fullword ascii\n        $s500 = \"__vsnprintf\" fullword ascii\n        $s501 = \"__xc_a\" fullword ascii\n        $s502 = \"__xc_z\" fullword ascii\n        $s503 = \"__xi_a\" fullword ascii\n        $s504 = \"__xi_z\" fullword ascii\n        $s505 = \"_amsg_exit\" fullword ascii\n        $s506 = \"_dowildcard\" fullword ascii\n        $s507 = \"_except_handler4\" fullword ascii\n        $s508 = \"_except_handler4_common\" fullword ascii\n        $s509 = \"_exit\" fullword ascii\n        $s510 = \"_get_image_app_type\" fullword ascii\n        $s511 = \"_guard_check_icall_nop\" fullword ascii\n        $s512 = \"_initterm\" fullword ascii\n        $s513 = \"_initterm_e\" fullword ascii\n        $s514 = \"_lclose\" fullword ascii\n        $s515 = \"_llseek\" fullword ascii\n        $s516 = \"_lopen\" fullword ascii\n        $s517 = \"_mainCRTStartup\" fullword ascii\n        $s518 = \"_memcpy_s\" fullword ascii\n        $s519 = \"_newmode\" fullword ascii\n        $s520 = \"_setargv\" fullword ascii\n        $s521 = \"_setdefaultprecision\" fullword ascii\n        $s522 = \"aCommandComCS\" fullword ascii\n        $s523 = \"aDefaultinstall\" fullword ascii\n        $s524 = \"aDoinfinstall\" fullword ascii\n        $s525 = \"aRundll32ExeSad\" fullword ascii\n        $s526 = \"aSDS\" fullword ascii\n        $s527 = \"aShbrowseforfol\" fullword ascii\n        $s528 = \"aShgetpathfromi\" fullword ascii\n        $s529 = \"aSystemCurrentc\" fullword ascii\n        $s530 = \"aSystemCurrentc_0\" fullword ascii\n        $s531 = \"advapi32\" fullword ascii\n        $s532 = \"advpack\" fullword ascii\n        $s533 = \"ae38\" fullword ascii\n        $s534 = \"alloca\" fullword ascii\n        $s535 = \"allocfunc\" fullword ascii\n        $s536 = \"alpha\" fullword ascii\n        $s537 = \"attribs\" fullword ascii\n        $s538 = \"attributes\" fullword ascii\n        $s539 = \"been\" fullword ascii\n        $s540 = \"bool\" fullword ascii\n        $s541 = \"bottom\" fullword ascii\n        $s542 = \"break\" fullword ascii\n        $s543 = \"byte_408A3A\" fullword ascii\n        $s544 = \"byte_408B3F\" fullword ascii\n        $s545 = \"byte_408C42\" fullword ascii\n        $s546 = \"byte_4091E5\" fullword ascii\n        $s547 = \"c392\" fullword ascii\n        $s548 = \"cFileName\" fullword ascii\n        $s549 = \"call\" fullword ascii\n        $s550 = \"case\" fullword ascii\n        $s551 = \"cbCabinet\" fullword ascii\n        $s552 = \"cbData\" fullword ascii\n        $s553 = \"cchDest\" fullword ascii\n        $s554 = \"cchToCopy\" fullword ascii\n        $s555 = \"check_managed_app\" fullword ascii\n        $s556 = \"closefunc\" fullword ascii\n        $s557 = \"const\" fullword ascii\n        $s558 = \"continue\" fullword ascii\n        $s559 = \"date\" fullword ascii\n        $s560 = \"default\" fullword ascii\n        $s561 = \"detected\" fullword ascii\n        $s562 = \"dist\" fullword ascii\n        $s563 = \"dwBuildNumber\" fullword ascii\n        $s564 = \"dwDisposition\" fullword ascii\n        $s565 = \"dwFileAttributes\" fullword ascii\n        $s566 = \"dwFlags\" fullword ascii\n        $s567 = \"dwHandle\" fullword ascii\n        $s568 = \"dwInitParam\" fullword ascii\n        $s569 = \"dwLen\" fullword ascii\n        $s570 = \"dwMajorVersion\" fullword ascii\n        $s571 = \"dwMinorVersion\" fullword ascii\n        $s572 = \"dwOSVersionInfoSize\" fullword ascii\n        $s573 = \"dwPlatformId\" fullword ascii\n        $s574 = \"dwReserved\" fullword ascii\n        $s575 = \"dword_408128\" fullword ascii\n        $s576 = \"dword_4081D4\" fullword ascii\n        $s577 = \"dword_4081D8\" fullword ascii\n        $s578 = \"dword_4081E0\" fullword ascii\n        $s579 = \"dword_4081E4\" fullword ascii\n        $s580 = \"dword_4081E8\" fullword ascii\n        $s581 = \"dword_4081F4\" fullword ascii\n        $s582 = \"dword_4081F8\" fullword ascii\n        $s583 = \"dword_4081FC\" fullword ascii\n        $s584 = \"dword_408200\" fullword ascii\n        $s585 = \"dword_408204\" fullword ascii\n        $s586 = \"dword_40820C\" fullword ascii\n        $s587 = \"dword_408210\" fullword ascii\n        $s588 = \"dword_408214\" fullword ascii\n        $s589 = \"dword_408250\" fullword ascii\n        $s590 = \"dword_4082EC\" fullword ascii\n        $s591 = \"dword_4082F0\" fullword ascii\n        $s592 = \"dword_4082F4\" fullword ascii\n        $s593 = \"dword_4082F8\" fullword ascii\n        $s594 = \"dword_4082FC\" fullword ascii\n        $s595 = \"dword_408300\" fullword ascii\n        $s596 = \"dword_408304\" fullword ascii\n        $s597 = \"dword_408308\" fullword ascii\n        $s598 = \"dword_408310\" fullword ascii\n        $s599 = \"dword_408314\" fullword ascii\n        $s600 = \"dword_408590\" fullword ascii\n        $s601 = \"dword_408A24\" fullword ascii\n        $s602 = \"dword_408A28\" fullword ascii\n        $s603 = \"dword_408A2C\" fullword ascii\n        $s604 = \"dword_408A30\" fullword ascii\n        $s605 = \"dword_408A34\" fullword ascii\n        $s606 = \"dword_408D48\" fullword ascii\n        $s607 = \"dword_408D64\" fullword ascii\n        $s608 = \"dword_408D68\" fullword ascii\n        $s609 = \"dword_408D6C\" fullword ascii\n        $s610 = \"dword_408D70\" fullword ascii\n        $s611 = \"dword_408D74\" fullword ascii\n        $s612 = \"dword_409144\" fullword ascii\n        $s613 = \"dword_4091D8\" fullword ascii\n        $s614 = \"dword_4091DC\" fullword ascii\n        $s615 = \"dword_4093EC\" fullword ascii\n        $s616 = \"dword_4093F4\" fullword ascii\n        $s617 = \"dword_4093F8\" fullword ascii\n        $s618 = \"dword_409400\" fullword ascii\n        $s619 = \"dword_409A2C\" fullword ascii\n        $s620 = \"dword_409A30\" fullword ascii\n        $s621 = \"dword_409A34\" fullword ascii\n        $s622 = \"dword_409A38\" fullword ascii\n        $s623 = \"else\" fullword ascii\n        $s624 = \"erfOper\" fullword ascii\n        $s625 = \"fdiNotifyExtract\" fullword ascii\n        $s626 = \"fdint\" fullword ascii\n        $s627 = \"fdintCABINET_INFO\" fullword ascii\n        $s628 = \"fdintCLOSE_FILE_INFO\" fullword ascii\n        $s629 = \"fdintCOPY_FILE\" fullword ascii\n        $s630 = \"fdintNEXT_CABINET\" fullword ascii\n        $s631 = \"fdintPARTIAL_FILE\" fullword ascii\n        $s632 = \"freefunc\" fullword ascii\n        $s633 = \"g_CMD\" fullword ascii\n        $s634 = \"g_FileTable\" fullword ascii\n        $s635 = \"g_Sess\" fullword ascii\n        $s636 = \"g_bConvertRunOnce\" fullword ascii\n        $s637 = \"g_dwExitCode\" fullword ascii\n        $s638 = \"g_dwFileSizes\" fullword ascii\n        $s639 = \"g_dwRebootCheck\" fullword ascii\n        $s640 = \"g_fOSSupportsFullUI\" fullword ascii\n        $s641 = \"g_fOSSupportsINFInstalls\" fullword ascii\n        $s642 = \"g_hCancelEvent\" fullword ascii\n        $s643 = \"g_hInst\" fullword ascii\n        $s644 = \"g_hMutex\" fullword ascii\n        $s645 = \"g_hwndExtractDlg\" fullword ascii\n        $s646 = \"g_lpfnOldMEditWndProc\" fullword ascii\n        $s647 = \"g_szBrowsePath\" fullword ascii\n        $s648 = \"g_szLicense\" fullword ascii\n        $s649 = \"g_szRegValName\" fullword ascii\n        $s650 = \"g_uInfRebootOn\" fullword ascii\n        $s651 = \"g_wOSVer\" fullword ascii\n        $s652 = \"hDlg\" fullword ascii\n        $s653 = \"hInstance\" fullword ascii\n        $s654 = \"hMem\" fullword ascii\n        $s655 = \"hModule\" fullword ascii\n        $s656 = \"hObject\" fullword ascii\n        $s657 = \"hPrevInstance\" fullword ascii\n        $s658 = \"hProcess\" fullword ascii\n        $s659 = \"hThread\" fullword ascii\n        $s660 = \"hWnd\" fullword ascii\n        $s661 = \"hWndParent\" fullword ascii\n        $s662 = \"hasnext\" fullword ascii\n        $s663 = \"hasprev\" fullword ascii\n        $s664 = \"i386\" fullword ascii\n        $s665 = \"include\" fullword ascii\n        $s666 = \"kr00_4\" fullword ascii\n        $s667 = \"kr04_4\" fullword ascii\n        $s668 = \"lParam\" fullword ascii\n        $s669 = \"left\" fullword ascii\n        $s670 = \"load\" fullword ascii\n        $s671 = \"lpBuffer\" fullword ascii\n        $s672 = \"lpCmdLine\" fullword ascii\n        $s673 = \"lpDialogFunc\" fullword ascii\n        $s674 = \"lpFileName\" fullword ascii\n        $s675 = \"lpName\" fullword ascii\n        $s676 = \"lpPathName\" fullword ascii\n        $s677 = \"lpRootPathName\" fullword ascii\n        $s678 = \"lpStartupInfo\" fullword ascii\n        $s679 = \"lpString\" fullword ascii\n        $s680 = \"lpType\" fullword ascii\n        $s681 = \"lpdwReserved\" fullword ascii\n        $s682 = \"lpsz\" fullword ascii\n        $s683 = \"lpszStart\" fullword ascii\n        $s684 = \"lpsza\" fullword ascii\n        $s685 = \"lptstrFilename\" fullword ascii\n        $s686 = \"lstrcmpA\" fullword ascii\n        $s687 = \"memcpy\" fullword ascii\n        $s688 = \"memset\" fullword ascii\n        $s689 = \"message\" fullword ascii\n        $s690 = \"mips\" fullword ascii\n        $s691 = \"msdownld\" fullword ascii\n        $s692 = \"nNumberOfBytesToWrite\" fullword ascii\n        $s693 = \"nResult\" fullword ascii\n        $s694 = \"nShowCmd\" fullword ascii\n        $s695 = \"off_401000\" fullword ascii\n        $s696 = \"oflag\" fullword ascii\n        $s697 = \"openfunc\" fullword ascii\n        $s698 = \"output\" fullword ascii\n        $s699 = \"pBlock\" fullword ascii\n        $s700 = \"pHandles\" fullword ascii\n        $s701 = \"pIdentifierAuthority\" fullword ascii\n        $s702 = \"pSid\" fullword ascii\n        $s703 = \"pcchNewDestLength\" fullword ascii\n        $s704 = \"perf\" fullword ascii\n        $s705 = \"pfdici\" fullword ascii\n        $s706 = \"pfdin\" fullword ascii\n        $s707 = \"phkResult\" fullword ascii\n        $s708 = \"positive\" fullword ascii\n        $s709 = \"pre_cpp_init\" fullword ascii\n        $s710 = \"psz1\" fullword ascii\n        $s711 = \"pszCabPath\" fullword ascii\n        $s712 = \"pszCabinet\" fullword ascii\n        $s713 = \"pszDest\" fullword ascii\n        $s714 = \"pszDesta\" fullword ascii\n        $s715 = \"pszFile\" fullword ascii\n        $s716 = \"pszFormat\" fullword ascii\n        $s717 = \"pszSrc\" fullword ascii\n        $s718 = \"puLen\" fullword ascii\n        $s719 = \"qmemcpy\" fullword ascii\n        $s720 = \"readfunc\" fullword ascii\n        $s721 = \"resource\" fullword ascii\n        $s722 = \"result\" fullword ascii\n        $s723 = \"retaddr\" fullword ascii\n        $s724 = \"return\" fullword ascii\n        $s725 = \"right\" fullword ascii\n        $s726 = \"rsize_t\" fullword ascii\n        $s727 = \"rundll32\" fullword ascii\n        $s728 = \"sadvpack\" fullword ascii\n        $s729 = \"savAppExitCode\" fullword ascii\n        $s730 = \"seekfunc\" fullword ascii\n        $s731 = \"seektype\" fullword ascii\n        $s732 = \"setupapi\" fullword ascii\n        $s733 = \"setupx\" fullword ascii\n        $s734 = \"signed\" fullword ascii\n        $s735 = \"size_t\" fullword ascii\n        $s736 = \"sizeof\" fullword ascii\n        $s737 = \"strcpy\" fullword ascii\n        $s738 = \"string\" fullword ascii\n        $s739 = \"strlen\" fullword ascii\n        $s740 = \"struct\" fullword ascii\n        $s741 = \"switch\" fullword ascii\n        $s742 = \"szCSDVersion\" fullword ascii\n        $s743 = \"tagMSG\" fullword ascii\n        $s744 = \"tagRECT\" fullword ascii\n        $s745 = \"terminate\" fullword ascii\n        $s746 = \"this\" fullword ascii\n        $s747 = \"thunk\" fullword ascii\n        $s748 = \"time\" fullword ascii\n        $s749 = \"uType\" fullword ascii\n        $s750 = \"uintptr_t\" fullword ascii\n        $s751 = \"unk_4081EC\" fullword ascii\n        $s752 = \"unk_4081F0\" fullword ascii\n        $s753 = \"unk_408218\" fullword ascii\n        $s754 = \"unk_40821C\" fullword ascii\n        $s755 = \"unk_40940C\" fullword ascii\n        $s756 = \"unk_40971C\" fullword ascii\n        $s757 = \"unsigned\" fullword ascii\n        $s758 = \"unused\" fullword ascii\n        $s759 = \"va_list\" fullword ascii\n        $s760 = \"va_start\" fullword ascii\n        $s761 = \"value\" fullword ascii\n        $s762 = \"vars0\" fullword ascii\n        $s763 = \"void\" fullword ascii\n        $s764 = \"wFatTime\" fullword ascii\n        $s765 = \"wLanguage\" fullword ascii\n        $s766 = \"wParam\" fullword ascii\n        $s767 = \"wProcessorArchitecture\" fullword ascii\n        $s768 = \"wShowWindow\" fullword ascii\n        $s769 = \"wextract_cleanup\" fullword ascii\n        $s770 = \"while\" fullword ascii\n        $s771 = \"wininit\" fullword ascii\n        $s772 = \"word_4082DC\" fullword ascii\n        $s773 = \"word_4082E0\" fullword ascii\n        $s774 = \"word_4082E4\" fullword ascii\n        $s775 = \"word_4082E8\" fullword ascii\n        $s776 = \"word_40830C\" fullword ascii\n        $s777 = \"word_408318\" fullword ascii\n        $s778 = \"word_408A38\" fullword ascii\n        $s779 = \"word_409A28\" fullword ascii\n        $s780 = \"word_409A2A\" fullword ascii\n        $s781 = \"writefunc\" fullword ascii\n        $s782 = \"wrong\" fullword ascii\n\n    condition:\n        uint16(0) == 0x5A4D and 783 of them\n}"
}