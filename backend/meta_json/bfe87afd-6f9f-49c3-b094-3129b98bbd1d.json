{
  "get_metadata": {
    "path": "F:\\users\\WhiteHat\\YARRAAI\\code\\YARRAI_Web\\backend\\uploads\\bfe87afd-6f9f-49c3-b094-3129b98bbd1d.exe",
    "module": "bfe87afd-6f9f-49c3-b094-3129b98bbd1d.exe",
    "base": "0x140000000",
    "size": "0x13d000",
    "md5": "5a75d0870cf22d2e8cdf8cbc31fad3f1",
    "sha256": "7257766c7a1d0bf3fe2f6634877c4238d19bd7acd458a828f7851e145e7e295a",
    "crc32": "0x976374",
    "filesize": "0x138000"
  },
  "get_current_address": "0x140008200",
  "get_current_function": "0x140008200",
  "get_entry_points": [
    {
      "address": "0x140008200",
      "name": "WinMainCRTStartup",
      "size": "0x12"
    }
  ],
  "file_entropy": 7.9464467275818835,
  "string_stats": {
    "string_count": 238,
    "avg_str_len": 0.0,
    "max_str_len": 0
  },
  "pe_headers": {
    "file_name": "bfe87afd-6f9f-49c3-b094-3129b98bbd1d.exe",
    "machine": "0x8664",
    "number_of_sections": 6,
    "time_date_stamp": "0xae1bc4f8",
    "pointer_to_symbol_table": "0x0",
    "number_of_symbols": 0,
    "size_of_optional_header": 240,
    "characteristics": "0x22",
    "entry_point": "0x8200",
    "image_base": "0x140000000",
    "section_alignment": "0x1000",
    "file_alignment": "0x200",
    "subsystem": "0x2",
    "dll_characteristics": "0xc160",
    "sections": [
      {
        "name": ".text",
        "virtual_address": "0x1000",
        "virtual_size": "0x7b80",
        "raw_size": "0x7c00",
        "characteristics": "0x60000020"
      },
      {
        "name": ".rdata",
        "virtual_address": "0x9000",
        "virtual_size": "0x22c8",
        "raw_size": "0x2400",
        "characteristics": "0x40000040"
      },
      {
        "name": ".data",
        "virtual_address": "0xc000",
        "virtual_size": "0x1f00",
        "raw_size": "0x400",
        "characteristics": "0xc0000040"
      },
      {
        "name": ".pdata",
        "virtual_address": "0xe000",
        "virtual_size": "0x408",
        "raw_size": "0x600",
        "characteristics": "0x40000040"
      },
      {
        "name": ".rsrc",
        "virtual_address": "0xf000",
        "virtual_size": "0x12cfd2",
        "raw_size": "0x12d000",
        "characteristics": "0x40000040"
      },
      {
        "name": ".reloc",
        "virtual_address": "0x13c000",
        "virtual_size": "0x20",
        "raw_size": "0x200",
        "characteristics": "0x42000040"
      }
    ]
  },
  "virustotal": {
    "sha256": "7257766c7a1d0bf3fe2f6634877c4238d19bd7acd458a828f7851e145e7e295a",
    "type_tag": "peexe",
    "popular_threat_name": null,
    "tags": [
      "peexe",
      "malware",
      "executes-dropped-file",
      "64bits"
    ]
  },
  "c_code": [
    "#include \"bfe87afd-6f9f-49c3-b094-3129b98bbd1d.h\"",
    "",
    "HRESULT __stdcall StringCchCopyA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc)",
    "{",
    "  HRESULT v3; // r9d",
    "  size_t v4; // r10",
    "  signed __int64 v5; // r8",
    "  char v6; // al",
    "  STRSAFE_LPSTR v7; // rax",
    "",
    "  v3 = 0;",
    "  if ( cchDest - 1 > 0x7FFFFFFE )",
    "    v3 = -2147024809;",
    "  if ( v3 < 0 )",
    "  {",
    "    if ( cchDest )",
    "      *pszDest = 0;",
    "  }",
    "  else",
    "  {",
    "    if ( cchDest )",
    "    {",
    "      v4 = 2147483646 - cchDest;",
    "      v5 = pszSrc - pszDest;",
    "      do",
    "      {",
    "        if ( !(v4 + cchDest) )",
    "          break;",
    "        v6 = pszDest[v5];",
    "        if ( !v6 )",
    "          break;",
    "        *pszDest++ = v6;",
    "        --cchDest;",
    "      }",
    "      while ( cchDest );",
    "    }",
    "    v7 = pszDest - 1;",
    "    if ( cchDest )",
    "      v7 = pszDest;",
    "    v3 = cchDest == 0 ? 0x8007007A : 0;",
    "    *v7 = 0;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "HRESULT __stdcall StringCchCatA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc)",
    "{",
    "  HRESULT v3; // r9d",
    "  size_t v7; // rcx",
    "  STRSAFE_LPSTR i; // rax",
    "  size_t v9; // r8",
    "  char *v10; // rdx",
    "  size_t v11; // rcx",
    "  __int64 v12; // r9",
    "  const char *v13; // r11",
    "  char v14; // al",
    "  char *v15; // rax",
    "",
    "  v3 = 0;",
    "  if ( cchDest - 1 > 0x7FFFFFFE )",
    "    v3 = -2147024809;",
    "  if ( v3 < 0 )",
    "    goto LABEL_9;",
    "  v7 = cchDest;",
    "  for ( i = pszDest; v7; --v7 )",
    "  {",
    "    if ( !*i )",
    "      break;",
    "    ++i;",
    "  }",
    "  v3 = v7 == 0 ? 0x80070057 : 0;",
    "  if ( v7 )",
    "    v9 = cchDest - v7;",
    "  else",
    "LABEL_9:",
    "    v9 = 0;",
    "  if ( v3 >= 0 )",
    "  {",
    "    v10 = &pszDest[v9];",
    "    v11 = cchDest - v9;",
    "    if ( cchDest != v9 )",
    "    {",
    "      v12 = 2147483646;",
    "      v13 = (const char *)(pszSrc - v10);",
    "      do",
    "      {",
    "        if ( !v12 )",
    "          break;",
    "        v14 = v10[(_QWORD)v13];",
    "        if ( !v14 )",
    "          break;",
    "        *v10 = v14;",
    "        --v12;",
    "        ++v10;",
    "        --v11;",
    "      }",
    "      while ( v11 );",
    "    }",
    "    v15 = v10 - 1;",
    "    if ( v11 )",
    "      v15 = v10;",
    "    v3 = v11 == 0 ? 0x8007007A : 0;",
    "    *v15 = 0;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "HRESULT StringCchPrintfA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszFormat, ...)",
    "{",
    "  HRESULT v3; // edi",
    "  size_t v5; // rbx",
    "  int v6; // eax",
    "  va_list ArgList; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(ArgList, pszFormat);",
    "  v3 = 0;",
    "  if ( cchDest - 1 > 0x7FFFFFFE )",
    "    v3 = -2147024809;",
    "  if ( v3 < 0 )",
    "  {",
    "    if ( cchDest )",
    "      *pszDest = 0;",
    "  }",
    "  else",
    "  {",
    "    v5 = cchDest - 1;",
    "    v3 = 0;",
    "    v6 = _vsnprintf(pszDest, cchDest - 1, pszFormat, ArgList);",
    "    if ( v6 < 0 || v6 > v5 )",
    "    {",
    "      pszDest[v5] = 0;",
    "      return -2147024774;",
    "    }",
    "    else if ( v6 == v5 )",
    "    {",
    "      pszDest[v5] = 0;",
    "    }",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 __fastcall CheckToken(_DWORD *a1)",
    "{",
    "  unsigned int v2; // edi",
    "  HMODULE LibraryA; // rax",
    "  HMODULE v4; // rbx",
    "  FARPROC ProcAddress; // rsi",
    "  PSID pSid; // [rsp+60h] [rbp-38h] BYREF",
    "  _SID_IDENTIFIER_AUTHORITY pIdentifierAuthority; // [rsp+68h] [rbp-30h] BYREF",
    "",
    "  *(_WORD *)&pIdentifierAuthority.Value[4] = 1280;",
    "  v2 = 0;",
    "  *(_DWORD *)pIdentifierAuthority.Value = 0;",
    "  LibraryA = LoadLibraryA(\"advapi32.dll\");",
    "  v4 = LibraryA;",
    "  if ( LibraryA )",
    "  {",
    "    ProcAddress = GetProcAddress(LibraryA, \"CheckTokenMembership\");",
    "    if ( ProcAddress )",
    "    {",
    "      *a1 = 0;",
    "      v2 = 1;",
    "      if ( AllocateAndInitializeSid(&pIdentifierAuthority, 2u, 0x20u, 0x220u, 0, 0, 0, 0, 0, 0, &pSid) )",
    "      {",
    "        ((void (__fastcall *)(_QWORD, PSID, _DWORD *))ProcAddress)(0, pSid, a1);",
    "        FreeSid(pSid);",
    "      }",
    "    }",
    "    FreeLibrary(v4);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "BOOL __stdcall IsNTAdmin(DWORD dwReserved, DWORD *lpdwReserved)",
    "{",
    "  BOOL result; // eax",
    "  HANDLE CurrentProcess; // rax",
    "  _DWORD *v4; // rdi",
    "  int v5; // esi",
    "  int v6; // ecx",
    "  BOOL v7; // [rsp+68h] [rbp+27h] BYREF",
    "  DWORD TokenInformationLength; // [rsp+6Ch] [rbp+2Bh] BYREF",
    "  HANDLE TokenHandle; // [rsp+70h] [rbp+2Fh] BYREF",
    "  PSID pSid2; // [rsp+78h] [rbp+37h] BYREF",
    "  struct _SID_IDENTIFIER_AUTHORITY pIdentifierAuthority; // [rsp+80h] [rbp+3Fh] BYREF",
    "",
    "  result = dword_14000C14C;",
    "  *(_DWORD *)pIdentifierAuthority.Value = 0;",
    "  *(_WORD *)&pIdentifierAuthority.Value[4] = 1280;",
    "  v7 = 0;",
    "  if ( dword_14000C14C == 2 )",
    "  {",
    "    if ( (unsigned int)CheckToken(&v7) )",
    "    {",
    "      v6 = dword_14000C14C;",
    "      result = v7;",
    "      if ( v7 )",
    "        v6 = 1;",
    "      dword_14000C14C = v6;",
    "    }",
    "    else",
    "    {",
    "      CurrentProcess = GetCurrentProcess();",
    "      result = OpenProcessToken(CurrentProcess, 8u, &TokenHandle);",
    "      if ( result )",
    "      {",
    "        if ( !GetTokenInformation(TokenHandle, TokenGroups, 0, 0, &TokenInformationLength) && GetLastError() == 122 )",
    "        {",
    "          v4 = LocalAlloc(0, TokenInformationLength);",
    "          if ( v4 )",
    "          {",
    "            if ( GetTokenInformation(TokenHandle, TokenGroups, v4, TokenInformationLength, &TokenInformationLength)",
    "              && AllocateAndInitializeSid(&pIdentifierAuthority, 2u, 0x20u, 0x220u, 0, 0, 0, 0, 0, 0, &pSid2) )",
    "            {",
    "              v5 = 0;",
    "              if ( *v4 )",
    "              {",
    "                while ( !EqualSid(*(PSID *)&v4[4 * v5 + 2], pSid2) )",
    "                {",
    "                  if ( (unsigned int)++v5 >= *v4 )",
    "                    goto LABEL_14;",
    "                }",
    "                dword_14000C14C = 1;",
    "                v7 = 1;",
    "              }",
    "LABEL_14:",
    "              FreeSid(pSid2);",
    "            }",
    "            LocalFree(v4);",
    "          }",
    "        }",
    "        CloseHandle(TokenHandle);",
    "        return v7;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall WarningDlgProc(HWND hDlg, int a2, INT_PTR a3, UINT a4)",
    "{",
    "  int v6; // edx",
    "  HWND DesktopWindow; // rax",
    "  CHAR Buffer[512]; // [rsp+20h] [rbp-218h] BYREF",
    "",
    "  v6 = a2 - 272;",
    "  if ( v6 )",
    "  {",
    "    if ( v6 != 1 || (unsigned __int64)(a3 - 2109) > 1 )",
    "      return 0;",
    "    EndDialog(hDlg, a3);",
    "  }",
    "  else",
    "  {",
    "    DesktopWindow = GetDesktopWindow();",
    "    CenterWindow(hDlg, DesktopWindow);",
    "    Buffer[0] = 0;",
    "    LoadStringA(g_hInst, a4, Buffer, 512);",
    "    SetDlgItemTextA(hDlg, 2111, Buffer);",
    "    MessageBeep(0xFFFFFFFF);",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "_BYTE *__fastcall ExtractField(_BYTE **a1, const CHAR *a2)",
    "{",
    "  _BYTE *v2; // rbx",
    "  int v5; // ebp",
    "  _BYTE *v6; // rdi",
    "  _BYTE *result; // rax",
    "",
    "  v2 = *a1;",
    "  v5 = 0;",
    "  while ( ANSIStrChr(a2) )",
    "  {",
    "    if ( !*v2 )",
    "      return 0;",
    "    ++v2;",
    "  }",
    "  *a1 = v2;",
    "  if ( !ANSIStrChr(a2) )",
    "  {",
    "    v6 = v2;",
    "    do",
    "    {",
    "      if ( !*v6 )",
    "        break;",
    "      ++v6;",
    "      ++v5;",
    "    }",
    "    while ( !ANSIStrChr(a2) );",
    "  }",
    "  result = &v2[v5];",
    "  if ( *result )",
    "    *result++ = 0;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall AnalyzeCmd(STRSAFE_LPSTR pszDest, __int64 a2, char **a3, _DWORD *a4)",
    "{",
    "  char *v6; // rcx",
    "  __int64 v7; // r10",
    "  __int64 v10; // rdx",
    "  char v11; // al",
    "  char *v12; // rax",
    "  const CHAR *v13; // rdx",
    "  const CHAR *v14; // rax",
    "  const CHAR *Field; // rax",
    "  const char *v16; // rdi",
    "  __int64 v17; // rbx",
    "  const CHAR *v18; // rsi",
    "  unsigned __int64 v19; // rax",
    "  CHAR v20; // al",
    "  signed __int64 v21; // r8",
    "  SIZE_T *v22; // rcx",
    "  __int64 v23; // rdx",
    "  char v24; // al",
    "  SIZE_T *v25; // rax",
    "  __int64 v26; // rdx",
    "  SIZE_T *v27; // rcx",
    "  char v28; // al",
    "  SIZE_T *v29; // rax",
    "  const CHAR *v30; // rax",
    "  DWORD FileAttributesA; // eax",
    "  const CHAR *v32; // rcx",
    "  const CHAR *v33; // rax",
    "  char *v34; // rbx",
    "  LPCSTR v35; // rsi",
    "  const char *v36; // rdi",
    "  const CHAR *v37; // rcx",
    "  UINT PrivateProfileIntA; // eax",
    "  const char *v39; // r14",
    "  const CHAR *v41; // rax",
    "  __int64 v42; // rax",
    "  __int64 v43; // rdi",
    "  char *v44; // rax",
    "  __int64 v45; // rdi",
    "  DWORD v46; // eax",
    "  __int64 v47; // rdx",
    "  char *v48; // rcx",
    "  char v49; // al",
    "  char *v50; // rax",
    "  __int64 v51; // r14",
    "  char *v52; // rdx",
    "  char v53; // al",
    "  char *v54; // rcx",
    "  LPCSTR lpAppName[2]; // [rsp+30h] [rbp-D0h] BYREF",
    "  SIZE_T FileName[34]; // [rsp+40h] [rbp-C0h] BYREF",
    "  char v57; // [rsp+150h] [rbp+50h] BYREF",
    "  char v58; // [rsp+151h] [rbp+51h] BYREF",
    "  char pszDesta[1024]; // [rsp+260h] [rbp+160h] BYREF",
    "",
    "  v6 = &v57;",
    "  v7 = pszDest - &v57;",
    "  v10 = 260;",
    "  do",
    "  {",
    "    if ( v10 == -2147483386 )",
    "      break;",
    "    v11 = v6[v7];",
    "    if ( !v11 )",
    "      break;",
    "    *v6++ = v11;",
    "    --v10;",
    "  }",
    "  while ( v10 );",
    "  v12 = v6 - 1;",
    "  if ( v10 )",
    "    v12 = v6;",
    "  *v12 = 0;",
    "  if ( v57 == 34 )",
    "  {",
    "    v13 = \"\\\"\";",
    "    v14 = &v58;",
    "  }",
    "  else",
    "  {",
    "    v13 = \" \";",
    "    v14 = &v57;",
    "  }",
    "  lpAppName[0] = v14;",
    "  Field = ExtractField((_BYTE **)lpAppName, v13);",
    "  v16 = lpAppName[0];",
    "  v17 = -1;",
    "  v18 = Field;",
    "  if ( !lpAppName[0] )",
    "    goto LABEL_25;",
    "  v19 = -1;",
    "  do",
    "    ++v19;",
    "  while ( lpAppName[0][v19] );",
    "  if ( v19 < 3 )",
    "    goto LABEL_25;",
    "  if ( (v20 = lpAppName[0][1], v20 == 58) && lpAppName[0][2] == 92 || *lpAppName[0] == 92 && v20 == 92 )",
    "  {",
    "    v21 = lpAppName[0] - (LPCSTR)FileName;",
    "    v22 = FileName;",
    "    v23 = 260;",
    "    do",
    "    {",
    "      if ( v23 == -2147483386 )",
    "        break;",
    "      v24 = *((_BYTE *)v22 + v21);",
    "      if ( !v24 )",
    "        break;",
    "      *(_BYTE *)v22 = v24;",
    "      v22 = (SIZE_T *)((char *)v22 + 1);",
    "      --v23;",
    "    }",
    "    while ( v23 );",
    "    v25 = (SIZE_T *)((char *)v22 - 1);",
    "    if ( v23 )",
    "      v25 = v22;",
    "    *(_BYTE *)v25 = 0;",
    "  }",
    "  else",
    "  {",
    "LABEL_25:",
    "    v26 = 260;",
    "    v27 = FileName;",
    "    do",
    "    {",
    "      if ( v26 == -2147483386 )",
    "        break;",
    "      v28 = *((_BYTE *)v27 + &PathName - (CHAR *)FileName);",
    "      if ( !v28 )",
    "        break;",
    "      *(_BYTE *)v27 = v28;",
    "      v27 = (SIZE_T *)((char *)v27 + 1);",
    "      --v26;",
    "    }",
    "    while ( v26 );",
    "    v29 = (SIZE_T *)((char *)v27 - 1);",
    "    if ( v26 )",
    "      v29 = v27;",
    "    *(_BYTE *)v29 = 0;",
    "    AddPath((STRSAFE_LPSTR)FileName, 0x104u, v16);",
    "  }",
    "  v30 = (const CHAR *)ANSIStrRChr(v16);",
    "  if ( v30 && CompareStringA(0x7Fu, 1u, v30, -1, \".INF\", -1) == 2 )",
    "  {",
    "    FileAttributesA = GetFileAttributesA((LPCSTR)FileName);",
    "    if ( FileAttributesA != -1 && (FileAttributesA & 0x10) == 0 )",
    "    {",
    "      lpAppName[0] = v18;",
    "      v32 = ExtractField((_BYTE **)lpAppName, \"[\");",
    "      if ( v32 )",
    "      {",
    "        v33 = lpAppName[0];",
    "        if ( *v32 )",
    "          v33 = v32;",
    "        lpAppName[0] = v33;",
    "        ExtractField((_BYTE **)lpAppName, \"]\");",
    "      }",
    "      v34 = (char *)LocalAlloc(0x40u, 0x200u);",
    "      if ( v34 )",
    "      {",
    "        v35 = lpAppName[0];",
    "        v36 = aDefaultinstall;",
    "        v37 = aDefaultinstall;",
    "        if ( *lpAppName[0] )",
    "          v37 = lpAppName[0];",
    "        PrivateProfileIntA = GetPrivateProfileIntA(v37, \"Reboot\", 0, (LPCSTR)FileName);",
    "        *a4 = 1;",
    "        g_uInfRebootOn = PrivateProfileIntA;",
    "        if ( GetPrivateProfileStringA(\"Version\", \"AdvancedINF\", pszCabPath, v34, 8u, (LPCSTR)FileName) )",
    "        {",
    "          dword_14000DE64 |= 4u;",
    "          if ( *v35 )",
    "            v36 = v35;",
    "          StringCchCopyA(pszDest, 0x104u, v36);",
    "          StringCchCopyA(v34, 0x200u, (STRSAFE_LPCSTR)FileName);",
    "        }",
    "        else",
    "        {",
    "          dword_14000DE64 &= ~4u;",
    "          if ( g_wOSVer )",
    "          {",
    "            v39 = \"setupapi.dll\";",
    "          }",
    "          else",
    "          {",
    "            v39 = \"setupx.dll\";",
    "            GetShortPathNameA((LPCSTR)FileName, (LPSTR)FileName, 0x104u);",
    "          }",
    "          if ( *v35 )",
    "            v36 = v35;",
    "          StringCchPrintfA(v34, 0x200u, pszFormat, v39, v36, FileName);",
    "        }",
    "        goto LABEL_82;",
    "      }",
    "    }",
    "LABEL_53:",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  v41 = (const CHAR *)ANSIStrRChr(v16);",
    "  if ( !v41 || CompareStringA(0x7Fu, 1u, v41, -1, \".BAT\", -1) != 2 )",
    "  {",
    "    v45 = 1024;",
    "    v34 = (char *)LocalAlloc(0x40u, 0x400u);",
    "    if ( v34 )",
    "    {",
    "      v46 = GetFileAttributesA((LPCSTR)FileName);",
    "      if ( v46 == -1 || (v46 & 0x10) != 0 )",
    "      {",
    "        v51 = pszDest - pszDesta;",
    "        v52 = pszDesta;",
    "        do",
    "        {",
    "          if ( v45 == -2147482622 )",
    "            break;",
    "          v53 = v52[v51];",
    "          if ( !v53 )",
    "            break;",
    "          *v52++ = v53;",
    "          --v45;",
    "        }",
    "        while ( v45 );",
    "        v54 = v52 - 1;",
    "        if ( v45 )",
    "          v54 = v52;",
    "        *v54 = 0;",
    "      }",
    "      else",
    "      {",
    "        v47 = 1024;",
    "        v48 = pszDesta;",
    "        do",
    "        {",
    "          if ( v47 == -2147482622 )",
    "            break;",
    "          v49 = v48[(char *)FileName - pszDesta];",
    "          if ( !v49 )",
    "            break;",
    "          *v48++ = v49;",
    "          --v47;",
    "        }",
    "        while ( v47 );",
    "        v50 = v48 - 1;",
    "        if ( v47 )",
    "          v50 = v48;",
    "        *v50 = 0;",
    "        if ( v18 && *v18 )",
    "        {",
    "          StringCchCatA(pszDesta, 0x400u, \" \");",
    "          StringCchCatA(pszDesta, 0x400u, v18);",
    "        }",
    "      }",
    "      *v34 = 0;",
    "      ExpandCmdParams(pszDesta);",
    "      goto LABEL_82;",
    "    }",
    "    goto LABEL_53;",
    "  }",
    "  v42 = -1;",
    "  do",
    "    ++v42;",
    "  while ( aCommandComCS[v42] );",
    "  do",
    "    ++v17;",
    "  while ( *((_BYTE *)FileName + v17) );",
    "  v43 = v42 + v17;",
    "  v44 = (char *)LocalAlloc(0x40u, v42 + v17 + 8);",
    "  v34 = v44;",
    "  if ( !v44 )",
    "    goto LABEL_53;",
    "  StringCchPrintfA(v44, v43 + 8, \"Command.com /c %s\", (const char *)FileName);",
    "LABEL_82:",
    "  *a3 = v34;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 MyNTReboot()",
    "{",
    "  HANDLE CurrentProcess; // rax",
    "  BOOL v2; // ebx",
    "  HANDLE TokenHandle; // [rsp+30h] [rbp-28h] BYREF",
    "  _TOKEN_PRIVILEGES NewState; // [rsp+38h] [rbp-20h] BYREF",
    "",
    "  CurrentProcess = GetCurrentProcess();",
    "  if ( OpenProcessToken(CurrentProcess, 0x28u, &TokenHandle) )",
    "  {",
    "    LookupPrivilegeValueA(0, \"SeShutdownPrivilege\", &NewState.Privileges[0].Luid);",
    "    NewState.PrivilegeCount = 1;",
    "    NewState.Privileges[0].Attributes = 2;",
    "    v2 = AdjustTokenPrivileges(TokenHandle, 0, &NewState, 0, 0, 0);",
    "    CloseHandle(TokenHandle);",
    "    if ( v2 )",
    "    {",
    "      if ( ExitWindowsEx(2u, 0) )",
    "        return 1;",
    "    }",
    "  }",
    "  MsgBox2Param(0, 0x10u, 0);",
    "  return 0;",
    "}",
    "",
    "",
    "unsigned int AddRegRunOnce()",
    "{",
    "  int v0; // r14d",
    "  unsigned int result; // eax",
    "  int i; // ebx",
    "  HMODULE LibraryA; // rax",
    "  HMODULE v4; // rdi",
    "  FARPROC ProcAddress; // rbx",
    "  __int64 v6; // rbx",
    "  __int64 v7; // rax",
    "  __int64 v8; // rcx",
    "  SIZE_T v9; // rsi",
    "  char *lpData; // rdi",
    "  const char *v11; // r8",
    "  HKEY hKey; // [rsp+58h] [rbp-B0h] BYREF",
    "  DWORD dwDisposition; // [rsp+60h] [rbp-A8h] BYREF",
    "  DWORD cbData; // [rsp+64h] [rbp-A4h] BYREF",
    "  CHAR Filename[272]; // [rsp+68h] [rbp-A0h] BYREF",
    "  CHAR Buffer[272]; // [rsp+178h] [rbp+70h] BYREF",
    "",
    "  memset_0(Filename, 0, 0x104u);",
    "  memset_0(Buffer, 0, 0x104u);",
    "  v0 = 0;",
    "  result = RegCreateKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0, 0, 0x2001Fu, 0, &hKey, &dwDisposition);",
    "  if ( !result )",
    "  {",
    "    for ( i = 0; i < 200; ++i )",
    "    {",
    "      StringCchPrintfA(g_szRegValName, 0x50u, \"wextract_cleanup%d\", i);",
    "      if ( RegQueryValueExA(hKey, g_szRegValName, 0, 0, 0, &cbData) )",
    "        break;",
    "    }",
    "    if ( i == 200 )",
    "    {",
    "      result = RegCloseKey(hKey);",
    "      g_szRegValName[0] = 0;",
    "      return result;",
    "    }",
    "    GetSystemDirectoryA(Buffer, 0x104u);",
    "    AddPath(Buffer, 0x104u, \"advpack.dll\");",
    "    LibraryA = LoadLibraryA(Buffer);",
    "    v4 = LibraryA;",
    "    if ( LibraryA",
    "      && (ProcAddress = GetProcAddress(LibraryA, \"DelNodeRunDLL32\"),",
    "          LOBYTE(v0) = ProcAddress != 0,",
    "          FreeLibrary(v4),",
    "          ProcAddress) )",
    "    {",
    "      if ( GetSystemDirectoryA(Filename, 0x104u) )",
    "        AddPath(Filename, 0x104u, pszCabPath);",
    "    }",
    "    else if ( !GetModuleFileNameA(g_hInst, Filename, 0x104u) )",
    "    {",
    "      return RegCloseKey(hKey);",
    "    }",
    "    v6 = -1;",
    "    v7 = -1;",
    "    do",
    "      ++v7;",
    "    while ( *(&PathName + v7) );",
    "    v8 = -1;",
    "    do",
    "      ++v8;",
    "    while ( Filename[v8] );",
    "    v9 = (unsigned int)(v8 + v7 + 80);",
    "    lpData = (char *)LocalAlloc(0x40u, v9);",
    "    if ( !lpData )",
    "    {",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      return RegCloseKey(hKey);",
    "    }",
    "    v11 = aSDS;",
    "    g_bConvertRunOnce = v0 ^ 1;",
    "    if ( v0 )",
    "      v11 = aRundll32ExeSad;",
    "    StringCchPrintfA(lpData, v9, v11, Filename, &PathName);",
    "    do",
    "      ++v6;",
    "    while ( lpData[v6] );",
    "    RegSetValueExA(hKey, g_szRegValName, 0, 1u, (const BYTE *)lpData, v6 + 1);",
    "    RegCloseKey(hKey);",
    "    return (unsigned int)LocalFree(lpData);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __fastcall DeleteMyDir(const CHAR *a1)",
    "{",
    "  char *v2; // rcx",
    "  __int64 v3; // rdx",
    "  signed __int64 v4; // rbx",
    "  char v5; // al",
    "  char *v6; // rax",
    "  HANDLE FirstFileA; // rsi",
    "  __int64 v8; // r8",
    "  char *v9; // rdx",
    "  char v10; // al",
    "  char *v11; // rax",
    "  bool v12; // zf",
    "  _WIN32_FIND_DATAA FindFileData; // [rsp+20h] [rbp-E0h] BYREF",
    "  char pszDest[272]; // [rsp+160h] [rbp+60h] BYREF",
    "",
    "  if ( *a1 )",
    "  {",
    "    v2 = pszDest;",
    "    v3 = 260;",
    "    v4 = a1 - pszDest;",
    "    do",
    "    {",
    "      if ( v3 == -2147483386 )",
    "        break;",
    "      v5 = v2[v4];",
    "      if ( !v5 )",
    "        break;",
    "      *v2++ = v5;",
    "      --v3;",
    "    }",
    "    while ( v3 );",
    "    v6 = v2 - 1;",
    "    if ( v3 )",
    "      v6 = v2;",
    "    *v6 = 0;",
    "    StringCchCatA(pszDest, 0x104u, \"*\");",
    "    FirstFileA = FindFirstFileA(pszDest, &FindFileData);",
    "    if ( FirstFileA != (HANDLE)-1LL )",
    "    {",
    "      do",
    "      {",
    "        v8 = 260;",
    "        v9 = pszDest;",
    "        do",
    "        {",
    "          if ( v8 == -2147483386 )",
    "            break;",
    "          v10 = v9[v4];",
    "          if ( !v10 )",
    "            break;",
    "          *v9++ = v10;",
    "          --v8;",
    "        }",
    "        while ( v8 );",
    "        v11 = v9 - 1;",
    "        if ( v8 )",
    "          v11 = v9;",
    "        v12 = (FindFileData.dwFileAttributes & 0x10) == 0;",
    "        *v11 = 0;",
    "        if ( v12 )",
    "        {",
    "          StringCchCatA(pszDest, 0x104u, FindFileData.cFileName);",
    "          SetFileAttributesA(pszDest, 0x80u);",
    "          DeleteFileA(pszDest);",
    "        }",
    "        else if ( lstrcmpA(FindFileData.cFileName, \".\") )",
    "        {",
    "          if ( lstrcmpA(FindFileData.cFileName, \"..\") )",
    "          {",
    "            StringCchCatA(pszDest, 0x104u, FindFileData.cFileName);",
    "            AddPath(pszDest, 0x104u, pszCabPath);",
    "            DeleteMyDir(pszDest);",
    "          }",
    "        }",
    "      }",
    "      while ( FindNextFileA(FirstFileA, &FindFileData) );",
    "      FindClose(FirstFileA);",
    "      RemoveDirectoryA(a1);",
    "    }",
    "  }",
    "}",
    "",
    "",
    "__int64 GetWininitSize()",
    "{",
    "  unsigned int v0; // ebx",
    "  HFILE v1; // eax",
    "  HFILE v2; // edi",
    "  CHAR Buffer[272]; // [rsp+20h] [rbp-128h] BYREF",
    "",
    "  v0 = 0;",
    "  if ( GetWindowsDirectoryA(Buffer, 0x104u) )",
    "  {",
    "    AddPath(Buffer, 0x104u, \"wininit.ini\");",
    "    WritePrivateProfileStringA(0, 0, 0, Buffer);",
    "    v1 = _lopen(Buffer, 64);",
    "    v2 = v1;",
    "    if ( v1 != -1 )",
    "    {",
    "      v0 = _llseek(v1, 0, 2);",
    "      _lclose(v2);",
    "    }",
    "  }",
    "  return v0;",
    "}",
    "",
    "",
    "DWORD __stdcall NeedRebootInit()",
    "{",
    "  unsigned __int16 v0; // cx",
    "  DWORD v1; // ebx",
    "  LSTATUS v2; // eax",
    "  DWORD v3; // ecx",
    "  DWORD cbData; // [rsp+70h] [rbp+10h] BYREF",
    "  HKEY hKey; // [rsp+78h] [rbp+18h] BYREF",
    "",
    "  v1 = 0;",
    "  if ( !v0 )",
    "    return GetWininitSize();",
    "  if ( v0 == 1 )",
    "  {",
    "    cbData = 0;",
    "    if ( !RegOpenKeyExA(HKEY_LOCAL_MACHINE, aSystemCurrentc_0, 0, 0x20019u, &hKey) )",
    "    {",
    "      v2 = RegQueryInfoKeyA(hKey, 0, 0, 0, 0, 0, 0, &cbData, 0, 0, 0, 0);",
    "      goto LABEL_6;",
    "    }",
    "    return cbData;",
    "  }",
    "  if ( v0 <= 3u )",
    "  {",
    "    cbData = 0;",
    "    if ( !RegOpenKeyExA(HKEY_LOCAL_MACHINE, aSystemCurrentc, 0, 0x20019u, &hKey) )",
    "    {",
    "      v2 = RegQueryValueExA(hKey, ValueName, 0, 0, 0, &cbData);",
    "LABEL_6:",
    "      v3 = cbData;",
    "      if ( v2 )",
    "        v3 = 0;",
    "      cbData = v3;",
    "      RegCloseKey(hKey);",
    "      return cbData;",
    "    }",
    "    return cbData;",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 __fastcall IsWindowsDrive(_BYTE *a1)",
    "{",
    "  unsigned int v2; // ebx",
    "  SIZE_T Buffer; // [rsp+30h] [rbp-128h] BYREF",
    "",
    "  v2 = 0;",
    "  if ( !GetWindowsDirectoryA((LPSTR)&Buffer, 0x104u) )",
    "    MsgBox2Param(0, 0x10u, 0);",
    "  LOBYTE(v2) = *a1 == (unsigned __int8)Buffer;",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall DiskSpaceErrMsg(int a1, int a2, int a3)",
    "{",
    "  unsigned int v3; // ebx",
    "  char pszDest[16]; // [rsp+30h] [rbp-28h] BYREF",
    "",
    "  v3 = 0;",
    "  g_dwExitCode = 112;",
    "  switch ( a1 )",
    "  {",
    "    case 1:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a3 + a2);",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      break;",
    "    case 4:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a3 + a2);",
    "      LOBYTE(v3) = (unsigned int)MsgBox2Param(0, 0x20u, 5) == 4;",
    "      break;",
    "    case 2:",
    "      StringCchPrintfA(pszDest, 0xAu, \"%lu\", a3);",
    "      if ( (unsigned int)MsgBox2Param(0, 0x40u, 260) == 6 )",
    "      {",
    "        g_dwExitCode = 0;",
    "        return 1;",
    "      }",
    "      break;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 __fastcall GetFileTobeChecked(LPSTR lpBuffer, __int64 a2, const char *a3)",
    "{",
    "  int v3; // edi",
    "  const char *v4; // rsi",
    "  CHAR *v5; // rbx",
    "  const CHAR *v6; // rsi",
    "  unsigned __int8 v7; // r14",
    "  const CHAR *v8; // rax",
    "  __int64 v9; // rdx",
    "  CHAR *v10; // rcx",
    "  CHAR v11; // al",
    "  CHAR *v12; // rax",
    "  DWORD v13; // eax",
    "  DWORD Type; // [rsp+30h] [rbp-D0h] BYREF",
    "  DWORD cbData; // [rsp+34h] [rbp-CCh] BYREF",
    "  HKEY hKey; // [rsp+38h] [rbp-C8h] BYREF",
    "  CHAR SubKey[272]; // [rsp+40h] [rbp-C0h] BYREF",
    "",
    "  v3 = 0;",
    "  v4 = a3;",
    "  *lpBuffer = 0;",
    "  v5 = lpBuffer;",
    "  if ( *a3 == 35 )",
    "  {",
    "    v6 = a3 + 1;",
    "    v7 = (unsigned __int8)CharUpperA((LPSTR)a3[1]);",
    "    v8 = CharNextA(v6);",
    "    v4 = CharNextA(v8);",
    "    if ( v7 != 83 )",
    "    {",
    "      if ( v7 == 87 )",
    "      {",
    "        GetWindowsDirectoryA(v5, 0x104u);",
    "LABEL_23:",
    "        AddPath(v5, 0x104u, v4);",
    "        return 1;",
    "      }",
    "      cbData = 260;",
    "      v9 = 260;",
    "      v10 = SubKey;",
    "      do",
    "      {",
    "        if ( v9 == -2147483386 )",
    "          break;",
    "        v11 = v10[\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\" - SubKey];",
    "        if ( !v11 )",
    "          break;",
    "        *v10++ = v11;",
    "        --v9;",
    "      }",
    "      while ( v9 );",
    "      v12 = v10 - 1;",
    "      if ( v9 )",
    "        v12 = v10;",
    "      *v12 = 0;",
    "      AddPath(SubKey, 0x104u, v4);",
    "      if ( RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x20019u, &hKey) )",
    "        goto LABEL_23;",
    "      if ( RegQueryValueExA(hKey, pszCabPath, 0, &Type, (LPBYTE)v5, &cbData) )",
    "        goto LABEL_18;",
    "      v13 = Type;",
    "      if ( Type == 2 )",
    "      {",
    "        if ( ExpandEnvironmentStringsA(v5, SubKey, 0x104u) )",
    "        {",
    "          StringCchCopyA(v5, 0x104u, SubKey);",
    "          v3 = 1;",
    "LABEL_18:",
    "          RegCloseKey(hKey);",
    "          goto LABEL_22;",
    "        }",
    "        v13 = Type;",
    "      }",
    "      if ( v13 == 1 )",
    "        v3 = 1;",
    "      goto LABEL_18;",
    "    }",
    "    lpBuffer = v5;",
    "  }",
    "  GetSystemDirectoryA(lpBuffer, 0x104u);",
    "LABEL_22:",
    "  if ( !v3 )",
    "    goto LABEL_23;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall CheckFileVersion(__int64 a1, const CHAR *a2, DWORD a3, _DWORD *a4)",
    "{",
    "  CHAR *v4; // rsi",
    "  void *v6; // rbx",
    "  unsigned int v7; // r13d",
    "  int v8; // r12d",
    "  __int64 v9; // rax",
    "  __int64 v10; // rdi",
    "  DWORD FileVersionInfoSizeA; // eax",
    "  DWORD v12; // esi",
    "  HGLOBAL v13; // rax",
    "  void *v14; // rax",
    "  const void *v15; // r14",
    "  DWORD v16; // r8d",
    "  unsigned int *v17; // rcx",
    "  __int64 v18; // rdx",
    "  unsigned int v19; // r9d",
    "  unsigned int v20; // r8d",
    "  int v21; // eax",
    "  int v22; // eax",
    "  _DWORD v24[2]; // [rsp+20h] [rbp-28h]",
    "  _DWORD v25[2]; // [rsp+28h] [rbp-20h]",
    "  __int64 v26; // [rsp+30h] [rbp-18h]",
    "  LPVOID lpBuffer; // [rsp+38h] [rbp-10h] BYREF",
    "  unsigned int puLen; // [rsp+90h] [rbp+48h] BYREF",
    "  LPCSTR lptstrFilename; // [rsp+98h] [rbp+50h]",
    "  DWORD dwHandle; // [rsp+A0h] [rbp+58h] BYREF",
    "  _DWORD *v31; // [rsp+A8h] [rbp+60h]",
    "",
    "  v31 = a4;",
    "  dwHandle = a3;",
    "  lptstrFilename = a2;",
    "  v4 = (CHAR *)a2;",
    "  v6 = 0;",
    "  v7 = 0;",
    "  v8 = 0;",
    "  if ( *(int *)(a1 + 124) <= 0 )",
    "    goto LABEL_34;",
    "  v9 = 0;",
    "  v26 = 0;",
    "  while ( 1 )",
    "  {",
    "    v10 = v9 + *(unsigned int *)(a1 + 128);",
    "    if ( !(unsigned int)GetFileTobeChecked(",
    "                          v4,",
    "                          (__int64)a2,",
    "                          (const char *)(*(unsigned int *)(v10 + a1 + 188) + a1 + 132)) )",
    "      goto LABEL_35;",
    "    FileVersionInfoSizeA = GetFileVersionInfoSizeA(v4, &dwHandle);",
    "    v12 = FileVersionInfoSizeA;",
    "    if ( !FileVersionInfoSizeA )",
    "      break;",
    "    v13 = GlobalAlloc(0x42u, FileVersionInfoSizeA);",
    "    v6 = v13;",
    "    if ( !v13 )",
    "      goto LABEL_35;",
    "    v14 = GlobalLock(v13);",
    "    v15 = v14;",
    "    if ( !v14 )",
    "      goto LABEL_35;",
    "    v16 = v12;",
    "    v4 = (CHAR *)lptstrFilename;",
    "    if ( !GetFileVersionInfoA(lptstrFilename, dwHandle, v16, v14)",
    "      || !VerQueryValueA(v15, \"\\\\\", &lpBuffer, &puLen)",
    "      || !puLen )",
    "    {",
    "      goto LABEL_29;",
    "    }",
    "    v17 = (unsigned int *)(v10 + a1 + 144);",
    "    v18 = 0;",
    "    v19 = *((_DWORD *)lpBuffer + 3);",
    "    v20 = *((_DWORD *)lpBuffer + 2);",
    "    do",
    "    {",
    "      if ( v20 < *(v17 - 3) )",
    "      {",
    "LABEL_12:",
    "        v21 = -1;",
    "        goto LABEL_17;",
    "      }",
    "      if ( v20 <= *(v17 - 3) )",
    "      {",
    "        if ( v19 < *(v17 - 2) )",
    "          goto LABEL_12;",
    "        v21 = v19 > *(v17 - 2);",
    "      }",
    "      else",
    "      {",
    "        v21 = 1;",
    "      }",
    "LABEL_17:",
    "      v24[v18] = v21;",
    "      if ( v20 < *v17 )",
    "        goto LABEL_18;",
    "      if ( v20 <= *v17 )",
    "      {",
    "        if ( v19 < v17[1] )",
    "        {",
    "LABEL_18:",
    "          v22 = -1;",
    "          goto LABEL_23;",
    "        }",
    "        v22 = v19 > v17[1];",
    "      }",
    "      else",
    "      {",
    "        v22 = 1;",
    "      }",
    "LABEL_23:",
    "      v25[v18] = v22;",
    "      v17 += 6;",
    "      ++v18;",
    "    }",
    "    while ( v18 < 2 );",
    "    if ( (v24[0] < 0 || v25[0] > 0) && (v24[1] < 0 || v25[1] > 0) )",
    "    {",
    "      GlobalUnlock(v6);",
    "      goto LABEL_35;",
    "    }",
    "LABEL_29:",
    "    GlobalUnlock(v6);",
    "LABEL_33:",
    "    ++v8;",
    "    v9 = v26 + 60;",
    "    v26 += 60;",
    "    if ( v8 >= *(_DWORD *)(a1 + 124) )",
    "    {",
    "LABEL_34:",
    "      v7 = 1;",
    "      goto LABEL_35;",
    "    }",
    "  }",
    "  if ( !*(_DWORD *)(v10 + a1 + 132) && !*(_DWORD *)(v10 + a1 + 136) )",
    "  {",
    "    v4 = (CHAR *)lptstrFilename;",
    "    goto LABEL_33;",
    "  }",
    "LABEL_35:",
    "  *v31 = v8;",
    "  if ( v6 )",
    "    GlobalFree(v6);",
    "  return v7;",
    "}",
    "",
    "",
    "void __fastcall ExpandCmdParams(CHAR *lpsz, unsigned __int64 a2, LPSTR a3)",
    "{",
    "  LPSTR v5; // rdi",
    "  BYTE v6; // al",
    "  BOOL v7; // eax",
    "  __int64 v8; // rax",
    "  LPSTR v9; // rax",
    "  size_t v10; // rdx",
    "  __int64 v11; // rax",
    "  size_t v12; // rdx",
    "  CHAR Filename[272]; // [rsp+20h] [rbp-138h] BYREF",
    "",
    "  v5 = lpsz;",
    "  if ( *lpsz )",
    "  {",
    "    GetModuleFileNameA(g_hInst, Filename, 0x104u);",
    "    v6 = *v5;",
    "    if ( *v5 )",
    "    {",
    "      while ( 1 )",
    "      {",
    "        v7 = IsDBCSLeadByte(v6);",
    "        *a3 = *v5;",
    "        if ( v7 )",
    "          a3[1] = v5[1];",
    "        if ( *v5 != 35 )",
    "        {",
    "LABEL_28:",
    "          a3 = CharNextA(a3);",
    "          goto LABEL_29;",
    "        }",
    "        v5 = CharNextA(v5);",
    "        if ( (unsigned __int8)CharUpperA((LPSTR)*v5) == 68 )",
    "          break;",
    "        if ( (unsigned __int8)CharUpperA((LPSTR)*v5) == 69 )",
    "        {",
    "          if ( (unsigned __int64)a3 < a2 || (unsigned __int64)&a3[-a2] > 0x400 )",
    "            v12 = 0;",
    "          else",
    "            v12 = a2 - (_QWORD)a3 + 1024;",
    "          StringCchCopyA(a3, v12, Filename);",
    "          v11 = -1;",
    "          do",
    "            ++v11;",
    "          while ( a3[v11] );",
    "LABEL_26:",
    "          a3 += v11;",
    "          goto LABEL_29;",
    "        }",
    "        if ( *v5 == 35 )",
    "          goto LABEL_28;",
    "LABEL_29:",
    "        v5 = CharNextA(v5);",
    "        v6 = *v5;",
    "        if ( !*v5 )",
    "          goto LABEL_30;",
    "      }",
    "      GetParentDir(Filename);",
    "      v8 = -1;",
    "      do",
    "        ++v8;",
    "      while ( Filename[v8] );",
    "      v9 = CharPrevA(Filename, &Filename[v8]);",
    "      if ( v9 && *v9 == 92 )",
    "        *v9 = 0;",
    "      if ( (unsigned __int64)a3 < a2 || (unsigned __int64)&a3[-a2] > 0x400 )",
    "        v10 = 0;",
    "      else",
    "        v10 = a2 - (_QWORD)a3 + 1024;",
    "      StringCchCopyA(a3, v10, Filename);",
    "      v11 = -1;",
    "      do",
    "        ++v11;",
    "      while ( a3[v11] );",
    "      goto LABEL_26;",
    "    }",
    "LABEL_30:",
    "    *a3 = 0;",
    "  }",
    "}",
    "",
    "",
    "int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)",
    "{",
    "  signed int Version; // eax",
    "  HMODULE ModuleHandleW; // rax",
    "  FARPROC ProcAddress; // rax",
    "  int v8; // ebx",
    "  char v9; // di",
    "  int v10; // ebx",
    "",
    "  Version = GetVersion();",
    "  if ( Version >= 0 && (unsigned __int8)Version >= 6u )",
    "  {",
    "    ModuleHandleW = GetModuleHandleW(L\"Kernel32.dll\");",
    "    if ( ModuleHandleW )",
    "    {",
    "      ProcAddress = GetProcAddress(ModuleHandleW, \"HeapSetInformation\");",
    "      if ( ProcAddress )",
    "        ((void (__fastcall *)(_QWORD, __int64, _QWORD, _QWORD))ProcAddress)(0, 1, 0, 0);",
    "    }",
    "  }",
    "  g_dwExitCode = 0;",
    "  if ( (unsigned int)Init(hInstance) )",
    "  {",
    "    v8 = DoMain();",
    "    DeleteExtractedFiles();",
    "    if ( v8 )",
    "    {",
    "      if ( !byte_14000CD1A )",
    "      {",
    "        v9 = dword_14000DE5C;",
    "        if ( (dword_14000DE5C & 1) != 0 )",
    "        {",
    "          if ( (dword_14000DE5C & 2) != 0 || g_uInfRebootOn || (v10 = g_dwRebootCheck, v10 != NeedRebootInit()) )",
    "          {",
    "            if ( (v9 & 4) != 0 || (unsigned int)MsgBox2Param(0, 0x40u, 4) == 6 )",
    "            {",
    "              if ( g_wOSVer )",
    "                MyNTReboot();",
    "              else",
    "                ExitWindowsEx(2u, 0);",
    "            }",
    "          }",
    "        }",
    "      }",
    "    }",
    "  }",
    "  if ( g_hMutex )",
    "    CloseHandle(g_hMutex);",
    "  return g_dwExitCode;",
    "}",
    "",
    "",
    "__int64 __fastcall Init(HMODULE hModule, const CHAR *a2)",
    "{",
    "  HGLOBAL Resource; // rdi",
    "  HRSRC ResourceA; // rax",
    "  DWORD *v7; // rdx",
    "  DWORD v8; // ecx",
    "  __int64 v9; // rcx",
    "  SIZE_T Name[34]; // [rsp+30h] [rbp-138h] BYREF",
    "",
    "  g_hInst = hModule;",
    "  Resource = 0;",
    "  memset_0(&g_Sess, 0, 0x910u);",
    "  memset_0(&g_CMD, 0, 0x32Cu);",
    "  memset_0(&g_szBrowsePath, 0, 0x104u);",
    "  dword_14000D818 = 1;",
    "  if ( (unsigned int)GetResource(\"TITLE\", Caption, 0x7Fu) - 1 > 0x7F )",
    "    goto LABEL_31;",
    "  g_hCancelEvent = CreateEventA(0, 1, 1, 0);",
    "  SetEvent(g_hCancelEvent);",
    "  if ( !(unsigned int)GetResource(\"EXTRACTOPT\", &dword_14000DE64, 4u) )",
    "  {",
    "    MsgBox2Param(0, 0x10u, 0);",
    "LABEL_4:",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  if ( (dword_14000DE64 & 0x40) != 0 || (dword_14000DE64 & 0x80u) != 0 )",
    "  {",
    "    if ( !(unsigned int)GetResource(\"INSTANCECHECK\", Name, 0x104u) )",
    "    {",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      goto LABEL_4;",
    "    }",
    "    g_hMutex = CreateMutexA(0, 1, (LPCSTR)Name);",
    "    if ( g_hMutex )",
    "    {",
    "      if ( GetLastError() == 183 )",
    "      {",
    "        if ( (dword_14000DE64 & 0x80u) != 0 )",
    "        {",
    "          MsgBox2Param(0, 0x10u, 0);",
    "LABEL_14:",
    "          CloseHandle(g_hMutex);",
    "          g_dwExitCode = -2147024713;",
    "          return 0;",
    "        }",
    "        if ( (unsigned int)MsgBox2Param(0, 0x20u, 4) != 6 )",
    "          goto LABEL_14;",
    "      }",
    "    }",
    "  }",
    "  g_uInfRebootOn = 0;",
    "  if ( !(unsigned int)ParseCmdLine(a2) )",
    "  {",
    "LABEL_31:",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  if ( byte_14000CD1A[0] )",
    "  {",
    "    DeleteMyDir(byte_14000CD1A);",
    "  }",
    "  else",
    "  {",
    "    ResourceA = FindResourceA(hModule, \"VERCHECK\", (LPCSTR)0xA);",
    "    if ( ResourceA )",
    "      Resource = LoadResource(hModule, ResourceA);",
    "    if ( g_fOSSupportsFullUI )",
    "      InitCommonControls();",
    "    if ( dword_14000CD04",
    "      || (unsigned int)CheckOSVersion(Resource)",
    "      && ((unsigned __int16)(g_wOSVer - 1) > 2u",
    "       || (dword_14000DE64 & 0x100) == 0",
    "       || (word_14000CD18 & 1) != 0",
    "       || IsNTAdmin(v8, v7)",
    "       || MyDialogBox(v9, 2006, 0, WarningDlgProc, 1351, 2110) == 2109) )",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 DoMain()",
    "{",
    "  HMODULE LibraryA; // rax",
    "  HMODULE v1; // rbx",
    "  FARPROC ProcAddress; // rax",
    "  _DWORD *v4; // rax",
    "  __int64 v5; // rcx",
    "  bool v6; // zf",
    "  DWORD v7; // eax",
    "  int v8; // eax",
    "  SIZE_T Buffer[34]; // [rsp+30h] [rbp-238h] BYREF",
    "  CHAR v10[272]; // [rsp+140h] [rbp-128h] BYREF",
    "",
    "  if ( !word_14000CD18 )",
    "  {",
    "    if ( dword_14000CD04 )",
    "      goto LABEL_43;",
    "    if ( !(unsigned int)GetUsersPermission() )",
    "      return 0;",
    "    if ( !word_14000CD18 )",
    "    {",
    "LABEL_43:",
    "      if ( (unsigned int)DisplayLicense() )",
    "        goto LABEL_6;",
    "      return 0;",
    "    }",
    "  }",
    "LABEL_6:",
    "  if ( !(unsigned int)GetFileList() || !(unsigned int)GetTempDirectory() )",
    "    return 0;",
    "  GetSystemDirectoryA((LPSTR)Buffer, 0x105u);",
    "  AddPath((STRSAFE_LPSTR)Buffer, 0x105u, \"advapi32.dll\");",
    "  LibraryA = LoadLibraryA((LPCSTR)Buffer);",
    "  v1 = LibraryA;",
    "  if ( LibraryA )",
    "  {",
    "    ProcAddress = GetProcAddress(LibraryA, \"DecryptFileA\");",
    "    if ( ProcAddress )",
    "      ((void (__fastcall *)(CHAR *, _QWORD))ProcAddress)(&PathName, 0);",
    "  }",
    "  FreeLibrary(v1);",
    "  if ( !dword_14000CD04 && !dword_14000DE60 )",
    "  {",
    "    if ( !GetWindowsDirectoryA(v10, 0x104u) )",
    "    {",
    "LABEL_14:",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      g_dwExitCode = MyGetLastError();",
    "      return 0;",
    "    }",
    "    if ( !(unsigned int)IsEnoughSpace(v10) )",
    "      return 0;",
    "  }",
    "  if ( !SetCurrentDirectoryA(&PathName) )",
    "    goto LABEL_14;",
    "  if ( !dword_14000CD0C )",
    "  {",
    "    v4 = &g_FileTable;",
    "    v5 = 40;",
    "    do",
    "    {",
    "      *v4 = 1;",
    "      v4 += 8;",
    "      --v5;",
    "    }",
    "    while ( v5 );",
    "    if ( (word_14000CD18 & 1) != 0 || (dword_14000DE64 & 1) != 0 )",
    "      v6 = ExtractThread(0).dwLowDateTime == 0;",
    "    else",
    "      v6 = MyDialogBox(0, 2005LL - (g_fOSSupportsFullUI != 0), 0, ExtractDlgProc, 0, 0) == 0;",
    "    if ( v6 )",
    "    {",
    "      g_dwExitCode = -2147023829;",
    "      return 0;",
    "    }",
    "    if ( !(unsigned int)TravelUpdatedFiles(ProcessUpdatedFile_Write) )",
    "      return 0;",
    "    g_dwExitCode = 0;",
    "  }",
    "  if ( (dword_14000D028 & 0x40) != 0 || (dword_14000D028 & 0x80u) != 0 )",
    "    v7 = 0;",
    "  else",
    "    v7 = NeedRebootInit();",
    "  g_dwRebootCheck = v7;",
    "  v8 = dword_14000CD04;",
    "  if ( !dword_14000CD04 && !dword_14000DE60 )",
    "  {",
    "    if ( !(unsigned int)RunInstallCommand() )",
    "      return 0;",
    "    v8 = dword_14000CD04;",
    "  }",
    "  if ( !word_14000CD18 && !v8 )",
    "    FinishMessage();",
    "  return 1;",
    "}",
    "",
    "",
    "LRESULT __fastcall MEditSubProc(_PROCESS_INFORMATION *hWnd, HWND Msg, WPARAM wParam, LPARAM lParam)",
    "{",
    "  if ( (_DWORD)Msg == 177 && !wParam && lParam == -2 )",
    "    return 0;",
    "  else",
    "    return CallWindowProcA(g_lpfnOldMEditWndProc, (HWND)hWnd, (UINT)Msg, wParam, lParam);",
    "}",
    "",
    "",
    "__int64 __fastcall LicenseDlgProc(_PROCESS_INFORMATION *hWnd, int a2, __int64 a3)",
    "{",
    "  int v4; // edx",
    "  int v5; // edx",
    "  int v6; // edx",
    "  INT_PTR v7; // rdx",
    "  HWND DesktopWindow; // rax",
    "  HWND DlgItem; // rbx",
    "",
    "  v4 = a2 - 15;",
    "  if ( v4 )",
    "  {",
    "    v5 = v4 - 1;",
    "    if ( !v5 )",
    "      goto LABEL_8;",
    "    v6 = v5 - 256;",
    "    if ( !v6 )",
    "    {",
    "      DesktopWindow = GetDesktopWindow();",
    "      CenterWindow((HWND)hWnd, DesktopWindow);",
    "      SetDlgItemTextA((HWND)hWnd, 2100, g_szLicense);",
    "      SetWindowTextA((HWND)hWnd, Caption);",
    "      SetForegroundWindow((HWND)hWnd);",
    "      DlgItem = GetDlgItem((HWND)hWnd, 2100);",
    "      g_lpfnOldMEditWndProc = (WNDPROC)GetWindowLongPtrA(DlgItem, -4);",
    "      SetWindowLongPtrA(DlgItem, -4, (LONG_PTR)MEditSubProc);",
    "      return 1;",
    "    }",
    "    if ( v6 == 1 )",
    "    {",
    "      if ( a3 == 6 )",
    "      {",
    "        v7 = 1;",
    "LABEL_9:",
    "        EndDialog((HWND)hWnd, v7);",
    "        return 1;",
    "      }",
    "      if ( a3 != 7 )",
    "        return 1;",
    "LABEL_8:",
    "      v7 = 0;",
    "      goto LABEL_9;",
    "    }",
    "  }",
    "  else if ( !dword_14000C840 )",
    "  {",
    "    SendDlgItemMessageA((HWND)hWnd, 2100, 0xB1u, 0xFFFFFFFFFFFFFFFFuLL, 0);",
    "    dword_14000C840 = 1;",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall TempDirDlgProc(HWND hDlg, int a2, __int64 a3)",
    "{",
    "  int v4; // edx",
    "  int v5; // edx",
    "  __int64 v7; // r8",
    "  __int64 v8; // r8",
    "  int StringA; // eax",
    "  HWND v10; // rcx",
    "  INT_PTR v11; // rdx",
    "  unsigned __int64 v12; // rax",
    "  HWND DesktopWindow; // rax",
    "  HWND DlgItem; // rax",
    "",
    "  v4 = a2 - 16;",
    "  if ( v4 )",
    "  {",
    "    v5 = v4 - 256;",
    "    if ( !v5 )",
    "    {",
    "      DesktopWindow = GetDesktopWindow();",
    "      CenterWindow(hDlg, DesktopWindow);",
    "      SetWindowTextA(hDlg, Caption);",
    "      SendDlgItemMessageA(hDlg, 2101, 0xC5u, 0x103u, 0);",
    "      if ( g_wOSVer == 1 )",
    "      {",
    "        DlgItem = GetDlgItem(hDlg, 2102);",
    "        EnableWindow(DlgItem, 0);",
    "      }",
    "      return 1;",
    "    }",
    "    if ( v5 != 1 )",
    "      return 0;",
    "    v7 = a3 - 1;",
    "    if ( v7 )",
    "    {",
    "      v8 = v7 - 1;",
    "      if ( v8 )",
    "      {",
    "        if ( v8 == 2100 )",
    "        {",
    "          StringA = LoadStringA(g_hInst, 0x3E8u, Buffer, 512);",
    "          v10 = hDlg;",
    "          if ( StringA )",
    "          {",
    "            if ( !(unsigned int)BrowseForDir(hDlg) || SetDlgItemTextA(hDlg, 2101, &pszDest) )",
    "              return 1;",
    "            v10 = hDlg;",
    "          }",
    "          MsgBox2Param(v10, 0x10u, 0);",
    "          v11 = 0;",
    "          goto LABEL_30;",
    "        }",
    "      }",
    "      else",
    "      {",
    "        EndDialog(hDlg, 0);",
    "        g_dwExitCode = -2147023673;",
    "      }",
    "      return 1;",
    "    }",
    "    if ( GetDlgItemTextA(hDlg, 2101, &PathName, 260) )",
    "    {",
    "      v12 = -1;",
    "      do",
    "        ++v12;",
    "      while ( *(&PathName + v12) );",
    "      if ( v12 >= 3 && (byte_14000D611 == 58 || PathName == 92 && byte_14000D611 == 92) )",
    "      {",
    "        if ( GetFileAttributesA(&PathName) != -1 )",
    "          goto LABEL_25;",
    "        if ( (unsigned int)MsgBox2Param(hDlg, 0x20u, 4) != 6 )",
    "          return 1;",
    "        if ( CreateDirectoryA(&PathName, 0) )",
    "        {",
    "LABEL_25:",
    "          AddPath(&PathName, 0x104u, pszCabPath);",
    "          if ( (unsigned int)IsGoodTempDir(&PathName) )",
    "          {",
    "            if ( (PathName != 92 || byte_14000D611 != 92) && !(unsigned int)IsEnoughSpace(&PathName) )",
    "              return 1;",
    "            v11 = 1;",
    "LABEL_30:",
    "            EndDialog(hDlg, v11);",
    "            return 1;",
    "          }",
    "        }",
    "      }",
    "    }",
    "    MsgBox2Param(hDlg, 0x10u, 0);",
    "    return 1;",
    "  }",
    "  EndDialog(hDlg, 0);",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall OverwriteDlgProc(HWND hWnd, int a2, unsigned __int64 a3)",
    "{",
    "  int v4; // edx",
    "  int v5; // edx",
    "  INT_PTR v7; // rdx",
    "  HWND DesktopWindow; // rax",
    "",
    "  v4 = a2 - 16;",
    "  if ( !v4 )",
    "  {",
    "    v7 = 2;",
    "    goto LABEL_12;",
    "  }",
    "  v5 = v4 - 256;",
    "  if ( v5 )",
    "  {",
    "    if ( v5 != 1 )",
    "      return 0;",
    "    if ( a3 >= 6 )",
    "    {",
    "      if ( a3 <= 7 )",
    "      {",
    "LABEL_9:",
    "        v7 = a3;",
    "LABEL_12:",
    "        EndDialog(hWnd, v7);",
    "        return 1;",
    "      }",
    "      if ( a3 == 2105 )",
    "      {",
    "        dword_14000D600 = 1;",
    "        goto LABEL_9;",
    "      }",
    "    }",
    "  }",
    "  else",
    "  {",
    "    DesktopWindow = GetDesktopWindow();",
    "    CenterWindow(hWnd, DesktopWindow);",
    "    SetWindowTextA(hWnd, Caption);",
    "    SetDlgItemTextA(hWnd, 2104, lpString);",
    "    SetForegroundWindow(hWnd);",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall ExtractDlgProc(HWND hWnd, int a2, __int64 a3)",
    "{",
    "  int v3; // esi",
    "  HWND v4; // rdi",
    "  int v5; // edx",
    "  int v6; // edx",
    "  int v7; // edx",
    "  int v8; // edx",
    "  INT_PTR v10; // rdx",
    "  int v11; // eax",
    "  HWND DesktopWindow; // rax",
    "  HWND DlgItem; // rax",
    "  HWND v14; // rax",
    "",
    "  v3 = a3;",
    "  v4 = hWnd;",
    "  v5 = a2 - 16;",
    "  if ( !v5 )",
    "  {",
    "LABEL_19:",
    "    dword_14000D5FC = 1;",
    "    goto LABEL_20;",
    "  }",
    "  v6 = v5 - 242;",
    "  if ( !v6 )",
    "  {",
    "    if ( a3 != 27 )",
    "      return 1;",
    "    goto LABEL_19;",
    "  }",
    "  v7 = v6 - 14;",
    "  if ( !v7 )",
    "  {",
    "    g_hwndExtractDlg = hWnd;",
    "    DesktopWindow = GetDesktopWindow();",
    "    CenterWindow(v4, DesktopWindow);",
    "    if ( g_fOSSupportsFullUI )",
    "    {",
    "      DlgItem = GetDlgItem(v4, 2107);",
    "      SendMessageA(DlgItem, 0x464u, 0, 3001);",
    "      v14 = GetDlgItem(v4, 2107);",
    "      SendMessageA(v14, 0x465u, 0xFFFFFFFFFFFFFFFFuLL, -65536);",
    "    }",
    "    SetWindowTextA(v4, Caption);",
    "    hThread = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)ExtractThread, 0, 0, &ThreadId);",
    "    if ( hThread )",
    "      return 1;",
    "    MsgBox2Param(v4, 0x10u, 0);",
    "LABEL_13:",
    "    hWnd = v4;",
    "LABEL_20:",
    "    v10 = 0;",
    "LABEL_21:",
    "    EndDialog(hWnd, v10);",
    "    return 1;",
    "  }",
    "  v8 = v7 - 1;",
    "  if ( v8 )",
    "  {",
    "    if ( v8 != 3728 )",
    "      return 0;",
    "    TerminateThread(hThread, 0);",
    "    v10 = v3;",
    "    hWnd = v4;",
    "    goto LABEL_21;",
    "  }",
    "  if ( a3 == 2 )",
    "  {",
    "    ResetEvent(g_hCancelEvent);",
    "    v11 = MsgBox2Param(g_hwndExtractDlg, 0x20u, 4);",
    "    if ( v11 != 6 && v11 != 1 )",
    "    {",
    "      SetEvent(g_hCancelEvent);",
    "      return 1;",
    "    }",
    "    dword_14000D5FC = 1;",
    "    SetEvent(g_hCancelEvent);",
    "    WaitForObject(hThread);",
    "    goto LABEL_13;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "DWORD __fastcall WaitForObject(void *a1)",
    "{",
    "  int v1; // ebx",
    "  DWORD result; // eax",
    "  struct tagMSG Msg; // [rsp+30h] [rbp-38h] BYREF",
    "  PSID pHandles; // [rsp+70h] [rbp+8h] BYREF",
    "",
    "  pHandles = a1;",
    "  v1 = 0;",
    "  while ( 1 )",
    "  {",
    "    result = MsgWaitForMultipleObjects(1u, &pHandles, 0, 0xFFFFFFFF, 0x4FFu);",
    "    if ( !result )",
    "      break;",
    "    if ( PeekMessageA(&Msg, 0, 0, 0, 1u) )",
    "    {",
    "      do",
    "      {",
    "        if ( Msg.message == 18 )",
    "          v1 = 1;",
    "        else",
    "          DispatchMessageA(&Msg);",
    "        result = PeekMessageA(&Msg, 0, 0, 0, 1u);",
    "      }",
    "      while ( result );",
    "      if ( v1 )",
    "        break;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall CheckOSVersion(__int64 a1)",
    "{",
    "  unsigned int v2; // ebx",
    "  int v3; // edi",
    "  __int16 v4; // ax",
    "  int v5; // r10d",
    "  int v6; // r11d",
    "  __int64 v7; // r12",
    "  int v8; // eax",
    "  DWORD v9; // r8d",
    "  int v10; // ecx",
    "  bool v11; // cc",
    "  const CHAR *v12; // r15",
    "  int v13; // r14d",
    "  int v14; // eax",
    "  int v15; // eax",
    "  int v16; // eax",
    "  bool v17; // zf",
    "  int v19[4]; // [rsp+38h] [rbp-D0h] BYREF",
    "  _BYTE VersionInformation[160]; // [rsp+48h] [rbp-C0h] BYREF",
    "  CHAR v21[272]; // [rsp+E8h] [rbp-20h] BYREF",
    "",
    "  *(_DWORD *)VersionInformation = 148;",
    "  v2 = 0;",
    "  v3 = 0;",
    "  if ( !GetVersionExA((LPOSVERSIONINFOA)VersionInformation) )",
    "  {",
    "    v3 = 1204;",
    "LABEL_54:",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    goto LABEL_69;",
    "  }",
    "  if ( *(_DWORD *)&VersionInformation[16] == 1 )",
    "  {",
    "    g_wOSVer = 0;",
    "    g_fOSSupportsFullUI = 1;",
    "    v4 = 0;",
    "    g_fOSSupportsINFInstalls = 1;",
    "  }",
    "  else",
    "  {",
    "    if ( *(_DWORD *)&VersionInformation[16] != 2 )",
    "    {",
    "      v3 = 1226;",
    "      goto LABEL_54;",
    "    }",
    "    g_wOSVer = 2;",
    "    v4 = 2;",
    "    g_fOSSupportsFullUI = 1;",
    "    g_fOSSupportsINFInstalls = 1;",
    "    if ( *(_DWORD *)&VersionInformation[4] > 3u )",
    "    {",
    "      if ( *(_DWORD *)&VersionInformation[4] >= 5u )",
    "      {",
    "        v4 = 3;",
    "        g_wOSVer = 3;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      v4 = 1;",
    "      g_wOSVer = 1;",
    "      if ( *(_DWORD *)&VersionInformation[4] < 3u || *(_DWORD *)&VersionInformation[8] < 0x33u )",
    "      {",
    "        g_fOSSupportsFullUI = 0;",
    "        g_fOSSupportsINFInstalls = 0;",
    "      }",
    "    }",
    "  }",
    "  if ( dword_14000CD14 || !a1 )",
    "    goto LABEL_69;",
    "  v19[0] = 0;",
    "  v5 = 0;",
    "  v6 = 0;",
    "  v7 = (-(__int64)(v4 != 0) & 0xFFFFFFFFFFFFFFC4uLL) + a1 + 64;",
    "  while ( 1 )",
    "  {",
    "    v8 = -1;",
    "    v9 = 3 * v6;",
    "    if ( *(_DWORD *)&VersionInformation[4] < *(_DWORD *)(v7 + 24LL * v6) )",
    "    {",
    "LABEL_17:",
    "      v10 = -1;",
    "      goto LABEL_22;",
    "    }",
    "    if ( *(_DWORD *)&VersionInformation[4] <= *(_DWORD *)(v7 + 24LL * v6) )",
    "    {",
    "      if ( *(_DWORD *)&VersionInformation[8] < *(_DWORD *)(v7 + 24LL * v6 + 4) )",
    "        goto LABEL_17;",
    "      v10 = *(_DWORD *)&VersionInformation[8] > *(_DWORD *)(v7 + 24LL * v6 + 4);",
    "    }",
    "    else",
    "    {",
    "      v10 = 1;",
    "    }",
    "LABEL_22:",
    "    if ( *(_DWORD *)&VersionInformation[4] >= *(_DWORD *)(v7 + 24LL * v6 + 12) )",
    "    {",
    "      if ( *(_DWORD *)&VersionInformation[4] <= *(_DWORD *)(v7 + 24LL * v6 + 12) )",
    "      {",
    "        if ( *(_DWORD *)&VersionInformation[8] >= *(_DWORD *)(v7 + 24LL * v6 + 16) )",
    "          v8 = *(_DWORD *)&VersionInformation[8] > *(_DWORD *)(v7 + 24LL * v6 + 16);",
    "      }",
    "      else",
    "      {",
    "        v8 = 1;",
    "      }",
    "    }",
    "    if ( v10 >= 0 && v8 <= 0 )",
    "    {",
    "      if ( !v10 )",
    "      {",
    "        if ( v8 )",
    "        {",
    "          if ( (unsigned int)*(unsigned __int16 *)&VersionInformation[12] >= *(_DWORD *)(v7 + 24LL * v6 + 8) )",
    "            goto LABEL_50;",
    "        }",
    "        else if ( (unsigned int)*(unsigned __int16 *)&VersionInformation[12] >= *(_DWORD *)(v7 + 24LL * v6 + 8) )",
    "        {",
    "          v11 = (unsigned int)*(unsigned __int16 *)&VersionInformation[12] <= *(_DWORD *)(v7 + 24LL * v6 + 20);",
    "LABEL_37:",
    "          if ( v11 )",
    "            goto LABEL_50;",
    "        }",
    "        if ( v6 )",
    "        {",
    "          v3 = 1356;",
    "          goto LABEL_40;",
    "        }",
    "        goto LABEL_46;",
    "      }",
    "      if ( v8 )",
    "        goto LABEL_50;",
    "      v11 = (unsigned int)*(unsigned __int16 *)&VersionInformation[12] <= *(_DWORD *)(v7 + 24LL * v6 + 20);",
    "      goto LABEL_37;",
    "    }",
    "    if ( v6 == 1 )",
    "      break;",
    "LABEL_46:",
    "    v5 = v6 + 1;",
    "    v19[0] = v5;",
    "    ++v6;",
    "    if ( v5 >= 2 )",
    "      goto LABEL_49;",
    "  }",
    "  v3 = 1356;",
    "LABEL_49:",
    "  if ( v3 )",
    "    goto LABEL_53;",
    "LABEL_50:",
    "  if ( !*(_DWORD *)(a1 + 124) || (unsigned int)CheckFileVersion(a1, v21, v9, v19) )",
    "    goto LABEL_69;",
    "  v5 = v19[0];",
    "  v3 = 1357;",
    "LABEL_53:",
    "  if ( (unsigned int)(v3 - 1356) > 1 )",
    "    goto LABEL_54;",
    "LABEL_40:",
    "  v12 = 0;",
    "  v13 = 0;",
    "  if ( v3 == 1357 )",
    "    v7 = *(unsigned int *)(a1 + 128) + 132LL + a1 + 60LL * v5;",
    "  if ( v7 )",
    "  {",
    "    v12 = (const CHAR *)(*(unsigned int *)(v7 + 52) + a1 + 132);",
    "    v14 = *(_DWORD *)(v7 + 48);",
    "    if ( (v14 & 1) != 0 )",
    "      v13 = 260;",
    "    else",
    "      v13 = (v14 & 2) != 0 ? 0x101 : 0;",
    "  }",
    "  if ( (word_14000CD18 & 1) == 0 && v12 && *v12 )",
    "  {",
    "    MessageBeep(0);",
    "    if ( !(unsigned int)RunningOnWin95BiDiLoc()",
    "      || (v17 = (unsigned int)IsBiDiLocalizedBinary() == 0, v15 = 1572912, v17) )",
    "    {",
    "      v15 = 48;",
    "    }",
    "    v16 = MessageBoxA(0, v12, Caption, v13 | v15);",
    "    if ( (v13 & 4) != 0 )",
    "    {",
    "      v17 = v16 == 6;",
    "    }",
    "    else",
    "    {",
    "      if ( (v13 & 1) == 0 )",
    "        goto LABEL_69;",
    "      v17 = v16 == 1;",
    "    }",
    "    if ( v17 )",
    "      v3 = 0;",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 0x30u, 0);",
    "  }",
    "LABEL_69:",
    "  LOBYTE(v2) = v3 == 0;",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 DisplayLicense()",
    "{",
    "  unsigned int Resource; // ebx",
    "  CHAR *v1; // rax",
    "  __int64 v3; // rcx",
    "  __int64 v4; // rbx",
    "",
    "  Resource = GetResource(\"LICENSE\", 0, 0);",
    "  v1 = (CHAR *)LocalAlloc(0x40u, Resource + 1);",
    "  g_szLicense = v1;",
    "  if ( !v1 )",
    "  {",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  if ( !(unsigned int)GetResource(\"LICENSE\", v1, Resource) )",
    "  {",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    LocalFree((HLOCAL)g_szLicense);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  if ( lstrcmpA(g_szLicense, \"<None>\") )",
    "  {",
    "    v4 = MyDialogBox(v3, 2001, 0, LicenseDlgProc, 0, 0);",
    "    LocalFree((HLOCAL)g_szLicense);",
    "    if ( !v4 )",
    "    {",
    "      g_dwExitCode = -2147023673;",
    "      return 0;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    LocalFree((HLOCAL)g_szLicense);",
    "  }",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 RunInstallCommand()",
    "{",
    "  int v0; // r15d",
    "  int v1; // r12d",
    "  int v2; // r14d",
    "  __int64 v3; // rsi",
    "  __int64 v4; // rdx",
    "  const CHAR *v5; // rcx",
    "  CHAR *v6; // rcx",
    "  CHAR v7; // al",
    "  CHAR *v8; // rax",
    "  int v9; // ebx",
    "  HMODULE Library; // rax",
    "  HMODULE v11; // rdi",
    "  FARPROC ProcAddress; // rdx",
    "  char *v13; // rbx",
    "  int v14; // ecx",
    "  __int64 cbData; // [rsp+38h] [rbp-D0h] BYREF",
    "  char *hMem; // [rsp+40h] [rbp-C8h] BYREF",
    "  __int64 Destination; // [rsp+48h] [rbp-C0h] BYREF",
    "  _QWORD v19[5]; // [rsp+50h] [rbp-B8h] BYREF",
    "  int v20; // [rsp+78h] [rbp-90h]",
    "  int v21; // [rsp+7Ch] [rbp-8Ch]",
    "  int v22; // [rsp+80h] [rbp-88h]",
    "  struct _STARTUPINFOA v23; // [rsp+88h] [rbp-80h] BYREF",
    "  CHAR String1[272]; // [rsp+F8h] [rbp-10h] BYREF",
    "  char Buffer[272]; // [rsp+208h] [rbp+100h] BYREF",
    "  BYTE Data[576]; // [rsp+318h] [rbp+210h] BYREF",
    "",
    "  v0 = 0;",
    "  v1 = 0;",
    "  g_dwExitCode = 0;",
    "  if ( !dword_14000CD08 && (unsigned int)GetResource(\"REBOOT\", &dword_14000DE5C, 4u) - 1 > 3 )",
    "  {",
    "LABEL_24:",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  v2 = 0;",
    "  v3 = -1;",
    "  while ( 1 )",
    "  {",
    "    LODWORD(cbData) = 0;",
    "    memset_0(&v23.cb + 1, 0, 0x64u);",
    "    v23.cb = 104;",
    "    if ( byte_14000CF22 )",
    "    {",
    "      v4 = 260;",
    "      v6 = String1;",
    "      do",
    "      {",
    "        if ( v4 == -2147483386 )",
    "          break;",
    "        v7 = v6[&byte_14000CF22 - String1];",
    "        if ( !v7 )",
    "          break;",
    "        *v6++ = v7;",
    "        --v4;",
    "      }",
    "      while ( v4 );",
    "      v8 = v6 - 1;",
    "      if ( v4 )",
    "        v8 = v6;",
    "      *v8 = 0;",
    "      goto LABEL_32;",
    "    }",
    "    if ( (unsigned int)GetResource(\"SHOWWINDOW\", &Destination, 4u) - 1 > 3 )",
    "      goto LABEL_24;",
    "    switch ( (_DWORD)Destination )",
    "    {",
    "      case 1:",
    "        v23.wShowWindow = 0;",
    "        break;",
    "      case 2:",
    "        v23.wShowWindow = 6;",
    "        break;",
    "      case 3:",
    "        v23.wShowWindow = 3;",
    "        break;",
    "      default:",
    "        goto LABEL_13;",
    "    }",
    "    v23.dwFlags = 1;",
    "LABEL_13:",
    "    if ( v2 )",
    "      goto LABEL_32;",
    "    if ( word_14000CD18 )",
    "    {",
    "      if ( (word_14000CD18 & 1) != 0 )",
    "      {",
    "        v5 = \"ADMQCMD\";",
    "      }",
    "      else",
    "      {",
    "        if ( (word_14000CD18 & 2) == 0 )",
    "          return 0;",
    "        v5 = \"USRQCMD\";",
    "      }",
    "      if ( !(unsigned int)GetResource(v5, String1, 0x104u) )",
    "        goto LABEL_24;",
    "      if ( CompareStringA(0x7Fu, 1u, String1, -1, \"<None>\", -1) )",
    "        v0 = 1;",
    "    }",
    "    if ( !v0 )",
    "      break;",
    "LABEL_36:",
    "    if ( !(unsigned int)AnalyzeCmd(String1, v4, &hMem, &cbData) )",
    "      return 0;",
    "    v9 = cbData;",
    "    if ( !v1 && g_wOSVer != 1 && g_CMD )",
    "    {",
    "      if ( (_DWORD)cbData )",
    "        goto LABEL_43;",
    "      v1 = 1;",
    "      AddRegRunOnce();",
    "    }",
    "    if ( !v9 )",
    "      goto LABEL_59;",
    "LABEL_43:",
    "    if ( !g_fOSSupportsINFInstalls )",
    "    {",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      LocalFree(hMem);",
    "      g_dwExitCode = -2147023829;",
    "      return 0;",
    "    }",
    "    if ( (dword_14000DE64 & 4) == 0 )",
    "    {",
    "LABEL_59:",
    "      v13 = hMem;",
    "      if ( !hMem || !(unsigned int)RunApps(hMem, &v23) )",
    "        goto LABEL_64;",
    "      goto LABEL_61;",
    "    }",
    "    Library = (HMODULE)MyLoadLibrary();",
    "    v11 = Library;",
    "    if ( !Library )",
    "    {",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      goto LABEL_67;",
    "    }",
    "    ProcAddress = GetProcAddress(Library, aDoinfinstall);",
    "    if ( !ProcAddress )",
    "    {",
    "      MsgBox2Param(0, 0x10u, 0);",
    "      FreeLibrary(v11);",
    "LABEL_67:",
    "      LocalFree(hMem);",
    "      g_dwExitCode = MyGetLastError();",
    "      return 0;",
    "    }",
    "    v13 = hMem;",
    "    v19[1] = Caption;",
    "    v19[3] = &PathName;",
    "    LOWORD(v20) = g_wOSVer;",
    "    v14 = (unsigned __int16)word_14000CD18;",
    "    v19[4] = String1;",
    "    v19[0] = 0;",
    "    v19[2] = hMem;",
    "    v21 = (unsigned __int16)word_14000CD18;",
    "    if ( dword_14000CD10 )",
    "    {",
    "      v14 = (unsigned __int16)word_14000CD18 | 0x10000;",
    "      v21 = v14;",
    "    }",
    "    if ( (dword_14000DE64 & 8) != 0 )",
    "    {",
    "      v14 |= 0x20000u;",
    "      v21 = v14;",
    "    }",
    "    if ( (dword_14000DE64 & 0x10) != 0 )",
    "    {",
    "      v14 |= 0x40000u;",
    "      v21 = v14;",
    "    }",
    "    if ( (dword_14000D028 & 0x40) != 0 )",
    "    {",
    "      v14 |= 0x80000u;",
    "      v21 = v14;",
    "    }",
    "    if ( (dword_14000D028 & 0x80u) != 0 )",
    "      v21 = v14 | 0x100000;",
    "    v22 = dword_14000DE68;",
    "    g_dwExitCode = ((__int64 (__fastcall *)(_QWORD *))ProcAddress)(v19);",
    "    if ( g_dwExitCode < 0 )",
    "    {",
    "      FreeLibrary(v11);",
    "LABEL_64:",
    "      LocalFree(v13);",
    "      return 0;",
    "    }",
    "    FreeLibrary(v11);",
    "LABEL_61:",
    "    LocalFree(v13);",
    "    if ( (unsigned int)++v2 >= 2 )",
    "      goto LABEL_70;",
    "  }",
    "  if ( !(unsigned int)GetResource(\"RUNPROGRAM\", String1, 0x104u) )",
    "    goto LABEL_24;",
    "LABEL_32:",
    "  if ( v2 != 1 )",
    "    goto LABEL_36;",
    "  if ( !(unsigned int)GetResource(\"POSTRUNPROGRAM\", String1, 0x104u) )",
    "    goto LABEL_24;",
    "  if ( !byte_14000CF22 && CompareStringA(0x7Fu, 1u, String1, -1, \"<None>\", -1) != 2 )",
    "    goto LABEL_36;",
    "LABEL_70:",
    "  if ( g_bConvertRunOnce && g_szRegValName[0] && !RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x2001Fu, (PHKEY)&hMem) )",
    "  {",
    "    LODWORD(cbData) = 568;",
    "    if ( !RegQueryValueExA((HKEY)hMem, g_szRegValName, 0, 0, Data, (LPDWORD)&cbData) )",
    "    {",
    "      memset_0(Buffer, 0, 0x104u);",
    "      if ( GetSystemDirectoryA(Buffer, 0x104u) )",
    "        AddPath(Buffer, 0x104u, pszCabPath);",
    "      StringCchPrintfA(",
    "        (STRSAFE_LPSTR)Data,",
    "        0x238u,",
    "        \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\",",
    "        Buffer,",
    "        &PathName);",
    "      do",
    "        ++v3;",
    "      while ( Data[v3] );",
    "      RegSetValueExA((HKEY)hMem, g_szRegValName, 0, 1u, Data, v3 + 1);",
    "    }",
    "    RegCloseKey((HKEY)hMem);",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall RunApps(LPSTR lpCommandLine, LPSTARTUPINFOA lpStartupInfo)",
    "{",
    "  unsigned int v2; // esi",
    "  DWORD v3; // edi",
    "  DWORD v4; // ecx",
    "  int v5; // ebx",
    "  DWORD LastError; // eax",
    "  DWORD ExitCode; // [rsp+50h] [rbp-B0h] BYREF",
    "  struct _PROCESS_INFORMATION ProcessInformation; // [rsp+58h] [rbp-A8h] BYREF",
    "  CHAR Buffer[512]; // [rsp+70h] [rbp-90h] BYREF",
    "",
    "  v2 = 1;",
    "  memset(&ProcessInformation, 0, sizeof(ProcessInformation));",
    "  if ( !CreateProcessA(0, lpCommandLine, 0, 0, 0, 0x20u, 0, 0, lpStartupInfo, &ProcessInformation) )",
    "  {",
    "    g_dwExitCode = MyGetLastError();",
    "    LastError = GetLastError();",
    "    FormatMessageA(0x1000u, 0, LastError, 0, Buffer, 0x200u, 0);",
    "    MsgBox2Param(0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  WaitForSingleObject(ProcessInformation.hProcess, 0xFFFFFFFF);",
    "  GetExitCodeProcess(ProcessInformation.hProcess, &ExitCode);",
    "  v3 = ExitCode;",
    "  if ( !dword_14000CD08 )",
    "  {",
    "    v4 = dword_14000DE5C;",
    "    if ( (dword_14000DE5C & 1) != 0 && (dword_14000DE5C & 2) == 0 )",
    "    {",
    "      if ( (ExitCode & 0xFF000000) == 0xAA000000 )",
    "        v4 = ExitCode;",
    "      dword_14000DE5C = v4;",
    "    }",
    "  }",
    "  if ( (dword_14000DE64 & 0x800) != 0 )",
    "    goto LABEL_9;",
    "  if ( g_uInfRebootOn",
    "    || (v5 = g_dwRebootCheck, v5 != NeedRebootInit())",
    "    || (v3 & 0xFF000000) == 0xAA000000 && (v3 & 1) != 0 )",
    "  {",
    "    g_dwExitCode = 3010;",
    "    goto LABEL_17;",
    "  }",
    "  if ( (dword_14000DE64 & 0x200) != 0 )",
    "LABEL_9:",
    "    g_dwExitCode = v3;",
    "LABEL_17:",
    "  CloseHandle(ProcessInformation.hThread);",
    "  CloseHandle(ProcessInformation.hProcess);",
    "  if ( (dword_14000DE64 & 0x400) != 0 && (ExitCode & 0x80000000) != 0 )",
    "    return 0;",
    "  return v2;",
    "}",
    "",
    "",
    "HLOCAL FinishMessage()",
    "{",
    "  unsigned int Resource; // edi",
    "  CHAR *v1; // rax",
    "  CHAR *v2; // rbx",
    "",
    "  Resource = GetResource(\"FINISHMSG\", 0, 0);",
    "  v1 = (CHAR *)LocalAlloc(0x40u, 8LL * (Resource + 1));",
    "  v2 = v1;",
    "  if ( !v1 )",
    "    return (HLOCAL)MsgBox2Param(0, 0x10u, 0);",
    "  if ( (unsigned int)GetResource(\"FINISHMSG\", v1, Resource) )",
    "  {",
    "    if ( lstrcmpA(v2, \"<None>\") )",
    "      MsgBox2Param(0, 0x40u, 0);",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 0x10u, 0);",
    "  }",
    "  return LocalFree(v2);",
    "}",
    "",
    "",
    "__int64 __fastcall BrowseCallback(HWND a1, int a2, __int64 a3, LPARAM a4)",
    "{",
    "  if ( a2 == 1 )",
    "    SendMessageA(a1, 0x466u, 1u, a4);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall BrowseForDir(HWND a1)",
    "{",
    "  HMODULE LibraryA; // rax",
    "  unsigned int v3; // ebx",
    "  HMODULE v4; // rdi",
    "  FARPROC ProcAddress; // r12",
    "  FARPROC v6; // r14",
    "  FARPROC v7; // r15",
    "  __int64 v8; // rdx",
    "  LPSTR v9; // rax",
    "  LPSTR v10; // rsi",
    "  __int64 v11; // rax",
    "  __int64 v12; // rsi",
    "  _QWORD v14[4]; // [rsp+30h] [rbp-68h] BYREF",
    "  int v15; // [rsp+50h] [rbp-48h]",
    "  __int64 (__fastcall *v16)(HWND, int, __int64, LPARAM); // [rsp+58h] [rbp-40h]",
    "  CHAR *v17; // [rsp+60h] [rbp-38h]",
    "",
    "  LibraryA = LoadLibraryA(aShell32Dll);",
    "  v3 = 0;",
    "  v4 = LibraryA;",
    "  if ( !LibraryA )",
    "    goto LABEL_17;",
    "  ProcAddress = GetProcAddress(LibraryA, aShbrowseforfol);",
    "  if ( !ProcAddress || (v6 = GetProcAddress(v4, (LPCSTR)0xC3)) == 0 || (v7 = GetProcAddress(v4, aShgetpathfromi)) == 0 )",
    "  {",
    "    FreeLibrary(v4);",
    "LABEL_17:",
    "    MsgBox2Param(a1, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  if ( !g_szBrowsePath[0] )",
    "  {",
    "    GetTempPathA(0x104u, g_szBrowsePath);",
    "    v8 = -1;",
    "    do",
    "      ++v8;",
    "    while ( g_szBrowsePath[v8] );",
    "    v9 = CharPrevA(g_szBrowsePath, &g_szBrowsePath[v8]);",
    "    v10 = v9;",
    "    if ( *v9 == 92 && *CharPrevA(g_szBrowsePath, v9) != 58 )",
    "      *v10 = 0;",
    "  }",
    "  pszDest[0] = 0;",
    "  v14[3] = Buffer;",
    "  v14[0] = a1;",
    "  v16 = BrowseCallback;",
    "  v14[1] = 0;",
    "  v14[2] = 0;",
    "  v15 = 1;",
    "  v17 = g_szBrowsePath;",
    "  v11 = ((__int64 (__fastcall *)(_QWORD *))ProcAddress)(v14);",
    "  v12 = v11;",
    "  if ( v11 )",
    "  {",
    "    ((void (__fastcall *)(__int64, CHAR *))v7)(v11, g_szBrowsePath);",
    "    if ( g_szBrowsePath[0] )",
    "      StringCchCopyA(pszDest, 0x104u, g_szBrowsePath);",
    "    ((void (__fastcall *)(__int64))v6)(v12);",
    "  }",
    "  FreeLibrary(v4);",
    "  LOBYTE(v3) = pszDest[0] != 0;",
    "  return v3;",
    "}",
    "",
    "",
    "BOOL __fastcall CenterWindow(HWND hWnd, HWND a2)",
    "{",
    "  int v4; // r15d",
    "  int v5; // esi",
    "  int v6; // edi",
    "  int v7; // r14d",
    "  HDC DC; // rbx",
    "  int DeviceCaps; // r12d",
    "  int v10; // r13d",
    "  int v11; // r8d",
    "  int v12; // r9d",
    "  struct tagRECT v15; // [rsp+48h] [rbp-28h] BYREF",
    "  tagRECT Rect; // [rsp+58h] [rbp-18h] BYREF",
    "",
    "  GetWindowRect(hWnd, &Rect);",
    "  v4 = Rect.right - Rect.left;",
    "  v5 = Rect.bottom - Rect.top;",
    "  GetWindowRect(a2, &v15);",
    "  v6 = v15.right - v15.left;",
    "  v7 = v15.bottom - v15.top;",
    "  DC = GetDC(hWnd);",
    "  DeviceCaps = GetDeviceCaps(DC, 8);",
    "  v10 = GetDeviceCaps(DC, 10);",
    "  ReleaseDC(hWnd, DC);",
    "  v11 = v15.left + (v6 - v4) / 2;",
    "  if ( v11 >= 0 )",
    "  {",
    "    if ( v11 + v4 > DeviceCaps )",
    "      v11 = DeviceCaps - v4;",
    "  }",
    "  else",
    "  {",
    "    v11 = 0;",
    "  }",
    "  v12 = v15.top + (v7 - v5) / 2;",
    "  if ( v12 >= 0 )",
    "  {",
    "    if ( v12 + v5 > v10 )",
    "      v12 = v10 - v5;",
    "  }",
    "  else",
    "  {",
    "    v12 = 0;",
    "  }",
    "  return SetWindowPos(hWnd, 0, v11, v12, 0, 0, 5u);",
    "}",
    "",
    "",
    "__int64 __fastcall MsgBox2Param(HWND hWnd, UINT a2, __int64 a3, __int64 a4, UINT uType, int a6)",
    "{",
    "  __int64 result; // rax",
    "  int v10; // eax",
    "  UINT v11; // r9d",
    "  unsigned int v12; // ebx",
    "  __int64 v13; // rax",
    "  __int64 v14; // rcx",
    "  int v15; // eax",
    "  __int64 v16; // rcx",
    "  SIZE_T v17; // r15",
    "  char *v18; // rax",
    "  CHAR *v19; // rdi",
    "  __int64 v20; // rcx",
    "  SIZE_T v21; // r14",
    "  char *v22; // rax",
    "  SIZE_T v23; // rsi",
    "  char *v24; // rax",
    "  int v25; // eax",
    "  int v26; // r9d",
    "  CHAR Text[64]; // [rsp+30h] [rbp-D0h] BYREF",
    "  CHAR Buffer[512]; // [rsp+70h] [rbp-90h] BYREF",
    "",
    "  result = 1;",
    "  strcpy(Text, \"LoadString() Error.  Could not load string resource.\");",
    "  if ( (word_14000CD18 & 1) != 0 )",
    "    return result;",
    "  Buffer[0] = 0;",
    "  LoadStringA(g_hInst, a2, Buffer, 512);",
    "  if ( Buffer[0] )",
    "  {",
    "    v12 = -1;",
    "    v13 = -1;",
    "    if ( a4 )",
    "    {",
    "      do",
    "        ++v13;",
    "      while ( *(_BYTE *)(a4 + v13) );",
    "      v14 = -1;",
    "      do",
    "        ++v14;",
    "      while ( *(_BYTE *)(a3 + v14) );",
    "      v15 = v14 + v13;",
    "      v16 = -1;",
    "      do",
    "        ++v16;",
    "      while ( Buffer[v16] );",
    "      v17 = (unsigned int)(v16 + v15 + 100);",
    "      v18 = (char *)LocalAlloc(0x40u, v17);",
    "      v19 = v18;",
    "      if ( v18 )",
    "      {",
    "        StringCchPrintfA(v18, (unsigned int)v17, Buffer, a3, a4);",
    "        goto LABEL_23;",
    "      }",
    "      return v12;",
    "    }",
    "    do",
    "      ++v13;",
    "    while ( Buffer[v13] );",
    "    if ( a3 )",
    "    {",
    "      v20 = -1;",
    "      do",
    "        ++v20;",
    "      while ( *(_BYTE *)(a3 + v20) );",
    "      v21 = (unsigned int)(v20 + v13 + 100);",
    "      v22 = (char *)LocalAlloc(0x40u, v21);",
    "      v19 = v22;",
    "      if ( !v22 )",
    "        return v12;",
    "      StringCchPrintfA(v22, (unsigned int)v21, Buffer, a3);",
    "    }",
    "    else",
    "    {",
    "      v23 = (unsigned int)(v13 + 1);",
    "      v24 = (char *)LocalAlloc(0x40u, v23);",
    "      v19 = v24;",
    "      if ( !v24 )",
    "        return v12;",
    "      StringCchCopyA(v24, (unsigned int)v23, Buffer);",
    "    }",
    "LABEL_23:",
    "    MessageBeep(uType);",
    "    if ( !(unsigned int)RunningOnWin95BiDiLoc() || (v25 = IsBiDiLocalizedBinary(), v26 = 1638400, !v25) )",
    "      v26 = 0x10000;",
    "    v12 = MessageBoxA(hWnd, v19, Caption, a6 | uType | v26);",
    "    LocalFree(v19);",
    "    return v12;",
    "  }",
    "  if ( !(unsigned int)RunningOnWin95BiDiLoc() || (v10 = IsBiDiLocalizedBinary(), v11 = 1638416, !v10) )",
    "    v11 = 65552;",
    "  MessageBoxA(hWnd, Text, Caption, v11);",
    "  return -1;",
    "}",
    "",
    "",
    "__int64 __fastcall GetResource(LPCSTR lpName, void *Destination, rsize_t DestinationSize)",
    "{",
    "  DWORD v4; // ebp",
    "  HRSRC ResourceA; // rax",
    "  DWORD v7; // eax",
    "  DWORD v8; // ebx",
    "  HRSRC v9; // rax",
    "  HGLOBAL Resource; // rax",
    "  void *v11; // rax",
    "  void *v12; // rdi",
    "",
    "  v4 = DestinationSize;",
    "  ResourceA = FindResourceA(0, lpName, (LPCSTR)0xA);",
    "  v7 = SizeofResource(0, ResourceA);",
    "  v8 = v7;",
    "  if ( v7 > v4 || !Destination )",
    "    return v8;",
    "  if ( v7 )",
    "  {",
    "    v9 = FindResourceA(0, lpName, (LPCSTR)0xA);",
    "    Resource = LoadResource(0, v9);",
    "    v11 = LockResource(Resource);",
    "    v12 = v11;",
    "    if ( v11 )",
    "    {",
    "      memcpy_s(Destination, v4, v11, v8);",
    "      FreeResource(v12);",
    "      return v8;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall CatDirAndFile(STRSAFE_LPSTR pszDest, STRSAFE_LPCSTR pszSrc, STRSAFE_LPCSTR a3)",
    "{",
    "  __int64 v5; // rax",
    "  __int64 v6; // rcx",
    "",
    "  StringCchCopyA(pszDest, 0x104u, pszSrc);",
    "  v5 = -1;",
    "  v6 = -1;",
    "  do",
    "    ++v6;",
    "  while ( pszDest[v6] );",
    "  if ( pszDest[v6 - 1] != 92 )",
    "  {",
    "    do",
    "      ++v5;",
    "    while ( pszDest[v5] );",
    "    if ( pszDest[v5 - 1] != 47 && StringCchCatA(pszDest, 0x104u, \"\\\\\") < 0 )",
    "      return 0;",
    "  }",
    "  StringCchCatA(pszDest, 0x104u, a3);",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall CheckOverwrite(LPCSTR lpFileName)",
    "{",
    "  DWORD FileAttributesA; // eax",
    "  __int64 v3; // rcx",
    "  unsigned int v4; // ebx",
    "  __int64 v5; // rax",
    "  __int64 v6; // rax",
    "",
    "  FileAttributesA = GetFileAttributesA(lpFileName);",
    "  if ( FileAttributesA != -1 && (FileAttributesA & 0x10) == 0 )",
    "  {",
    "    v4 = 0;",
    "    if ( !dword_14000D600 && (word_14000CD18 & 1) == 0 )",
    "    {",
    "      lpString = lpFileName;",
    "      v5 = MyDialogBox(v3, 2003, g_hwndExtractDlg, OverwriteDlgProc, 0, 6) - 6;",
    "      if ( v5 )",
    "      {",
    "        v6 = v5 - 1;",
    "        if ( !v6 )",
    "          return v4;",
    "        if ( v6 == 2098 )",
    "          dword_14000D600 = 1;",
    "      }",
    "    }",
    "    SetFileAttributesA(lpFileName, 0x80u);",
    "    return 1;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall AddFile(STRSAFE_LPCSTR pszSrc)",
    "{",
    "  _QWORD *v2; // rdi",
    "  __int64 result; // rax",
    "  __int64 v4; // rbx",
    "  __int64 v5; // rdx",
    "  char *v6; // rax",
    "",
    "  v2 = LocalAlloc(0x40u, 0x10u);",
    "  if ( !v2 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4B5u, 0, 0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  v4 = -1;",
    "  v5 = -1;",
    "  do",
    "    ++v5;",
    "  while ( pszSrc[v5] );",
    "  v6 = (char *)LocalAlloc(0x40u, v5 + 1);",
    "  *v2 = v6;",
    "  if ( !v6 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4B5u, 0, 0, 0x10u, 0);",
    "    LocalFree(v2);",
    "    return 0;",
    "  }",
    "  do",
    "    ++v4;",
    "  while ( pszSrc[v4] );",
    "  StringCchCopyA(v6, v4 + 1, pszSrc);",
    "  result = 1;",
    "  v2[1] = hMem;",
    "  hMem = v2;",
    "  return result;",
    "}",
    "",
    "",
    "INT_PTR __fastcall openfunc(const CHAR *pszFile, __int16 oflag, int pmode)",
    "{",
    "  int v3; // r14d",
    "  int *v6; // rax",
    "  __int64 v8; // rdx",
    "  __int64 v9; // rcx",
    "  HGLOBAL v10; // rax",
    "  __int64 FileA; // rcx",
    "  DWORD v12; // ebp",
    "  DWORD dwCreationDisposition; // ebx",
    "  CHAR v14; // al",
    "  LPSTR v15; // rdi",
    "  int v16; // r15d",
    "  __int64 v17; // rax",
    "",
    "  v3 = 0;",
    "  v6 = (int *)&g_FileTable;",
    "  do",
    "  {",
    "    if ( *v6 == 1 )",
    "      break;",
    "    ++v3;",
    "    v6 += 8;",
    "  }",
    "  while ( (__int64)v6 < (__int64)&g_uInfRebootOn );",
    "  if ( v3 == 40 )",
    "  {",
    "    MsgBox2Param(g_hwndExtractDlg, 0x4BBu, 0, 0, 0x10u, 0);",
    "    return -1;",
    "  }",
    "  if ( lstrcmpA(pszFile, pszCabinet) )",
    "  {",
    "    if ( (oflag & 8) != 0 )",
    "    {",
    "      FileA = -1;",
    "      goto LABEL_36;",
    "    }",
    "    v12 = (oflag & 3) != 0 ? 0x40000000 : 0x80000000;",
    "    if ( (oflag & 0x100) != 0 )",
    "    {",
    "      if ( (oflag & 0x400) != 0 )",
    "        dwCreationDisposition = 1;",
    "      else",
    "        dwCreationDisposition = (oflag & 0x200) != 0 ? 2 : 4;",
    "    }",
    "    else",
    "    {",
    "      dwCreationDisposition = (oflag & 0x200) != 0 ? 5 : 3;",
    "    }",
    "    FileA = (__int64)CreateFileA(pszFile, v12, 0, 0, dwCreationDisposition, 0x80u, 0);",
    "    if ( FileA != -1 || dwCreationDisposition == 3 )",
    "      goto LABEL_36;",
    "    if ( !*pszFile )",
    "    {",
    "LABEL_35:",
    "      FileA = (__int64)CreateFileA(pszFile, v12, 0, 0, dwCreationDisposition, 0x80u, 0);",
    "LABEL_36:",
    "      v8 = v3;",
    "      v17 = 32LL * v3;",
    "      *(_QWORD *)((char *)&g_FileTable + v17 + 24) = FileA;",
    "      if ( FileA == -1 )",
    "        return -1;",
    "      *(_DWORD *)((char *)&g_FileTable + v17) = 0;",
    "      *(_DWORD *)((char *)&g_FileTable + v17 + 4) = 0;",
    "      return v8;",
    "    }",
    "    v14 = pszFile[1];",
    "    v15 = (LPSTR)(pszFile + 2);",
    "    v16 = 0;",
    "    if ( v14 == 58 && *v15 == 92 )",
    "    {",
    "      v15 = (LPSTR)(pszFile + 3);",
    "    }",
    "    else",
    "    {",
    "      if ( *pszFile != 92 || v14 != 92 )",
    "      {",
    "        v15 = (LPSTR)(pszFile + 1);",
    "LABEL_34:",
    "        while ( v14 )",
    "        {",
    "          if ( v14 == 92 && *(v15 - 1) != 58 )",
    "          {",
    "            if ( v16 )",
    "            {",
    "              --v16;",
    "            }",
    "            else",
    "            {",
    "              *v15 = 0;",
    "              CreateDirectoryA(pszFile, 0);",
    "              *v15 = 92;",
    "            }",
    "          }",
    "          v15 = CharNextA(v15);",
    "          v14 = *v15;",
    "        }",
    "        goto LABEL_35;",
    "      }",
    "      v16 = 2;",
    "    }",
    "    v14 = *v15;",
    "    goto LABEL_34;",
    "  }",
    "  if ( (oflag & 0x10B) != 0 )",
    "    return -1;",
    "  v8 = v3;",
    "  v9 = 32LL * v3;",
    "  *(_DWORD *)((char *)&g_FileTable + v9) = 0;",
    "  v10 = g_Sess;",
    "  *(_DWORD *)((char *)&g_FileTable + v9 + 16) = 0;",
    "  *(_QWORD *)((char *)&g_FileTable + v9 + 8) = v10;",
    "  *(_DWORD *)((char *)&g_FileTable + v9 + 20) = dword_14000D568;",
    "  *(_DWORD *)((char *)&g_FileTable + v9 + 4) = 1;",
    "  return v8;",
    "}",
    "",
    "",
    "__int64 __fastcall readfunc(INT_PTR hf, void *pv, UINT cb)",
    "{",
    "  INT_PTR v3; // rdi",
    "  int v4; // ecx",
    "  unsigned int v5; // ebx",
    "  BOOL v6; // eax",
    "  DWORD v7; // ecx",
    "  DWORD NumberOfBytesRead; // [rsp+50h] [rbp+18h] BYREF",
    "",
    "  NumberOfBytesRead = cb;",
    "  v3 = 32 * hf;",
    "  v4 = *((_DWORD *)&g_FileTable + 8 * hf + 1);",
    "  if ( v4 )",
    "  {",
    "    if ( v4 == 1 )",
    "    {",
    "      v5 = *(_DWORD *)((char *)&g_FileTable + v3 + 20) - *(_DWORD *)((char *)&g_FileTable + v3 + 16);",
    "      if ( cb < v5 )",
    "        v5 = cb;",
    "      memcpy_0(",
    "        pv,",
    "        (const void *)(*(_QWORD *)((char *)&g_FileTable + v3 + 8) + *(int *)((char *)&g_FileTable + v3 + 16)),",
    "        (int)v5);",
    "      *(_DWORD *)((char *)&g_FileTable + v3 + 16) += v5;",
    "    }",
    "    else",
    "    {",
    "      return (unsigned int)-1;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    v6 = ReadFile(*(HANDLE *)((char *)&g_FileTable + v3 + 24), pv, cb, &NumberOfBytesRead, 0);",
    "    v7 = NumberOfBytesRead;",
    "    if ( !v6 )",
    "      return DWORDLONG_MAX;",
    "    return v7;",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "__int64 __fastcall writefunc(INT_PTR hf, void *pv, UINT cb)",
    "{",
    "  DWORD v6; // ebx",
    "  __int64 v7; // rdx",
    "  DWORD NumberOfBytesWritten; // [rsp+50h] [rbp+18h] BYREF",
    "",
    "  NumberOfBytesWritten = cb;",
    "  WaitForObject(g_hCancelEvent);",
    "  if ( dword_14000D5FC )",
    "    return 0xFFFFFFFFLL;",
    "  if ( WriteFile(qword_14000D058[4 * hf], pv, NumberOfBytesWritten, &NumberOfBytesWritten, 0) )",
    "  {",
    "    v6 = NumberOfBytesWritten;",
    "    if ( NumberOfBytesWritten != -1 )",
    "    {",
    "      v7 = NumberOfBytesWritten + dword_14000D82C;",
    "      dword_14000D82C += NumberOfBytesWritten;",
    "      if ( g_fOSSupportsFullUI )",
    "      {",
    "        if ( g_hwndExtractDlg )",
    "          SendDlgItemMessageA(",
    "            g_hwndExtractDlg,",
    "            2106,",
    "            0x402u,",
    "            100 * v7 / (unsigned __int64)(unsigned int)dword_14000D824,",
    "            0);",
    "      }",
    "    }",
    "  }",
    "  else",
    "  {",
    "    return DWORDLONG_MAX;",
    "  }",
    "  return v6;",
    "}",
    "",
    "",
    "__int64 __fastcall closefunc(INT_PTR hf)",
    "{",
    "  INT_PTR v1; // rbx",
    "  unsigned int v2; // ecx",
    "  BOOL v3; // eax",
    "",
    "  v1 = 32 * hf;",
    "  if ( *((_DWORD *)&g_FileTable + 8 * hf + 1) == 1 )",
    "  {",
    "    v2 = 0;",
    "    *(_DWORD *)((char *)&g_FileTable + v1) = 1;",
    "    *(_QWORD *)((char *)&g_FileTable + v1 + 8) = 0;",
    "    *(_QWORD *)((char *)&g_FileTable + v1 + 16) = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = CloseHandle(*(HANDLE *)((char *)&g_FileTable + v1 + 24));",
    "    v2 = 0;",
    "    if ( v3 )",
    "      *(_DWORD *)((char *)&g_FileTable + v1) = 1;",
    "    else",
    "      return (unsigned int)-1;",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall seekfunc(INT_PTR hf, unsigned int dist, int seektype)",
    "{",
    "  INT_PTR v3; // rcx",
    "  DWORD v4; // r9d",
    "  int v5; // r8d",
    "  int v6; // r8d",
    "",
    "  v3 = 32 * hf;",
    "  v4 = 1;",
    "  if ( *(_DWORD *)((char *)&g_FileTable + v3 + 4) != 1 )",
    "  {",
    "    if ( seektype )",
    "    {",
    "      v6 = seektype - 1;",
    "      if ( v6 )",
    "      {",
    "        if ( v6 != 1 )",
    "          return 0xFFFFFFFFLL;",
    "        v4 = 2;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      v4 = 0;",
    "    }",
    "    dist = SetFilePointer(*(HANDLE *)((char *)&g_FileTable + v3 + 24), dist, 0, v4);",
    "    if ( dist == -1 )",
    "      return (unsigned int)-1;",
    "    return dist;",
    "  }",
    "  if ( seektype )",
    "  {",
    "    v5 = seektype - 1;",
    "    if ( !v5 )",
    "    {",
    "      dist += *(_DWORD *)((char *)&g_FileTable + v3 + 16);",
    "      goto LABEL_7;",
    "    }",
    "    if ( v5 == 1 )",
    "    {",
    "      dist += *(_DWORD *)((char *)&g_FileTable + v3 + 20);",
    "      goto LABEL_7;",
    "    }",
    "    return 0xFFFFFFFFLL;",
    "  }",
    "LABEL_7:",
    "  *(_DWORD *)((char *)&g_FileTable + v3 + 16) = dist;",
    "  return dist;",
    "}",
    "",
    "",
    "HGLOBAL __fastcall allocfunc(ULONG cb)",
    "{",
    "  return GlobalAlloc(0, cb);",
    "}",
    "",
    "",
    "// attributes: thunk",
    "HGLOBAL __stdcall freefunc(HGLOBAL hMem)",
    "{",
    "}__int64 __fastcall fdiNotifyExtract(_XSAVE_FORMAT *__return_ptr retstr, __int64 fdint, PFDINOTIFICATION pfdin)",
    "{",
    "  int v5; // ecx",
    "  int v6; // ecx",
    "  int v7; // ecx",
    "  const char *v8; // r8",
    "  __int64 v9; // rax",
    "  __int64 v10; // rcx",
    "  __int64 v11; // rdi",
    "  DWORD v12; // edx",
    "  const char *v13; // r8",
    "  __int64 v14; // rax",
    "  __int64 v15; // rcx",
    "  INT_PTR v16; // rbx",
    "  FILETIME CreationTime; // [rsp+28h] [rbp-E0h] BYREF",
    "  struct _FILETIME FileTime; // [rsp+30h] [rbp-D8h] BYREF",
    "  CHAR FileName[272]; // [rsp+38h] [rbp-D0h] BYREF",
    "",
    "  if ( dword_14000D5FC )",
    "  {",
    "    if ( (_DWORD)retstr == 3 )",
    "      closefunc(*(_QWORD *)(fdint + 40));",
    "    return -1;",
    "  }",
    "  if ( !(_DWORD)retstr )",
    "    return (int)UpdateCabinetInfo(fdint, fdint, pfdin);",
    "  v5 = (_DWORD)retstr - 1;",
    "  if ( !v5 )",
    "    return 0;",
    "  v6 = v5 - 1;",
    "  if ( !v6 )",
    "  {",
    "    if ( g_hwndExtractDlg )",
    "      SetDlgItemTextA(g_hwndExtractDlg, 2103, *(LPCSTR *)(fdint + 8));",
    "    v13 = *(const char **)(fdint + 8);",
    "    v14 = -1;",
    "    do",
    "      ++v14;",
    "    while ( v13[v14] );",
    "    v15 = -1;",
    "    do",
    "      ++v15;",
    "    while ( *(&PathName + v15) );",
    "    if ( (int)v15 + (int)v14 + 1 >= 260 || !(unsigned int)CatDirAndFile(FileName, &PathName, v13) )",
    "      return -1;",
    "    if ( (unsigned int)CheckOverwrite(FileName) )",
    "    {",
    "      v16 = openfunc(FileName, 33538, 384);",
    "      if ( v16 == -1 || !(unsigned int)AddFile(FileName) )",
    "        return -1;",
    "      ++dword_14000D820;",
    "      return v16;",
    "    }",
    "    return 0;",
    "  }",
    "  v7 = v6 - 1;",
    "  if ( v7 )",
    "  {",
    "    if ( v7 == 1 )",
    "      return -1;",
    "    return 0;",
    "  }",
    "  v8 = *(const char **)(fdint + 8);",
    "  v9 = -1;",
    "  do",
    "    ++v9;",
    "  while ( v8[v9] );",
    "  v10 = -1;",
    "  do",
    "    ++v10;",
    "  while ( *(&PathName + v10) );",
    "  if ( (int)v10 + (int)v9 + 1 >= 260 )",
    "    return -1;",
    "  if ( !(unsigned int)CatDirAndFile(FileName, &PathName, v8) )",
    "    return -1;",
    "  v11 = 32LL * *(_QWORD *)(fdint + 40);",
    "  if ( *(_DWORD *)((char *)&g_FileTable + v11 + 4) == 1",
    "    || !DosDateTimeToFileTime(*(_WORD *)(fdint + 48), *(_WORD *)(fdint + 50), &FileTime)",
    "    || !LocalFileTimeToFileTime(&FileTime, &CreationTime)",
    "    || !SetFileTime(*(HANDLE *)((char *)&g_FileTable + v11 + 24), &CreationTime, &CreationTime, &CreationTime) )",
    "  {",
    "    return -1;",
    "  }",
    "  closefunc(*(_QWORD *)(fdint + 40));",
    "  v12 = *(_WORD *)(fdint + 52) ? *(_WORD *)(fdint + 52) & 0x27 : 128;",
    "  if ( !SetFileAttributesA(FileName, v12) )",
    "    return -1;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall UpdateCabinetInfo(__int64 a1)",
    "{",
    "  _OWORD *v2; // rax",
    "  __int64 v3; // rcx",
    "  _OWORD *v4; // rdx",
    "  __int128 v5; // xmm1",
    "  __int128 v6; // xmm0",
    "  __int64 v7; // rdx",
    "  _BYTE *v8; // rcx",
    "  __int64 v9; // r8",
    "  _BYTE *v10; // r9",
    "  bool v11; // zf",
    "  _BYTE *v12; // rax",
    "  __int64 v13; // r8",
    "  _BYTE *v14; // rcx",
    "  _BYTE *v15; // r9",
    "  _BYTE *v16; // rax",
    "  _BYTE *v17; // rcx",
    "  _BYTE *v18; // r8",
    "  _BYTE *v19; // rax",
    "",
    "  v2 = &unk_14000D83C;",
    "  v3 = 6;",
    "  v4 = &unk_14000DB4C;",
    "  do",
    "  {",
    "    *v2 = *v4;",
    "    v2[1] = v4[1];",
    "    v2[2] = v4[2];",
    "    v2[3] = v4[3];",
    "    v2[4] = v4[4];",
    "    v2[5] = v4[5];",
    "    v2[6] = v4[6];",
    "    v2 += 8;",
    "    v5 = v4[7];",
    "    v4 += 8;",
    "    *(v2 - 1) = v5;",
    "    --v3;",
    "  }",
    "  while ( v3 );",
    "  v6 = *v4;",
    "  v7 = 260;",
    "  v8 = &unk_14000DB4C;",
    "  v9 = 260;",
    "  *v2 = v6;",
    "  v10 = *(_BYTE **)(a1 + 24);",
    "  do",
    "  {",
    "    if ( v9 == -2147483386 )",
    "      break;",
    "    if ( !*v10 )",
    "      break;",
    "    *v8++ = *v10++;",
    "    --v9;",
    "  }",
    "  while ( v9 );",
    "  v11 = v9 == 0;",
    "  v12 = v8 - 1;",
    "  v13 = 260;",
    "  if ( !v11 )",
    "    v12 = v8;",
    "  v14 = &unk_14000DC50;",
    "  *v12 = 0;",
    "  v15 = *(_BYTE **)(a1 + 8);",
    "  do",
    "  {",
    "    if ( v13 == -2147483386 )",
    "      break;",
    "    if ( !*v15 )",
    "      break;",
    "    *v14++ = *v15++;",
    "    --v13;",
    "  }",
    "  while ( v13 );",
    "  v16 = v14 - 1;",
    "  if ( v13 )",
    "    v16 = v14;",
    "  v17 = &unk_14000DD54;",
    "  *v16 = 0;",
    "  v18 = *(_BYTE **)(a1 + 16);",
    "  do",
    "  {",
    "    if ( v7 == -2147483386 )",
    "      break;",
    "    if ( !*v18 )",
    "      break;",
    "    *v17++ = *v18++;",
    "    --v7;",
    "  }",
    "  while ( v7 );",
    "  v19 = v17 - 1;",
    "  if ( v7 )",
    "    v19 = v17;",
    "  *v19 = 0;",
    "  word_14000DE58 = *(_WORD *)(a1 + 54);",
    "  word_14000DE5A = *(_WORD *)(a1 + 56);",
    "  return 0;",
    "}",
    "",
    "",
    "_BOOL8 VerifyCabinet()",
    "{",
    "  HFDI v0; // rdi",
    "  INT_PTR v1; // rax",
    "  INT_PTR v2; // rbx",
    "  _BOOL8 result; // rax",
    "  _BYTE pfdici[40]; // [rsp+50h] [rbp-38h] BYREF",
    "",
    "  memset(pfdici, 0, 24);",
    "  v0 = FDICreate(",
    "         (PFNALLOC)allocfunc,",
    "         (PFNFREE)freefunc,",
    "         (PFNOPEN)openfunc,",
    "         (PFNREAD)readfunc,",
    "         (PFNWRITE)writefunc,",
    "         (PFNCLOSE)closefunc,",
    "         (PFNSEEK)seekfunc,",
    "         1,",
    "         (PERF)&pfdici[24]);",
    "  result = 0;",
    "  if ( v0 )",
    "  {",
    "    v1 = openfunc(pszCabinet, 0x8000, 384);",
    "    v2 = v1;",
    "    if ( v1 != -1",
    "      && FDIIsCabinet(v0, v1, (PFDICABINETINFO)pfdici)",
    "      && *(_DWORD *)pfdici == dword_14000D568",
    "      && !*(_DWORD *)&pfdici[16]",
    "      && !*(_DWORD *)&pfdici[20]",
    "      && (unsigned int)closefunc(v2) != -1",
    "      && FDIDestroy(v0) )",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "FILETIME __fastcall ExtractThread(LPSTR lpThreadParameter)",
    "{",
    "  HRSRC ResourceA; // rax",
    "  HGLOBAL Resource; // rax",
    "  FILETIME result; // rax",
    "  HWND DlgItem; // rax",
    "  HWND v5; // rax",
    "  UINT v6; // edx",
    "  HFDI v7; // rdi",
    "  BOOL v8; // ebx",
    "",
    "  dword_14000D568 = GetResource(\"CABINET\", 0, 0);",
    "  ResourceA = FindResourceA(0, \"CABINET\", (LPCSTR)0xA);",
    "  Resource = LoadResource(0, ResourceA);",
    "  result = (FILETIME)LockResource(Resource);",
    "  g_Sess = (HGLOBAL)result;",
    "  if ( !*(_QWORD *)&result )",
    "    return result;",
    "  if ( g_hwndExtractDlg )",
    "  {",
    "    DlgItem = GetDlgItem(g_hwndExtractDlg, 2114);",
    "    ShowWindow(DlgItem, 0);",
    "    v5 = GetDlgItem(g_hwndExtractDlg, 2113);",
    "    ShowWindow(v5, 5);",
    "  }",
    "  if ( VerifyCabinet() )",
    "  {",
    "    v7 = FDICreate(",
    "           (PFNALLOC)allocfunc,",
    "           (PFNFREE)freefunc,",
    "           (PFNOPEN)openfunc,",
    "           (PFNREAD)readfunc,",
    "           (PFNWRITE)writefunc,",
    "           (PFNCLOSE)closefunc,",
    "           (PFNSEEK)seekfunc,",
    "           1,",
    "           &perf);",
    "    if ( v7 )",
    "    {",
    "      v8 = FDICopy(v7, pszCabinet, (LPSTR)pszCabPath, 0, (PFNFDINOTIFY)fdiNotifyExtract, 0, &g_Sess);",
    "      if ( !v8 || FDIDestroy(v7) )",
    "        goto LABEL_11;",
    "    }",
    "    v6 = perf.erfOper + 1300;",
    "  }",
    "  else",
    "  {",
    "    v6 = 1210;",
    "  }",
    "  MsgBox2Param(g_hwndExtractDlg, v6, 0, 0, 0x10u, 0);",
    "  v8 = 0;",
    "LABEL_11:",
    "  if ( g_Sess )",
    "  {",
    "    FreeResource(g_Sess);",
    "    g_Sess = 0;",
    "  }",
    "  if ( !v8 && !dword_14000D5FC )",
    "    MsgBox2Param(0, 0x4F8u, 0, 0, 0x10u, 0);",
    "  if ( (word_14000CD18 & 1) == 0 && (dword_14000DE64 & 1) == 0 )",
    "    SendMessageA(g_hwndExtractDlg, 0xFA1u, v8, 0);",
    "  return (FILETIME)v8;",
    "}",
    "",
    "",
    "__int64 GetFileList()",
    "{",
    "  UINT v0; // edx",
    "",
    "  if ( (unsigned int)GetResource(\"FILESIZES\", &g_dwFileSizes, 0x24u) != 36 )",
    "  {",
    "    v0 = 1201;",
    "LABEL_3:",
    "    MsgBox2Param(0, v0, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  dword_14000D824 = dword_14000CCE0;",
    "  if ( !dword_14000CCE0 )",
    "  {",
    "    v0 = 1222;",
    "    goto LABEL_3;",
    "  }",
    "  GetResource(\"PACKINSTSPACE\", &dword_14000DE68, 4u);",
    "  if ( !(unsigned int)TravelUpdatedFiles(ProcessUpdatedFile_Size) )",
    "  {",
    "    MsgBox2Param(0, 0x4C6u, 0, 0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 GetUsersPermission()",
    "{",
    "  unsigned int Resource; // ebx",
    "  HLOCAL v1; // rax",
    "  void *v2; // rdi",
    "  int v4; // ebx",
    "",
    "  Resource = GetResource(\"UPROMPT\", 0, 0);",
    "  v1 = LocalAlloc(0x40u, Resource + 1);",
    "  v2 = v1;",
    "  if ( v1 )",
    "  {",
    "    if ( (unsigned int)GetResource(\"UPROMPT\", v1, Resource) )",
    "    {",
    "      if ( lstrcmpA((LPCSTR)v2, \"<None>\") )",
    "      {",
    "        v4 = MsgBox2Param(0, 0x3E9u, (__int64)v2, 0, 0x20u, 4);",
    "        LocalFree(v2);",
    "        if ( v4 != 6 )",
    "        {",
    "          g_dwExitCode = -2147023673;",
    "          return 0;",
    "        }",
    "        g_dwExitCode = 0;",
    "      }",
    "      else",
    "      {",
    "        LocalFree(v2);",
    "      }",
    "      return 1;",
    "    }",
    "    MsgBox2Param(0, 0x4B1u, 0, 0, 0x10u, 0);",
    "    LocalFree(v2);",
    "    g_dwExitCode = -2147023084;",
    "  }",
    "  else",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "LSTATUS DeleteExtractedFiles()",
    "{",
    "  LPCSTR *v0; // rbx",
    "  LPCSTR *v1; // rdi",
    "  CHAR *v2; // rcx",
    "  LSTATUS result; // eax",
    "  __int64 v4; // rdx",
    "  CHAR *v5; // rcx",
    "  CHAR v6; // al",
    "  CHAR *v7; // rax",
    "  bool v8; // zf",
    "  LPDWORD hKey; // [rsp+30h] [rbp-138h] BYREF",
    "  CHAR v10[272]; // [rsp+40h] [rbp-128h] BYREF",
    "",
    "  v0 = (LPCSTR *)hMem;",
    "  while ( v0 )",
    "  {",
    "    v1 = v0;",
    "    if ( !dword_14000CD04 && !dword_14000DE60 )",
    "    {",
    "      SetFileAttributesA(*v0, 0x80u);",
    "      DeleteFileA(*v0);",
    "    }",
    "    v2 = (CHAR *)*v0;",
    "    v0 = (LPCSTR *)v0[1];",
    "    LocalFree(v2);",
    "    LocalFree(v1);",
    "  }",
    "  result = g_CMD;",
    "  if ( g_CMD && !dword_14000CD04 && !dword_14000DE60 )",
    "  {",
    "    v4 = 260;",
    "    v5 = v10;",
    "    do",
    "    {",
    "      if ( v4 == -2147483386 )",
    "        break;",
    "      v6 = v5[&PathName - v10];",
    "      if ( !v6 )",
    "        break;",
    "      *v5++ = v6;",
    "      --v4;",
    "    }",
    "    while ( v4 );",
    "    v7 = v5 - 1;",
    "    if ( v4 )",
    "      v7 = v5;",
    "    v8 = (dword_14000DE64 & 0x20) == 0;",
    "    *v7 = 0;",
    "    if ( !v8 )",
    "      GetParentDir(v10);",
    "    SetCurrentDirectoryA(\"..\");",
    "    DeleteMyDir(v10);",
    "    result = g_CMD;",
    "  }",
    "  if ( g_wOSVer != 1 )",
    "  {",
    "    if ( result )",
    "    {",
    "      if ( g_szRegValName[0] )",
    "      {",
    "        result = RegOpenKeyExA(HKEY_LOCAL_MACHINE, SubKey, 0, 0x20006u, (PHKEY)&hKey);",
    "        if ( !result )",
    "        {",
    "          RegDeleteValueA((HKEY)hKey, g_szRegValName);",
    "          result = RegCloseKey((HKEY)hKey);",
    "        }",
    "      }",
    "    }",
    "  }",
    "  g_CMD = 0;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall GetNewTempDir(LPCSTR lpPathName, char *a2)",
    "{",
    "  unsigned int v2; // ebx",
    "  int v4; // esi",
    "  char pszDest[272]; // [rsp+20h] [rbp-138h] BYREF",
    "",
    "  v2 = 0;",
    "  v4 = 0;",
    "  while ( 1 )",
    "  {",
    "    StringCchPrintfA(pszDest, 0x104u, \"IXP%03d.TMP\", v4++);",
    "    StringCchCopyA(a2, 0x104u, lpPathName);",
    "    AddPath(a2, 0x104u, pszDest);",
    "    RemoveDirectoryA(a2);",
    "    if ( GetFileAttributesA(a2) == -1 )",
    "      break;",
    "    if ( v4 >= 400 )",
    "      goto LABEL_4;",
    "  }",
    "  if ( CreateDirectoryA(a2, 0) )",
    "  {",
    "    g_CMD = 1;",
    "    return 1;",
    "  }",
    "LABEL_4:",
    "  if ( GetTempFileNameA(lpPathName, \"IXP\", 0, a2) )",
    "  {",
    "    v2 = 1;",
    "    DeleteFileA(a2);",
    "    CreateDirectoryA(a2, 0);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall CreateAndValidateSubdir(const CHAR *a1, int a2, int a3)",
    "{",
    "  __int64 v5; // rdx",
    "  CHAR *v6; // rcx",
    "  CHAR v7; // al",
    "  CHAR *v8; // rax",
    "  const char *v9; // r8",
    "  __int64 v10; // rdi",
    "  CHAR *v11; // rcx",
    "  signed __int64 v12; // r9",
    "  CHAR v13; // al",
    "  CHAR *v14; // rax",
    "  struct _SYSTEM_INFO SystemInfo; // [rsp+20h] [rbp-158h] BYREF",
    "  char v17[272]; // [rsp+50h] [rbp-128h] BYREF",
    "",
    "  if ( a2 )",
    "  {",
    "    if ( !(unsigned int)GetNewTempDir(a1, v17) )",
    "      return 0;",
    "    v5 = 260;",
    "    v6 = &PathName;",
    "    do",
    "    {",
    "      if ( v5 == -2147483386 )",
    "        break;",
    "      v7 = v6[v17 - &PathName];",
    "      if ( !v7 )",
    "        break;",
    "      *v6++ = v7;",
    "      --v5;",
    "    }",
    "    while ( v5 );",
    "    v8 = v6 - 1;",
    "    if ( v5 )",
    "      v8 = v6;",
    "    *v8 = 0;",
    "    if ( (dword_14000DE64 & 0x20) == 0 )",
    "      goto LABEL_19;",
    "    GetSystemInfo(&SystemInfo);",
    "    if ( SystemInfo.wProcessorArchitecture )",
    "    {",
    "      switch ( SystemInfo.wProcessorArchitecture )",
    "      {",
    "        case 1u:",
    "          v9 = \"mips\";",
    "          break;",
    "        case 2u:",
    "          v9 = \"alpha\";",
    "          break;",
    "        case 3u:",
    "          v9 = \"ppc\";",
    "          break;",
    "        default:",
    "LABEL_19:",
    "          AddPath(&PathName, 0x104u, pszCabPath);",
    "          goto LABEL_27;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      v9 = \"i386\";",
    "    }",
    "    AddPath(&PathName, 0x104u, v9);",
    "    goto LABEL_19;",
    "  }",
    "  v10 = 260;",
    "  v11 = &PathName;",
    "  v12 = a1 - &PathName;",
    "  do",
    "  {",
    "    if ( v10 == -2147483386 )",
    "      break;",
    "    v13 = v11[v12];",
    "    if ( !v13 )",
    "      break;",
    "    *v11++ = v13;",
    "    --v10;",
    "  }",
    "  while ( v10 );",
    "  v14 = v11 - 1;",
    "  if ( v10 )",
    "    v14 = v11;",
    "  *v14 = 0;",
    "LABEL_27:",
    "  if ( !(unsigned int)IsGoodTempDir(&PathName) )",
    "  {",
    "    if ( CreateDirectoryA(&PathName, 0) )",
    "    {",
    "      g_CMD = 1;",
    "      goto LABEL_30;",
    "    }",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "LABEL_30:",
    "  if ( a3 && !(unsigned int)IsEnoughSpace(&PathName) )",
    "  {",
    "    if ( g_CMD )",
    "    {",
    "      g_CMD = 0;",
    "      RemoveDirectoryA(&PathName);",
    "    }",
    "    return 0;",
    "  }",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 GetTempDirectory()",
    "{",
    "  unsigned int Resource; // esi",
    "  HLOCAL v1; // rax",
    "  unsigned int v2; // ebx",
    "  void *v3; // rdi",
    "  int v5; // eax",
    "  int v6; // ecx",
    "  __int64 v7; // rcx",
    "  int v8; // r8d",
    "  __int64 v9; // rdx",
    "  CHAR *v10; // rcx",
    "  CHAR v11; // al",
    "  CHAR *v12; // rax",
    "  UINT DriveTypeA; // eax",
    "  UINT v14; // edi",
    "  CHAR v15; // cl",
    "  char v16; // cl",
    "  DWORD FileAttributesA; // eax",
    "  DWORD DirectoryA; // eax",
    "  __int64 v19; // rdx",
    "  CHAR *v20; // rcx",
    "  CHAR v21; // al",
    "  CHAR *v22; // rax",
    "  DWORD BytesPerSector; // [rsp+38h] [rbp-D0h] BYREF",
    "  DWORD SectorsPerCluster; // [rsp+3Ch] [rbp-CCh] BYREF",
    "  int TotalNumberOfClusters; // [rsp+40h] [rbp-C8h] BYREF",
    "  DWORD NumberOfFreeClusters; // [rsp+44h] [rbp-C4h] BYREF",
    "  CHAR RootPathName[272]; // [rsp+48h] [rbp-C0h] BYREF",
    "",
    "  Resource = GetResource(\"RUNPROGRAM\", 0, 0);",
    "  v1 = LocalAlloc(0x40u, Resource + 1);",
    "  v2 = 0;",
    "  v3 = v1;",
    "  if ( !v1 )",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  if ( !(unsigned int)GetResource(\"RUNPROGRAM\", v1, Resource) )",
    "  {",
    "    MsgBox2Param(0, 0x4B1u, 0, 0, 0x10u, 0);",
    "    LocalFree(v3);",
    "    g_dwExitCode = -2147023084;",
    "    return 0;",
    "  }",
    "  v5 = lstrcmpA((LPCSTR)v3, \"<None>\");",
    "  v6 = dword_14000DE60;",
    "  if ( !v5 )",
    "    v6 = 1;",
    "  dword_14000DE60 = v6;",
    "  LocalFree(v3);",
    "  if ( Filename )",
    "  {",
    "    if ( Filename != 92 || (v8 = 0, byte_14000CE1F != 92) )",
    "      v8 = 1;",
    "    if ( !(unsigned int)CreateAndValidateSubdir(&Filename, 0, v8) )",
    "    {",
    "      MsgBox2Param(0, 0x4BEu, 0, 0, 0x10u, 0);",
    "      return 0;",
    "    }",
    "    return 1;",
    "  }",
    "  if ( !dword_14000CD04 && !dword_14000DE60 )",
    "  {",
    "    if ( GetTempPathA(0x104u, &PathName)",
    "      && ((unsigned int)CreateAndValidateSubdir(&PathName, 1, 3)",
    "       || !(unsigned int)IsWindowsDrive(&PathName) && (unsigned int)CreateAndValidateSubdir(&PathName, 1, 1)) )",
    "    {",
    "      return 1;",
    "    }",
    "    while ( 1 )",
    "    {",
    "      v9 = 260;",
    "      v10 = RootPathName;",
    "      do",
    "      {",
    "        if ( v9 == -2147483386 )",
    "          break;",
    "        v11 = v10[\"A:\\\\\" - RootPathName];",
    "        if ( !v11 )",
    "          break;",
    "        *v10++ = v11;",
    "        --v9;",
    "      }",
    "      while ( v9 );",
    "      v12 = v10 - 1;",
    "      if ( v9 )",
    "        v12 = v10;",
    "      *v12 = 0;",
    "      if ( RootPathName[0] <= 90 )",
    "        break;",
    "LABEL_56:",
    "      GetWindowsDirectoryA(RootPathName, 0x104u);",
    "      if ( !(unsigned int)IsEnoughSpace(RootPathName) )",
    "        return 0;",
    "    }",
    "    while ( 1 )",
    "    {",
    "      if ( (DriveTypeA = GetDriveTypeA(RootPathName), v14 = DriveTypeA, DriveTypeA != 6) && DriveTypeA != 3",
    "        || GetFileAttributesA(RootPathName) == -1 )",
    "      {",
    "        if ( v14 != 2 )",
    "          break;",
    "        v15 = RootPathName[0];",
    "        if ( (unsigned __int8)(RootPathName[0] - 65) <= 1u )",
    "          goto LABEL_36;",
    "        SectorsPerCluster = 0;",
    "        BytesPerSector = 0;",
    "        NumberOfFreeClusters = 0;",
    "        TotalNumberOfClusters = 0;",
    "        if ( !RootPathName[0] )",
    "          goto LABEL_36;",
    "        if ( !GetDiskFreeSpaceA(",
    "                RootPathName,",
    "                &SectorsPerCluster,",
    "                &BytesPerSector,",
    "                &NumberOfFreeClusters,",
    "                (LPDWORD)&TotalNumberOfClusters)",
    "          || (unsigned int)MulDiv(SectorsPerCluster * BytesPerSector, TotalNumberOfClusters, 1024) < 0x19000 )",
    "        {",
    "          break;",
    "        }",
    "      }",
    "      if ( !(unsigned int)IsEnoughSpace(RootPathName)",
    "        && ((unsigned int)IsWindowsDrive(RootPathName) || !(unsigned int)IsEnoughSpace(RootPathName)) )",
    "      {",
    "        break;",
    "      }",
    "      if ( (unsigned int)IsWindowsDrive(RootPathName) )",
    "        GetWindowsDirectoryA(RootPathName, 0x104u);",
    "      AddPath(RootPathName, 0x104u, \"msdownld.tmp\");",
    "      FileAttributesA = GetFileAttributesA(RootPathName);",
    "      if ( FileAttributesA == -1 )",
    "        DirectoryA = CreateDirectoryA(RootPathName, 0);",
    "      else",
    "        DirectoryA = FileAttributesA & 0x10;",
    "      if ( DirectoryA )",
    "      {",
    "        SetFileAttributesA(RootPathName, 2u);",
    "        v19 = 260;",
    "        v20 = &PathName;",
    "        do",
    "        {",
    "          if ( v19 == -2147483386 )",
    "            break;",
    "          v21 = v20[RootPathName - &PathName];",
    "          if ( !v21 )",
    "            break;",
    "          *v20++ = v21;",
    "          --v19;",
    "        }",
    "        while ( v19 );",
    "        v22 = v20 - 1;",
    "        if ( v19 )",
    "          v22 = v20;",
    "        *v22 = 0;",
    "        if ( (unsigned int)CreateAndValidateSubdir(&PathName, 1, 0) )",
    "          return 1;",
    "        v16 = RootPathName[0];",
    "      }",
    "      else",
    "      {",
    "        v16 = RootPathName[0] + 1;",
    "        RootPathName[3] = 0;",
    "        ++RootPathName[0];",
    "      }",
    "LABEL_55:",
    "      if ( v16 > 90 )",
    "        goto LABEL_56;",
    "    }",
    "    v15 = RootPathName[0];",
    "LABEL_36:",
    "    v16 = v15 + 1;",
    "    RootPathName[0] = v16;",
    "    goto LABEL_55;",
    "  }",
    "  LOBYTE(v2) = MyDialogBox(v7, 2002, 0, TempDirDlgProc, 0, 0) != 0;",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall IsGoodTempDir(LPCSTR lpFileName)",
    "{",
    "  __int64 v2; // rbx",
    "  unsigned int v3; // ebx",
    "  char *v4; // rax",
    "  char *v5; // rsi",
    "  HANDLE FileA; // rbx",
    "  DWORD FileAttributesA; // eax",
    "",
    "  v2 = -1;",
    "  do",
    "    ++v2;",
    "  while ( lpFileName[v2] );",
    "  v3 = v2 + 20;",
    "  v4 = (char *)LocalAlloc(0x40u, v3);",
    "  v5 = v4;",
    "  if ( !v4 )",
    "  {",
    "    MsgBox2Param(0, 0x4B5u, 0, 0, 0x10u, 0);",
    "LABEL_5:",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  StringCchCopyA(v4, v3, lpFileName);",
    "  AddPath(v5, v3, \"TMP4351$.TMP\");",
    "  FileA = CreateFileA(v5, 0x40000000u, 0, 0, 1u, 0x4000080u, 0);",
    "  LocalFree(v5);",
    "  if ( FileA == (HANDLE)-1LL )",
    "    goto LABEL_5;",
    "  CloseHandle(FileA);",
    "  FileAttributesA = GetFileAttributesA(lpFileName);",
    "  if ( FileAttributesA == -1 || (FileAttributesA & 0x10) == 0 )",
    "    goto LABEL_5;",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall IsEnoughSpace(LPCSTR lpPathName, char a2, int a3)",
    "{",
    "  DWORD v6; // r14d",
    "  unsigned int v7; // esi",
    "  DWORD v8; // eax",
    "  UINT v9; // edx",
    "  __int64 v10; // rdx",
    "  char *v11; // rcx",
    "  __int64 v12; // rdi",
    "  char v13; // al",
    "  char *v14; // rax",
    "  int v15; // ebx",
    "  unsigned __int16 i; // ax",
    "  unsigned int v17; // edx",
    "  unsigned int v18; // r8d",
    "  bool v19; // cc",
    "  DWORD LastError; // eax",
    "  DWORD BytesPerSector; // [rsp+48h] [rbp-C0h] BYREF",
    "  DWORD SectorsPerCluster; // [rsp+4Ch] [rbp-BCh] BYREF",
    "  DWORD NumberOfFreeClusters; // [rsp+50h] [rbp-B8h] BYREF",
    "  DWORD TotalNumberOfClusters; // [rsp+54h] [rbp-B4h] BYREF",
    "  DWORD FileSystemFlags; // [rsp+58h] [rbp-B0h] BYREF",
    "  DWORD MaximumComponentLength; // [rsp+5Ch] [rbp-ACh] BYREF",
    "  char v28; // [rsp+60h] [rbp-A8h] BYREF",
    "  CHAR Buffer[272]; // [rsp+68h] [rbp-A0h] BYREF",
    "  CHAR v30[512]; // [rsp+178h] [rbp+70h] BYREF",
    "",
    "  GetCurrentDirectoryA(0x104u, Buffer);",
    "  if ( !SetCurrentDirectoryA(lpPathName) )",
    "  {",
    "    MsgBox2Param(0, 0x4BCu, 0, 0, 0x10u, 0);",
    "    g_dwExitCode = MyGetLastError();",
    "    return 0;",
    "  }",
    "  SectorsPerCluster = 0;",
    "  BytesPerSector = 0;",
    "  NumberOfFreeClusters = 0;",
    "  TotalNumberOfClusters = 0;",
    "  if ( !GetDiskFreeSpaceA(0, &SectorsPerCluster, &BytesPerSector, &NumberOfFreeClusters, &TotalNumberOfClusters)",
    "    || (v6 = SectorsPerCluster * BytesPerSector,",
    "        (v7 = MulDiv(SectorsPerCluster * BytesPerSector, NumberOfFreeClusters, 1024)) == 0) )",
    "  {",
    "    memset_0(v30, 0, sizeof(v30));",
    "    g_dwExitCode = MyGetLastError();",
    "    LastError = GetLastError();",
    "    FormatMessageA(0x1000u, 0, LastError, 0, v30, 0x200u, 0);",
    "    v9 = 1200;",
    "    goto LABEL_31;",
    "  }",
    "  if ( !GetVolumeInformationA(0, 0, 0, 0, &MaximumComponentLength, &FileSystemFlags, 0, 0) )",
    "  {",
    "    memset_0(v30, 0, sizeof(v30));",
    "    g_dwExitCode = MyGetLastError();",
    "    v8 = GetLastError();",
    "    FormatMessageA(0x1000u, 0, v8, 0, v30, 0x200u, 0);",
    "    v9 = 1273;",
    "LABEL_31:",
    "    MsgBox2Param(0, v9, (__int64)lpPathName, (__int64)v30, 0x10u, 0);",
    "    SetCurrentDirectoryA(Buffer);",
    "    return 0;",
    "  }",
    "  SetCurrentDirectoryA(Buffer);",
    "  v10 = 6;",
    "  v11 = &v28;",
    "  v12 = lpPathName - &v28;",
    "  do",
    "  {",
    "    if ( v10 == 4 )",
    "      break;",
    "    v13 = v11[v12];",
    "    if ( !v13 )",
    "      break;",
    "    *v11++ = v13;",
    "    --v10;",
    "  }",
    "  while ( v10 );",
    "  v14 = v11 - 1;",
    "  v15 = 512;",
    "  if ( v10 )",
    "    v14 = v11;",
    "  *v14 = 0;",
    "  for ( i = 0; i < 8u; ++i )",
    "  {",
    "    if ( v6 == v15 )",
    "      break;",
    "    v15 *= 2;",
    "  }",
    "  if ( i == 8 )",
    "  {",
    "    MsgBox2Param(0, 0x4C5u, 0, 0, 0x10u, 0);",
    "    return 0;",
    "  }",
    "  if ( (dword_14000DE64 & 8) != 0 && (FileSystemFlags & 0x8000) != 0 )",
    "  {",
    "    v17 = 2 * g_dwFileSizes[i];",
    "    v18 = dword_14000DE68 + ((unsigned int)dword_14000DE68 >> 2);",
    "  }",
    "  else",
    "  {",
    "    v18 = dword_14000DE68;",
    "    v17 = g_dwFileSizes[i];",
    "  }",
    "  if ( (a2 & 3) == 3 )",
    "  {",
    "    v19 = v18 + v17 <= v7;",
    "  }",
    "  else if ( (a2 & 1) != 0 )",
    "  {",
    "    v19 = v17 <= v7;",
    "  }",
    "  else",
    "  {",
    "    v19 = v18 <= v7;",
    "  }",
    "  if ( !v19 )",
    "    return DiskSpaceErrMsg(a3, v17, v18);",
    "  g_dwExitCode = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall RemoveLeadTailBlanks(char *a1, _DWORD *a2)",
    "{",
    "  char v2; // al",
    "  int v3; // r8d",
    "  char *v6; // r9",
    "  char *v7; // r9",
    "  __int64 result; // rax",
    "  __int64 v9; // rcx",
    "  int v10; // ecx",
    "  __int64 i; // rdx",
    "  char v12; // al",
    "",
    "  v2 = *a1;",
    "  v3 = 0;",
    "  if ( *a1 )",
    "  {",
    "    v6 = a1;",
    "    do",
    "    {",
    "      if ( v2 != 32 && (unsigned __int8)(v2 - 9) > 4u )",
    "        break;",
    "      ++v6;",
    "      ++v3;",
    "      v2 = *v6;",
    "    }",
    "    while ( *v6 );",
    "  }",
    "  v7 = &a1[v3];",
    "  if ( !*v7 )",
    "    return 0;",
    "  v9 = -1;",
    "  do",
    "    ++v9;",
    "  while ( v7[v9] );",
    "  v10 = v9 - 1;",
    "  for ( i = v10; i >= 0; --i )",
    "  {",
    "    v12 = v7[i];",
    "    if ( v12 != 32 && (unsigned __int8)(v12 - 9) > 4u )",
    "      break;",
    "    --v10;",
    "  }",
    "  *a2 = v3;",
    "  result = 1;",
    "  a1[v3 + 1 + v10] = 0;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall ParseCmdLine(CHAR *lpsz)",
    "{",
    "  LPSTR v1; // r14",
    "  unsigned int v2; // esi",
    "  unsigned __int64 v3; // rcx",
    "  __int64 v4; // r8",
    "  __int64 v5; // r9",
    "  __int64 v6; // rdx",
    "  __int64 v7; // rax",
    "  unsigned __int8 v8; // al",
    "  char v9; // al",
    "  char *v10; // rbx",
    "  unsigned __int8 v11; // al",
    "  unsigned __int8 v12; // al",
    "  char v13; // al",
    "  char *v14; // rbx",
    "  unsigned __int8 v15; // al",
    "  unsigned int v16; // ebx",
    "  char *v17; // rcx",
    "  __int64 v18; // rax",
    "  unsigned __int8 v19; // al",
    "  __int64 v20; // r8",
    "  char *v21; // r9",
    "  CHAR *v22; // rdx",
    "  char *v23; // rcx",
    "  CHAR v24; // al",
    "  char *v25; // rcx",
    "  CHAR v26; // al",
    "  CHAR *v27; // rax",
    "  char *v28; // rbx",
    "  unsigned __int64 v29; // rax",
    "  char v30; // al",
    "  unsigned int v32; // edi",
    "  char *v33; // rbx",
    "  __int64 v34; // rax",
    "  __int64 v35; // r8",
    "  char *v36; // rdx",
    "  char *v37; // rcx",
    "  char v38; // al",
    "  char *v39; // rax",
    "  _DWORD v40[4]; // [rsp+30h] [rbp-D0h] BYREF",
    "  char v41; // [rsp+40h] [rbp-C0h] BYREF",
    "  CHAR String2; // [rsp+41h] [rbp-BFh] BYREF",
    "  char v43; // [rsp+42h] [rbp-BEh]",
    "  char v44[269]; // [rsp+43h] [rbp-BDh] BYREF",
    "",
    "  v1 = lpsz;",
    "  v2 = 1;",
    "  if ( !lpsz || !*lpsz )",
    "    return 1;",
    "  while ( 2 )",
    "  {",
    "    if ( !v2 )",
    "      goto LABEL_29;",
    "    while ( *v1 == 32 || (unsigned __int8)(*v1 - 9) <= 4u )",
    "      v1 = CharNextA(v1);",
    "    if ( !*v1 )",
    "      goto LABEL_29;",
    "    v3 = 0;",
    "    v4 = 0;",
    "    v5 = 0;",
    "    v6 = 1;",
    "    while ( (_DWORD)v4 )",
    "    {",
    "      if ( (_DWORD)v5 )",
    "        goto LABEL_25;",
    "LABEL_14:",
    "      if ( *v1 == 34 )",
    "      {",
    "        if ( v1[1] == 34 )",
    "        {",
    "          if ( (unsigned int)v6 >= 0x104 )",
    "            return 0;",
    "          v6 = (unsigned int)(v6 + 1);",
    "          *(&v41 + v3++) = 34;",
    "          v7 = 2;",
    "          goto LABEL_24;",
    "        }",
    "        if ( (_DWORD)v4 )",
    "          v5 = 1;",
    "        else",
    "          v4 = 1;",
    "      }",
    "      else",
    "      {",
    "        if ( (unsigned int)v6 >= 0x104 )",
    "          return 0;",
    "        v6 = (unsigned int)(v6 + 1);",
    "        *(&v41 + v3++) = *v1;",
    "      }",
    "      v7 = 1;",
    "LABEL_24:",
    "      v1 += v7;",
    "      if ( !*v1 )",
    "        goto LABEL_25;",
    "    }",
    "    if ( *v1 != 32 && (unsigned __int8)(*v1 - 9) > 4u )",
    "      goto LABEL_14;",
    "LABEL_25:",
    "    if ( v3 >= 0x104 )",
    "      _report_rangecheckfailure(v3, v6, v4, v5);",
    "    *(&v41 + v3) = 0;",
    "    if ( (_DWORD)v4 )",
    "    {",
    "      if ( !(_DWORD)v5 )",
    "        goto LABEL_28;",
    "LABEL_34:",
    "      if ( ((v41 - 45) & 0xFD) == 0 )",
    "      {",
    "        v8 = (unsigned __int8)CharUpperA((LPSTR)String2);",
    "        switch ( v8 )",
    "        {",
    "          case '?':",
    "            MsgBox2Param(0, 0x521u, (__int64)pszCabPath, 0, 0x40u, 0);",
    "            if ( g_hMutex )",
    "              CloseHandle(g_hMutex);",
    "            ExitProcess(0);",
    "          case 'C':",
    "            if ( !v43 )",
    "            {",
    "              dword_14000CD04 = 1;",
    "              goto LABEL_43;",
    "            }",
    "            if ( v43 == 58 )",
    "            {",
    "              v32 = 4 - (v44[0] != 34);",
    "              v33 = &v41 + v32;",
    "              v34 = -1;",
    "              do",
    "                ++v34;",
    "              while ( v33[v34] );",
    "              if ( v34",
    "                && (!ANSIStrChr(&v41 + 4 - (unsigned int)(v44[0] != 34)) || ANSIStrChr(v33))",
    "                && (!ANSIStrChr(v33) || ANSIStrChr(v33)) )",
    "              {",
    "                v40[0] = v32;",
    "                if ( (unsigned int)RemoveLeadTailBlanks(v33, v40) )",
    "                {",
    "                  v35 = 260;",
    "                  v36 = &byte_14000CF22;",
    "                  v37 = &v41 + (int)(v32 + v40[0]) - (_QWORD)&byte_14000CF22;",
    "                  do",
    "                  {",
    "                    if ( v35 == -2147483386 )",
    "                      break;",
    "                    v38 = v36[(_QWORD)v37];",
    "                    if ( !v38 )",
    "                      break;",
    "                    *v36++ = v38;",
    "                    --v35;",
    "                  }",
    "                  while ( v35 );",
    "                  v39 = v36 - 1;",
    "                  if ( v35 )",
    "                    v39 = v36;",
    "                  *v39 = 0;",
    "                  goto LABEL_43;",
    "                }",
    "              }",
    "            }",
    "            break;",
    "          case 'D':",
    "            goto LABEL_90;",
    "          case 'N':",
    "            if ( !v43 )",
    "            {",
    "              dword_14000CD0C = 1;",
    "              goto LABEL_43;",
    "            }",
    "            if ( v43 == 58 )",
    "            {",
    "              v13 = v44[0];",
    "              if ( v44[0] )",
    "              {",
    "                v14 = v44;",
    "                do",
    "                {",
    "                  v15 = (unsigned __int8)CharUpperA((LPSTR)v13);",
    "                  ++v14;",
    "                  switch ( v15 )",
    "                  {",
    "                    case 'E':",
    "                      dword_14000CD0C = 1;",
    "                      break;",
    "                    case 'G':",
    "                      dword_14000CD10 = 1;",
    "                      break;",
    "                    case 'V':",
    "                      dword_14000CD14 = 1;",
    "                      break;",
    "                    default:",
    "                      v2 = 0;",
    "                      break;",
    "                  }",
    "                  v13 = *v14;",
    "                }",
    "                while ( *v14 );",
    "              }",
    "              goto LABEL_43;",
    "            }",
    "            break;",
    "          case 'Q':",
    "            if ( !v43 )",
    "              goto LABEL_69;",
    "            if ( v43 == 58 )",
    "            {",
    "              v12 = (unsigned __int8)CharUpperA((LPSTR)v44[0]);",
    "              switch ( v12 )",
    "              {",
    "                case '1':",
    "                  goto LABEL_69;",
    "                case 'A':",
    "                  word_14000CD18 = 1;",
    "                  goto LABEL_43;",
    "                case 'U':",
    "LABEL_69:",
    "                  word_14000CD18 = 2;",
    "                  goto LABEL_43;",
    "              }",
    "            }",
    "            break;",
    "          case 'R':",
    "            if ( !v43 )",
    "            {",
    "              dword_14000DE5C = 3;",
    "              dword_14000CD08 = 1;",
    "              goto LABEL_43;",
    "            }",
    "            if ( v43 == 58 )",
    "            {",
    "              v9 = v44[0];",
    "              dword_14000DE5C = 1;",
    "              if ( !v44[0] )",
    "                goto LABEL_43;",
    "              v10 = v44;",
    "              while ( 2 )",
    "              {",
    "                v11 = (unsigned __int8)CharUpperA((LPSTR)v9);",
    "                ++v10;",
    "                if ( v11 != 65 )",
    "                {",
    "                  switch ( v11 )",
    "                  {",
    "                    case 'D':",
    "                      dword_14000D028 |= 0x40u;",
    "                      break;",
    "                    case 'I':",
    "                      dword_14000DE5C &= ~2u;",
    "                      goto LABEL_63;",
    "                    case 'N':",
    "                      dword_14000DE5C &= ~1u;",
    "                      goto LABEL_63;",
    "                    case 'P':",
    "                      dword_14000D028 |= 0x80u;",
    "                      break;",
    "                    case 'S':",
    "                      dword_14000DE5C |= 4u;",
    "LABEL_63:",
    "                      dword_14000CD08 = 1;",
    "                      break;",
    "                    default:",
    "                      v2 = 0;",
    "                      break;",
    "                  }",
    "                  v9 = *v10;",
    "                  if ( !*v10 )",
    "                    goto LABEL_43;",
    "                  continue;",
    "                }",
    "                break;",
    "              }",
    "              dword_14000DE5C |= 2u;",
    "              goto LABEL_63;",
    "            }",
    "            if ( CompareStringA(0x7Fu, 1u, \"RegServer\", -1, &String2, -1) == 2 )",
    "              goto LABEL_43;",
    "            break;",
    "          case 'T':",
    "LABEL_90:",
    "            if ( v43 != 58 )",
    "              break;",
    "            v16 = 4 - (v44[0] != 34);",
    "            v17 = &v41 + v16;",
    "            v18 = -1;",
    "            do",
    "              ++v18;",
    "            while ( v17[v18] );",
    "            if ( !v18 )",
    "              break;",
    "            v40[0] = 4 - (v44[0] != 34);",
    "            if ( !(unsigned int)RemoveLeadTailBlanks(v17, v40) )",
    "              break;",
    "            v19 = (unsigned __int8)CharUpperA((LPSTR)String2);",
    "            v20 = 260;",
    "            if ( v19 == 84 )",
    "            {",
    "              v21 = &Filename;",
    "              v22 = &Filename;",
    "              v23 = &v41 + (int)(v16 + v40[0]) - (_QWORD)&Filename;",
    "              do",
    "              {",
    "                if ( v20 == -2147483386 )",
    "                  break;",
    "                v24 = v22[(_QWORD)v23];",
    "                if ( !v24 )",
    "                  break;",
    "                *v22++ = v24;",
    "                --v20;",
    "              }",
    "              while ( v20 );",
    "            }",
    "            else",
    "            {",
    "              v21 = byte_14000CD1A;",
    "              v22 = byte_14000CD1A;",
    "              v25 = &v41 + (int)(v16 + v40[0]) - (_QWORD)byte_14000CD1A;",
    "              do",
    "              {",
    "                if ( v20 == -2147483386 )",
    "                  break;",
    "                v26 = v22[(_QWORD)v25];",
    "                if ( !v26 )",
    "                  break;",
    "                *v22++ = v26;",
    "                --v20;",
    "              }",
    "              while ( v20 );",
    "            }",
    "            v27 = v22 - 1;",
    "            v28 = v21;",
    "            if ( v20 )",
    "              v27 = v22;",
    "            *v27 = 0;",
    "            AddPath(v21, 0x104u, pszCabPath);",
    "            v29 = -1;",
    "            do",
    "              ++v29;",
    "            while ( v28[v29] );",
    "            if ( v29 < 3 )",
    "              return 0;",
    "            v30 = v28[1];",
    "            if ( v30 != 58 && (*v28 != 92 || v30 != 92) )",
    "              return 0;",
    "LABEL_43:",
    "            if ( !*v1 )",
    "              goto LABEL_29;",
    "            continue;",
    "          default:",
    "            break;",
    "        }",
    "        v2 = 0;",
    "        goto LABEL_43;",
    "      }",
    "      return 0;",
    "    }",
    "    else",
    "    {",
    "      if ( !(_DWORD)v5 )",
    "        goto LABEL_34;",
    "LABEL_28:",
    "      v2 = 0;",
    "LABEL_29:",
    "      if ( dword_14000CD0C && !Filename )",
    "      {",
    "        if ( GetModuleFileNameA(g_hInst, &Filename, 0x104u) )",
    "          *(_BYTE *)(ANSIStrRChr(&Filename) + 1) = 0;",
    "        else",
    "          return 0;",
    "      }",
    "      return v2;",
    "    }",
    "  }",
    "}",
    "",
    "",
    "__int64 MyGetLastError()",
    "{",
    "  signed int LastError; // ecx",
    "  __int64 result; // rax",
    "",
    "  LastError = GetLastError();",
    "  result = (unsigned __int16)LastError | 0x80070000;",
    "  if ( LastError <= 0 )",
    "    return (unsigned int)LastError;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall TravelUpdatedFiles(unsigned int (__fastcall *a1)(_QWORD, _QWORD, char *, char *))",
    "{",
    "  int v1; // esi",
    "  int v3; // r9d",
    "  unsigned int v4; // edi",
    "  HGLOBAL Resource; // rax",
    "  unsigned int *v6; // rax",
    "  unsigned int *v7; // rbx",
    "  char *v8; // r8",
    "  __int64 v9; // rax",
    "  HRSRC ResourceA; // rax",
    "  char pszDest[40]; // [rsp+30h] [rbp-28h] BYREF",
    "",
    "  v1 = 0;",
    "  v3 = 0;",
    "  v4 = 1;",
    "  while ( 1 )",
    "  {",
    "    StringCchPrintfA(pszDest, 0x14u, \"UPDFILE%lu\", v3);",
    "    ResourceA = FindResourceA(0, pszDest, (LPCSTR)0xA);",
    "    if ( !ResourceA )",
    "      break;",
    "    Resource = LoadResource(0, ResourceA);",
    "    v6 = (unsigned int *)LockResource(Resource);",
    "    v7 = v6;",
    "    if ( !v6 )",
    "    {",
    "      g_dwExitCode = -2147023084;",
    "      return 0;",
    "    }",
    "    v8 = (char *)(v6 + 2);",
    "    v9 = -1;",
    "    do",
    "      ++v9;",
    "    while ( v8[v9] );",
    "    if ( !a1(*v7, v7[1], v8, &v8[v9 + 1]) )",
    "    {",
    "      v4 = 0;",
    "      FreeResource(v7);",
    "      return v4;",
    "    }",
    "    FreeResource(v7);",
    "    v3 = ++v1;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 __fastcall ProcessUpdatedFile_Size(unsigned int a1)",
    "{",
    "  _DWORD *v2; // r10",
    "  unsigned int v3; // r9d",
    "  __int64 v4; // rbx",
    "  int v5; // edx",
    "  unsigned int v6; // ecx",
    "",
    "  v2 = g_dwFileSizes;",
    "  v3 = 512;",
    "  v4 = 8;",
    "  do",
    "  {",
    "    v5 = a1 % v3;",
    "    v6 = a1 % v3 != 0 ? v3 : 0;",
    "    v3 *= 2;",
    "    *v2++ += a1 + v6 - v5;",
    "    --v4;",
    "  }",
    "  while ( v4 );",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall ProcessUpdatedFile_Write(DWORD nNumberOfBytesToWrite, __int64 a2, const char *a3, const void *a4)",
    "{",
    "  CHAR *v5; // rdx",
    "  unsigned int v7; // ebx",
    "  __int64 v8; // r9",
    "  CHAR v9; // al",
    "  CHAR *v10; // rax",
    "  HANDLE FileA; // rax",
    "  void *v12; // rdi",
    "  DWORD NumberOfBytesWritten; // [rsp+40h] [rbp-148h] BYREF",
    "  CHAR FileName[312]; // [rsp+50h] [rbp-138h] BYREF",
    "",
    "  NumberOfBytesWritten = 0;",
    "  v5 = FileName;",
    "  v7 = 1;",
    "  v8 = 260;",
    "  do",
    "  {",
    "    if ( v8 == -2147483386 )",
    "      break;",
    "    v9 = v5[&PathName - FileName];",
    "    if ( !v9 )",
    "      break;",
    "    *v5++ = v9;",
    "    --v8;",
    "  }",
    "  while ( v8 );",
    "  v10 = v5 - 1;",
    "  if ( v8 )",
    "    v10 = v5;",
    "  *v10 = 0;",
    "  AddPath(FileName, 0x104u, a3);",
    "  FileA = CreateFileA(FileName, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "  v12 = FileA;",
    "  if ( FileA == (HANDLE)-1LL )",
    "  {",
    "    g_dwExitCode = -2147024814;",
    "    return 0;",
    "  }",
    "  else",
    "  {",
    "    if ( !WriteFile(FileA, a4, nNumberOfBytesToWrite, &NumberOfBytesWritten, 0)",
    "      || nNumberOfBytesToWrite != NumberOfBytesWritten )",
    "    {",
    "      g_dwExitCode = -2147024814;",
    "      v7 = 0;",
    "    }",
    "    CloseHandle(v12);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "HMODULE MyLoadLibrary()",
    "{",
    "  __int64 v0; // r8",
    "  CHAR *v1; // rcx",
    "  CHAR v2; // al",
    "  CHAR *v3; // rax",
    "  DWORD FileAttributesA; // eax",
    "  CHAR FileName[296]; // [rsp+20h] [rbp-128h] BYREF",
    "",
    "  v0 = 260;",
    "  v1 = FileName;",
    "  do",
    "  {",
    "    if ( v0 == -2147483386 )",
    "      break;",
    "    v2 = v1[&PathName - FileName];",
    "    if ( !v2 )",
    "      break;",
    "    *v1++ = v2;",
    "    --v0;",
    "  }",
    "  while ( v0 );",
    "  v3 = v1 - 1;",
    "  if ( v0 )",
    "    v3 = v1;",
    "  *v3 = 0;",
    "  AddPath(FileName, 0x104u, \"advpack.dll\");",
    "  FileAttributesA = GetFileAttributesA(FileName);",
    "  if ( FileAttributesA == -1 || (FileAttributesA & 0x10) != 0 )",
    "    return LoadLibraryA(\"advpack.dll\");",
    "  else",
    "    return LoadLibraryExA(FileName, 0, 8u);",
    "}",
    "",
    "",
    "INT_PTR __fastcall MyDialogBox(",
    "        __int64 a1,",
    "        const CHAR *a2,",
    "        HWND a3,",
    "        INT_PTR (__stdcall *a4)(HWND, UINT, WPARAM, LPARAM),",
    "        LPARAM dwInitParam,",
    "        __int64 a6)",
    "{",
    "  HINSTANCE v6; // rbx",
    "  HRSRC ResourceA; // rax",
    "  DLGTEMPLATE *Resource; // rdi",
    "  INT_PTR v11; // rax",
    "  INT_PTR v12; // rbx",
    "",
    "  v6 = g_hInst;",
    "  ResourceA = FindResourceA(g_hInst, a2, (LPCSTR)5);",
    "  if ( !ResourceA",
    "    || (Resource = (DLGTEMPLATE *)LoadResource(v6, ResourceA)) == 0",
    "    || (dwInitParam",
    "      ? (v11 = DialogBoxIndirectParamA(v6, Resource, a3, a4, dwInitParam))",
    "      : (v11 = DialogBoxIndirectParamA(v6, Resource, a3, a4, 0)),",
    "        v12 = v11,",
    "        FreeResource(Resource),",
    "        v12 == -1) )",
    "  {",
    "    MsgBox2Param(0, 0x4FBu, 0, 0, 0x10u, 0);",
    "    return a6;",
    "  }",
    "  return v12;",
    "}",
    "",
    "",
    "HRESULT __fastcall AddPath(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc)",
    "{",
    "  size_t v4; // rbp",
    "  __int64 v5; // r8",
    "  char *v8; // rbx",
    "",
    "  v4 = (unsigned int)cchDest;",
    "  v5 = -1;",
    "  do",
    "    ++v5;",
    "  while ( pszDest[v5] );",
    "  if ( (int)v5 + 1 >= (unsigned int)cchDest )",
    "    return -2147024774;",
    "  v8 = &pszDest[(unsigned int)v5];",
    "  if ( v8 > pszDest && *CharPrevA(pszDest, &pszDest[(unsigned int)v5]) != 92 )",
    "    *v8++ = 92;",
    "  *v8 = 0;",
    "  while ( *pszSrc == 32 )",
    "    ++pszSrc;",
    "  return StringCchCatA(pszDest, v4, pszSrc);",
    "}",
    "",
    "",
    "__int64 __fastcall GetParentDir(LPCSTR lpszStart)",
    "{",
    "  unsigned int v1; // esi",
    "  __int64 v3; // rdx",
    "  const CHAR *i; // rdx",
    "  LPSTR v5; // rax",
    "  const CHAR *v6; // rbx",
    "",
    "  v1 = 0;",
    "  v3 = -1;",
    "  do",
    "    ++v3;",
    "  while ( lpszStart[v3] );",
    "  for ( i = CharPrevA(lpszStart, &lpszStart[v3]); ; i = v5 )",
    "  {",
    "    v5 = CharPrevA(lpszStart, i);",
    "    v6 = v5;",
    "    if ( v5 <= lpszStart )",
    "      break;",
    "    if ( *v5 == 92 )",
    "      goto LABEL_8;",
    "  }",
    "  if ( *v5 != 92 )",
    "    return v1;",
    "LABEL_8:",
    "  if ( v5 == lpszStart || *CharPrevA(lpszStart, v5) == 58 )",
    "    v6 = CharNextA(v6);",
    "  *v6 = 0;",
    "  return 1;",
    "}",
    "",
    "",
    "LPSTR __fastcall ANSIStrChr(CHAR *lpsz, __int16 a2)",
    "{",
    "  bool v2; // zf",
    "  LPSTR v4; // rbx",
    "  __int16 v5; // di",
    "  BOOL v6; // eax",
    "",
    "  v2 = *lpsz == 0;",
    "  v4 = lpsz;",
    "  while ( !v2 )",
    "  {",
    "    v5 = *(_WORD *)v4;",
    "    if ( (unsigned __int8)*(_WORD *)v4 == (_BYTE)a2 )",
    "    {",
    "      if ( !IsDBCSLeadByte(*(_WORD *)v4) )",
    "        return v4;",
    "      v6 = v5 != a2;",
    "    }",
    "    else",
    "    {",
    "      v6 = 1;",
    "    }",
    "    if ( !v6 )",
    "      return v4;",
    "    v4 = CharNextA(v4);",
    "    v2 = *v4 == 0;",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "const CHAR *__fastcall ANSIStrRChr(LPCSTR lpsz, __int16 a2)",
    "{",
    "  const CHAR *v2; // rbx",
    "  const CHAR *i; // rdi",
    "  __int16 v5; // si",
    "  BOOL v6; // eax",
    "  const CHAR *v7; // rcx",
    "",
    "  v2 = 0;",
    "  for ( i = lpsz; *i; i = CharNextA(i) )",
    "  {",
    "    v5 = *(_WORD *)i;",
    "    if ( (unsigned __int8)*(_WORD *)i == (_BYTE)a2 )",
    "      v6 = IsDBCSLeadByte(*(_WORD *)i) && v5 != a2;",
    "    else",
    "      v6 = 1;",
    "    v7 = i;",
    "    if ( v6 )",
    "      v7 = v2;",
    "    v2 = v7;",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall EnumResLangProc(",
    "        XMM_SAVE_AREA32 *__return_ptr retstr,",
    "        HMODULE hModule,",
    "        CHAR lpType,",
    "        __int16 lpName,",
    "        _STARTUPINFOW *wLanguage)",
    "{",
    "  __int64 result; // rax",
    "",
    "  result = 1;",
    "  if ( hModule == (HMODULE)wLanguage->lpReserved && LOWORD(wLanguage->cb) == (lpName & 0x3FF) )",
    "  {",
    "    *(&wLanguage->cb + 1) = 1;",
    "    result = 0;",
    "    LOWORD(wLanguage->cb) = lpName;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 IsBiDiLocalizedBinary()",
    "{",
    "  unsigned int v0; // ebx",
    "  HMODULE v1; // rdi",
    "  _WORD lParam[2]; // [rsp+30h] [rbp-18h] BYREF",
    "  int v4; // [rsp+34h] [rbp-14h]",
    "  __int64 v5; // [rsp+38h] [rbp-10h]",
    "",
    "  v0 = dword_14000C208;",
    "  v1 = g_hInst;",
    "  if ( dword_14000C208 == -2 )",
    "  {",
    "    v4 = 0;",
    "    dword_14000C208 = 0;",
    "    v0 = 1;",
    "    lParam[0] = 1;",
    "    v5 = 16;",
    "    EnumResourceLanguagesA(g_hInst, (LPCSTR)0x10, (LPCSTR)1, (ENUMRESLANGPROCA)EnumResLangProc, (LONG_PTR)lParam);",
    "    if ( v4",
    "      || (v4 = 0,",
    "          lParam[0] = 13,",
    "          v5 = 16,",
    "          EnumResourceLanguagesA(v1, (LPCSTR)0x10, (LPCSTR)1, (ENUMRESLANGPROCA)EnumResLangProc, (LONG_PTR)lParam),",
    "          v4) )",
    "    {",
    "      dword_14000C208 = 1;",
    "    }",
    "    else",
    "    {",
    "      return (unsigned int)dword_14000C208;",
    "    }",
    "  }",
    "  return v0;",
    "}",
    "",
    "",
    "__int64 RunningOnWin95BiDiLoc()",
    "{",
    "  unsigned int v0; // esi",
    "  int v1; // edi",
    "  LSTATUS Value; // ebx",
    "  const CHAR *i; // rcx",
    "  CHAR v4; // dl",
    "  int v5; // edi",
    "  DWORD cbData[2]; // [rsp+38h] [rbp-D0h] BYREF",
    "  HKEY hKey; // [rsp+40h] [rbp-C8h] BYREF",
    "  DWORD Type[4]; // [rsp+48h] [rbp-C0h] BYREF",
    "  _OSVERSIONINFOA VersionInformation; // [rsp+58h] [rbp-B0h] BYREF",
    "  BYTE Data[16]; // [rsp+F8h] [rbp-10h] BYREF",
    "",
    "  v0 = dword_14000C20C;",
    "  cbData[0] = 12;",
    "  if ( dword_14000C20C == -2 )",
    "  {",
    "    v1 = 0;",
    "    VersionInformation.dwOSVersionInfoSize = 148;",
    "    dword_14000C20C = 0;",
    "    if ( !GetVersionExA(&VersionInformation) )",
    "      return (unsigned int)dword_14000C20C;",
    "    v0 = 1;",
    "    if ( VersionInformation.dwPlatformId != 1 )",
    "      return (unsigned int)dword_14000C20C;",
    "    if ( VersionInformation.dwMajorVersion != 4 )",
    "      return (unsigned int)dword_14000C20C;",
    "    if ( VersionInformation.dwMinorVersion >= 0xA )",
    "      return (unsigned int)dword_14000C20C;",
    "    if ( !GetSystemMetrics(74) )",
    "      return (unsigned int)dword_14000C20C;",
    "    if ( RegOpenKeyExA(HKEY_CURRENT_USER, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019u, &hKey) )",
    "      return (unsigned int)dword_14000C20C;",
    "    Value = RegQueryValueExA(hKey, pszCabPath, 0, Type, Data, cbData);",
    "    RegCloseKey(hKey);",
    "    if ( Value )",
    "      return (unsigned int)dword_14000C20C;",
    "    for ( i = (const CHAR *)Data; ; i = CharNextA(i) )",
    "    {",
    "      if ( (unsigned __int8)(*i - 48) > 9u )",
    "      {",
    "        v4 = *i - 32;",
    "        if ( *i < 97 )",
    "          v4 = *i;",
    "        if ( (unsigned int)(v4 - 65) > 5 )",
    "        {",
    "          if ( i != (const CHAR *)Data )",
    "          {",
    "            v5 = v1 & 0x3FF;",
    "            if ( v5 == 1 || v5 == 13 )",
    "            {",
    "              dword_14000C20C = 1;",
    "              return v0;",
    "            }",
    "          }",
    "          return (unsigned int)dword_14000C20C;",
    "        }",
    "        v1 = v4 + 16 * v1 - 55;",
    "      }",
    "      else",
    "      {",
    "        v1 = *i + 16 * (v1 - 3);",
    "      }",
    "    }",
    "  }",
    "  return v0;",
    "}",
    "",
    "",
    "// write access to const memory has been detected, the output may be wrong!",
    "__int64 pre_c_init()",
    "{",
    "}__int64 pre_cpp_init()",
    "{",
    "  __int64 result; // rax",
    "",
    "  dword_14000C244 = newmode;",
    "  result = __getmainargs(&unk_14000C228, &unk_14000C230, &unk_14000C238, (unsigned int)dowildcard, &dword_14000C244);",
    "  dword_14000C22C = result;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 WinMainCRTStartup()",
    "{",
    "  _security_init_cookie();",
    "  return _mainCRTStartup();",
    "}",
    "",
    "",
    "int _mainCRTStartup()",
    "{",
    "  PVOID StackBase; // rbx",
    "  int v1; // edi",
    "  signed __int64 v2; // rax",
    "  int v3; // eax",
    "  _QWORD *i; // rbx",
    "  int result; // eax",
    "  char *v6; // rbx",
    "  BOOL v7; // edi",
    "  unsigned int v8; // ecx",
    "  int wShowWindow; // r9d",
    "  _STARTUPINFOW StartupInfo; // [rsp+40h] [rbp-78h] BYREF",
    "",
    "  GetStartupInfoW(&StartupInfo);",
    "  StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "  v1 = 0;",
    "  while ( 1 )",
    "  {",
    "    v2 = _InterlockedCompareExchange64(&_native_startup_lock, (signed __int64)StackBase, 0);",
    "    if ( !v2 )",
    "      break;",
    "    if ( (PVOID)v2 == StackBase )",
    "    {",
    "      v1 = 1;",
    "      break;",
    "    }",
    "    Sleep(0x3E8u);",
    "  }",
    "  if ( _native_startup_state == 1 )",
    "  {",
    "    amsg_exit_0(31);",
    "LABEL_18:",
    "    if ( _native_startup_state == 1 )",
    "    {",
    "      initterm_0((_PVFV *)&_xc_a, (_PVFV *)&_xc_z);",
    "      _native_startup_state = 2;",
    "    }",
    "    if ( !v1 )",
    "      _InterlockedExchange64(&_native_startup_lock, 0);",
    "    if ( _dyn_tls_init_callback && (unsigned int)IsNonwritableInCurrentImage(0x14000CB88LL) )",
    "      _guard_dispatch_icall_fptr();",
    "    v6 = _acmdln;",
    "    v7 = 0;",
    "    while ( 1 )",
    "    {",
    "      v8 = (unsigned __int8)*v6;",
    "      if ( (unsigned __int8)v8 <= 0x20u && (!(_BYTE)v8 || !v7) )",
    "        break;",
    "      if ( (_BYTE)v8 == 34 )",
    "        v7 = !v7;",
    "      if ( _ismbblead(v8) )",
    "        ++v6;",
    "      ++v6;",
    "    }",
    "    while ( (unsigned __int8)(v8 - 1) <= 0x1Fu )",
    "      LOBYTE(v8) = *++v6;",
    "    wShowWindow = 10;",
    "    if ( (StartupInfo.dwFlags & 1) != 0 )",
    "      wShowWindow = StartupInfo.wShowWindow;",
    "    result = WinMain((HINSTANCE)0x140000000LL, 0, v6, wShowWindow);",
    "    dword_14000C220 = result;",
    "    if ( !dword_14000C240 )",
    "      exit(result);",
    "    if ( !dword_14000C224 )",
    "    {",
    "      _cexit();",
    "      return dword_14000C220;",
    "    }",
    "    return result;",
    "  }",
    "  v3 = _native_startup_state;",
    "  if ( _native_startup_state )",
    "  {",
    "    dword_14000C224 = 1;",
    "    goto LABEL_18;",
    "  }",
    "  _native_startup_state = 1;",
    "  for ( i = &_xi_a; i < &_xi_z; ++i )",
    "  {",
    "    if ( v3 )",
    "      return 255;",
    "    if ( *i )",
    "      v3 = _guard_dispatch_icall_fptr();",
    "  }",
    "  if ( !v3 )",
    "    goto LABEL_18;",
    "  return 255;",
    "}",
    "",
    "",
    "void __cdecl _security_check_cookie(uintptr_t StackCookie)",
    "{",
    "  __int64 v1; // rcx",
    "",
    "  if ( StackCookie != _security_cookie )",
    "LABEL_4:",
    "    _report_gsfailure(StackCookie);",
    "  v1 = __ROL8__(StackCookie, 16);",
    "  if ( (_WORD)v1 )",
    "  {",
    "    StackCookie = __ROR8__(v1, 16);",
    "    goto LABEL_4;",
    "  }",
    "}",
    "",
    "",
    "BOOL __fastcall _raise_securityfailure(struct _EXCEPTION_POINTERS *ExceptionInfo)",
    "{",
    "  HANDLE CurrentProcess; // rax",
    "",
    "  SetUnhandledExceptionFilter(0);",
    "  UnhandledExceptionFilter(ExceptionInfo);",
    "  CurrentProcess = GetCurrentProcess();",
    "  return TerminateProcess(CurrentProcess, 0xC0000409);",
    "}",
    "",
    "",
    "void __cdecl  _report_gsfailure(uintptr_t StackCookie)",
    "{",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry; // [rsp+40h] [rbp-48h]",
    "  DWORD64 ControlPc; // [rsp+48h] [rbp-40h]",
    "  unsigned __int64 ImageBase; // [rsp+50h] [rbp-38h] BYREF",
    "  unsigned __int64 EstablisherFrame; // [rsp+58h] [rbp-30h] BYREF",
    "  PVOID HandlerData[5]; // [rsp+60h] [rbp-28h] BYREF",
    "",
    "  RtlCaptureContext(&ContextRecord);",
    "  ControlPc = ContextRecord.Rip;",
    "  FunctionEntry = RtlLookupFunctionEntry(ContextRecord.Rip, &ImageBase, 0);",
    "  if ( FunctionEntry )",
    "  {",
    "    RtlVirtualUnwind(0, ImageBase, ControlPc, FunctionEntry, &ContextRecord, HandlerData, &EstablisherFrame, 0);",
    "  }",
    "  else",
    "  {",
    "    ContextRecord.Rip = *(_QWORD *)ContextRecord.Rsp;",
    "    ContextRecord.Rsp += 8LL;",
    "  }",
    "  qword_14000C260 = ContextRecord.Rip;",
    "  ContextRecord.Rcx = StackCookie;",
    "  dword_14000C250 = -1073740791;",
    "  dword_14000C254 = 1;",
    "  dword_14000C268 = 3;",
    "  unk_14000C270 = 2;",
    "  unk_14000C278 = _security_cookie;",
    "  unk_14000C280 = _security_cookie_complement;",
    "  HandlerData[2] = (PVOID)_security_cookie_complement;",
    "  _raise_securityfailure((struct _EXCEPTION_POINTERS *)&off_140009000);",
    "}",
    "",
    "",
    "void  _report_rangecheckfailure()",
    "{",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry; // [rsp+40h] [rbp-38h]",
    "  DWORD64 ControlPc; // [rsp+48h] [rbp-30h]",
    "  unsigned __int64 ImageBase; // [rsp+50h] [rbp-28h] BYREF",
    "  unsigned __int64 EstablisherFrame; // [rsp+58h] [rbp-20h] BYREF",
    "  PVOID HandlerData; // [rsp+60h] [rbp-18h] BYREF",
    "",
    "  RtlCaptureContext(&ContextRecord);",
    "  ControlPc = ContextRecord.Rip;",
    "  FunctionEntry = RtlLookupFunctionEntry(ContextRecord.Rip, &ImageBase, 0);",
    "  if ( FunctionEntry )",
    "  {",
    "    RtlVirtualUnwind(0, ImageBase, ControlPc, FunctionEntry, &ContextRecord, &HandlerData, &EstablisherFrame, 0);",
    "  }",
    "  else",
    "  {",
    "    ContextRecord.Rip = *(_QWORD *)ContextRecord.Rsp;",
    "    ContextRecord.Rsp += 8LL;",
    "  }",
    "  qword_14000C260 = ContextRecord.Rip;",
    "  dword_14000C250 = -1073740791;",
    "  dword_14000C254 = 1;",
    "  dword_14000C268 = 1;",
    "  unk_14000C270 = 8;",
    "  _raise_securityfailure((struct _EXCEPTION_POINTERS *)&off_140009000);",
    "}",
    "",
    "",
    "__int64 __fastcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)",
    "{",
    "  PEXCEPTION_RECORD ExceptionRecord; // rax",
    "  int v2; // ecx",
    "",
    "  ExceptionRecord = ExceptionInfo->ExceptionRecord;",
    "  if ( ExceptionInfo->ExceptionRecord->ExceptionCode == -529697949 && ExceptionRecord->NumberParameters == 4 )",
    "  {",
    "    v2 = ExceptionRecord->ExceptionInformation[0];",
    "    if ( (unsigned int)(v2 - 429065504) <= 2 || v2 == 26820608 )",
    "      terminate();",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 _CxxSetUnhandledExceptionFilter()",
    "{",
    "  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)__CxxUnhandledExceptionFilter);",
    "  return 0;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "__int64 XcptFilter_0()",
    "{",
    "}_DWORD *__fastcall RtlpImageNtHeader(__int64 a1)",
    "{",
    "  __int64 v1; // rdx",
    "  _DWORD *v2; // rax",
    "",
    "  v1 = 0;",
    "  if ( (unsigned __int64)(a1 - 1) <= 0xFFFFFFFFFFFFFFFDuLL",
    "    && *(_WORD *)a1 == 23117",
    "    && *(_DWORD *)(a1 + 60) < 0x10000000u )",
    "  {",
    "    v2 = (_DWORD *)(a1 + *(int *)(a1 + 60));",
    "    if ( *v2 != 17744 )",
    "      return 0;",
    "    return v2;",
    "  }",
    "  return (_DWORD *)v1;",
    "}",
    "",
    "",
    "__int64 __fastcall get_image_app_type(unsigned int a1)",
    "{",
    "  HMODULE ModuleHandleW; // rax",
    "  _DWORD *v3; // rax",
    "  __int64 result; // rax",
    "  bool v5; // zf",
    "",
    "  ModuleHandleW = GetModuleHandleW(0);",
    "  if ( !ModuleHandleW )",
    "    return a1;",
    "  v3 = RtlpImageNtHeader((__int64)ModuleHandleW);",
    "  if ( !v3 )",
    "    return a1;",
    "  if ( *((_WORD *)v3 + 46) == 2 )",
    "    return 2;",
    "  v5 = *((_WORD *)v3 + 46) == 3;",
    "  result = 1;",
    "  if ( !v5 )",
    "    return a1;",
    "  return result;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "__int64 __fastcall amsg_exit_0(__int64 a1)",
    "{",
    "}int __cdecl matherr(struct _exception *Except)",
    "{",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall FindPESection(__int64 a1, unsigned __int64 a2)",
    "{",
    "  unsigned int v2; // r9d",
    "  __int64 v3; // r8",
    "  __int64 result; // rax",
    "  unsigned __int64 v6; // rdx",
    "",
    "  v2 = 0;",
    "  v3 = a1 + *(int *)(a1 + 60);",
    "  result = v3 + *(unsigned __int16 *)(v3 + 20) + 24LL;",
    "  if ( !*(_WORD *)(v3 + 6) )",
    "    return 0;",
    "  while ( 1 )",
    "  {",
    "    v6 = *(unsigned int *)(result + 12);",
    "    if ( a2 >= v6 && a2 < (unsigned int)(v6 + *(_DWORD *)(result + 8)) )",
    "      break;",
    "    ++v2;",
    "    result += 40;",
    "    if ( v2 >= *(unsigned __int16 *)(v3 + 6) )",
    "      return 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall IsNonwritableInCurrentImage(__int64 a1)",
    "{",
    "  __int64 result; // rax",
    "",
    "  result = ValidateImageBase(0x140000000uLL);",
    "  if ( (_DWORD)result )",
    "  {",
    "    result = FindPESection(0x140000000LL, a1 - 0x140000000LL);",
    "    if ( result )",
    "      return *(int *)(result + 36) >= 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "_BOOL8 __fastcall ValidateImageBase(__int64 a1)",
    "{",
    "  __int64 v1; // rax",
    "  _BOOL8 result; // rax",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)a1 == 23117 )",
    "  {",
    "    v1 = a1 + *(int *)(a1 + 60);",
    "    if ( *(_DWORD *)v1 == 17744 && *(_WORD *)(v1 + 24) == 523 )",
    "      return 1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __cdecl _security_init_cookie()",
    "{",
    "  uintptr_t v0; // rax",
    "  uintptr_t v1; // rcx",
    "  struct _FILETIME v2; // [rsp+30h] [rbp+10h] BYREF",
    "  struct _FILETIME SystemTimeAsFileTime; // [rsp+38h] [rbp+18h] BYREF",
    "  LARGE_INTEGER PerformanceCount; // [rsp+40h] [rbp+20h] BYREF",
    "",
    "  SystemTimeAsFileTime = 0;",
    "  v0 = _security_cookie;",
    "  if ( _security_cookie == 0x2B992DDFA232LL )",
    "  {",
    "    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);",
    "    v2 = SystemTimeAsFileTime;",
    "    v2 = (struct _FILETIME)(GetCurrentProcessId() ^ *(unsigned __int64 *)&v2);",
    "    v2 = (struct _FILETIME)(GetCurrentThreadId() ^ *(unsigned __int64 *)&v2);",
    "    v2 = (struct _FILETIME)(((unsigned __int64)GetTickCount() << 24) ^ *(_QWORD *)&v2);",
    "    v2 = (struct _FILETIME)((unsigned __int64)&v2 ^ *(unsigned __int64 *)&v2 ^ GetTickCount());",
    "    QueryPerformanceCounter(&PerformanceCount);",
    "    v0 = (*(_QWORD *)&v2",
    "        ^ PerformanceCount.QuadPart",
    "        ^ ((unsigned __int64)PerformanceCount.LowPart << 32))",
    "       & 0xFFFFFFFFFFFFLL;",
    "    v1 = v0;",
    "    if ( v0 == 0x2B992DDFA232LL )",
    "    {",
    "      v0 = 0x2B992DDFA233LL;",
    "      v1 = 0x2B992DDFA233LL;",
    "    }",
    "    _security_cookie = v1;",
    "  }",
    "  _security_cookie_complement = ~v0;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "void __cdecl initterm_0(_PVFV *First, _PVFV *Last)",
    "{",
    "}// attributes: thunk",
    "EXCEPTION_DISPOSITION __cdecl _C_specific_handler_0(",
    "        struct _EXCEPTION_RECORD *ExceptionRecord,",
    "        void *EstablisherFrame,",
    "        struct _CONTEXT *ContextRecord,",
    "        struct _DISPATCHER_CONTEXT *DispatcherContext)",
    "{",
    "}void guard_check_icall_nop()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "__int64 __fastcall _GSHandlerCheck(__int64 a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  _GSHandlerCheckCommon(a2, a4, *(_QWORD *)(a4 + 56));",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall _GSHandlerCheckCommon(__int64 a1, __int64 a2)",
    "{",
    "  __int64 v2; // rcx",
    "  __int64 result; // rax",
    "",
    "  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 16) + 8LL);",
    "  result = *(_QWORD *)(a2 + 8);",
    "  if ( (*(_BYTE *)(v2 + result + 3) & 0xF) != 0 )",
    "    return *(_BYTE *)(v2 + result + 3) & 0xF0;",
    "  return result;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "void *__cdecl memcpy_0(void *a1, const void *Src, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset_0(void *a1, int Val, size_t Size)",
    "{",
    "}__int64 __fastcall guard_dispatch_icall_nop()",
    "{",
    "  __int64 (*v0)(void); // rax",
    "",
    "  return v0();",
    "}",
    "",
    ""
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "HRESULT __stdcall StringCchCopyA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc);",
    "HRESULT __stdcall StringCchCatA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc);",
    "HRESULT StringCchPrintfA(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszFormat, ...);",
    "__int64 __fastcall CheckToken(_DWORD *a1);",
    "BOOL __stdcall IsNTAdmin(DWORD dwReserved, DWORD *lpdwReserved);",
    "__int64 __fastcall WarningDlgProc(HWND hDlg, int a2, INT_PTR a3, UINT a4);",
    "_BYTE *__fastcall ExtractField(_BYTE **a1, const CHAR *a2);",
    "__int64 __fastcall AnalyzeCmd(STRSAFE_LPSTR pszDest, __int64 a2, char **a3, _DWORD *a4);",
    "__int64 MyNTReboot();",
    "unsigned int AddRegRunOnce();",
    "void __fastcall DeleteMyDir(const CHAR *a1);",
    "__int64 GetWininitSize();",
    "DWORD __stdcall NeedRebootInit();",
    "__int64 __fastcall IsWindowsDrive(_BYTE *a1);",
    "__int64 __fastcall DiskSpaceErrMsg(int a1, int a2, int a3);",
    "__int64 __fastcall GetFileTobeChecked(LPSTR lpBuffer, __int64 a2, const char *a3);",
    "__int64 __fastcall CheckFileVersion(__int64 a1, const CHAR *a2, DWORD a3, _DWORD *a4);",
    "void __fastcall ExpandCmdParams(CHAR *lpsz, unsigned __int64 a2, LPSTR a3);",
    "int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);",
    "__int64 __fastcall Init(HMODULE hModule, const CHAR *a2);",
    "__int64 DoMain();",
    "LRESULT __fastcall MEditSubProc(_PROCESS_INFORMATION *hWnd, HWND Msg, WPARAM wParam, LPARAM lParam);",
    "__int64 __fastcall LicenseDlgProc(_PROCESS_INFORMATION *hWnd, int a2, __int64 a3);",
    "__int64 __fastcall TempDirDlgProc(HWND hDlg, int a2, __int64 a3);",
    "__int64 __fastcall OverwriteDlgProc(HWND hWnd, int a2, unsigned __int64 a3);",
    "__int64 __fastcall ExtractDlgProc(HWND hWnd, int a2, __int64 a3);",
    "DWORD __fastcall WaitForObject(void *a1);",
    "__int64 __fastcall CheckOSVersion(__int64 a1);",
    "__int64 DisplayLicense();",
    "__int64 RunInstallCommand();",
    "__int64 __fastcall RunApps(LPSTR lpCommandLine, LPSTARTUPINFOA lpStartupInfo);",
    "HLOCAL FinishMessage();",
    "__int64 __fastcall BrowseCallback(HWND a1, int a2, __int64 a3, LPARAM a4);",
    "__int64 __fastcall BrowseForDir(HWND a1);",
    "BOOL __fastcall CenterWindow(HWND hWnd, HWND a2);",
    "__int64 __fastcall MsgBox2Param(HWND hWnd, UINT a2, __int64 a3, __int64 a4, UINT uType, int a6);",
    "__int64 __fastcall GetResource(LPCSTR lpName, void *Destination, rsize_t DestinationSize);",
    "__int64 __fastcall CatDirAndFile(STRSAFE_LPSTR pszDest, STRSAFE_LPCSTR pszSrc, STRSAFE_LPCSTR a3);",
    "__int64 __fastcall CheckOverwrite(LPCSTR lpFileName);",
    "__int64 __fastcall AddFile(STRSAFE_LPCSTR pszSrc);",
    "INT_PTR __fastcall openfunc(const CHAR *pszFile, __int16 oflag, int pmode);",
    "__int64 __fastcall readfunc(INT_PTR hf, void *pv, UINT cb);",
    "__int64 __fastcall writefunc(INT_PTR hf, void *pv, UINT cb);",
    "__int64 __fastcall closefunc(INT_PTR hf);",
    "__int64 __fastcall seekfunc(INT_PTR hf, unsigned int dist, int seektype);",
    "HGLOBAL __fastcall allocfunc(ULONG cb);",
    "// attributes: thunk",
    "HGLOBAL __stdcall freefunc(HGLOBAL hMem);",
    "__int64 __fastcall fdiNotifyExtract(_XSAVE_FORMAT *__return_ptr retstr, __int64 fdint, PFDINOTIFICATION pfdin);",
    "__int64 __fastcall UpdateCabinetInfo(__int64 a1);",
    "_BOOL8 VerifyCabinet();",
    "FILETIME __fastcall ExtractThread(LPSTR lpThreadParameter);",
    "__int64 GetFileList();",
    "__int64 GetUsersPermission();",
    "LSTATUS DeleteExtractedFiles();",
    "__int64 __fastcall GetNewTempDir(LPCSTR lpPathName, char *a2);",
    "__int64 __fastcall CreateAndValidateSubdir(const CHAR *a1, int a2, int a3);",
    "__int64 GetTempDirectory();",
    "__int64 __fastcall IsGoodTempDir(LPCSTR lpFileName);",
    "__int64 __fastcall IsEnoughSpace(LPCSTR lpPathName, char a2, int a3);",
    "__int64 __fastcall RemoveLeadTailBlanks(char *a1, _DWORD *a2);",
    "__int64 __fastcall ParseCmdLine(CHAR *lpsz);",
    "__int64 MyGetLastError();",
    "__int64 __fastcall TravelUpdatedFiles(unsigned int (__fastcall *a1)(_QWORD, _QWORD, char *, char *));",
    "__int64 __fastcall ProcessUpdatedFile_Size(unsigned int a1);",
    "__int64 __fastcall ProcessUpdatedFile_Write(DWORD nNumberOfBytesToWrite, __int64 a2, const char *a3, const void *a4);",
    "HMODULE MyLoadLibrary();",
    "INT_PTR __fastcall MyDialogBox(",
    "        __int64 a1,",
    "        const CHAR *a2,",
    "        HWND a3,",
    "        INT_PTR (__stdcall *a4)(HWND, UINT, WPARAM, LPARAM),",
    "        LPARAM dwInitParam,",
    "        __int64 a6);",
    "HRESULT __fastcall AddPath(STRSAFE_LPSTR pszDest, size_t cchDest, STRSAFE_LPCSTR pszSrc);",
    "__int64 __fastcall GetParentDir(LPCSTR lpszStart);",
    "LPSTR __fastcall ANSIStrChr(CHAR *lpsz, __int16 a2);",
    "const CHAR *__fastcall ANSIStrRChr(LPCSTR lpsz, __int16 a2);",
    "__int64 __fastcall EnumResLangProc(",
    "        XMM_SAVE_AREA32 *__return_ptr retstr,",
    "        HMODULE hModule,",
    "        CHAR lpType,",
    "        __int16 lpName,",
    "        _STARTUPINFOW *wLanguage);",
    "__int64 IsBiDiLocalizedBinary();",
    "__int64 RunningOnWin95BiDiLoc();",
    "// write access to const memory has been detected, the output may be wrong!",
    "__int64 pre_c_init();",
    "__int64 pre_cpp_init();",
    "__int64 WinMainCRTStartup();",
    "int _mainCRTStartup();",
    "void __cdecl _security_check_cookie(uintptr_t StackCookie);",
    "BOOL __fastcall _raise_securityfailure(struct _EXCEPTION_POINTERS *ExceptionInfo);",
    "void __cdecl  _report_gsfailure(uintptr_t StackCookie);",
    "void  _report_rangecheckfailure();",
    "__int64 __fastcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo);",
    "__int64 _CxxSetUnhandledExceptionFilter();",
    "// attributes: thunk",
    "__int64 XcptFilter_0();",
    "_DWORD *__fastcall RtlpImageNtHeader(__int64 a1);",
    "__int64 __fastcall get_image_app_type(unsigned int a1);",
    "// attributes: thunk",
    "__int64 __fastcall amsg_exit_0(__int64 a1);",
    "int __cdecl matherr(struct _exception *Except);",
    "__int64 __fastcall FindPESection(__int64 a1, unsigned __int64 a2);",
    "__int64 __fastcall IsNonwritableInCurrentImage(__int64 a1);",
    "_BOOL8 __fastcall ValidateImageBase(__int64 a1);",
    "void __cdecl _security_init_cookie();",
    "// attributes: thunk",
    "void __cdecl initterm_0(_PVFV *First, _PVFV *Last);",
    "// attributes: thunk",
    "EXCEPTION_DISPOSITION __cdecl _C_specific_handler_0(",
    "        struct _EXCEPTION_RECORD *ExceptionRecord,",
    "        void *EstablisherFrame,",
    "        struct _CONTEXT *ContextRecord,",
    "        struct _DISPATCHER_CONTEXT *DispatcherContext);",
    "void guard_check_icall_nop();",
    "__int64 __fastcall _GSHandlerCheck(__int64 a1, __int64 a2, __int64 a3, __int64 a4);",
    "__int64 __fastcall _GSHandlerCheckCommon(__int64 a1, __int64 a2);",
    "// attributes: thunk",
    "void *__cdecl memcpy_0(void *a1, const void *Src, size_t Size);",
    "// attributes: thunk",
    "void *__cdecl memset_0(void *a1, int Val, size_t Size);",
    "__int64 __fastcall guard_dispatch_icall_nop();"
  ],
  "summary": [],
  "yara_rules": "",
  "capa_rules": {
    "meta": {
      "timestamp": "2025-07-12T01:24:44.307183",
      "version": "9.2.1",
      "argv": [
        "-r",
        "F:\\users\\WhiteHat\\YARRAAI\\code\\YARRAI_Web\\backend\\services\\CAPA\\capa-rules",
        "-s",
        "F:\\users\\WhiteHat\\YARRAAI\\code\\YARRAI_Web\\backend\\services\\CAPA\\capa-sigs",
        "--json",
        "F:\\users\\WhiteHat\\YARRAAI\\code\\YARRAI_Web\\backend\\uploads\\bfe87afd-6f9f-49c3-b094-3129b98bbd1d.exe"
      ],
      "sample": {
        "md5": "5a75d0870cf22d2e8cdf8cbc31fad3f1",
        "sha1": "7b650488f71172a3d0be1c9fb4f26869245b0c5e",
        "sha256": "7257766c7a1d0bf3fe2f6634877c4238d19bd7acd458a828f7851e145e7e295a",
        "path": "F:/users/WhiteHat/YARRAAI/code/YARRAI_Web/backend/uploads/bfe87afd-6f9f-49c3-b094-3129b98bbd1d.exe"
      },
      "flavor": "static",
      "analysis": {
        "format": "pe",
        "arch": "amd64",
        "os": "windows",
        "extractor": "VivisectFeatureExtractor",
        "rules": [
          "F:/users/WhiteHat/YARRAAI/code/YARRAI_Web/backend/services/CAPA/capa-rules"
        ],
        "base_address": {
          "type": "absolute",
          "value": 5368709120
        },
        "layout": {
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 5368713548
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368713548
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368713659
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368713676
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368713676
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368713791
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368713964
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368713964
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714322
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714352
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714446
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714549
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714688
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714728
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714728
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714833
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368714850
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714884
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368715290
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368715341
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368715825
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716011
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716250
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368716300
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716399
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716524
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716557
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368716584
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368716584
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368717073
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368717388
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368717388
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368717731
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368717892
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718023
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718059
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718104
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718104
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718154
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718283
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718414
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718440
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718532
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718584
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718584
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718763
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718842
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718876
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718876
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368718939
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719067
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719077
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719211
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719365
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368719412
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719412
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719481
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719699
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719791
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719894
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719952
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368719980
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368719980
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720182
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720225
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720239
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720308
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720322
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720364
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720423
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368720468
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720649
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720743
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720791
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368720820
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368720820
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368721186
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368721478
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368721600
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368721644
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368721644
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368721976
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722010
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722123
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722336
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722336
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722396
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722416
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722722
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722736
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368722736
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723092
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723477
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368723520
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723687
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723709
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368723728
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723803
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368723835
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724123
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724265
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368724288
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724300
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724453
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368724468
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724468
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724569
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724607
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724739
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724935
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368724975
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725020
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725142
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368725364
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725687
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368725700
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725700
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725917
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368725979
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368726013
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368726189
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368726261
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368726471
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368726701
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727026
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727276
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368727356
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727356
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727490
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727556
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368727838
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368727884
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728093
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728112
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728112
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728144
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728160
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728160
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728372
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728680
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728680
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728915
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368728955
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729036
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729303
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729323
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729424
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729638
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729680
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729680
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368729867
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729900
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730020
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730044
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730044
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730182
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730216
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730236
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730467
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730496
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730551
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730722
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730758
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730776
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730792
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730860
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730894
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368730977
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731021
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731062
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731104
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731104
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731159
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731201
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731243
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731280
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731394
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731479
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731504
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731504
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731556
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731591
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731616
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731616
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731659
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731666
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731698
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731709
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731742
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731824
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731824
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368731982
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732034
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732097
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732166
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732269
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368732440
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732466
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732540
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368732720
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368732768
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368733035
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733072
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368733480
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368733649
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733668
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368733668
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368733848
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733860
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734167
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734188
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734249
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734409
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734509
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734599
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734648
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734648
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734691
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734864
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734948
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368734948
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368735384
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368735428
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368735428
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368735959
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736022
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736048
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736177
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736278
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736348
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736365
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736421
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368736624
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736624
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736660
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736735
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736757
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736865
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368736932
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368736932
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737404
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737442
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737515
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368737828
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737850
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737869
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737915
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368737929
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739584
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739584
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739628
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739628
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739740
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739768
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739871
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739920
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368739946
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740016
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740112
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740122
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740291
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740336
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740420
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740521
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740552
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740552
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740743
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740776
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740776
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740833
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740897
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740928
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368740961
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741071
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741096
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741096
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741198
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741224
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741224
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741337
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741428
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741428
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741611
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741636
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741636
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741799
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741930
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741938
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741951
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368741980
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742044
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742096
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742096
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742118
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742143
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742154
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742201
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742300
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742320
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742320
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742400
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742519
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742606
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742652
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742720
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742980
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742424
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742519
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742606
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742652
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742720
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368742980
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743496
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743623
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743658
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743760
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743760
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743775
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743781
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743810
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743868
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743868
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743908
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743944
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743960
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368743994
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368744023
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744752
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 5368744752
                  }
                }
              ]
            }
          ]
        },
        "feature_counts": {
          "file": 16257,
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 5368713548
              },
              "count": 55
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368713676
              },
              "count": 79
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368713964
              },
              "count": 102
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714496
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714728
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368714884
              },
              "count": 161
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368716300
              },
              "count": 77
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368716584
              },
              "count": 131
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368717388
              },
              "count": 101
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368717892
              },
              "count": 61
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718104
              },
              "count": 77
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718440
              },
              "count": 51
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718584
              },
              "count": 94
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368718876
              },
              "count": 107
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368719412
              },
              "count": 107
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368719980
              },
              "count": 87
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368720468
              },
              "count": 77
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368720820
              },
              "count": 141
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368721644
              },
              "count": 101
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722336
              },
              "count": 32
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722416
              },
              "count": 77
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368722736
              },
              "count": 142
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368723520
              },
              "count": 57
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368723728
              },
              "count": 110
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368724288
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368724468
              },
              "count": 163
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368725364
              },
              "count": 61
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368725700
              },
              "count": 195
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368727356
              },
              "count": 115
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368727884
              },
              "count": 63
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728112
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728160
              },
              "count": 98
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368728680
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729036
              },
              "count": 91
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729680
              },
              "count": 50
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368729900
              },
              "count": 59
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730044
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730236
              },
              "count": 69
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368730496
              },
              "count": 142
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731104
              },
              "count": 72
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731280
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731504
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731616
              },
              "count": 54
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368731824
              },
              "count": 110
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368732440
              },
              "count": 76
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368732768
              },
              "count": 91
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733072
              },
              "count": 92
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733668
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368733860
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734188
              },
              "count": 97
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734648
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368734948
              },
              "count": 81
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368735428
              },
              "count": 169
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368736624
              },
              "count": 93
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368736932
              },
              "count": 144
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368737828
              },
              "count": 50
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739584
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739628
              },
              "count": 85
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368739920
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740016
              },
              "count": 85
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740336
              },
              "count": 75
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740552
              },
              "count": 67
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740776
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368740928
              },
              "count": 52
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741096
              },
              "count": 51
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741224
              },
              "count": 57
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741376
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741428
              },
              "count": 72
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368741636
              },
              "count": 149
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742096
              },
              "count": 69
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742320
              },
              "count": 18
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368742424
              },
              "count": 120
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743496
              },
              "count": 68
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743760
              },
              "count": 49
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743854
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743868
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368743960
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744035
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744048
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744510
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744544
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744701
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744713
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 5368744752
              },
              "count": 20
            }
          ]
        },
        "library_functions": [
          {
            "address": {
              "type": "absolute",
              "value": 5368713224
            },
            "name": "?"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368713348
            },
            "name": "?"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368737960
            },
            "name": "?ge25519_unpack_negative_vartime@?A0x0233a0f8@Ed25519@Donna@CryptoPP@@YAHPEAUge25519@Arch64@34@QEBE@Z"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368742400
            },
            "name": "mainCRTStartup"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368743024
            },
            "name": "__security_check_cookie"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368743060
            },
            "name": "__raise_securityfailure"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368743120
            },
            "name": "__report_gsfailure"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368743824
            },
            "name": "__CxxSetUnhandledExceptionFilter"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744064
            },
            "name": "_FindPESection"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744144
            },
            "name": "_IsNonwritableInCurrentImage"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744240
            },
            "name": "_ValidateImageBase"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744292
            },
            "name": "__security_init_cookie"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744568
            },
            "name": "__GSHandlerCheck"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744604
            },
            "name": "__GSHandlerCheckCommon"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744736
            },
            "name": "_guard_dispatch_icall_nop"
          },
          {
            "address": {
              "type": "absolute",
              "value": 5368744800
            },
            "name": "?"
          }
        ]
      }
    },
    "rules": {
      "link function at runtime on Windows": {
        "meta": {
          "name": "link function at runtime on Windows",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x404130",
            "Practical Malware Analysis Lab 01-04.exe_:0x401350"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: link function at runtime on Windows\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetProcAddress\r\n        - api: ntdll.LdrGetProcedureAddress\r\n        - api: ntdll.LdrGetProcedureAddressEx\r\n        - api: ntdll.LdrGetProcedureAddressForCaller\r\n        - api: MmGetSystemRoutineAddress\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368713771
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368713771
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368716944
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716944
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368720545
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368720545
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368721833
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368721833
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368726447
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368726447
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368728234
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368728234
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368728266
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368728266
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368728300
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368728300
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "modify access privileges": {
        "meta": {
          "name": "modify access privileges",
          "namespace": "host-interaction/process/modify",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Privilege Escalation",
                "Access Token Manipulation"
              ],
              "tactic": "Privilege Escalation",
              "technique": "Access Token Manipulation",
              "subtechnique": "",
              "id": "T1134"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403BE0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: modify access privileges\r\n    namespace: host-interaction/process/modify\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Privilege Escalation::Access Token Manipulation [T1134]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403BE0\r\n  features:\r\n    - and:\r\n      - api: advapi32.AdjustTokenPrivileges\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716466
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "AdjustTokenPrivileges"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716466
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open mutex on Windows": {
        "meta": {
          "name": "create or open mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Mutex"
              ],
              "objective": "Process",
              "behavior": "Create Mutex",
              "method": "",
              "id": "C0042"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-01.dll_:0x10001010"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Mutex [C0042]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-01.dll_:0x10001010\r\n  features:\r\n    - or:\r\n      - api: kernel32.OpenMutex\r\n      - api: kernel32.CreateMutex\r\n      - api: kernel32.CreateMutexEx\r\n      - api: ntdll.NtCreateMutant\r\n      - api: ntdll.NtOpenMutant\r\n      - and:\r\n        - format: dotnet\r\n        - or:\r\n          - api: System.Threading.Mutex::ctor\r\n          - api: System.Threading.Mutex::OpenExisting\r\n          - api: System.Threading.Mutex::TryOpenExisting\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368721158
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368721158
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open file": {
        "meta": {
          "name": "create or open file",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Create File"
              ],
              "objective": "File System",
              "behavior": "Create File",
              "method": "",
              "id": "C0016"
            }
          ],
          "references": [],
          "examples": [
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open file\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n    lib: true\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Create File [C0016]\r\n    examples:\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E\r\n  features:\r\n    - or:\r\n      - api: CreateFile\r\n      - api: CreateFileEx\r\n      - api: IoCreateFile\r\n      - api: IoCreateFileEx\r\n      - api: ZwOpenFile\r\n      - api: ZwCreateFile\r\n      - api: NtOpenFile\r\n      - api: NtCreateFile\r\n      - api: LZCreateFile\r\n      - api: LZOpenFile\r\n      - api: fopen\r\n      - api: fopen64\r\n      - api: fdopen\r\n      - api: freopen\r\n      - api: open\r\n      - api: openat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368730821
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730821
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368731006
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368731006
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736825
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736825
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740187
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740187
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "compare security identifiers": {
        "meta": {
          "name": "compare security identifiers",
          "namespace": "host-interaction/sid",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "# generated using capa explorer for IDA Pro\r\nrule:\r\n  meta:\r\n    name: compare security identifiers\r\n    namespace: host-interaction/sid\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n  features:\r\n    - or:\r\n      - api: advapi32.EqualSid\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368714322
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "EqualSid"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368714336
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get file attributes": {
        "meta": {
          "name": "get file attributes",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Get File Attributes"
              ],
              "objective": "File System",
              "behavior": "Get File Attributes",
              "method": "",
              "id": "C0049"
            }
          ],
          "references": [],
          "examples": [
            "03B236B23B1EC37C663527C1F53AF3FE:0x180019824",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get file attributes\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Get File Attributes [C0049]\r\n    examples:\r\n      - 03B236B23B1EC37C663527C1F53AF3FE:0x180019824\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetFileAttributes\r\n      - api: ZwQueryDirectoryFile\r\n      - api: ZwQueryInformationFile\r\n      - api: NtQueryDirectoryFile\r\n      - api: NtQueryInformationFile\r\n      - api: System.IO.File::GetAttributes\r\n      - api: System.IO.File::GetCreationTime\r\n      - api: System.IO.File::GetCreationTimeUtc\r\n      - api: System.IO.File::GetLastAccessTime\r\n      - api: System.IO.File::GetLastAccessTimeUtc\r\n      - api: System.IO.File::GetLastWriteTime\r\n      - api: System.IO.File::GetLastWriteTimeUtc\r\n      - property/read: System.IO.FileSystemInfo::Attributes\r\n      - api: stat\r\n      - api: fstat\r\n      - api: lstat\r\n      - api: fstatat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368715341
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368715346
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368716011
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716016
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368723092
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368723095
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730044
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730057
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734691
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734770
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736022
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736027
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736278
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736303
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736865
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736883
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740420
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740456
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open registry key": {
        "meta": {
          "name": "create or open registry key",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Create Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Create Registry Key",
              "id": "C0036.004"
            },
            {
              "parts": [
                "Operating System",
                "Registry",
                "Open Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Open Registry Key",
              "id": "C0036.003"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10004706",
            "Practical Malware Analysis Lab 11-01.exe_:0x401000",
            "493167E85E45363D09495D0841C30648:0x404D60",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open registry key\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Create Registry Key [C0036.004]\r\n      - Operating System::Registry::Open Registry Key [C0036.003]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10004706\r\n      - Practical Malware Analysis Lab 11-01.exe_:0x401000\r\n      - 493167E85E45363D09495D0841C30648:0x404D60\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: advapi32.RegOpenKey\r\n      - api: advapi32.RegOpenKeyEx\r\n      - api: advapi32.RegCreateKey\r\n      - api: advapi32.RegCreateKeyEx\r\n      - api: advapi32.RegOpenCurrentUser\r\n      - api: advapi32.RegOpenKeyTransacted\r\n      - api: advapi32.RegOpenUserClassesRoot\r\n      - api: advapi32.RegCreateKeyTransacted\r\n      - api: ZwOpenKey\r\n      - api: ZwOpenKeyEx\r\n      - api: ZwCreateKey\r\n      - api: ZwOpenKeyTransacted\r\n      - api: ZwOpenKeyTransactedEx\r\n      - api: ZwCreateKeyTransacted\r\n      - api: NtOpenKey\r\n      - api: NtCreateKey\r\n      - api: SHRegOpenUSKey\r\n      - api: SHRegCreateUSKey\r\n      - api: RtlCreateRegistryKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::CreateSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716730
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718154
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368718189
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718283
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368718318
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368719077
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719140
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368727026
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368727059
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734509
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734542
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741799
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741832
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set file attributes": {
        "meta": {
          "name": "set file attributes",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "File and Directory Permissions Modification"
              ],
              "tactic": "Defense Evasion",
              "technique": "File and Directory Permissions Modification",
              "subtechnique": "",
              "id": "T1222"
            }
          ],
          "mbc": [
            {
              "parts": [
                "File System",
                "Set File Attributes"
              ],
              "objective": "File System",
              "behavior": "Set File Attributes",
              "method": "",
              "id": "C0050"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x100015f0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set file attributes\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    att&ck:\r\n      - Defense Evasion::File and Directory Permissions Modification [T1222]\r\n    mbc:\r\n      - File System::Set File Attributes [C0050]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x100015f0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6\r\n  features:\r\n    - or:\r\n      - api: kernel32.SetFileAttributes\r\n      - api: ZwSetInformationFile\r\n      - api: NtSetInformationFile\r\n      - api: System.IO.File::SetAttributes\r\n      - api: System.IO.File::SetCreationTime\r\n      - api: System.IO.File::SetCreationTimeUtc\r\n      - api: System.IO.File::SetLastAccessTime\r\n      - api: System.IO.File::SetLastAccessTimeUtc\r\n      - api: System.IO.File::SetLastWriteTime\r\n      - api: System.IO.File::SetLastWriteTimeUtc\r\n      - property/write: System.IO.FileSystemInfo::Attributes\r\n      - api: utime\r\n      - api: utimes\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368717731
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717757
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730182
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730190
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368732166
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368732171
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734249
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734257
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736365
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736375
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtSetInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::SetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "write",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "utimes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "terminate thread": {
        "meta": {
          "name": "terminate thread",
          "namespace": "host-interaction/thread/terminate",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Terminate Thread"
              ],
              "objective": "Process",
              "behavior": "Terminate Thread",
              "method": "",
              "id": "C0039"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003286",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x407E90"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: terminate thread\r\n    namespace: host-interaction/thread/terminate\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Terminate Thread [C0039]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003286\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x407E90\r\n  features:\r\n    - or:\r\n      - api: kernel32.TerminateThread\r\n      - api: PsTerminateSystemThread\r\n      - api: System.Threading.Thread.Abort\r\n      - api: pthread_terminate\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368723803
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "TerminateThread"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368723812
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsTerminateSystemThread"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Threading.Thread.Abort"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "pthread_terminate"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create thread": {
        "meta": {
          "name": "create thread",
          "namespace": "host-interaction/thread/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Thread"
              ],
              "objective": "Process",
              "behavior": "Create Thread",
              "method": "",
              "id": "C0038"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x10001DA0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create thread\r\n    namespace: host-interaction/thread/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Create Thread [C0038]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.CreateThread\r\n          - api: _beginthread\r\n          - api: _beginthreadex\r\n          - api: PsCreateSystemThread\r\n          - api: SHCreateThread\r\n          - api: SHCreateThreadWithHandle\r\n          - api: kernel32.CreateRemoteThread\r\n          - api: kernel32.CreateRemoteThreadEx\r\n          - api: RtlCreateUserThread\r\n          - api: ntdll.NtCreateThread\r\n          - api: ntdll.NtCreateThreadEx\r\n          - api: ntdll.ZwCreateThread\r\n          - api: ntdll.ZwCreateThreadEx\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - api: pthread_create\r\n      - and:\r\n        - api: System.Threading.Thread::Start\r\n        - optional:\r\n          - api: System.Threading.Thread::ctor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368724123
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "pthread_create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Threading.Thread::Start"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Thread::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateThread"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368724176
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthreadex"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsCreateSystemThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThreadWithHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlCreateUserThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delay execution": {
        "meta": {
          "name": "delay execution",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@ramen0x3f"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Dynamic Analysis Evasion",
                "Delayed Execution"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Dynamic Analysis Evasion",
              "method": "Delayed Execution",
              "id": "B0003.003"
            }
          ],
          "references": [
            "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x449770",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delay execution\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@ramen0x3f\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\r\n    references:\r\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x449770\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.Sleep\r\n          - api: kernel32.SleepEx\r\n          - api: kernel32.WaitForSingleObject\r\n          - api: kernel32.SignalObjectAndWait\r\n          - api: kernel32.WaitForSingleObjectEx\r\n          - api: kernel32.WaitForMultipleObjects\r\n          - api: kernel32.WaitForMultipleObjectsEx\r\n          - api: kernel32.RegisterWaitForSingleObject\r\n          - api: WaitOnAddress\r\n          - api: user32.MsgWaitForMultipleObjects\r\n          - api: user32.MsgWaitForMultipleObjectsEx\r\n          - api: NtDelayExecution\r\n          - api: KeWaitForSingleObject\r\n          - api: KeDelayExecutionThread\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - or:\r\n          - api: sleep\r\n          - api: usleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368724300
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368724324
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368727490
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368727498
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368742519
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368742524
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create process on Windows": {
        "meta": {
          "name": "create process on Windows",
          "namespace": "host-interaction/process/create",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Process"
              ],
              "objective": "Process",
              "behavior": "Create Process",
              "method": "",
              "id": "C0017"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x406DB0",
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create process on Windows\r\n    namespace: host-interaction/process/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Process [C0017]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x406DB0\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: kernel32.WinExec\r\n      - api: kernel32.CreateProcess\r\n      - api: shell32.ShellExecute\r\n      - api: shell32.ShellExecuteEx\r\n      - api: advapi32.CreateProcessAsUser\r\n      - api: advapi32.CreateProcessWithLogon\r\n      - api: advapi32.CreateProcessWithToken\r\n      - api: kernel32.CreateProcessInternal\r\n      - api: ntdll.NtCreateUserProcess\r\n      - api: ntdll.NtCreateProcess\r\n      - api: ntdll.NtCreateProcessEx\r\n      - api: ntdll.ZwCreateProcess\r\n      - api: ZwCreateProcessEx\r\n      - api: ntdll.ZwCreateUserProcess\r\n      - api: ntdll.RtlCreateUserProcess\r\n      - api: System.Diagnostics.Process::Start\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368727356
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WinExec"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368727470
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecute"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecuteEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessAsUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithLogon"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithToken"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessInternal"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Start"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain loop": {
        "meta": {
          "name": "contain loop",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain loop\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    examples:\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - characteristic: loop\r\n      - characteristic: tight loop\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368713964
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368713964
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368714728
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368714728
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368714884
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368714884
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368715896
                    },
                    {
                      "type": "absolute",
                      "value": 5368715073
                    },
                    {
                      "type": "absolute",
                      "value": 5368715882
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716584
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717064
                    },
                    {
                      "type": "absolute",
                      "value": 5368717252
                    },
                    {
                      "type": "absolute",
                      "value": 5368717046
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368717388
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717388
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717388
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718876
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368718876
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368719412
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719412
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368719980
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719980
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368720272
                    },
                    {
                      "type": "absolute",
                      "value": 5368720355
                    },
                    {
                      "type": "absolute",
                      "value": 5368720173
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368721644
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368722089
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368722736
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368723042
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368724288
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368724288
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368724468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368724468
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368725700
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368727267
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368728160
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368728363
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368729036
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368729281
                    },
                    {
                      "type": "absolute",
                      "value": 5368729314
                    },
                    {
                      "type": "absolute",
                      "value": 5368729398
                    },
                    {
                      "type": "absolute",
                      "value": 5368729415
                    },
                    {
                      "type": "absolute",
                      "value": 5368729294
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368729900
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368729959
                    },
                    {
                      "type": "absolute",
                      "value": 5368729943
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730236
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730331
                    },
                    {
                      "type": "absolute",
                      "value": 5368730420
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730496
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730496
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368731824
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368732241
                    },
                    {
                      "type": "absolute",
                      "value": 5368731954
                    },
                    {
                      "type": "absolute",
                      "value": 5368732260
                    },
                    {
                      "type": "absolute",
                      "value": 5368731973
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368732440
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368732440
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368732466
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734188
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734188
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734648
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734948
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734948
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368735428
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736651
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736932
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736932
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368737828
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737828
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737889
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368739628
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368739628
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368739730
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368739920
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368739946
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740016
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740016
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740336
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740336
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740776
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740776
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740808
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740928
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740928
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740952
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741096
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741096
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741224
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741224
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741636
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741636
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368742424
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368742424
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read .ini file": {
        "meta": {
          "name": "read .ini file",
          "namespace": "host-interaction/file-system/read",
          "authors": [
            "@_re_fox",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Read File"
              ],
              "objective": "File System",
              "behavior": "Read File",
              "method": "",
              "id": "C0051"
            }
          ],
          "references": [],
          "examples": [
            "1d8fd13c890060464019c0f07b928b1a:0x401070",
            "E6234FB98F17201C232F4502015B47B3:0x701312FA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read .ini file\r\n    namespace: host-interaction/file-system/read\r\n    authors:\r\n      - \"@_re_fox\"\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Read File [C0051]\r\n    examples:\r\n      - 1d8fd13c890060464019c0f07b928b1a:0x401070\r\n      - E6234FB98F17201C232F4502015B47B3:0x701312FA\r\n  features:\r\n    - and:\r\n      - or:\r\n        - api: GetPrivateProfileInt\r\n        - api: GetPrivateProfileString\r\n        - api: GetPrivateProfileStruct\r\n        - api: GetPrivateProfileSection\r\n        - api: GetPrivateProfileSectionNames\r\n      - optional:\r\n        - string: /\\.ini/i\r\n        - api: GetFullPathName\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368714884
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/\\.ini/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFullPathName"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileInt"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368715516
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileString"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368715583
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileStruct"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileSection"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetPrivateProfileSectionNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check if file exists": {
        "meta": {
          "name": "check if file exists",
          "namespace": "host-interaction/file-system/exists",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "31600AD0D1A7EA615690DF111AE36C73:0x401284"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check if file exists\r\n    namespace: host-interaction/file-system/exists\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401284\r\n  features:\r\n    - or:\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetFileAttributes\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 0xFFFFFFFF = INVALID_FILE_ATTRIBUTES\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetLastError\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 2 = ERROR_FILE_NOT_FOUND\r\n      - api: shlwapi.PathFileExists\r\n      - api: System.IO.File::Exists\r\n      - property/read: System.IO.FileSystemInfo::Exists\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368714884
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368716016
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368716028
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368716028
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368716028
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368715346
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368715358
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368715358
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368715358
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716011
                    },
                    {
                      "type": "absolute",
                      "value": 5368715341
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368722736
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368723095
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368723107
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368723107
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368723107
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368723092
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730044
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368730057
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368730069
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368730069
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368730069
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730044
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368734770
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368734782
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368734782
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368734782
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734691
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736027
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736039
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736039
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736039
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736303
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736315
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736315
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736315
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736022
                    },
                    {
                      "type": "absolute",
                      "value": 5368736278
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736883
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736895
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368736895
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368736895
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736865
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740336
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740456
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368740468
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368740468
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740468
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368740420
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/8280cd0747e443f98636b471ff1891de"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "shutdown system": {
        "meta": {
          "name": "shutdown system",
          "namespace": "host-interaction/os",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Impact",
                "System Shutdown/Reboot"
              ],
              "tactic": "Impact",
              "technique": "System Shutdown/Reboot",
              "subtechnique": "",
              "id": "T1529"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "39C05B15E9834AC93F206BC114D0A00C357C888DB567BA8F5345DA0529CBED41:0x10008D60"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: shutdown system\r\n    namespace: host-interaction/os\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Impact::System Shutdown/Reboot [T1529]\r\n    examples:\r\n      - 39C05B15E9834AC93F206BC114D0A00C357C888DB567BA8F5345DA0529CBED41:0x10008D60\r\n  features:\r\n    - or:\r\n      - api: user32.ExitWindowsEx\r\n      - api: user32.ExitWindows\r\n      - api: advapi32.InitiateSystemShutdownEx\r\n      - api: advapi32.InitiateSystemShutdown\r\n      - api: advapi32.InitiateShutdown\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716300
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindowsEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716529
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindows"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdownEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368720468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindowsEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368720748
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExitWindows"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdownEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateSystemShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "InitiateShutdown"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set registry value": {
        "meta": {
          "name": "set registry value",
          "namespace": "host-interaction/registry/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Set Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Set Registry Key",
              "id": "C0036.001"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x13147AF0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40415E",
            "98c37c3c23bbfb362dac7754c6ba48e75cf24d73bc963a4cdfca557b9e016909:0x40294D"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set registry value\r\n    namespace: host-interaction/registry/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Set Registry Key [C0036.001]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13147AF0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40415E\r\n      - 98c37c3c23bbfb362dac7754c6ba48e75cf24d73bc963a4cdfca557b9e016909:0x40294D\r\n  features:\r\n    - or:\r\n      - and:\r\n        - optional:\r\n          - match: create or open registry key\r\n        - or:\r\n          - api: advapi32.RegSetValue\r\n          - api: advapi32.RegSetValueEx\r\n          - api: advapi32.RegSetKeyValue\r\n          - api: ZwSetValueKey\r\n          - api: NtSetValueKey\r\n          - api: RtlWriteRegistryValue\r\n          - api: SHSetValue\r\n          - api: SHRegSetPath\r\n          - api: SHRegSetValue\r\n          - api: SHRegSetUSValue\r\n          - api: SHRegWriteUSValue\r\n          - api: Microsoft.Win32.RegistryKey::SetValue\r\n          - api: Microsoft.Win32.Registry::SetValue\r\n      - and:\r\n        - match: host-interaction/process/create\r\n        - string: \"/add/i\"\r\n        - or:\r\n          - string: \"/reg(|.exe)/i\"\r\n          - string: \"/hklm/i\"\r\n          - string: \"/HKEY_LOCAL_MACHINE/i\"\r\n          - string: \"/hkcu/i\"\r\n          - string: \"/HKEY_CURRENT_USER/i\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "host-interaction/process/create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/add/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/reg(|.exe)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hklm/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_LOCAL_MACHINE/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hkcu/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_CURRENT_USER/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "create or open registry key"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368716730
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenCurrentUser"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenUserClassesRoot"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransactedEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegOpenUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegCreateUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RtlCreateRegistryKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368716584
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValueEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717293
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetKeyValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlWriteRegistryValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetPath"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegWriteUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.RegistryKey::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.Registry::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "host-interaction/process/create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/add/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/reg(|.exe)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hklm/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_LOCAL_MACHINE/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/hkcu/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/HKEY_CURRENT_USER/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "create or open registry key"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368727059
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenCurrentUser"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegOpenUserClassesRoot"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RegCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwOpenKeyTransactedEx"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "ZwCreateKeyTransacted"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtOpenKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtCreateKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegOpenUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "SHRegCreateUSKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "RtlCreateRegistryKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368727026
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetValueEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368727312
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegSetKeyValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtSetValueKey"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlWriteRegistryValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetPath"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegSetUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHRegWriteUSValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.RegistryKey::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Microsoft.Win32.Registry::SetValue"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "persist via Run registry key": {
        "meta": {
          "name": "persist via Run registry key",
          "namespace": "persistence/registry/run",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Persistence",
                "Boot or Logon Autostart Execution",
                "Registry Run Keys / Startup Folder"
              ],
              "tactic": "Persistence",
              "technique": "Boot or Logon Autostart Execution",
              "subtechnique": "Registry Run Keys / Startup Folder",
              "id": "T1547.001"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Persistence",
                "Registry Run Keys / Startup Folder"
              ],
              "objective": "Persistence",
              "behavior": "Registry Run Keys / Startup Folder",
              "method": "",
              "id": "F0012"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 06-03.exe_:0x401130",
            "b87e9dd18a5533a09d3e48a7a1efbcf6:0x1400070E0",
            "9ff8e68343cc29c1036650fc153e69f7:0x470624"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: persist via Run registry key\r\n    namespace: persistence/registry/run\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Persistence::Boot or Logon Autostart Execution::Registry Run Keys / Startup Folder [T1547.001]\r\n    mbc:\r\n      - Persistence::Registry Run Keys / Startup Folder [F0012]\r\n    examples:\r\n      - Practical Malware Analysis Lab 06-03.exe_:0x401130\r\n      - b87e9dd18a5533a09d3e48a7a1efbcf6:0x1400070E0\r\n      - 9ff8e68343cc29c1036650fc153e69f7:0x470624\r\n  features:\r\n    - and:\r\n      - or:\r\n        - match: set registry value\r\n        - number: 0x80000001 = HKEY_CURRENT_USER\r\n        - number: 0x80000002 = HKEY_LOCAL_MACHINE\r\n      - or:\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i\r\n        - string: /Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i\r\n        - string: /Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i\r\n        - string: /System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368716730
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368716584
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717293
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716584
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716710
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716682
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 5368716682
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368716730
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368716584
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717293
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716584
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716710
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716682
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 5368716682
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368727059
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368727026
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368727312
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368725700
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727052
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727045
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 5368727045
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "host-interaction/process/create"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "regex",
                                      "regex": "/add/i"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/reg(|.exe)/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hklm/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_LOCAL_MACHINE/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/hkcu/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "regex",
                                          "regex": "/HKEY_CURRENT_USER/i"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "create or open registry key"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368727059
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenCurrentUser"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegOpenUserClassesRoot"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RegCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwOpenKeyTransactedEx"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "ZwCreateKeyTransacted"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtOpenKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "NtCreateKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegOpenUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "SHRegCreateUSKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "RtlCreateRegistryKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "api",
                                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368727026
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetValueEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368727312
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RegSetKeyValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtSetValueKey"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlWriteRegistryValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetPath"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegSetUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "SHRegWriteUSValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.RegistryKey::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "Microsoft.Win32.Registry::SetValue"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368725700
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727052
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727045
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 5368727045
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734188
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "set registry value"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483649,
                          "description": "HKEY_CURRENT_USER"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483650,
                          "description": "HKEY_LOCAL_MACHINE"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368734535
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368734528
                        }
                      ],
                      "captures": {
                        "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce": [
                          {
                            "type": "absolute",
                            "value": 5368734528
                          }
                        ]
                      }
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\User Shell Folders/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "regex",
                          "regex": "/System\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\Session Manager\\\\BootExecute/i"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry value": {
        "meta": {
          "name": "query or enumerate registry value",
          "namespace": "host-interaction/registry",
          "authors": [
            "william.ballenthin@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Value"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Value",
              "id": "C0036.006"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A",
            "Practical Malware Analysis Lab 03-02.dll_:0x100047AD"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry value\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Value [C0036.006]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x100047AD\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegGetValue\r\n        - api: advapi32.RegEnumValue\r\n        - api: advapi32.RegQueryValue\r\n        - api: advapi32.RegQueryValueEx\r\n        - api: advapi32.RegQueryMultipleValues\r\n        - api: ZwQueryValueKey\r\n        - api: ZwEnumerateValueKey\r\n        - api: NtQueryValueKey\r\n        - api: NtEnumerateValueKey\r\n        - api: RtlQueryRegistryValues\r\n        - api: SHGetValue\r\n        - api: SHEnumValue\r\n        - api: SHRegGetInt\r\n        - api: SHRegGetPath\r\n        - api: SHRegGetValue\r\n        - api: SHQueryValueEx\r\n        - api: SHRegGetUSValue\r\n        - api: SHOpenRegStream\r\n        - api: SHRegEnumUSValue\r\n        - api: SHOpenRegStream2\r\n        - api: SHRegQueryUSValue\r\n        - api: SHRegGetBoolUSValue\r\n        - api: SHRegGetValueFromHKCUHKLM\r\n        - api: SHRegGetBoolValueFromHKCUHKLM\r\n        - api: Microsoft.Win32.RegistryKey::GetValue\r\n        - api: Microsoft.Win32.RegistryKey::GetValueKind\r\n        - api: Microsoft.Win32.RegistryKey::GetValueNames\r\n        - api: Microsoft.Win32.Registry::GetValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368716730
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716584
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368716815
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718104
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368718189
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368718318
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368718154
                        },
                        {
                          "type": "absolute",
                          "value": 5368718283
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368718236
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718876
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368719140
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368719077
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368719195
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368727059
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727026
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368727128
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741636
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368741832
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368741799
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368741891
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get common file path": {
        "meta": {
          "name": "get common file path",
          "namespace": "host-interaction/file-system",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003415",
            "972B219F18379907A045431303F4DA7D:0x404887"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get common file path\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003415\r\n      - 972B219F18379907A045431303F4DA7D:0x404887\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetTempPath\r\n      - api: kernel32.GetTempFileName\r\n      - api: kernel32.GetSystemDirectory\r\n      - api: kernel32.GetWindowsDirectory\r\n      - api: kernel32.GetSystemWow64Directory\r\n      - api: GetAllUsersProfileDirectory\r\n      - api: GetAppContainerFolderPath\r\n      - api: GetCurrentDirectory\r\n      - api: GetDefaultUserProfileDirectory\r\n      - api: GetProfilesDirectory\r\n      - api: GetUserProfileDirectory\r\n      - api: SHGetFolderPathAndSubDir\r\n      - api: shell32.SHGetFolderPath\r\n      - api: shell32.SHGetFolderLocation\r\n      - api: shell32.SHGetKnownFolderPath\r\n      - api: shell32.SHGetSpecialFolderPath\r\n      - api: shell32.SHGetSpecialFolderLocation\r\n      - api: System.IO.Directory::GetCurrentDirectory\r\n      - api: System.Environment::GetFolderPath\r\n      - property/read: System.Environment::SystemDirectory\r\n      - property/read: System.Environment::CurrentDirectory\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368716584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368716876
                    },
                    {
                      "type": "absolute",
                      "value": 5368716997
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368717892
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717937
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718440
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368718484
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368718876
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719333
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719311
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368721644
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368721767
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368721917
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368725700
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368727181
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368728160
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368728347
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734811
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368735842
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736266
                    },
                    {
                      "type": "absolute",
                      "value": 5368736483
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736932
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737006
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate files on Windows": {
        "meta": {
          "name": "enumerate files on Windows",
          "namespace": "host-interaction/file-system/files/list",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [
            "https://github.com/hfiref0x/TDL/blob/cc4b46ae1c939b14a22a734a727b163f873a41b5/Source/Furutaka/sup.c#L315"
          ],
          "examples": [
            "Practical Malware Analysis Lab 01-01.exe_:0x4011E0",
            "Practical Malware Analysis Lab 20-02.exe_:0x401000",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x14000203C"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate files on Windows\r\n    namespace: host-interaction/file-system/files/list\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    references:\r\n      - https://github.com/hfiref0x/TDL/blob/cc4b46ae1c939b14a22a734a727b163f873a41b5/Source/Furutaka/sup.c#L315\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-01.exe_:0x4011E0\r\n      - Practical Malware Analysis Lab 20-02.exe_:0x401000\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x14000203C\r\n  features:\r\n    - or:\r\n      - and:\r\n        - or:\r\n          - api: kernel32.FindFirstFile\r\n          - api: kernel32.FindFirstFileEx\r\n          - api: kernel32.FindFirstFileTransacted\r\n          - api: kernel32.FindFirstFileName\r\n          - api: kernel32.FindFirstFileNameTransacted\r\n        - or:\r\n          - api: kernel32.FindNextFile\r\n          - api: kernel32.FindNextFileName\r\n        - optional:\r\n          - api: kernel32.FindClose\r\n          - match: contain loop\r\n      - and:\r\n        - or:\r\n          - basic block:\r\n            - and:\r\n              - number: 1 = DIRECTORY_QUERY\r\n              - api: ntdll.NtOpenDirectoryObject\r\n          - call:\r\n            - and:\r\n              - number: 1 = DIRECTORY_QUERY\r\n              - api: ntdll.NtOpenDirectoryObject\r\n        - api: ntdll.NtQueryDirectoryObject\r\n        - optional:\r\n          - api: RtlAllocateHeap\r\n          - match: contain loop\r\n          - characteristic: indirect call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368717388
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "enumerate files on Windows/554156a8e9434e79903aba7ec6b68954"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "enumerate files on Windows/74f5082d589f4491ac1ef932ae2b64af"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryDirectoryObject"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlAllocateHeap"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "contain loop"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368717388
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "tight loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "recursive call"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368717388
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717388
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "indirect call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717541
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileTransacted"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileName"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindFirstFileNameTransacted"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindNextFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717793
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindNextFileName"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FindClose"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717816
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "contain loop"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368717388
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "tight loop"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "recursive call"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368717388
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368717388
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate files recursively": {
        "meta": {
          "name": "enumerate files recursively",
          "namespace": "host-interaction/file-system/files/list",
          "authors": [
            "@_re_fox",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "5f66b82558ca92e54e77f216ef4c066c:0x40640E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate files recursively\r\n    namespace: host-interaction/file-system/files/list\r\n    authors:\r\n      - \"@_re_fox\"\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - 5f66b82558ca92e54e77f216ef4c066c:0x40640E\r\n  features:\r\n    - and:\r\n      - or:\r\n        - match: enumerate files on Windows\r\n        - match: enumerate files on Linux\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368717388
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717388
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "enumerate files on Windows"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "enumerate files on Windows/554156a8e9434e79903aba7ec6b68954"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "enumerate files on Windows/74f5082d589f4491ac1ef932ae2b64af"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "NtQueryDirectoryObject"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "RtlAllocateHeap"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "contain loop"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368717388
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "tight loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "recursive call"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368717388
                                                }
                                              ],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717388
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "characteristic",
                                          "characteristic": "indirect call"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717541
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileTransacted"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileName"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindFirstFileNameTransacted"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindNextFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717793
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindNextFileName"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "optional"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "FindClose"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717816
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "contain loop"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "statement",
                                            "statement": {
                                              "type": "or"
                                            }
                                          },
                                          "children": [
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368717388
                                                }
                                              ],
                                              "captures": {}
                                            },
                                            {
                                              "success": false,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "tight loop"
                                                }
                                              },
                                              "children": [],
                                              "locations": [],
                                              "captures": {}
                                            },
                                            {
                                              "success": true,
                                              "node": {
                                                "type": "feature",
                                                "feature": {
                                                  "type": "characteristic",
                                                  "characteristic": "recursive call"
                                                }
                                              },
                                              "children": [],
                                              "locations": [
                                                {
                                                  "type": "absolute",
                                                  "value": 5368717388
                                                }
                                              ],
                                              "captures": {}
                                            }
                                          ],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368717388
                                        }
                                      ],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368717388
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "enumerate files on Linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete directory": {
        "meta": {
          "name": "delete directory",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete Directory"
              ],
              "objective": "File System",
              "behavior": "Delete Directory",
              "method": "",
              "id": "C0048"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 05-01.dll_:0x10009236",
            "AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete directory\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Delete Directory [C0048]\r\n    examples:\r\n      - Practical Malware Analysis Lab 05-01.dll_:0x10009236\r\n      - AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0\r\n  features:\r\n    - or:\r\n      - api: RemoveDirectory\r\n      - api: RemoveDirectoryTransacted\r\n      - api: rmdir\r\n      - api: _rmdir\r\n      - api: _wrmdir\r\n      - api: System.IO.DirectoryInfo::Delete\r\n      - api: System.IO.Directory::Delete\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368717388
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717831
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734755
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734948
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368735343
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete file": {
        "meta": {
          "name": "delete file",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete File"
              ],
              "objective": "File System",
              "behavior": "Delete File",
              "method": "",
              "id": "C0047"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x100015F0",
            "31600AD0D1A7EA615690DF111AE36C73:0x401A15",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete file\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Delete File [C0047]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x100015F0\r\n      # MoveFileEx\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401A15\r\n      # NtDeleteFile\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04\r\n  features:\r\n    - or:\r\n      - api: kernel32.DeleteFile\r\n      - api: DeleteFileTransacted\r\n      - api: NtDeleteFile\r\n      - api: ZwDeleteFile\r\n      - api: remove\r\n      - api: _wremove\r\n      - api: System.IO.File::Delete\r\n      - api: System.IO.FileSystemInfo::Delete\r\n      # static\r\n      - basic block:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - basic block:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n      # dynamic\r\n      - call:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - call:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368717388
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368717773
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f4fa87a81ff948b6b7424fb97a624b29"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/337746f751e245169a350acfa146a464"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/65f579bfdd4a47e7a5ea779cc04617ba"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/00d17401a9bf41069452e7fd088763bb"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734188
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734272
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f4fa87a81ff948b6b7424fb97a624b29"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/337746f751e245169a350acfa146a464"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/65f579bfdd4a47e7a5ea779cc04617ba"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/00d17401a9bf41069452e7fd088763bb"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734835
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f4fa87a81ff948b6b7424fb97a624b29"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/337746f751e245169a350acfa146a464"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/65f579bfdd4a47e7a5ea779cc04617ba"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/00d17401a9bf41069452e7fd088763bb"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry key": {
        "meta": {
          "name": "query or enumerate registry key",
          "namespace": "host-interaction/registry",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Key",
              "id": "C0036.005"
            }
          ],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x404930",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry key\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Key [C0036.005]\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x404930\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegEnumKey\r\n        - api: advapi32.RegEnumKeyEx\r\n        - api: advapi32.RegQueryInfoKeyA\r\n        - api: ZwQueryKey\r\n        - api: ZwEnumerateKey\r\n        - api: NtQueryKey\r\n        - api: NtEnumerateKey\r\n        - api: RtlCheckRegistryKey\r\n        - api: SHEnumKeyEx\r\n        - api: SHQueryInfoKey\r\n        - api: SHRegEnumUSKey\r\n        - api: SHRegQueryInfoUSKey\r\n        - api: Microsoft.Win32.RegistryKey::GetSubKeyNames\r\n        - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368718104
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368718189
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368718318
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368718154
                        },
                        {
                          "type": "absolute",
                          "value": 5368718283
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryInfoKeyA"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368718390
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlCheckRegistryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryInfoKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryInfoUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetSubKeyNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query environment variable": {
        "meta": {
          "name": "query environment variable",
          "namespace": "host-interaction/environment-variable",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@_re_fox"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 14-02.exe_:0x401880",
            "0761142efbda6c4b1e801223de723578:0x65483490"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query environment variable\r\n    namespace: host-interaction/environment-variable\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@_re_fox\"\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - Practical Malware Analysis Lab 14-02.exe_:0x401880\r\n      - 0761142efbda6c4b1e801223de723578:0x65483490\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetEnvironmentVariable\r\n      - api: kernel32.GetEnvironmentStrings\r\n      - api: kernel32.ExpandEnvironmentStrings\r\n      - api: msvcr90.getenv\r\n      - api: msvcrt.getenv\r\n      - api: System.Environment::GetEnvironmentVariable\r\n      - api: System.Environment::GetEnvironmentVariables\r\n      - api: System.Environment::ExpandEnvironmentVariables\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368718876
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExpandEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368719234
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "getenv"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::ExpandEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get file version info": {
        "meta": {
          "name": "get file version info",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "mimikatz.exe_:0x45E308"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get file version info\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - mimikatz.exe_:0x45E308\r\n  features:\r\n    - and:\r\n      - or:\r\n        - api: version.GetFileVersionInfo\r\n        - api: version.GetFileVersionInfoEx\r\n        - api: System.Diagnostics.FileVersionInfo::GetVersionInfo\r\n      - optional:\r\n        - description: retrieve specified version information from the version-information resource\r\n        - api: version.VerQueryValue\r\n        - or:\r\n          - api: version.GetFileVersionInfoSize\r\n          - api: version.GetFileVersionInfoSizeEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368719412
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFileVersionInfo"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368719628
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetFileVersionInfoEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Diagnostics.FileVersionInfo::GetVersionInfo"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional",
                      "description": "retrieve specified version information from the version-information resource"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "VerQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368719666
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileVersionInfoSize"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368719532
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileVersionInfoSizeEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get OS version": {
        "meta": {
          "name": "get OS version",
          "authors": [
            "@mr-tz"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x401000",
            "5f66b82558ca92e54e77f216ef4c066c:0x44580A"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get OS version\r\n    authors:\r\n      - \"@mr-tz\"\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x401000\r\n      - 5f66b82558ca92e54e77f216ef4c066c:0x44580A\r\n  features:\r\n    - or:\r\n      - api: RtlGetVersion\r\n      - api: ntoskrnl.PsGetVersion\r\n      - api: GetVersion\r\n      - api: GetVersionEx\r\n      - api: VerifyVersionInfo\r\n      - api: VerSetConditionMask\r\n      - api: RtlGetNtVersionNumbers\r\n      - api: GetProductInfo\r\n      - and:\r\n        - match: PEB access\r\n        - or:\r\n          - and:\r\n            - arch: i386\r\n            - or:\r\n              - offset: 0xA4 = PEB->OSMajorVersion\r\n              - offset: 0xA8 = PEB->OSMinorVersion\r\n              - offset: 0xAC = PEB->OSBuildNumber\r\n          - and:\r\n            - arch: amd64\r\n            - or:\r\n              - offset: 0x118 = PEB->OSMajorVersion\r\n              - offset: 0x11C = PEB->OSMinorVersion\r\n              - offset: 0x120 = PEB->OSBuildNumber\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368720468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368720489
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368724468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368724543
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741636
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PsGetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersion"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVersionEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741721
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerifyVersionInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VerSetConditionMask"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlGetNtVersionNumbers"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProductInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 164,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 168,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 172,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 280,
                                      "description": "PEB->OSMajorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 284,
                                      "description": "PEB->OSMinorVersion"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "offset",
                                      "offset": 288,
                                      "description": "PEB->OSBuildNumber"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check OS version": {
        "meta": {
          "name": "check OS version",
          "namespace": "host-interaction/os/version",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "johnk3r"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x401000"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check OS version\r\n    namespace: host-interaction/os/version\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - johnk3r\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic features\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x401000\r\n  features:\r\n    - and:\r\n      - match: get OS version\r\n      - or:\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 5 = Windows 2000\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - or:\r\n                - number: 0\r\n                - number: 1 = Windows XP\r\n                - number: 2 = Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 6 = Windows Vista / Windows Server 2008\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - or:\r\n                - number: 0\r\n                - number: 1 = Windows Server 2008 R2 / Windows 7\r\n                - number: 2 = Windows Server 2012 / Windows 8\r\n                - number: 3 = Windows Server 2012 R2 / Windows 8.1\r\n        - and:\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 10 = Windows Server 2016 / Windows Server 2019 / Windows 10\r\n          - optional:\r\n            - instruction:\r\n              - mnemonic: cmp\r\n              - number: 0\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368720468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368720489
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368720468
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/1a88e55178e74ffdbbdc09d3a18d746e"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/0dddd97162e4472a97423cc70f90b682"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368720729
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 6,
                                      "description": "Windows Vista / Windows Server 2008"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368720729
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368720507
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 6,
                                      "description": "Windows Vista / Windows Server 2008"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368720507
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368720729
                            },
                            {
                              "type": "absolute",
                              "value": 5368720507
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/2bebef2df3b346729cbfd4f5ac896774"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/633459887bc5497e9730516e38b14fff"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/be8dcdc3d58c4933b5ab2f05dae244be"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368724468
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368724543
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368724468
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368724674
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 5,
                                      "description": "Windows 2000"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368724674
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368724674
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368724592
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 5368724592
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368725032
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows XP"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows XP 64-bit / Windows Server 2003 / Windows Server 2003 R2"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 5368725032
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368724592
                                },
                                {
                                  "type": "absolute",
                                  "value": 5368725032
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368725253
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 6,
                                      "description": "Windows Vista / Windows Server 2008"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368725253
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368725253
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368724592
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 5368724592
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "mnemonic",
                                          "mnemonic": "cmp"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368725032
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 0
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 1,
                                              "description": "Windows Server 2008 R2 / Windows 7"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 2,
                                              "description": "Windows Server 2012 / Windows 8"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 5368725032
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "number",
                                              "number": 3,
                                              "description": "Windows Server 2012 R2 / Windows 8.1"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368724592
                                },
                                {
                                  "type": "absolute",
                                  "value": 5368725032
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/633459887bc5497e9730516e38b14fff"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/be8dcdc3d58c4933b5ab2f05dae244be"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368741636
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get OS version"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsGetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersion"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetVersionEx"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368741721
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerifyVersionInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "VerSetConditionMask"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlGetNtVersionNumbers"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetProductInfo"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "PEB access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 164,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 168,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 172,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 280,
                                              "description": "PEB->OSMajorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 284,
                                              "description": "PEB->OSMinorVersion"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "offset",
                                              "offset": 288,
                                              "description": "PEB->OSBuildNumber"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368741636
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368741975
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 5,
                                      "description": "Windows 2000"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368741975
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368741975
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/0dddd97162e4472a97423cc70f90b682"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "check OS version/d6acfd45244c4307ba193e8e88dae7de"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/2bebef2df3b346729cbfd4f5ac896774"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368741765
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 10,
                                      "description": "Windows Server 2016 / Windows Server 2019 / Windows 10"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368741765
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368741765
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "optional"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "check OS version/be8dcdc3d58c4933b5ab2f05dae244be"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check mutex on Windows": {
        "meta": {
          "name": "check mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Check Mutex"
              ],
              "objective": "Process",
              "behavior": "Check Mutex",
              "method": "",
              "id": "C0043"
            }
          ],
          "references": [],
          "examples": [
            "1d8fd13c890060464019c0f07b928b1a:0x402eb0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Check Mutex [C0043]\r\n    examples:\r\n      - 1d8fd13c890060464019c0f07b928b1a:0x402eb0\r\n  features:\r\n    - or:\r\n      - api: ntdll.NtQueryMutant\r\n      - and:\r\n        - match: create or open mutex on Windows\r\n        - or:\r\n          - api: WaitForSingleObject\r\n          - basic block:\r\n            - and:\r\n              - api: GetLastError\r\n              - or:\r\n                - number: 2 = ERROR_FILE_NOT_FOUND\r\n                - number: 0xB7 = ERROR_ALREADY_EXISTS\r\n                - number: 5 = ERROR_ACCESS_DENIED\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368720820
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open mutex on Windows"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "OpenMutex"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutex"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368721158
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutexEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "format",
                                      "format": "dotnet"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::ctor"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::OpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::TryOpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368721158
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "GetLastError"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368721186
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 2,
                                          "description": "ERROR_FILE_NOT_FOUND"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 183,
                                          "description": "ERROR_ALREADY_EXISTS"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 5368721198
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 5,
                                          "description": "ERROR_ACCESS_DENIED"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368721186
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "extract resource via kernel32 functions": {
        "meta": {
          "name": "extract resource via kernel32 functions",
          "namespace": "executable/resource",
          "authors": [
            "william.ballenthin@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "BF88E1BD4A3BDE10B419A622278F1FF7:0x401000",
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: extract resource via kernel32 functions\r\n    namespace: executable/resource\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    examples:\r\n      - BF88E1BD4A3BDE10B419A622278F1FF7:0x401000\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\r\n  features:\r\n    - or:\r\n      - and:\r\n        - or:\r\n          - api: kernel32.LoadResource\r\n          - api: kernel32.LockResource\r\n          - api: LdrAccessResource\r\n        - optional:\r\n          - api: kernel32.GetModuleHandle\r\n          # may occur in parent function, see 0664B09A86EC2DF7DFE01A93E184A1FA23DF66EA82CAB39000944E418EC1F7B2\r\n          - or:\r\n            - api: kernel32.FindResource\r\n            - api: kernel32.FindResourceEx\r\n            - api: LdrFindResource_U\r\n            - api: LdrFindResourceEx_U\r\n          - api: kernel32.SizeofResource\r\n          - api: kernel32.FreeResource\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368720820
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368721413
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368721390
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368729680
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368729792
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368729807
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368729720
                                },
                                {
                                  "type": "absolute",
                                  "value": 5368729775
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368729737
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368729853
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368733072
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368733137
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368733152
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368733120
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368733537
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368739628
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368739683
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368739698
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368739820
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368739768
                            },
                            {
                              "type": "absolute",
                              "value": 5368739845
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740552
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740617
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LockResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LdrAccessResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetModuleHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResource"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368740594
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "FindResourceEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResource_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "LdrFindResourceEx_U"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SizeofResource"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "FreeResource"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740689
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set current directory": {
        "meta": {
          "name": "set current directory",
          "namespace": "host-interaction/file-system",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set current directory\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n  features:\r\n    - or:\r\n      - api: System.IO.Directory::SetCurrentDirectory\r\n      - api: kernel32.SetCurrentDirectory\r\n      - api: chdir\r\n      - api: fchdir\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368721644
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368722042
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734188
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734459
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736932
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737757
                    },
                    {
                      "type": "absolute",
                      "value": 5368737354
                    },
                    {
                      "type": "absolute",
                      "value": 5368737021
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create directory": {
        "meta": {
          "name": "create directory",
          "namespace": "host-interaction/file-system/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Create Directory"
              ],
              "objective": "File System",
              "behavior": "Create Directory",
              "method": "",
              "id": "C0046"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 17-02.dll_:0x10008f62",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create directory\r\n    namespace: host-interaction/file-system/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Create Directory [C0046]\r\n    examples:\r\n      - Practical Malware Analysis Lab 17-02.dll_:0x10008f62\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: kernel32.CreateDirectory\r\n      - api: kernel32.CreateDirectoryEx\r\n      - api: kernel32.CreateDirectoryTransacted\r\n      - api: NtCreateDirectoryObject\r\n      - api: ZwCreateDirectoryObject\r\n      - api: SHCreateDirectory\r\n      - api: SHCreateDirectoryEx\r\n      - api: mkdir\r\n      - api: _mkdir\r\n      - api: _wmkdir\r\n      - api: System.IO.Directory::CreateDirectory\r\n      - api: System.IO.DirectoryInfo::Create\r\n      - api: System.IO.DirectoryInfo::CreateSubdirectory\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368722736
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368723161
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368730496
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368730938
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734648
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368734907
                    },
                    {
                      "type": "absolute",
                      "value": 5368734852
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368734948
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368735279
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736327
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateDirectoryObject"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHCreateDirectoryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_mkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wmkdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::CreateDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::CreateSubdirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read file on Windows": {
        "meta": {
          "name": "read file on Windows",
          "namespace": "host-interaction/file-system/read",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Read File"
              ],
              "objective": "File System",
              "behavior": "Read File",
              "method": "",
              "id": "C0051"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read file on Windows\r\n    namespace: host-interaction/file-system/read\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Read File [C0051]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - and:\r\n            - number: 0x80000000 = GENERIC_READ\r\n            - match: create or open file\r\n        - or:\r\n          - api: kernel32.ReadFile\r\n          - api: ReadFileEx\r\n          - api: NtReadFile\r\n          - api: ZwReadFile\r\n          - api: LZRead\r\n          - api: _read\r\n          - api: fread\r\n      - api: System.IO.File::ReadAllBytes\r\n      - api: System.IO.File::ReadAllBytesAsync\r\n      - api: System.IO.File::ReadAllLines\r\n      - api: System.IO.File::ReadAllLinesAsync\r\n      - api: System.IO.File::ReadAllText\r\n      - api: System.IO.File::ReadAllTextAsync\r\n      - api: System.IO.File::ReadLines\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368731104
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2147483648,
                                  "description": "GENERIC_READ"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "create or open file"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368731217
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LZRead"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_read"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "write file on Windows": {
        "meta": {
          "name": "write file on Windows",
          "namespace": "host-interaction/file-system/write",
          "authors": [
            "william.ballenthin@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Writes File"
              ],
              "objective": "File System",
              "behavior": "Writes File",
              "method": "",
              "id": "C0052"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: write file on Windows\r\n    namespace: host-interaction/file-system/write\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Writes File [C0052]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - basic block:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n          - call:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n        - or:\r\n          - api: kernel32.WriteFile\r\n          - api: kernel32.WriteFileEx\r\n          - api: NtWriteFile\r\n          - api: ZwWriteFile\r\n          - api: _fwrite\r\n          - api: fwrite\r\n      - api: System.IO.File::WriteAllBytes\r\n      - api: System.IO.File::WriteAllBytesAsync\r\n      - api: System.IO.File::WriteAllLines\r\n      - api: System.IO.File::WriteAllLinesAsync\r\n      - api: System.IO.File::WriteAllText\r\n      - api: System.IO.File::WriteAllTextAsync\r\n      - api: System.IO.File::AppendAllLines\r\n      - api: System.IO.File::AppendAllLinesAsync\r\n      - api: System.IO.File::AppendAllText\r\n      - api: System.IO.File::AppendAllTextAsync\r\n      - api: System.IO.File::AppendText\r\n      - api: System.IO.FileInfo::AppendText\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368731280
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/353918f50d904ea7811b00cf4ca40b2e"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/7b0f3f4535284e2d916a37cc52878672"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368731364
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368740016
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 1073741824,
                                      "description": "GENERIC_WRITE"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368740182
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2,
                                      "description": "FILE_WRITE_DATA"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368740174
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "create or open file"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 5368740187
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen64"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fdopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "freopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "open"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "openat"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 5368740187
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740122
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/7b0f3f4535284e2d916a37cc52878672"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368740242
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete registry value": {
        "meta": {
          "name": "delete registry value",
          "namespace": "host-interaction/registry/delete",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Modify Registry"
              ],
              "tactic": "Defense Evasion",
              "technique": "Modify Registry",
              "subtechnique": "",
              "id": "T1112"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Delete Registry Value"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Delete Registry Value",
              "id": "C0036.007"
            }
          ],
          "references": [],
          "examples": [
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4041A0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete registry value\r\n    namespace: host-interaction/registry/delete\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Defense Evasion::Modify Registry [T1112]\r\n    mbc:\r\n      - Operating System::Registry::Delete Registry Value [C0036.007]\r\n    examples:\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4041A0\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegDeleteValue\r\n        - api: advapi32.RegDeleteKeyValue\r\n        - api: ZwDeleteValueKey\r\n        - api: NtDeleteValueKey\r\n        - api: RtlDeleteRegistryValue\r\n        - api: SHDeleteValue\r\n        - api: SHRegDeleteUSValue\r\n        - api: Microsoft.Win32.RegistryKey::DeleteValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368734188
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368734542
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368734509
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegDeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368734570
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegDeleteKeyValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwDeleteValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtDeleteValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlDeleteRegistryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHDeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegDeleteUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::DeleteValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get system information on Windows": {
        "meta": {
          "name": "get system information on Windows",
          "namespace": "host-interaction/os/info",
          "authors": [
            "moritz.raabe@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get system information on Windows\r\n    namespace: host-interaction/os/info\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - joakim@intezer.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    examples:\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetSystemInfo\r\n        - api: kernel32.GetNativeSystemInfo\r\n        - api: NtQuerySystemInformation\r\n        - api: NtQuerySystemInformationEx\r\n        - api: ntdll.RtlGetNativeSystemInformation\r\n        - api: ZwQuerySystemInformation\r\n        - api: ZwQuerySystemInformationEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368734948
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368735100
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetNativeSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlGetNativeSystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get disk information": {
        "meta": {
          "name": "get disk information",
          "namespace": "host-interaction/hardware/storage",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4052A0",
            "972B219F18379907A045431303F4DA7D:0x41064E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get disk information\r\n    namespace: host-interaction/hardware/storage\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4052A0\r\n      - 972B219F18379907A045431303F4DA7D:0x41064E\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetDriveType\r\n      - api: kernel32.GetLogicalDrives\r\n      - api: kernel32.GetVolumeInformation\r\n      - api: kernel32.GetVolumeNameForVolumeMountPoint\r\n      - api: kernel32.GetVolumePathNamesForVolumeName\r\n      - api: kernel32.GetLogicalDriveStrings\r\n      - api: kernel32.QueryDosDevice\r\n      - property/read: System.IO.DriveInfo::VolumeLabel\r\n      - property/read: System.IO.DriveInfo::DriveType\r\n      - property/read: System.IO.DriveInfo::DriveFormat\r\n      - property/read: System.IO.DriveInfo::Name\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDriveType"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368735998
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDrives"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeInformation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeNameForVolumeMountPoint"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumePathNamesForVolumeName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDriveStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "QueryDosDevice"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::VolumeLabel"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveFormat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::Name"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736932
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDrives"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeInformation"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737238
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeNameForVolumeMountPoint"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumePathNamesForVolumeName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDriveStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "QueryDosDevice"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::VolumeLabel"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveFormat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::Name"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get disk size": {
        "meta": {
          "name": "get disk size",
          "namespace": "host-interaction/hardware/storage",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x4343D0",
            "al-khaser_x86.exe_:0x434010"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get disk size\r\n    namespace: host-interaction/hardware/storage\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L347\r\n    examples:\r\n      - al-khaser_x86.exe_:0x4343D0\r\n      - al-khaser_x86.exe_:0x434010\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetDiskFreeSpace\r\n      - api: kernel32.GetDiskFreeSpaceEx\r\n      - property/read: System.IO.DriveInfo::TotalSize\r\n      - property/read: System.IO.DriveInfo::TotalFreeSpace\r\n      - property/read: System.IO.DriveInfo::AvailableFreeSpace\r\n      - basic block:\r\n        - and:\r\n          - match: interact with driver via IOCTL\r\n          - number: 0x7405C = IOCTL_DISK_GET_LENGTH_INFO\r\n      - call:\r\n        - and:\r\n          - match: interact with driver via IOCTL\r\n          - number: 0x7405C = IOCTL_DISK_GET_LENGTH_INFO\r\n      - and:\r\n        - or:\r\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i\r\n          - string: /SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i\r\n        - string: \"Size\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368735428
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368736115
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpaceEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalSize"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::AvailableFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/cca1c27441764f87a8f40a4c2cd7e5f8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/948b3c16229c465dad139c89d1fc7b32"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Size"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368736932
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368737132
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDiskFreeSpaceEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalSize"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::TotalFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::AvailableFreeSpace"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/cca1c27441764f87a8f40a4c2cd7e5f8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get disk size/948b3c16229c465dad139c89d1fc7b32"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_LogicalDisk/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "regex",
                              "regex": "/SELECT\\s+\\*\\s+FROM\\s+Win32_DiskDrive\\s+WHERE\\s+\\(SerialNumber\\s+IS\\s+NOT\\s+NULL\\)\\s+AND\\s+\\(MediaType\\s+LIKE\\s+\\'Fixed\\s+hard\\s+disk\\%\\'\\)/i"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Size"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "parse PE header": {
        "meta": {
          "name": "parse PE header",
          "namespace": "load-code/pe",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403DD0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: parse PE header\r\n    namespace: load-code/pe\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic, operand[1].offset features\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - and:\r\n        - mnemonic: cmp\r\n        - or:\r\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\r\n          - and:\r\n            - number: 0x50\r\n            - number: 0x45\r\n        - or:\r\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\r\n          - and:\r\n            - number: 0x4D\r\n            - number: 0x5A\r\n        - optional:\r\n          - and:\r\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\r\n          - basic block:\r\n            - and:\r\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n              - 3 or more:\r\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\r\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\r\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\r\n                - or:\r\n                  - and:\r\n                    - arch: i386\r\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                  - and:\r\n                    - arch: amd64\r\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368742096
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368742176
                        },
                        {
                          "type": "absolute",
                          "value": 5368742148
                        },
                        {
                          "type": "absolute",
                          "value": 5368742278
                        },
                        {
                          "type": "absolute",
                          "value": 5368742186
                        },
                        {
                          "type": "absolute",
                          "value": 5368742159
                        },
                        {
                          "type": "absolute",
                          "value": 5368742192
                        },
                        {
                          "type": "absolute",
                          "value": 5368742135
                        },
                        {
                          "type": "absolute",
                          "value": 5368742105
                        },
                        {
                          "type": "absolute",
                          "value": 5368742167
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368742135
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368742100
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/bd5bbce2b5884854afeafc6c86b2de37"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 5368743868
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 5368743889
                        },
                        {
                          "type": "absolute",
                          "value": 5368743894
                        },
                        {
                          "type": "absolute",
                          "value": 5368743878
                        },
                        {
                          "type": "absolute",
                          "value": 5368743899
                        },
                        {
                          "type": "absolute",
                          "value": 5368743919
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368743919
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 5368743884
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 5368743908
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/bd5bbce2b5884854afeafc6c86b2de37"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "terminate process": {
        "meta": {
          "name": "terminate process",
          "namespace": "host-interaction/process/terminate",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Terminate Process"
              ],
              "objective": "Process",
              "behavior": "Terminate Process",
              "method": "",
              "id": "C0018"
            }
          ],
          "references": [],
          "examples": [
            "C91887D861D9BD4A5872249B641BC9F9:0x401A77",
            "9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: terminate process\r\n    namespace: host-interaction/process/terminate\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Terminate Process [C0018]\r\n    examples:\r\n      - C91887D861D9BD4A5872249B641BC9F9:0x401A77\r\n      - 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307\r\n  features:\r\n    - or:\r\n      - api: System.Diagnostics.Process::Kill\r\n      - api: System.Diagnostics.Process::WaitForExit\r\n      - api: System.Diagnostics.Process::WaitForExitAsync\r\n      - api: System.Environment::Exit\r\n      - api: System.Windows.Forms.Application::Exit\r\n      - api: exit\r\n      - api: Exit\r\n      - and:\r\n        - os: linux\r\n        - api: exit_group\r\n      - and:\r\n        - optional:\r\n          - match: open process\r\n        - or:\r\n          - api: kernel32.TerminateProcess\r\n          - api: ntdll.NtTerminateProcess\r\n          - api: kernel32.ExitProcess\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 5368742424
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Kill"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExitAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Windows.Forms.Application::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "exit"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 5368742857
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "exit_group"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "open process"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "TerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtTerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ExitProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "packaged as an IExpress self-extracting archive": {
        "meta": {
          "name": "packaged as an IExpress self-extracting archive",
          "namespace": "executable/installer/iexpress",
          "authors": [
            "awillia2@cisco.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [
            "https://en.wikipedia.org/wiki/IExpress"
          ],
          "examples": [
            "ac742739cae0d411dfcb78ae99a7baee:0xA4C0",
            "ac742739cae0d411dfcb78ae99a7baee:0xA488",
            "ac742739cae0d411dfcb78ae99a7baee:0x34BA2"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: packaged as an IExpress self-extracting archive\r\n    namespace: executable/installer/iexpress\r\n    authors:\r\n      - awillia2@cisco.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    references:\r\n      - https://en.wikipedia.org/wiki/IExpress\r\n    examples:\r\n      - ac742739cae0d411dfcb78ae99a7baee:0xA4C0 # wextract_cleanup%d\r\n      - ac742739cae0d411dfcb78ae99a7baee:0xA488 # Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n      - ac742739cae0d411dfcb78ae99a7baee:0x34BA2 # '  <description>IExpress extraction tool</description>'\r\n  features:\r\n    - or:\r\n      - and:\r\n        - string: \"wextract_cleanup%d\"\r\n        - string: \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\"\r\n      - string: \"  <description>IExpress extraction tool</description>\"\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "string",
                      "string": "  <description>IExpress extraction tool</description>"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 1275674
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "wextract_cleanup%d"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "file",
                          "value": 42176
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "string",
                          "string": "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "file",
                          "value": 42120
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "(internal) installer file limitation": {
        "meta": {
          "name": "(internal) installer file limitation",
          "namespace": "internal/limitation/static",
          "authors": [
            "william.ballenthin@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "70FD3347786ED7A4A43910E6778EF296"
          ],
          "description": "This sample appears to be an installer.\n\ncapa cannot handle installers well. This means the results may be misleading or incomplete.\nYou should try to understand the install mechanism and analyze created files with capa.\n",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: (internal) installer file limitation\r\n    # capa will likely detect installer specific functionality.\r\n    # this is probably not what the user wants.\r\n    namespace: internal/limitation/static\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n    description: |\r\n      This sample appears to be an installer.\r\n\r\n      capa cannot handle installers well. This means the results may be misleading or incomplete.\r\n      You should try to understand the install mechanism and analyze created files with capa.\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    examples:\r\n      - 70FD3347786ED7A4A43910E6778EF296\r\n  features:\r\n    - or:\r\n      - match: executable/installer\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "executable/installer"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "string",
                              "string": "  <description>IExpress extraction tool</description>"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "file",
                              "value": 1275674
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "string",
                                  "string": "wextract_cleanup%d"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "file",
                                  "value": 42176
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "string",
                                  "string": "Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "file",
                                  "value": 42120
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "reference analysis tools strings": {
        "meta": {
          "name": "reference analysis tools strings",
          "namespace": "anti-analysis",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "Analysis Tool Discovery",
                "Process detection"
              ],
              "objective": "Discovery",
              "behavior": "Analysis Tool Discovery",
              "method": "Process detection",
              "id": "B0013.001"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiAnalysis/process.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: reference analysis tools strings\r\n    namespace: anti-analysis\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    mbc:\r\n      - Discovery::Analysis Tool Discovery::Process detection [B0013.001]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiAnalysis/process.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_\r\n  features:\r\n    - or:\r\n      - string: /ollydbg(\\.exe)?/i\r\n      - string: /ProcessHacker(\\.exe)?/i\r\n      - string: /tcpview(\\.exe)?/i\r\n      - string: /autoruns(\\.exe)?/i\r\n      - string: /autorunsc(\\.exe)?/i\r\n      - string: /filemon(\\.exe)?/i\r\n      - string: /procmon(\\.exe)?/i\r\n      - string: /regmon(\\.exe)?/i\r\n      - string: /procexp(\\.exe)?/i\r\n      - string: /(?<!\\w)ida[gqtuw]?(\\.exe)?$/i\r\n      - string: /ida[gqtuw]?64(\\.exe)?$/i\r\n      - string: /ImmunityDebugger(\\.exe)?/i\r\n      - string: /Wireshark(\\.exe)?/i\r\n      - string: /dumpcap(\\.exe)?/i\r\n      - string: /HookExplorer(\\.exe)?/i\r\n      - string: /ImportREC(\\.exe)?/i\r\n      - string: /PETools(\\.exe)?/i\r\n      - string: /LordPE(\\.exe)?/i\r\n      - string: /SysInspector(\\.exe)?/i\r\n      - string: /proc_analyzer(\\.exe)?/i\r\n      - string: /sysAnalyzer(\\.exe)?/i\r\n      - string: /sniff_hit(\\.exe)?/i\r\n      - string: /windbg(\\.exe)?/i\r\n      - string: /joeboxcontrol(\\.exe)?/i\r\n      - string: /joeboxserver(\\.exe)?/i\r\n      - string: /ResourceHacker(\\.exe)?/i\r\n      - string: /x32dbg(\\.exe)?/i\r\n      - string: /x64dbg(\\.exe)?/i\r\n      - string: /Fiddler(\\.exe)?/i\r\n      - string: /httpdebugger(\\.exe)?/i\r\n      - string: /fakenet(\\.exe)?/i\r\n      - string: /netmon(\\.exe)?/i\r\n      - string: /WPE PRO(\\.exe)?/i\r\n      - string: /decompile(\\.exe)?/i\r\n      - string: /scylla/i\r\n      - string: /megadumper/i\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ollydbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ProcessHacker(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/tcpview(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/autoruns(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/autorunsc(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/filemon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/procmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/regmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/procexp(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/(?<!\\w)ida[gqtuw]?(\\.exe)?$/i"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 104145
                    },
                    {
                      "type": "file",
                      "value": 95941
                    },
                    {
                      "type": "file",
                      "value": 112349
                    },
                    {
                      "type": "file",
                      "value": 87737
                    },
                    {
                      "type": "file",
                      "value": 79533
                    }
                  ],
                  "captures": {
                    "IDAT": [
                      {
                        "type": "file",
                        "value": 104145
                      },
                      {
                        "type": "file",
                        "value": 95941
                      },
                      {
                        "type": "file",
                        "value": 112349
                      },
                      {
                        "type": "file",
                        "value": 87737
                      },
                      {
                        "type": "file",
                        "value": 79533
                      }
                    ]
                  }
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ida[gqtuw]?64(\\.exe)?$/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ImmunityDebugger(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Wireshark(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/dumpcap(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HookExplorer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ImportREC(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/PETools(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/LordPE(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/SysInspector(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/proc_analyzer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sysAnalyzer(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sniff_hit(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/windbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/joeboxcontrol(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/joeboxserver(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/ResourceHacker(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/x32dbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/x64dbg(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Fiddler(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/httpdebugger(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/fakenet(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/netmon(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/WPE PRO(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/decompile(\\.exe)?/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/scylla/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/megadumper/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      }
    }
  },
  "MITRE ATT&CK": [
    "T1012",
    "T1082",
    "T1083",
    "T1112",
    "T1129",
    "T1134",
    "T1222",
    "T1529",
    "T1547.001"
  ],
  "CWE": [
    [
      "external control of system or configuration setting",
      "CWE-15",
      "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation Architecture and Design:DESCRIPTION:Because setting manipulation covers a diverse set of functions, any attempt at illustrating it will inevitably be incomplete. Rather than searching for a tight-knit relationship between the functions addressed in the setting manipulation category, take a step back and consider the sorts of system values that an attacker should not be allowed to control.::PHASE:Implementation Architecture and Design:DESCRIPTION:In general, do not allow user-provided or otherwise untrusted data to control sensitive values. The leverage that an attacker gains by controlling these values is not always immediately obvious, but do not underestimate the creativity of the attacker.::"
    ],
    [
      "path equivalence: windows 8.3 filename",
      "CWE-58",
      "::PHASE:System Configuration:DESCRIPTION:Disable Windows from supporting 8.3 filenames by editing the Windows registry. Preventing 8.3 filenames will not remove previously generated 8.3 filenames.::"
    ],
    [
      "external control of file name or path",
      "CWE-73",
      "::PHASE:Architecture and Design:DESCRIPTION:When the set of filenames is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames, and reject all other inputs. For example, ID 1 could map to inbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI AccessReferenceMap provide this capability.::PHASE:Architecture and Design Operation:DESCRIPTION:Run your code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict all access to files within a particular directory. Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single . character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as / to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering / is insufficient protection if the filesystem also supports the use of as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if ../ sequences are removed from the .../...// string in a sequential fashion, two instances of ../ would be removed from the original string, but the remaining characters would still form the ../ string.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes .. sequences and symbolic links (CWE-23, CWE-59).::PHASE:Installation Operation:DESCRIPTION:Use OS-level permissions and run as a low-privileged user to limit the scope of any successful attack.::PHASE:Operation Implementation:DESCRIPTION:If you are using PHP, configure your application so that it does not use register_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.::PHASE:Testing:DESCRIPTION:Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.::"
    ],
    [
      "direct use of unsafe jni",
      "CWE-111",
      "::PHASE:Implementation:DESCRIPTION:Implement error handling around the JNI call.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Do not use JNI calls if you don't trust the native library.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Be reluctant to use JNI calls. A Java API equivalent may exist.::"
    ],
    [
      "process control",
      "CWE-114",
      "::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Libraries that are loaded should be well understood and come from a trusted source. The application can execute code contained in the native libraries, which often contain calls that are susceptible to other security problems, such as buffer overflows or command injection. All native libraries should be validated to determine if the application requires the use of the library. It is very difficult to determine what these native libraries actually do, and the potential for malicious code is high. In addition, the potential for an inadvertent mistake in these native libraries is also high, as many are written in C or C++ and may be susceptible to buffer overflow or race condition problems. To help prevent buffer overflow attacks, validate all input to native calls for content and length. If the native library does not come from a trusted source, review the source code of the library. The library should be built from the reviewed source before using it.::"
    ],
    [
      "incorrect calculation of buffer size",
      "CWE-131",
      "::PHASE:Implementation:DESCRIPTION:When allocating a buffer for the purpose of transforming, converting, or encoding an input, allocate enough memory to handle the largest possible encoding. For example, in a routine that converts & characters to &amp; for HTML entity encoding, the output buffer needs to be at least 5 times as large as the input buffer.::PHASE:Implementation:DESCRIPTION:Understand the programming language's underlying representation and how it interacts with numeric calculation (CWE-681). Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conversion and casting between types, not-a-number calculations, and how the language handles numbers that are too large or too small for its underlying representation. [REF-7] Also be careful to account for 32-bit, 64-bit, and other potential differences that may affect the numeric representation.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Perform input validation on any numeric input by ensuring that it is within the expected range. Enforce that the input meets both the minimum and maximum requirements for the expected range.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:DESCRIPTION:When processing structured incoming data containing a size field followed by raw data, identify and resolve any inconsistencies between the size field and the actual size of the data (CWE-130).::PHASE:Implementation:DESCRIPTION:When allocating memory that uses sentinels to mark the end of a data structure - such as NUL bytes in strings - make sure you also include the sentinel in your calculation of the total amount of memory that must be allocated.::PHASE:Implementation:DESCRIPTION:Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:Use sizeof() on the appropriate data type to avoid CWE-467.::PHASE:Implementation:DESCRIPTION:Use the appropriate type for the desired action. For example, in C/C++, only use unsigned types for values that could never be negative, such as height, width, or other numbers related to quantity. This will simplify validation and will reduce surprises related to unexpected casting.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Use libraries or frameworks that make it easier to handle numbers without unexpected consequences, or buffer allocation routines that automatically track buffer size. Examples include safe integer handling packages such as SafeInt (C++) or IntegerLib (C or C++). [REF-106]::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:STRATEGY:Compilation or Build Hardening:DESCRIPTION:Examine compiler warnings closely and eliminate problems with potential security implications, such as signed / unsigned mismatch in memory operations, or use of uninitialized variables. Even if the weakness is rarely exploitable, a single failure may lead to the compromise of the entire system.::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design Operation:STRATEGY:Sandbox or Jail:DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.:EFFECTIVENESS:Limited::"
    ],
    [
      "use of externally-controlled format string",
      "CWE-134",
      "::PHASE:Requirements:DESCRIPTION:Choose a language that is not subject to this flaw.::PHASE:Implementation:DESCRIPTION:Ensure that all format string functions are passed a static string which cannot be controlled by the user, and that the proper number of arguments are always sent to that function as well. If at all possible, use functions that do not support the %n operator in format strings. [REF-116] [REF-117]::PHASE:Build and Compilation:DESCRIPTION:Run compilers and linkers with high warning levels, since they may detect incorrect usage.::"
    ],
    [
      "integer coercion error",
      "CWE-192",
      "::PHASE:Requirements:DESCRIPTION:A language which throws exceptions on ambiguous data casts might be chosen.::PHASE:Architecture and Design:DESCRIPTION:Design objects and program flow such that multiple or complex casts are unnecessary::PHASE:Implementation:DESCRIPTION:Ensure that any data type casting that you must used is entirely understood in order to reduce the plausibility of error in use.::"
    ],
    [
      "signed to unsigned conversion error",
      "CWE-195",
      ""
    ],
    [
      "unsigned to signed conversion error",
      "CWE-196",
      "::PHASE:Requirements:DESCRIPTION:Choose a language which is not subject to these casting flaws.::PHASE:Architecture and Design:DESCRIPTION:Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which will be used as a size are checked previous to use as a size. If the language permits, throw exceptions rather than using in-band errors.::PHASE:Implementation:DESCRIPTION:Error check the return values of all functions. Be aware of implicit casts made, and use unsigned variables for sizes if at all possible.::"
    ],
    [
      "use of incorrect byte ordering",
      "CWE-198",
      ""
    ],
    [
      "generation of error message containing sensitive information",
      "CWE-209",
      "::PHASE:Implementation:DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success. If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.::PHASE:Implementation:DESCRIPTION:Handle exceptions internally and do not display errors containing potentially sensitive information to a user.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation Build and Compilation:STRATEGY:Compilation or Build Hardening:DESCRIPTION:Debugging information should not make its way into a production release.::PHASE:Implementation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Debugging information should not make its way into a production release.::PHASE:System Configuration:DESCRIPTION:Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.::PHASE:System Configuration:DESCRIPTION:Create default error pages or messages that do not leak any information.::"
    ],
    [
      "sensitive information in resource not removed before reuse",
      "CWE-226",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:During critical state transitions, information not needed in the next state should be removed or overwritten with fixed patterns (such as all 0's) or random data, before the transition to the next state.:EFFECTIVENESS:High::PHASE:Architecture and Design Implementation:DESCRIPTION:When releasing, de-allocating, or deleting a resource, overwrite its data and relevant metadata with fixed patterns or random data. Be cautious about complex resource types whose underlying representation might be non-contiguous or change at a low level, such as how a file might be split into different chunks on a file system, even though logical file positions are contiguous at the application layer. Such resource types might require invocation of special modes or APIs to tell the underlying operating system to perform the necessary clearing, such as SDelete (Secure Delete) on Windows, although the appropriate functionality might not be available at the application layer.:EFFECTIVENESS:High::"
    ],
    [
      "failure to handle missing parameter",
      "CWE-234",
      "::PHASE:Build and Compilation:DESCRIPTION:This issue can be simply combated with the use of proper build process.::PHASE:Implementation:DESCRIPTION:Forward declare all functions. This is the recommended solution. Properly forward declaration of all used functions will result in a compiler error if too few arguments are sent to a function.::"
    ],
    [
      "improper handling of extra parameters",
      "CWE-235",
      ""
    ],
    [
      "failure to handle incomplete element",
      "CWE-239",
      ""
    ],
    [
      "use of inherently dangerous function",
      "CWE-242",
      "::PHASE:Implementation Requirements:DESCRIPTION:Ban the use of dangerous functions. Use their safe equivalent.::PHASE:Testing:DESCRIPTION:Use grep or static analysis tools to spot usage of dangerous functions.::"
    ],
    [
      "unchecked return value",
      "CWE-252",
      "::PHASE:Implementation:DESCRIPTION:Check the results of all functions that return a value and verify that the value is expected.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Ensure that you account for all possible return values from the function.::PHASE:Implementation:DESCRIPTION:When designing a function, make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "incorrect check of function return value",
      "CWE-253",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Use a language or compiler that uses exceptions and requires the catching of those exceptions.::PHASE:Implementation:DESCRIPTION:Properly check all functions which return a value.::PHASE:Implementation:DESCRIPTION:When designing any function make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "privilege context switching error",
      "CWE-270",
      "::PHASE:Architecture and Design Operation:DESCRIPTION:Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.::"
    ],
    [
      "improper check for dropped privileges",
      "CWE-273",
      "::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Implementation:DESCRIPTION:Check the results of all functions that return a value and verify that the value is expected.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:In Windows, make sure that the process token has the SeImpersonatePrivilege(Microsoft Server 2003). Code that relies on impersonation for security must ensure that the impersonation succeeded, i.e., that a proper privilege demotion happened.::"
    ],
    [
      "improper access control",
      "CWE-284",
      "::PHASE:Architecture and Design Operation:DESCRIPTION:Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::"
    ],
    [
      "reliance on ip address for authentication",
      "CWE-291",
      "::PHASE:Architecture and Design:DESCRIPTION:Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate.::"
    ],
    [
      "use of password system for primary authentication",
      "CWE-309",
      "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::"
    ],
    [
      "cleartext storage in a file or on disk",
      "CWE-313",
      ""
    ],
    [
      "cleartext storage of sensitive information in a cookie",
      "CWE-315",
      ""
    ],
    [
      "cleartext storage of sensitive information in memory",
      "CWE-316",
      ""
    ],
    [
      "use of hard-coded cryptographic key",
      "CWE-321",
      "::PHASE:Architecture and Design:DESCRIPTION:Prevention schemes mirror that of hard-coded password storage.::"
    ],
    [
      "use of a key past its expiration date",
      "CWE-324",
      "::PHASE:Architecture and Design:DESCRIPTION:Adequate consideration should be put in to the user interface in order to notify users previous to the key's expiration, to explain the importance of new key generation and to walk users through the process as painlessly as possible.::"
    ],
    [
      "use of invariant value in dynamically changing context",
      "CWE-344",
      ""
    ],
    [
      "use of less trusted source",
      "CWE-348",
      ""
    ],
    [
      "missing support for integrity check",
      "CWE-353",
      "::PHASE:Architecture and Design:DESCRIPTION:Add an appropriately sized checksum to the protocol, ensuring that data received may be simply validated before it is parsed and used.::PHASE:Implementation:DESCRIPTION:Ensure that the checksums present in the protocol design are properly implemented and added to each message before it is sent.::"
    ],
    [
      "product ui does not warn user of unsafe actions",
      "CWE-356",
      ""
    ],
    [
      "exposure of private personal information to an unauthorized actor",
      "CWE-359",
      "::PHASE:Requirements:DESCRIPTION:Identify and consult all relevant regulations for personal privacy. An organization may be required to comply with certain federal and state regulations, depending on its location, the type of business it conducts, and the nature of any private data it handles. Regulations may include Safe Harbor Privacy Framework [REF-340], Gramm-Leach Bliley Act (GLBA) [REF-341], Health Insurance Portability and Accountability Act (HIPAA) [REF-342], General Data Protection Regulation (GDPR) [REF-1047], California Consumer Privacy Act (CCPA) [REF-1048], and others.::PHASE:Architecture and Design:DESCRIPTION:Carefully evaluate how secure design may interfere with privacy, and vice versa. Security and privacy concerns often seem to compete with each other. From a security perspective, all important operations should be recorded so that any anomalous activity can later be identified. However, when private data is involved, this practice can in fact create risk. Although there are many ways in which private data can be handled unsafely, a common risk stems from misplaced trust. Programmers often trust the operating environment in which a program runs, and therefore believe that it is acceptable store private information on the file system, in the registry, or in other locally-controlled resources. However, even if access to certain resources is restricted, this does not guarantee that the individuals who do have access can be trusted.::"
    ],
    [
      "trust of system event data",
      "CWE-360",
      "::PHASE:Architecture and Design:DESCRIPTION:Never trust or rely any of the information in an Event for security.::"
    ],
    [
      "creation of temporary file in directory with insecure permissions",
      "CWE-379",
      "::PHASE:Requirements:DESCRIPTION:Many contemporary languages have functions which properly handle this condition. Older C temp file functions are especially susceptible.::PHASE:Implementation:DESCRIPTION:Try to store sensitive tempfiles in a directory which is not world readable -- i.e., per-user directories.::PHASE:Implementation:DESCRIPTION:Avoid using vulnerable temp file functions.::"
    ],
    [
      "symbolic name not mapping to correct object",
      "CWE-386",
      ""
    ],
    [
      "missing report of error condition",
      "CWE-392",
      ""
    ],
    [
      "return of wrong status code",
      "CWE-393",
      ""
    ],
    [
      "unexpected status code or return value",
      "CWE-394",
      ""
    ],
    [
      "use of nullpointerexception catch to detect null pointer dereference",
      "CWE-395",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not extensively rely on catching exceptions (especially for validating user input) to handle errors. Handling exceptions can decrease the performance of an application.::"
    ],
    [
      "improper resource shutdown or release",
      "CWE-404",
      "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automatic garbage collection that releases memory for objects that have been deallocated.::PHASE:Implementation:DESCRIPTION:It is good practice to be responsible for freeing all resources you allocate and to be consistent with how and where you free memory in a function. If you allocate memory that you intend to free upon completion of the function, you must be sure to free the memory at all exit points for that function including error conditions.::PHASE:Implementation:DESCRIPTION:Memory should be allocated/freed using matching functions such as malloc/free, new/delete, and new[]/delete[].::PHASE:Implementation:DESCRIPTION:When releasing a complex object or structure, ensure that you properly dispose of all of its member components, not just the object itself.::"
    ],
    [
      "missing lock check",
      "CWE-414",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Implement a reliable lock mechanism.::"
    ],
    [
      "use after free",
      "CWE-416",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Choose a language that provides automatic memory management.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "deployment of wrong handler",
      "CWE-430",
      "::PHASE:Architecture and Design:DESCRIPTION:Perform a type check before interpreting an object.::PHASE:Architecture and Design:DESCRIPTION:Reject any inconsistent types, such as a file with a .GIF extension that appears to consist of PHP code.::"
    ],
    [
      "behavioral change in new version or environment",
      "CWE-439",
      ""
    ],
    [
      "ui discrepancy for security feature",
      "CWE-446",
      ""
    ],
    [
      "the ui performs the wrong action",
      "CWE-449",
      "::PHASE:Testing:DESCRIPTION:Perform extensive functionality testing of the UI. The UI should behave as specified.::"
    ],
    [
      "multiple interpretations of ui input",
      "CWE-450",
      "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::"
    ],
    [
      "improper cleanup on thrown exception",
      "CWE-460",
      "::PHASE:Implementation:DESCRIPTION:If one breaks from a loop or function by throwing an exception, make sure that cleanup happens or that you should exit the program. Use throwing exceptions sparsely.::"
    ],
    [
      "return of pointer value outside of expected range",
      "CWE-466",
      ""
    ],
    [
      "use of sizeof() on a pointer type",
      "CWE-467",
      "::PHASE:Implementation:DESCRIPTION:Use expressions such as sizeof(*pointer) instead of sizeof(pointer), unless you intend to run sizeof() on a pointer type to gain some platform independence or if you are allocating a variable on the stack.::"
    ],
    [
      "use of pointer subtraction to determine size",
      "CWE-469",
      "::PHASE:Implementation:DESCRIPTION:Save an index variable. This is the recommended solution. Rather than subtract pointers from one another, use an index variable of the same size as the pointers in question. Use this variable to walk from one pointer to the other and calculate the difference. Always validate this number.::"
    ],
    [
      "use of obsolete function",
      "CWE-477",
      "::PHASE:Implementation:DESCRIPTION:Refer to the documentation for the obsolete function in order to determine why it is deprecated or obsolete and to learn about alternative ways to achieve the same functionality.::PHASE:Requirements:DESCRIPTION:Consider seriously the security implications of using an obsolete function. Consider using alternate functions.::"
    ],
    [
      "missing default case in multiple condition expression",
      "CWE-478",
      "::PHASE:Implementation:DESCRIPTION:Ensure that there are no cases unaccounted for when adjusting program flow or values based on the value of a given variable. In the case of switch style statements, the very simple act of creating a default case can, if done correctly, mitigate this situation. Often however, the default case is used simply to represent an assumed option, as opposed to working as a check for invalid input. This is poor practice and in some cases is as bad as omitting a default case entirely.::"
    ],
    [
      "signal handler use of a non-reentrant function",
      "CWE-479",
      "::PHASE:Requirements:DESCRIPTION:Require languages or libraries that provide reentrant functionality, or otherwise make it easier to avoid this weakness.::PHASE:Architecture and Design:DESCRIPTION:Design signal handlers to only set flags rather than perform complex functionality.::PHASE:Implementation:DESCRIPTION:Ensure that non-reentrant functions are not found in signal handlers.::PHASE:Implementation:DESCRIPTION:Use sanity checks to reduce the timing window for exploitation of race conditions. This is only a partial solution, since many attacks might fail, but other attacks still might work within the narrower window, even accidentally.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "omitted break statement in switch",
      "CWE-484",
      "::PHASE:Implementation:DESCRIPTION:Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.::PHASE:Implementation:DESCRIPTION:The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.::"
    ],
    [
      "comparison of classes by name",
      "CWE-486",
      "::PHASE:Implementation:DESCRIPTION:Use class equivalency to determine type. Rather than use the class name to determine if an object is of a given type, use the getClass() method, and == operator.::"
    ],
    [
      "exposure of data element to wrong session",
      "CWE-488",
      "::PHASE:Architecture and Design:DESCRIPTION:Protect the application's sessions from information leakage. Make sure that a session's data is not used or visible by other sessions.::PHASE:Testing:DESCRIPTION:Use a static analysis tool to scan the code for information leakage vulnerabilities (e.g. Singleton Member Field).::PHASE:Architecture and Design:DESCRIPTION:In a multithreading environment, storing user data in Servlet member fields introduces a data access race condition. Do not use member fields to store information in the Servlet.::"
    ],
    [
      "public data assigned to private array-typed field",
      "CWE-496",
      "::PHASE:Implementation:DESCRIPTION:Do not allow objects to modify private members of a class.::"
    ],
    [
      "exposure of sensitive system information to an unauthorized control sphere",
      "CWE-497",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewable by the end user. All error message text should be HTML entity encoded before being written to the log file to protect against potential cross-site scripting attacks against the viewer of the logs::"
    ],
    [
      "cleartext storage of sensitive information in an environment variable",
      "CWE-526",
      "::PHASE:Architecture and Design:DESCRIPTION:Encrypt information stored in the environment variable to protect it from being exposed to an unauthorized user. If encryption is not feasible or is considered too expensive for the business use of the application, then consider using a properly protected configuration file instead of an environment variable. It should be understood that unencrypted information in a config file is also not guaranteed to be protected, but it is still a better choice, because it reduces attack surface related to weaknesses such as CWE-214. In some settings, vaults might be a feasible option for safer data transfer. Users should be notified of the business choice made to not protect the sensitive information through encryption.::PHASE:Implementation:DESCRIPTION:If the environment variable is not necessary for the desired behavior, then remove it entirely, or clear it to an empty value.::"
    ],
    [
      "exposure of access control list files to an unauthorized control sphere",
      "CWE-529",
      "::PHASE:System Configuration:DESCRIPTION:Protect access control list files.::"
    ],
    [
      "exposure of backup file to an unauthorized control sphere",
      "CWE-530",
      "::PHASE:Policy:DESCRIPTION:Recommendations include implementing a security policy within your organization that prohibits backing up web application source code in the webroot.::"
    ],
    [
      "inclusion of sensitive information in test code",
      "CWE-531",
      "::PHASE:Distribution Installation:DESCRIPTION:Remove test code before deploying the application into production.::"
    ],
    [
      "insertion of sensitive information into log file",
      "CWE-532",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Consider seriously the sensitivity of the information written into log files. Do not write secrets into the log files.::PHASE:Distribution:DESCRIPTION:Remove debug log files before deploying the application into production.::PHASE:Operation:DESCRIPTION:Protect log files against unauthorized read/write.::PHASE:Implementation:DESCRIPTION:Adjust configurations appropriately when software is transitioned from a debug state to production.::"
    ],
    [
      "exposure of information through shell error message",
      "CWE-535",
      ""
    ],
    [
      "servlet runtime error message containing sensitive information",
      "CWE-536",
      ""
    ],
    [
      "java runtime error message containing sensitive information",
      "CWE-537",
      "::PHASE:Implementation:DESCRIPTION:Do not expose sensitive error information to the user.::"
    ],
    [
      "insertion of sensitive information into externally-accessible file or directory",
      "CWE-538",
      "::PHASE:Architecture and Design Operation System Configuration:DESCRIPTION:Do not expose file and directory information to the user.::"
    ],
    [
      "inclusion of sensitive information in source code",
      "CWE-540",
      "::PHASE:Architecture and Design System Configuration:DESCRIPTION:Recommendations include removing this script from the web server and moving it to a location not accessible from the Internet.::"
    ],
    [
      "inclusion of sensitive information in an include file",
      "CWE-541",
      "::PHASE:Architecture and Design:DESCRIPTION:Do not store sensitive information in include files.::PHASE:Architecture and Design System Configuration:DESCRIPTION:Protect include files from being exposed.::"
    ],
    [
      "command shell in externally accessible directory",
      "CWE-553",
      "::PHASE:Installation System Configuration:DESCRIPTION:Remove any Shells accessible under the web root folder and children directories.::"
    ],
    [
      "return of stack variable address",
      "CWE-562",
      "::PHASE:Testing:DESCRIPTION:Use static analysis tools to spot return of the address of a stack variable.::"
    ],
    [
      "unsynchronized access to shared data in a multithreaded context",
      "CWE-567",
      "::PHASE:Implementation:DESCRIPTION:Remove the use of static variables used between servlets. If this cannot be avoided, use synchronized access for these variables.::"
    ],
    [
      "call to thread run() instead of start()",
      "CWE-572",
      "::PHASE:Implementation:DESCRIPTION:Use the start() method instead of the run() method.::"
    ],
    [
      "object model violation: just one of equals and hashcode defined",
      "CWE-581",
      "::PHASE:Implementation:DESCRIPTION:Both Equals() and Hashcode() should be defined.::"
    ],
    [
      "assignment of a fixed address to a pointer",
      "CWE-587",
      "::PHASE:Implementation:DESCRIPTION:Never set a pointer to a fixed address.::"
    ],
    [
      "attempt to access child of a non-structure pointer",
      "CWE-588",
      "::PHASE:Requirements:DESCRIPTION:The choice could be made to use a language that is not susceptible to these issues.::PHASE:Implementation:DESCRIPTION:Review of type casting operations can identify locations where incompatible types are cast.::"
    ],
    [
      "call to non-ubiquitous api",
      "CWE-589",
      "::PHASE:Implementation:DESCRIPTION:Always test your code on any platform on which it is targeted to run on.::PHASE:Testing:DESCRIPTION:Test your code on the newest and oldest platform on which it is targeted to run on.::PHASE:Testing:DESCRIPTION:Develop a system to test for API functions that are not portable.::"
    ],
    [
      "free of memory not on the heap",
      "CWE-590",
      "::PHASE:Implementation:DESCRIPTION:Only free pointers that you have called malloc on previously. This is the recommended solution. Keep track of which pointers point at the beginning of valid chunks and free them only once.::PHASE:Implementation:DESCRIPTION:Before freeing a pointer, the programmer should make sure that the pointer was previously allocated on the heap and that the memory belongs to the programmer. Freeing an unallocated pointer will cause undefined behavior in the program.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "sensitive data storage in improperly locked memory",
      "CWE-591",
      "::PHASE:Architecture and Design:DESCRIPTION:Identify data that needs to be protected from swapping and choose platform-appropriate protection mechanisms.::PHASE:Implementation:DESCRIPTION:Check return values to ensure locking operations are successful.::"
    ],
    [
      "use of wrong operator in string comparison",
      "CWE-597",
      "::PHASE:Implementation:DESCRIPTION:Within Java, use .equals() to compare string values. Within JavaScript, use == to compare string values. Within PHP, use == to compare a numeric value to a string value. (PHP converts the string to a number.):EFFECTIVENESS:High::"
    ],
    [
      "use of get request method with sensitive query strings",
      "CWE-598",
      "::PHASE:Implementation:DESCRIPTION:When sensitive information is sent, use the POST method (e.g. registration form).::"
    ],
    [
      "multiple binds to the same port",
      "CWE-605",
      "::PHASE:Policy:DESCRIPTION:Restrict server socket address to known local addresses.::"
    ],
    [
      "inclusion of sensitive information in source code comments",
      "CWE-615",
      "::PHASE:Distribution:DESCRIPTION:Remove comments which have sensitive information about the design/implementation of the application. Some of the comments may be exposed to the user and affect the security posture of the application.::"
    ],
    [
      "external control of critical state data",
      "CWE-642",
      "::PHASE:Architecture and Design:DESCRIPTION:Understand all the potential locations that are accessible to attackers. For example, some programmers assume that cookies and hidden form fields cannot be modified by an attacker, or they may not consider that environment variables can be modified before a privileged program is invoked.::PHASE:Architecture and Design:STRATEGY:Attack Surface Reduction:DESCRIPTION:Store state information and sensitive data on the server side only. Ensure that the system definitively and unambiguously keeps track of its own state and user state and has rules defined for legitimate state transitions. Do not allow any application user to affect state directly in any way other than through legitimate actions leading to state transitions. If information must be stored on the client, do not do so without encryption and integrity checking, or otherwise having a mechanism on the server side to catch tampering. Use a message authentication code (MAC) algorithm, such as Hash Message Authentication Code (HMAC) [REF-529]. Apply this against the state or sensitive data that has to be exposed, which can guarantee the integrity of the data - i.e., that the data has not been modified. Ensure that a strong hash function is used (CWE-328).::PHASE:Architecture and Design:DESCRIPTION:Store state information on the server side only. Ensure that the system definitively and unambiguously keeps track of its own state and user state and has rules defined for legitimate state transitions. Do not allow any application user to affect state directly in any way other than through legitimate actions leading to state transitions.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. With a stateless protocol such as HTTP, use some frameworks can maintain the state for you. Examples include ASP.NET View State and the OWASP ESAPI Session Management feature. Be careful of language features that provide state support, since these might be provided as a convenience to the programmer and may not be considering security.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Operation Implementation:STRATEGY:Environment Hardening:DESCRIPTION:When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.::PHASE:Testing:DESCRIPTION:Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.::PHASE:Testing:DESCRIPTION:Use dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.::PHASE:Testing:DESCRIPTION:Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.::"
    ],
    [
      "reliance on file name or extension of externally-supplied file",
      "CWE-646",
      "::PHASE:Architecture and Design:DESCRIPTION:Make decisions on the server side based on file content and not on file name or extension.::"
    ],
    [
      "reliance on a single factor in a security decision",
      "CWE-654",
      "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::"
    ],
    [
      "use of a non-reentrant function in a concurrent context",
      "CWE-663",
      "::PHASE:Implementation:DESCRIPTION:Use reentrant functions if available.::PHASE:Implementation:DESCRIPTION:Add synchronization to your non-reentrant function.::PHASE:Implementation:DESCRIPTION:In Java, use the ReentrantLock Class.::"
    ],
    [
      "improper control of a resource through its lifetime",
      "CWE-664",
      "::PHASE:Testing:DESCRIPTION:Use Static analysis tools to check for unreleased resources.::"
    ],
    [
      "operation on resource in wrong phase of lifetime",
      "CWE-666",
      "::PHASE:Architecture and Design:DESCRIPTION:Follow the resource's lifecycle from creation to release.::"
    ],
    [
      "exposure of resource to wrong sphere",
      "CWE-668",
      ""
    ],
    [
      "lack of administrator control over security",
      "CWE-671",
      ""
    ],
    [
      "operation on a resource after expiration or release",
      "CWE-672",
      ""
    ],
    [
      "multiple operations on resource in single-operation context",
      "CWE-675",
      ""
    ],
    [
      "use of potentially dangerous function",
      "CWE-676",
      "::PHASE:Build and Compilation Implementation:DESCRIPTION:Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the banned.h include file from Microsoft's SDL. [REF-554] [REF-7]::"
    ],
    [
      "integer overflow to buffer overflow",
      "CWE-680",
      ""
    ],
    [
      "function call with incorrect number of arguments",
      "CWE-685",
      "::PHASE:Testing:DESCRIPTION:Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weakness except in rare cases when the incorrect function call accidentally produces the correct results or if the provided argument type is very similar to the expected argument type.::"
    ],
    [
      "unchecked return value to null pointer dereference",
      "CWE-690",
      ""
    ],
    [
      "use of multiple resources with duplicate identifier",
      "CWE-694",
      "::PHASE:Architecture and Design:DESCRIPTION:Where possible, use unique identifiers. If non-unique identifiers are detected, then do not operate any resource with a non-unique identifier and report the error appropriately.::"
    ],
    [
      "use of incorrectly-resolved name or reference",
      "CWE-706",
      ""
    ],
    [
      "free of pointer not at start of buffer",
      "CWE-761",
      "::PHASE:Implementation:DESCRIPTION:When utilizing pointer arithmetic to traverse a buffer, use a separate variable to track progress through memory and preserve the originally allocated address for later freeing.::PHASE:Implementation:DESCRIPTION:When programming in C++, consider using smart pointers provided by the boost library to help correctly and consistently manage memory.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "release of invalid pointer or reference",
      "CWE-763",
      "::PHASE:Implementation:DESCRIPTION:Only call matching memory management functions. Do not mix and match routines. For example, when you allocate a buffer with malloc(), dispose of the original pointer with free().::PHASE:Implementation:DESCRIPTION:When programming in C++, consider using smart pointers provided by the boost library to help correctly and consistently manage memory.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "multiple locks of a critical resource",
      "CWE-764",
      "::PHASE:Implementation:DESCRIPTION:When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the software acquires a lock and then determines it is not able to perform its intended behavior, be sure to release the lock(s) before waiting for conditions to improve. Reacquire the lock(s) before trying again.::"
    ],
    [
      "multiple unlocks of a critical resource",
      "CWE-765",
      "::PHASE:Implementation:DESCRIPTION:When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the product acquires a lock and then determines it is not able to perform its intended behavior, be sure to release the lock(s) before waiting for conditions to improve. Reacquire the lock(s) before trying again.::"
    ],
    [
      "use of path manipulation function without maximum-sized buffer",
      "CWE-785",
      "::PHASE:Implementation:DESCRIPTION:Always specify output buffers large enough to handle the maximum-size possible result from path manipulation functions.::"
    ],
    [
      "access of memory location before start of buffer",
      "CWE-786",
      ""
    ],
    [
      "access of memory location after end of buffer",
      "CWE-788",
      ""
    ],
    [
      "buffer access with incorrect length value",
      "CWE-805",
      "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer. Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:DESCRIPTION:Consider adhering to the following rules when allocating and managing an application's memory: Double check that the buffer is as large as specified. When using functions that accept a number of bytes to copy, such as strncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if accessing the buffer in a loop and make sure there is no danger of writing past the allocated space. If necessary, truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the product or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design Operation:STRATEGY:Sandbox or Jail:DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.:EFFECTIVENESS:Limited::"
    ],
    [
      "buffer access using size of source buffer",
      "CWE-806",
      "::PHASE:Architecture and Design:DESCRIPTION:Use an abstraction library to abstract away risky APIs. Examples include the Safe C String Library (SafeStr) by Viega, and the Strsafe.h library from Microsoft. This is not a complete solution, since many buffer overflows are not related to strings.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:DESCRIPTION:Programmers should adhere to the following rules when allocating and managing their applications memory: Double check that your buffer is as large as you specify. When using functions that accept a number of bytes to copy, such as strncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if calling this function in a loop and make sure there is no danger of writing past the allocated space. Truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Build and Compilation Operation:DESCRIPTION:Most mitigating technologies at the compiler or OS level to date address only a subset of buffer overflow problems and rarely provide complete protection against even that subset. It is good practice to implement strategies to increase the workload of an attacker, such as leaving the attacker to guess an unknown value that changes every program execution.::"
    ],
    [
      "use of out-of-range pointer offset",
      "CWE-823",
      ""
    ],
    [
      "access of uninitialized pointer",
      "CWE-824",
      ""
    ],
    [
      "unlock of a resource that is not locked",
      "CWE-832",
      ""
    ],
    [
      "inappropriate encoding for output context",
      "CWE-838",
      "::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use context-aware encoding. That is, understand which encoding is being used by the downstream component, and ensure that this encoding is used. If an encoding can be specified, do so, instead of assuming that the default encoding is the same as the default being assumed by the downstream component.::PHASE:Architecture and Design:STRATEGY:Output Encoding:DESCRIPTION:Where possible, use communications protocols or data formats that provide strict boundaries between control and data. If this is not feasible, ensure that the protocols or formats allow the communicating components to explicitly state which encoding/decoding method is being used. Some template frameworks provide built-in support.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using the ESAPI Encoding control [REF-45] or a similar tool, library, or framework. These will help the programmer encode outputs in a manner less prone to error. Note that some template mechanisms provide built-in support for the appropriate encoding.::"
    ],
    [
      "use of uninitialized resource",
      "CWE-908",
      "::PHASE:Implementation:DESCRIPTION:Explicitly initialize the resource before use. If this is performed through an API function or standard procedure, follow all required steps.::PHASE:Implementation:DESCRIPTION:Pay close attention to complex conditionals that affect initialization, since some branches might not perform the initialization.::PHASE:Implementation:DESCRIPTION:Avoid race conditions (CWE-362) during initialization routines.::PHASE:Build and Compilation:DESCRIPTION:Run or compile the product with settings that generate warnings about uninitialized variables or data.::"
    ],
    [
      "use of expired file descriptor",
      "CWE-910",
      ""
    ],
    [
      "improper update of reference count",
      "CWE-911",
      ""
    ],
    [
      "storage of sensitive data in a mechanism without access control",
      "CWE-921",
      ""
    ],
    [
      "use of redundant code",
      "CWE-1041",
      "::PHASE:Implementation:DESCRIPTION:Merge common functionality into a single function and then call that function from across the entire code base.::"
    ],
    [
      "creation of immutable text using string concatenation",
      "CWE-1046",
      ""
    ],
    [
      "excessive data query operations in a large data table",
      "CWE-1049",
      ""
    ],
    [
      "data access operations outside of expected data manager component",
      "CWE-1057",
      ""
    ],
    [
      "creation of class instance within a static code block",
      "CWE-1063",
      ""
    ],
    [
      "runtime resource management control element in a component built to run on application servers",
      "CWE-1065",
      ""
    ],
    [
      "data resource access without use of connection pooling",
      "CWE-1072",
      ""
    ],
    [
      "source code file with excessive number of lines of code",
      "CWE-1080",
      ""
    ],
    [
      "data access from outside expected data manager component",
      "CWE-1083",
      ""
    ],
    [
      "large data table with excessive number of indices",
      "CWE-1089",
      ""
    ],
    [
      "excessive index range scan for a data resource",
      "CWE-1094",
      ""
    ],
    [
      "reliance on runtime component in generated code",
      "CWE-1101",
      ""
    ],
    [
      "use of same variable for multiple purposes",
      "CWE-1109",
      ""
    ],
    [
      "excessive use of self-modifying code",
      "CWE-1123",
      ""
    ],
    [
      "use of prohibited code",
      "CWE-1177",
      ""
    ],
    [
      "initialization of a resource with an insecure default",
      "CWE-1188",
      ""
    ],
    [
      "failure to disable reserved bits",
      "CWE-1209",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Include a feature to disable reserved bits.::PHASE:Integration:DESCRIPTION:Any writes to these reserve bits are blocked (e.g., ignored, access-protected, etc.), or an exception can be asserted.::"
    ],
    [
      "insufficient granularity of access control",
      "CWE-1220",
      "::PHASE:Architecture and Design Implementation Testing:DESCRIPTION:Access-control-policy protections must be reviewed for design inconsistency and common weaknesses. Access-control-policy definition and programming flow must be tested in pre-silicon, post-silicon testing.:EFFECTIVENESS:High::"
    ],
    [
      "creation of emergent resource",
      "CWE-1229",
      ""
    ],
    [
      "uninitialized value on reset for registers holding security settings",
      "CWE-1271",
      "::PHASE:Implementation:DESCRIPTION:Design checks should be performed to identify any uninitialized flip-flops used for security-critical functions.::PHASE:Architecture and Design:DESCRIPTION:All registers holding security-critical information should be set to a specific value on reset.::"
    ],
    [
      "improper access control for volatile memory containing boot code",
      "CWE-1274",
      "::PHASE:Architecture and Design:DESCRIPTION:Ensure that the design of volatile-memory protections is enough to prevent modification from an adversary or untrusted code.::PHASE:Testing:DESCRIPTION:Test the volatile-memory protections to ensure they are safe from modification or untrusted code.::"
    ],
    [
      "assumed-immutable data is stored in writable memory",
      "CWE-1282",
      "::PHASE:Implementation:DESCRIPTION:All immutable code or data should be programmed into ROM or write-once memory.::"
    ],
    [
      "missing source correlation of multiple independent data",
      "CWE-1293",
      "::PHASE:Requirements:DESCRIPTION:Design system to use a Practical Byzantine fault method, to request information from multiple sources to verify the data and report on potentially compromised information sources.::PHASE:Implementation:DESCRIPTION:Failure to use a Practical Byzantine fault method when requesting data. Lack of place to report potentially compromised information sources. Relying on non-independent information sources for integrity checking. Failure to report information sources that respond in the minority to incident response procedures.::"
    ],
    [
      "missing ability to patch rom code",
      "CWE-1310",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Secure patch support to allow ROM code to be patched on the next boot.:EFFECTIVENESS:Moderate::PHASE:Architecture and Design Implementation:DESCRIPTION:Support patches that can be programmed in-field or during manufacturing through hardware fuses. This feature can be used for limited patching of devices after shipping, or for the next batch of silicon devices manufactured, without changing the full device ROM.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of blocking code in single-threaded, non-blocking context",
      "CWE-1322",
      "::PHASE:Implementation:DESCRIPTION:Generally speaking, blocking calls should be replaced with non-blocking alternatives that can be used asynchronously. Expensive computations should be passed off to worker threads, although the correct approach depends on the framework being used.::PHASE:Implementation:DESCRIPTION:For expensive computations, consider breaking them up into multiple smaller computations. Refer to the documentation of the framework being used for guidance.::"
    ],
    [
      "binding to an unrestricted ip address",
      "CWE-1327",
      "::PHASE:System Configuration:DESCRIPTION:Assign IP addresses that are not 0.0.0.0.:EFFECTIVENESS:High::PHASE:System Configuration:STRATEGY:Firewall:DESCRIPTION:Unwanted connections to the configured server may be denied through a firewall or other packet filtering measures.:EFFECTIVENESS:High::"
    ],
    [
      "security version number mutable to older versions",
      "CWE-1328",
      "::PHASE:Architecture and Design:DESCRIPTION:When architecting the system, security version data should be designated for storage in registers that are either read-only or have access controls that prevent modification by an untrusted agent.::PHASE:Implementation:DESCRIPTION:During implementation and test, security version data should be demonstrated to be read-only and access controls should be validated.::"
    ],
    [
      "reliance on component that is not updateable",
      "CWE-1329",
      "::PHASE:Requirements:DESCRIPTION:Specify requirements that each component should be updateable, including ROM, firmware, etc.::PHASE:Architecture and Design:DESCRIPTION:Design the product to allow for updating of its components. Include the external infrastructure that might be necessary to support updates, such as distribution servers.::PHASE:Architecture and Design Implementation:DESCRIPTION:With hardware, support patches that can be programmed in-field or during manufacturing through hardware fuses. This feature can be used for limited patching of devices after shipping, or for the next batch of silicon devices manufactured, without changing the full device ROM.:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:Implement the necessary functionality to allow each component to be updated.::"
    ],
    [
      "multiple releases of same resource or handle",
      "CWE-1341",
      "::PHASE:Implementation:DESCRIPTION:Change the code's logic so that the resource is only closed once. This might require simplifying or refactoring. This fix can be simple to do in small code blocks, but more difficult when multiple closes are buried within complex conditionals.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:It can be effective to implement a flag that is (1) set when the resource is opened, (2) cleared when it is closed, and (3) checked before closing. This approach can be useful when there are disparate cases in which closes must be performed. However, flag-tracking can increase code complexity and requires diligent compliance by the programmer.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:When closing a resource, set the resource's associated variable to NULL or equivalent value for the given language. Some APIs will ignore this null value without causing errors. For other APIs, this can lead to application crashes or exceptions, which may still be preferable to corrupting an unintended resource such as memory or data.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "use of default credentials",
      "CWE-1392",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default password",
      "CWE-1393",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Documentation:DESCRIPTION:Ensure that product documentation clearly emphasizes the presence of default passwords and provides steps for the administrator to change them.:EFFECTIVENESS:Limited::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default cryptographic key",
      "CWE-1394",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ]
  ],
  "suricata_rule": "alert tcp any any -> any any (\n    msg:\"Auto-generated Suricata rule from YARA\";\n    flow:established,to_server;\n    content:\"ADMQCMD\"; nocase;\n    content:\"ANSIStrChr\"; nocase;\n    content:\"ANSIStrRChr\"; nocase;\n    content:\"AddFile\"; nocase;\n    content:\"AddPath\"; nocase;\n    content:\"AddRegRunOnce\"; nocase;\n    content:\"AdjustTokenPrivileges\"; nocase;\n    content:\"AdvancedINF\"; nocase;\n    content:\"AllocateAndInitializeSid\"; nocase;\n    content:\"AnalyzeCmd\"; nocase;\n    content:\"ArgList\"; nocase;\n    content:\"BYTE\"; nocase;\n    content:\"BrowseCallback\"; nocase;\n    content:\"BrowseForDir\"; nocase;\n    content:\"Buffer\"; nocase;\n    content:\"BytesPerSector\"; nocase;\n    content:\"CABINET\"; nocase;\n    content:\"CallWindowProcA\"; nocase;\n    content:\"Caption\"; nocase;\n    content:\"CatDirAndFile\"; nocase;\n    content:\"CenterWindow\"; nocase;\n    content:\"CheckFileVersion\"; nocase;\n    content:\"CheckOSVersion\"; nocase;\n    content:\"CheckOverwrite\"; nocase;\n    content:\"CheckToken\"; nocase;\n    content:\"CheckTokenMembership\"; nocase;\n    content:\"CloseHandle\"; nocase;\n    content:\"Command\"; nocase;\n    content:\"CompareStringA\"; nocase;\n    content:\"ContextRecord\"; nocase;\n    content:\"Control\"; nocase;\n    content:\"ControlPc\"; nocase;\n    content:\"Could\"; nocase;\n    content:\"CreateAndValidateSubdir\"; nocase;\n    content:\"CreateDirectoryA\"; nocase;\n    content:\"CreateEventA\"; nocase;\n    content:\"CreateFileA\"; nocase;\n    content:\"CreateMutexA\"; nocase;\n    content:\"CreateProcessA\"; nocase;\n    content:\"CreateThread\"; nocase;\n    content:\"CreationTime\"; nocase;\n    content:\"CurrentProcess\"; nocase;\n    content:\"CurrentVersion\"; nocase;\n    content:\"DLGTEMPLATE\"; nocase;\n    content:\"Data\"; nocase;\n    content:\"DecryptFileA\"; nocase;\n    content:\"DelNodeRunDLL32\"; nocase;\n    content:\"DeleteExtractedFiles\"; nocase;\n    content:\"DeleteFileA\"; nocase;\n    content:\"DeleteMyDir\"; nocase;\n    content:\"Desktop\"; nocase;\n    content:\"DesktopWindow\"; nocase;\n    content:\"Destination\"; nocase;\n    content:\"DestinationSize\"; nocase;\n    content:\"DeviceCaps\"; nocase;\n    content:\"DialogBoxIndirectParamA\"; nocase;\n    content:\"DirectoryA\"; nocase;\n    content:\"DiskSpaceErrMsg\"; nocase;\n    content:\"DispatchMessageA\"; nocase;\n    content:\"DispatcherContext\"; nocase;\n    content:\"DisplayLicense\"; nocase;\n    content:\"DlgItem\"; nocase;\n    content:\"DoMain\"; nocase;\n    content:\"DosDateTimeToFileTime\"; nocase;\n    content:\"DriveTypeA\"; nocase;\n    content:\"ENUMRESLANGPROCA\"; nocase;\n    content:\"EXCEPTION_DISPOSITION\"; nocase;\n    content:\"EXTRACTOPT\"; nocase;\n    content:\"EnableWindow\"; nocase;\n    content:\"EndDialog\"; nocase;\n    content:\"EnumResLangProc\"; nocase;\n    content:\"EnumResourceLanguagesA\"; nocase;\n    content:\"EqualSid\"; nocase;\n    content:\"Error\"; nocase;\n    content:\"EstablisherFrame\"; nocase;\n    content:\"Except\"; nocase;\n    content:\"ExceptionCode\"; nocase;\n    content:\"ExceptionInfo\"; nocase;\n    content:\"ExceptionInformation\"; nocase;\n    content:\"ExceptionRecord\"; nocase;\n    content:\"ExitCode\"; nocase;\n    content:\"ExitProcess\"; nocase;\n    content:\"ExitWindowsEx\"; nocase;\n    content:\"ExpandCmdParams\"; nocase;\n    content:\"ExpandEnvironmentStringsA\"; nocase;\n    content:\"ExtractDlgProc\"; nocase;\n    content:\"ExtractField\"; nocase;\n    content:\"ExtractThread\"; nocase;\n    content:\"FARPROC\"; nocase;\n    content:\"FDICopy\"; nocase;\n    content:\"FDICreate\"; nocase;\n    content:\"FDIDestroy\"; nocase;\n    content:\"FDIIsCabinet\"; nocase;\n    content:\"FILESIZES\"; nocase;\n    content:\"FILETIME\"; nocase;\n    content:\"FINISHMSG\"; nocase;\n    content:\"Field\"; nocase;\n    content:\"FileA\"; nocase;\n    content:\"FileName\"; nocase;\n    content:\"FileSystemFlags\"; nocase;\n    content:\"FileTime\"; nocase;\n    content:\"FileVersionInfoSizeA\"; nocase;\n    content:\"Filename\"; nocase;\n    content:\"FindClose\"; nocase;\n    content:\"FindFileData\"; nocase;\n    content:\"FindFirstFileA\"; nocase;\n    content:\"FindNextFileA\"; nocase;\n    content:\"FindPESection\"; nocase;\n    content:\"FindResourceA\"; nocase;\n    content:\"FinishMessage\"; nocase;\n    content:\"First\"; nocase;\n    content:\"FirstFileA\"; nocase;\n    content:\"FormatMessageA\"; nocase;\n    content:\"FreeLibrary\"; nocase;\n    content:\"FreeResource\"; nocase;\n    content:\"FreeSid\"; nocase;\n    content:\"FunctionEntry\"; nocase;\n    content:\"GetCurrentDirectoryA\"; nocase;\n    content:\"GetCurrentProcess\"; nocase;\n    content:\"GetCurrentProcessId\"; nocase;\n    content:\"GetCurrentThreadId\"; nocase;\n    content:\"GetDC\"; nocase;\n    content:\"GetDesktopWindow\"; nocase;\n    content:\"GetDeviceCaps\"; nocase;\n    content:\"GetDiskFreeSpaceA\"; nocase;\n    content:\"GetDlgItem\"; nocase;\n    content:\"GetDlgItemTextA\"; nocase;\n    content:\"GetDriveTypeA\"; nocase;\n    content:\"GetExitCodeProcess\"; nocase;\n    content:\"GetFileList\"; nocase;\n    content:\"GetFileTobeChecked\"; nocase;\n    content:\"GetFileVersionInfoA\"; nocase;\n    content:\"GetFileVersionInfoSizeA\"; nocase;\n    content:\"GetLastError\"; nocase;\n    content:\"GetModuleFileNameA\"; nocase;\n    content:\"GetModuleHandleW\"; nocase;\n    content:\"GetNewTempDir\"; nocase;\n    content:\"GetParentDir\"; nocase;\n    content:\"GetPrivateProfileIntA\"; nocase;\n    content:\"GetPrivateProfileStringA\"; nocase;\n    content:\"GetProcAddress\"; nocase;\n    content:\"GetResource\"; nocase;\n    content:\"GetShortPathNameA\"; nocase;\n    content:\"GetStartupInfoW\"; nocase;\n    content:\"GetSystemDirectoryA\"; nocase;\n    content:\"GetSystemInfo\"; nocase;\n    content:\"GetSystemMetrics\"; nocase;\n    content:\"GetSystemTimeAsFileTime\"; nocase;\n    content:\"GetTempDirectory\"; nocase;\n    content:\"GetTempFileNameA\"; nocase;\n    content:\"GetTempPathA\"; nocase;\n    content:\"GetTickCount\"; nocase;\n    content:\"GetTokenInformation\"; nocase;\n    content:\"GetUsersPermission\"; nocase;\n    content:\"GetVersion\"; nocase;\n    content:\"GetVersionExA\"; nocase;\n    content:\"GetVolumeInformationA\"; nocase;\n    content:\"GetWindowRect\"; nocase;\n    content:\"GetWindowsDirectoryA\"; nocase;\n    content:\"GetWininitSize\"; nocase;\n    content:\"GlobalAlloc\"; nocase;\n    content:\"GlobalFree\"; nocase;\n    content:\"GlobalLock\"; nocase;\n    content:\"GlobalUnlock\"; nocase;\n    content:\"HANDLE\"; nocase;\n    content:\"HFDI\"; nocase;\n    content:\"HFILE\"; nocase;\n    content:\"HGLOBAL\"; nocase;\n    content:\"HKEY\"; nocase;\n    content:\"HKEY_CURRENT_USER\"; nocase;\n    content:\"HKEY_LOCAL_MACHINE\"; nocase;\n    content:\"HLOCAL\"; nocase;\n    content:\"HMODULE\"; nocase;\n    content:\"HRESULT\"; nocase;\n    content:\"HRSRC\"; nocase;\n    content:\"HWND\"; nocase;\n    content:\"HandlerData\"; nocase;\n    content:\"HeapSetInformation\"; nocase;\n    content:\"INSTANCECHECK\"; nocase;\n    content:\"INT_PTR\"; nocase;\n    content:\"ImageBase\"; nocase;\n    content:\"Init\"; nocase;\n    content:\"InitCommonControls\"; nocase;\n    content:\"IsBiDiLocalizedBinary\"; nocase;\n    content:\"IsDBCSLeadByte\"; nocase;\n    content:\"IsEnoughSpace\"; nocase;\n    content:\"IsGoodTempDir\"; nocase;\n    content:\"IsNTAdmin\"; nocase;\n    content:\"IsNonwritableInCurrentImage\"; nocase;\n    content:\"IsWindowsDrive\"; nocase;\n    content:\"Kernel32\"; nocase;\n    content:\"LARGE_INTEGER\"; nocase;\n    content:\"LICENSE\"; nocase;\n    content:\"LOWORD\"; nocase;\n    content:\"LPARAM\"; nocase;\n    content:\"LPBYTE\"; nocase;\n    content:\"LPCSTR\"; nocase;\n    content:\"LPOSVERSIONINFOA\"; nocase;\n    content:\"LPSTARTUPINFOA\"; nocase;\n    content:\"LPSTR\"; nocase;\n    content:\"LPTHREAD_START_ROUTINE\"; nocase;\n    content:\"LPTOP_LEVEL_EXCEPTION_FILTER\"; nocase;\n    content:\"LRESULT\"; nocase;\n    content:\"LSTATUS\"; nocase;\n    content:\"Last\"; nocase;\n    content:\"LastError\"; nocase;\n    content:\"Library\"; nocase;\n    content:\"LibraryA\"; nocase;\n    content:\"LicenseDlgProc\"; nocase;\n    content:\"LoadLibraryA\"; nocase;\n    content:\"LoadLibraryExA\"; nocase;\n    content:\"LoadResource\"; nocase;\n    content:\"LoadString\"; nocase;\n    content:\"LoadStringA\"; nocase;\n    content:\"LocalAlloc\"; nocase;\n    content:\"LocalFileTimeToFileTime\"; nocase;\n    content:\"LocalFree\"; nocase;\n    content:\"LockResource\"; nocase;\n    content:\"LookupPrivilegeValueA\"; nocase;\n    content:\"LowPart\"; nocase;\n    content:\"Luid\"; nocase;\n    content:\"MEditSubProc\"; nocase;\n    content:\"MaximumComponentLength\"; nocase;\n    content:\"MessageBeep\"; nocase;\n    content:\"MessageBoxA\"; nocase;\n    content:\"Microsoft\"; nocase;\n    content:\"ModuleHandleW\"; nocase;\n    content:\"MsgBox2Param\"; nocase;\n    content:\"MsgWaitForMultipleObjects\"; nocase;\n    content:\"MulDiv\"; nocase;\n    content:\"MyDialogBox\"; nocase;\n    content:\"MyGetLastError\"; nocase;\n    content:\"MyLoadLibrary\"; nocase;\n    content:\"MyNTReboot\"; nocase;\n    content:\"Name\"; nocase;\n    content:\"NeedRebootInit\"; nocase;\n    content:\"NewState\"; nocase;\n    content:\"None\"; nocase;\n    content:\"NtTib\"; nocase;\n    content:\"NumberOfBytesRead\"; nocase;\n    content:\"NumberOfBytesWritten\"; nocase;\n    content:\"NumberOfFreeClusters\"; nocase;\n    content:\"NumberParameters\"; nocase;\n    content:\"OpenProcessToken\"; nocase;\n    content:\"OverwriteDlgProc\"; nocase;\n    content:\"PACKINSTSPACE\"; nocase;\n    content:\"PERF\"; nocase;\n    content:\"PEXCEPTION_RECORD\"; nocase;\n    content:\"PFDICABINETINFO\"; nocase;\n    content:\"PFDINOTIFICATION\"; nocase;\n    content:\"PFNALLOC\"; nocase;\n    content:\"PFNCLOSE\"; nocase;\n    content:\"PFNFDINOTIFY\"; nocase;\n    content:\"PFNFREE\"; nocase;\n    content:\"PFNOPEN\"; nocase;\n    content:\"PFNREAD\"; nocase;\n    content:\"PFNSEEK\"; nocase;\n    content:\"PFNWRITE\"; nocase;\n    content:\"PHKEY\"; nocase;\n    content:\"POSTRUNPROGRAM\"; nocase;\n    content:\"PSID\"; nocase;\n    content:\"Panel\"; nocase;\n    content:\"ParseCmdLine\"; nocase;\n    content:\"PathName\"; nocase;\n    content:\"Paths\"; nocase;\n    content:\"PeekMessageA\"; nocase;\n    content:\"PerformanceCount\"; nocase;\n    content:\"PrivateProfileIntA\"; nocase;\n    content:\"PrivilegeCount\"; nocase;\n    content:\"Privileges\"; nocase;\n    content:\"ProcAddress\"; nocase;\n    content:\"ProcessInformation\"; nocase;\n    content:\"ProcessUpdatedFile_Size\"; nocase;\n    content:\"ProcessUpdatedFile_Write\"; nocase;\n    content:\"QuadPart\"; nocase;\n    content:\"QueryPerformanceCounter\"; nocase;\n    content:\"REBOOT\"; nocase;\n    content:\"RUNPROGRAM\"; nocase;\n    content:\"ReadFile\"; nocase;\n    content:\"Reboot\"; nocase;\n    content:\"Rect\"; nocase;\n    content:\"RegCloseKey\"; nocase;\n    content:\"RegCreateKeyExA\"; nocase;\n    content:\"RegDeleteValueA\"; nocase;\n    content:\"RegOpenKeyExA\"; nocase;\n    content:\"RegQueryInfoKeyA\"; nocase;\n    content:\"RegQueryValueExA\"; nocase;\n    content:\"RegServer\"; nocase;\n    content:\"RegSetValueExA\"; nocase;\n    content:\"ReleaseDC\"; nocase;\n    content:\"RemoveDirectoryA\"; nocase;\n    content:\"RemoveLeadTailBlanks\"; nocase;\n    content:\"ResetEvent\"; nocase;\n    content:\"Resource\"; nocase;\n    content:\"ResourceA\"; nocase;\n    content:\"ResourceLocale\"; nocase;\n    content:\"RootPathName\"; nocase;\n    content:\"RtlCaptureContext\"; nocase;\n    content:\"RtlLookupFunctionEntry\"; nocase;\n    content:\"RtlVirtualUnwind\"; nocase;\n    content:\"RtlpImageNtHeader\"; nocase;\n    content:\"RunApps\"; nocase;\n    content:\"RunInstallCommand\"; nocase;\n    content:\"RunningOnWin95BiDiLoc\"; nocase;\n    content:\"SHOWWINDOW\"; nocase;\n    content:\"SIZE_T\"; nocase;\n    content:\"STRSAFE_LPCSTR\"; nocase;\n    content:\"STRSAFE_LPSTR\"; nocase;\n    content:\"SeShutdownPrivilege\"; nocase;\n    content:\"SectorsPerCluster\"; nocase;\n    content:\"SendDlgItemMessageA\"; nocase;\n    content:\"SendMessageA\"; nocase;\n    content:\"SetCurrentDirectoryA\"; nocase;\n    content:\"SetDlgItemTextA\"; nocase;\n    content:\"SetEvent\"; nocase;\n    content:\"SetFilePointer\"; nocase;\n    content:\"SetFileTime\"; nocase;\n    content:\"SetForegroundWindow\"; nocase;\n    content:\"SetUnhandledExceptionFilter\"; nocase;\n    content:\"SetWindowPos\"; nocase;\n    content:\"SetWindowTextA\"; nocase;\n    content:\"ShowWindow\"; nocase;\n    content:\"Size\"; nocase;\n    content:\"SizeofResource\"; nocase;\n    content:\"Sleep\"; nocase;\n    content:\"Software\"; nocase;\n    content:\"StartupInfo\"; nocase;\n    content:\"String1\"; nocase;\n    content:\"String2\"; nocase;\n    content:\"StringA\"; nocase;\n    content:\"StringCchCatA\"; nocase;\n    content:\"StringCchCopyA\"; nocase;\n    content:\"StringCchPrintfA\"; nocase;\n    content:\"SubKey\"; nocase;\n    content:\"SystemInfo\"; nocase;\n    content:\"SystemTimeAsFileTime\"; nocase;\n    content:\"TITLE\"; nocase;\n    content:\"TMP4351\"; nocase;\n    content:\"TempDirDlgProc\"; nocase;\n    content:\"TerminateProcess\"; nocase;\n    content:\"TerminateThread\"; nocase;\n    content:\"Text\"; nocase;\n    content:\"ThreadId\"; nocase;\n    content:\"TokenGroups\"; nocase;\n    content:\"TokenHandle\"; nocase;\n    content:\"TokenInformationLength\"; nocase;\n    content:\"TotalNumberOfClusters\"; nocase;\n    content:\"TravelUpdatedFiles\"; nocase;\n    content:\"Type\"; nocase;\n    content:\"UINT\"; nocase;\n    content:\"UPDFILE\"; nocase;\n    content:\"UPROMPT\"; nocase;\n    content:\"USRQCMD\"; nocase;\n    content:\"UnhandledExceptionFilter\"; nocase;\n    content:\"UpdateCabinetInfo\"; nocase;\n    content:\"VERCHECK\"; nocase;\n    content:\"ValidateImageBase\"; nocase;\n    content:\"Value\"; nocase;\n    content:\"ValueName\"; nocase;\n    content:\"VerQueryValueA\"; nocase;\n    content:\"VerifyCabinet\"; nocase;\n    content:\"Version\"; nocase;\n    content:\"VersionInformation\"; nocase;\n    content:\"WNDPROC\"; nocase;\n    content:\"WPARAM\"; nocase;\n    content:\"WaitForObject\"; nocase;\n    content:\"WaitForSingleObject\"; nocase;\n    content:\"WarningDlgProc\"; nocase;\n    content:\"WinMain\"; nocase;\n    content:\"WinMainCRTStartup\"; nocase;\n    content:\"Windows\"; nocase;\n    content:\"WriteFile\"; nocase;\n    content:\"WritePrivateProfileStringA\"; nocase;\n    content:\"XMM_SAVE_AREA32\"; nocase;\n    content:\"XcptFilter_0\"; nocase;\n    content:\"_CONTEXT\"; nocase;\n    content:\"_C_specific_handler_0\"; nocase;\n    content:\"_CxxSetUnhandledExceptionFilter\"; nocase;\n    content:\"_DISPATCHER_CONTEXT\"; nocase;\n    content:\"_EXCEPTION_POINTERS\"; nocase;\n    content:\"_EXCEPTION_RECORD\"; nocase;\n    content:\"_FILETIME\"; nocase;\n    content:\"_GSHandlerCheck\"; nocase;\n    content:\"_GSHandlerCheckCommon\"; nocase;\n    content:\"_IMAGE_RUNTIME_FUNCTION_ENTRY\"; nocase;\n    content:\"_InterlockedCompareExchange64\"; nocase;\n    content:\"_InterlockedExchange64\"; nocase;\n    content:\"_OSVERSIONINFOA\"; nocase;\n    content:\"_OWORD\"; nocase;\n    content:\"_PROCESS_INFORMATION\"; nocase;\n    content:\"_PVFV\"; nocase;\n    content:\"_QWORD\"; nocase;\n    content:\"_SID_IDENTIFIER_AUTHORITY\"; nocase;\n    content:\"_STARTUPINFOA\"; nocase;\n    content:\"_STARTUPINFOW\"; nocase;\n    content:\"_SYSTEM_INFO\"; nocase;\n    content:\"_TOKEN_PRIVILEGES\"; nocase;\n    content:\"_WIN32_FIND_DATAA\"; nocase;\n    content:\"_XSAVE_FORMAT\"; nocase;\n    content:\"_acmdln\"; nocase;\n    content:\"_cexit\"; nocase;\n    content:\"_dyn_tls_init_callback\"; nocase;\n    content:\"_exception\"; nocase;\n    content:\"_guard_dispatch_icall_fptr\"; nocase;\n    content:\"_ismbblead\"; nocase;\n    content:\"_lclose\"; nocase;\n    content:\"_llseek\"; nocase;\n    content:\"_lopen\"; nocase;\n    content:\"_mainCRTStartup\"; nocase;\n    content:\"_native_startup_lock\"; nocase;\n    content:\"_native_startup_state\"; nocase;\n    content:\"_raise_securityfailure\"; nocase;\n    content:\"_report_gsfailure\"; nocase;\n    content:\"_report_rangecheckfailure\"; nocase;\n    content:\"_security_check_cookie\"; nocase;\n    content:\"_security_cookie\"; nocase;\n    content:\"_security_cookie_complement\"; nocase;\n    content:\"_security_init_cookie\"; nocase;\n    content:\"_vsnprintf\"; nocase;\n    content:\"_xc_a\"; nocase;\n    content:\"_xc_z\"; nocase;\n    content:\"_xi_a\"; nocase;\n    content:\"_xi_z\"; nocase;\n    content:\"aCommandComCS\"; nocase;\n    content:\"aDoinfinstall\"; nocase;\n    content:\"aRundll32ExeSad\"; nocase;\n    content:\"aSDS\"; nocase;\n    content:\"aShbrowseforfol\"; nocase;\n    content:\"aShell32Dll\"; nocase;\n    content:\"aShgetpathfromi\"; nocase;\n    content:\"aSystemCurrentc\"; nocase;\n    content:\"aSystemCurrentc_0\"; nocase;\n    content:\"access\"; nocase;\n    content:\"advapi32\"; nocase;\n    content:\"advpack\"; nocase;\n    content:\"allocfunc\"; nocase;\n    content:\"alpha\"; nocase;\n    content:\"amsg_exit_0\"; nocase;\n    content:\"been\"; nocase;\n    content:\"bottom\"; nocase;\n    content:\"break\"; nocase;\n    content:\"byte_14000CD1A\"; nocase;\n    content:\"byte_14000CE1F\"; nocase;\n    content:\"byte_14000CF22\"; nocase;\n    content:\"byte_14000D611\"; nocase;\n    content:\"cFileName\"; nocase;\n    content:\"case\"; nocase;\n    content:\"cbData\"; nocase;\n    content:\"cchDest\"; nocase;\n    content:\"closefunc\"; nocase;\n    content:\"continue\"; nocase;\n    content:\"detected\"; nocase;\n    content:\"dist\"; nocase;\n    content:\"dowildcard\"; nocase;\n    content:\"dwCreationDisposition\"; nocase;\n    content:\"dwDisposition\"; nocase;\n    content:\"dwFlags\"; nocase;\n    content:\"dwHandle\"; nocase;\n    content:\"dwInitParam\"; nocase;\n    content:\"dwLowDateTime\"; nocase;\n    content:\"dwMajorVersion\"; nocase;\n    content:\"dwMinorVersion\"; nocase;\n    content:\"dwOSVersionInfoSize\"; nocase;\n    content:\"dwPlatformId\"; nocase;\n    content:\"dwReserved\"; nocase;\n    content:\"else\"; nocase;\n    content:\"erfOper\"; nocase;\n    content:\"exit\"; nocase;\n    content:\"fdiNotifyExtract\"; nocase;\n    content:\"fdint\"; nocase;\n    content:\"freefunc\"; nocase;\n    content:\"g_CMD\"; nocase;\n    content:\"g_FileTable\"; nocase;\n    content:\"g_Sess\"; nocase;\n    content:\"g_bConvertRunOnce\"; nocase;\n    content:\"g_dwExitCode\"; nocase;\n    content:\"g_dwFileSizes\"; nocase;\n    content:\"g_dwRebootCheck\"; nocase;\n    content:\"g_fOSSupportsFullUI\"; nocase;\n    content:\"g_fOSSupportsINFInstalls\"; nocase;\n    content:\"g_hCancelEvent\"; nocase;\n    content:\"g_hInst\"; nocase;\n    content:\"g_hMutex\"; nocase;\n    content:\"g_hwndExtractDlg\"; nocase;\n    content:\"g_lpfnOldMEditWndProc\"; nocase;\n    content:\"g_szBrowsePath\"; nocase;\n    content:\"g_szLicense\"; nocase;\n    content:\"g_szRegValName\"; nocase;\n    content:\"g_uInfRebootOn\"; nocase;\n    content:\"g_wOSVer\"; nocase;\n    content:\"get_image_app_type\"; nocase;\n    content:\"guard_check_icall_nop\"; nocase;\n    content:\"guard_dispatch_icall_nop\"; nocase;\n    content:\"hDlg\"; nocase;\n    content:\"hKey\"; nocase;\n    content:\"hMem\"; nocase;\n    content:\"hModule\"; nocase;\n    content:\"hPrevInstance\"; nocase;\n    content:\"hProcess\"; nocase;\n    content:\"hThread\"; nocase;\n    content:\"hWnd\"; nocase;\n    content:\"i386\"; nocase;\n    content:\"include\"; nocase;\n    content:\"initterm_0\"; nocase;\n    content:\"lParam\"; nocase;\n    content:\"left\"; nocase;\n    content:\"load\"; nocase;\n    content:\"lpAppName\"; nocase;\n    content:\"lpBuffer\"; nocase;\n    content:\"lpCmdLine\"; nocase;\n    content:\"lpCommandLine\"; nocase;\n    content:\"lpData\"; nocase;\n    content:\"lpFileName\"; nocase;\n    content:\"lpName\"; nocase;\n    content:\"lpPathName\"; nocase;\n    content:\"lpStartupInfo\"; nocase;\n    content:\"lpString\"; nocase;\n    content:\"lpThreadParameter\"; nocase;\n    content:\"lpType\"; nocase;\n    content:\"lpdwReserved\"; nocase;\n    content:\"lpsz\"; nocase;\n    content:\"lpszStart\"; nocase;\n    content:\"lptstrFilename\"; nocase;\n    content:\"lstrcmpA\"; nocase;\n    content:\"matherr\"; nocase;\n    content:\"memcpy_0\"; nocase;\n    content:\"memcpy_s\"; nocase;\n    content:\"memory\"; nocase;\n    content:\"memset\"; nocase;\n    content:\"memset_0\"; nocase;\n    content:\"message\"; nocase;\n    content:\"mips\"; nocase;\n    content:\"msdownld\"; nocase;\n    content:\"nNumberOfBytesToWrite\"; nocase;\n    content:\"nShowCmd\"; nocase;\n    content:\"newmode\"; nocase;\n    content:\"oflag\"; nocase;\n    content:\"openfunc\"; nocase;\n    content:\"output\"; nocase;\n    content:\"pHandles\"; nocase;\n    content:\"pIdentifierAuthority\"; nocase;\n    content:\"pSid\"; nocase;\n    content:\"pSid2\"; nocase;\n    content:\"perf\"; nocase;\n    content:\"pfdici\"; nocase;\n    content:\"pfdin\"; nocase;\n    content:\"pmode\"; nocase;\n    content:\"pre_c_init\"; nocase;\n    content:\"pre_cpp_init\"; nocase;\n    content:\"pszCabPath\"; nocase;\n    content:\"pszCabinet\"; nocase;\n    content:\"pszDest\"; nocase;\n    content:\"pszDesta\"; nocase;\n    content:\"pszFile\"; nocase;\n    content:\"pszFormat\"; nocase;\n    content:\"pszSrc\"; nocase;\n    content:\"puLen\"; nocase;\n    content:\"qword_14000C260\"; nocase;\n    content:\"qword_14000D058\"; nocase;\n    content:\"r10d\"; nocase;\n    content:\"r11d\"; nocase;\n    content:\"r12d\"; nocase;\n    content:\"r13d\"; nocase;\n    content:\"r14d\"; nocase;\n    content:\"r15d\"; nocase;\n    content:\"readfunc\"; nocase;\n    content:\"resource\"; nocase;\n    content:\"result\"; nocase;\n    content:\"retstr\"; nocase;\n    content:\"return\"; nocase;\n    content:\"right\"; nocase;\n    content:\"rsize_t\"; nocase;\n    content:\"rundll32\"; nocase;\n    content:\"sadvpack\"; nocase;\n    content:\"seekfunc\"; nocase;\n    content:\"seektype\"; nocase;\n    content:\"setupapi\"; nocase;\n    content:\"setupx\"; nocase;\n    content:\"signed\"; nocase;\n    content:\"size_t\"; nocase;\n    content:\"sizeof\"; nocase;\n    content:\"strcpy\"; nocase;\n    content:\"string\"; nocase;\n    content:\"tagMSG\"; nocase;\n    content:\"tagRECT\"; nocase;\n    content:\"terminate\"; nocase;\n    content:\"thunk\"; nocase;\n    content:\"uType\"; nocase;\n    content:\"va_list\"; nocase;\n    content:\"va_start\"; nocase;\n    content:\"wLanguage\"; nocase;\n    content:\"wParam\"; nocase;\n    content:\"wProcessorArchitecture\"; nocase;\n    content:\"wShowWindow\"; nocase;\n    content:\"wextract_cleanup\"; nocase;\n    content:\"while\"; nocase;\n    content:\"wininit\"; nocase;\n    content:\"word_14000CD18\"; nocase;\n    content:\"word_14000DE58\"; nocase;\n    content:\"word_14000DE5A\"; nocase;\n    content:\"write\"; nocase;\n    content:\"writefunc\"; nocase;\n    content:\"wrong\"; nocase;\n    content:\"xmm0\"; nocase;\n    content:\"xmm1\"; nocase;\n    threshold:type limit, track by_src, count 1, seconds 60;\n    sid:1139592; rev:1;\n)",
  "yara_rule": "rule AutoGen_5a75d087 : Malware {\n    meta:\n        description = \"Auto-generated YARA rule based on API usage\"\n        author = \"YARRAI AutoGen\"\n        date = \"2025-07-12\"\n        md5 = \"5a75d0870cf22d2e8cdf8cbc31fad3f1\"\n        sha256 = \"7257766c7a1d0bf3fe2f6634877c4238d19bd7acd458a828f7851e145e7e295a\"\n\n    strings:\n        $s0 = \"ADMQCMD\" fullword ascii\n        $s1 = \"ANSIStrChr\" fullword ascii\n        $s2 = \"ANSIStrRChr\" fullword ascii\n        $s3 = \"AddFile\" fullword ascii\n        $s4 = \"AddPath\" fullword ascii\n        $s5 = \"AddRegRunOnce\" fullword ascii\n        $s6 = \"AdjustTokenPrivileges\" fullword ascii\n        $s7 = \"AdvancedINF\" fullword ascii\n        $s8 = \"AllocateAndInitializeSid\" fullword ascii\n        $s9 = \"AnalyzeCmd\" fullword ascii\n        $s10 = \"ArgList\" fullword ascii\n        $s11 = \"Attributes\" fullword ascii\n        $s12 = \"BOOL\" fullword ascii\n        $s13 = \"BYREF\" fullword ascii\n        $s14 = \"BYTE\" fullword ascii\n        $s15 = \"BrowseCallback\" fullword ascii\n        $s16 = \"BrowseForDir\" fullword ascii\n        $s17 = \"Buffer\" fullword ascii\n        $s18 = \"BytesPerSector\" fullword ascii\n        $s19 = \"CABINET\" fullword ascii\n        $s20 = \"CallWindowProcA\" fullword ascii\n        $s21 = \"Caption\" fullword ascii\n        $s22 = \"CatDirAndFile\" fullword ascii\n        $s23 = \"CenterWindow\" fullword ascii\n        $s24 = \"CharNextA\" fullword ascii\n        $s25 = \"CharPrevA\" fullword ascii\n        $s26 = \"CharUpperA\" fullword ascii\n        $s27 = \"CheckFileVersion\" fullword ascii\n        $s28 = \"CheckOSVersion\" fullword ascii\n        $s29 = \"CheckOverwrite\" fullword ascii\n        $s30 = \"CheckToken\" fullword ascii\n        $s31 = \"CheckTokenMembership\" fullword ascii\n        $s32 = \"CloseHandle\" fullword ascii\n        $s33 = \"Command\" fullword ascii\n        $s34 = \"CompareStringA\" fullword ascii\n        $s35 = \"ContextRecord\" fullword ascii\n        $s36 = \"Control\" fullword ascii\n        $s37 = \"ControlPc\" fullword ascii\n        $s38 = \"Could\" fullword ascii\n        $s39 = \"CreateAndValidateSubdir\" fullword ascii\n        $s40 = \"CreateDirectoryA\" fullword ascii\n        $s41 = \"CreateEventA\" fullword ascii\n        $s42 = \"CreateFileA\" fullword ascii\n        $s43 = \"CreateMutexA\" fullword ascii\n        $s44 = \"CreateProcessA\" fullword ascii\n        $s45 = \"CreateThread\" fullword ascii\n        $s46 = \"CreationTime\" fullword ascii\n        $s47 = \"CurrentProcess\" fullword ascii\n        $s48 = \"CurrentVersion\" fullword ascii\n        $s49 = \"DLGTEMPLATE\" fullword ascii\n        $s50 = \"DWORD\" fullword ascii\n        $s51 = \"DWORD64\" fullword ascii\n        $s52 = \"DWORDLONG_MAX\" fullword ascii\n        $s53 = \"Data\" fullword ascii\n        $s54 = \"DecryptFileA\" fullword ascii\n        $s55 = \"DelNodeRunDLL32\" fullword ascii\n        $s56 = \"DeleteExtractedFiles\" fullword ascii\n        $s57 = \"DeleteFileA\" fullword ascii\n        $s58 = \"DeleteMyDir\" fullword ascii\n        $s59 = \"Desktop\" fullword ascii\n        $s60 = \"DesktopWindow\" fullword ascii\n        $s61 = \"Destination\" fullword ascii\n        $s62 = \"DestinationSize\" fullword ascii\n        $s63 = \"DeviceCaps\" fullword ascii\n        $s64 = \"DialogBoxIndirectParamA\" fullword ascii\n        $s65 = \"DirectoryA\" fullword ascii\n        $s66 = \"DiskSpaceErrMsg\" fullword ascii\n        $s67 = \"DispatchMessageA\" fullword ascii\n        $s68 = \"DispatcherContext\" fullword ascii\n        $s69 = \"DisplayLicense\" fullword ascii\n        $s70 = \"DlgItem\" fullword ascii\n        $s71 = \"DoMain\" fullword ascii\n        $s72 = \"DosDateTimeToFileTime\" fullword ascii\n        $s73 = \"DriveTypeA\" fullword ascii\n        $s74 = \"ENUMRESLANGPROCA\" fullword ascii\n        $s75 = \"EXCEPTION_DISPOSITION\" fullword ascii\n        $s76 = \"EXTRACTOPT\" fullword ascii\n        $s77 = \"EnableWindow\" fullword ascii\n        $s78 = \"EndDialog\" fullword ascii\n        $s79 = \"EnumResLangProc\" fullword ascii\n        $s80 = \"EnumResourceLanguagesA\" fullword ascii\n        $s81 = \"EqualSid\" fullword ascii\n        $s82 = \"Error\" fullword ascii\n        $s83 = \"EstablisherFrame\" fullword ascii\n        $s84 = \"Except\" fullword ascii\n        $s85 = \"ExceptionCode\" fullword ascii\n        $s86 = \"ExceptionInfo\" fullword ascii\n        $s87 = \"ExceptionInformation\" fullword ascii\n        $s88 = \"ExceptionRecord\" fullword ascii\n        $s89 = \"ExitCode\" fullword ascii\n        $s90 = \"ExitProcess\" fullword ascii\n        $s91 = \"ExitWindowsEx\" fullword ascii\n        $s92 = \"ExpandCmdParams\" fullword ascii\n        $s93 = \"ExpandEnvironmentStringsA\" fullword ascii\n        $s94 = \"ExtractDlgProc\" fullword ascii\n        $s95 = \"ExtractField\" fullword ascii\n        $s96 = \"ExtractThread\" fullword ascii\n        $s97 = \"FARPROC\" fullword ascii\n        $s98 = \"FDICopy\" fullword ascii\n        $s99 = \"FDICreate\" fullword ascii\n        $s100 = \"FDIDestroy\" fullword ascii\n        $s101 = \"FDIIsCabinet\" fullword ascii\n        $s102 = \"FILESIZES\" fullword ascii\n        $s103 = \"FILETIME\" fullword ascii\n        $s104 = \"FINISHMSG\" fullword ascii\n        $s105 = \"Field\" fullword ascii\n        $s106 = \"FileA\" fullword ascii\n        $s107 = \"FileAttributesA\" fullword ascii\n        $s108 = \"FileName\" fullword ascii\n        $s109 = \"FileSystemFlags\" fullword ascii\n        $s110 = \"FileTime\" fullword ascii\n        $s111 = \"FileVersionInfoSizeA\" fullword ascii\n        $s112 = \"Filename\" fullword ascii\n        $s113 = \"FindClose\" fullword ascii\n        $s114 = \"FindFileData\" fullword ascii\n        $s115 = \"FindFirstFileA\" fullword ascii\n        $s116 = \"FindNextFileA\" fullword ascii\n        $s117 = \"FindPESection\" fullword ascii\n        $s118 = \"FindResourceA\" fullword ascii\n        $s119 = \"FinishMessage\" fullword ascii\n        $s120 = \"First\" fullword ascii\n        $s121 = \"FirstFileA\" fullword ascii\n        $s122 = \"FormatMessageA\" fullword ascii\n        $s123 = \"FreeLibrary\" fullword ascii\n        $s124 = \"FreeResource\" fullword ascii\n        $s125 = \"FreeSid\" fullword ascii\n        $s126 = \"FunctionEntry\" fullword ascii\n        $s127 = \"GetCurrentDirectoryA\" fullword ascii\n        $s128 = \"GetCurrentProcess\" fullword ascii\n        $s129 = \"GetCurrentProcessId\" fullword ascii\n        $s130 = \"GetCurrentThreadId\" fullword ascii\n        $s131 = \"GetDC\" fullword ascii\n        $s132 = \"GetDesktopWindow\" fullword ascii\n        $s133 = \"GetDeviceCaps\" fullword ascii\n        $s134 = \"GetDiskFreeSpaceA\" fullword ascii\n        $s135 = \"GetDlgItem\" fullword ascii\n        $s136 = \"GetDlgItemTextA\" fullword ascii\n        $s137 = \"GetDriveTypeA\" fullword ascii\n        $s138 = \"GetExitCodeProcess\" fullword ascii\n        $s139 = \"GetFileAttributesA\" fullword ascii\n        $s140 = \"GetFileList\" fullword ascii\n        $s141 = \"GetFileTobeChecked\" fullword ascii\n        $s142 = \"GetFileVersionInfoA\" fullword ascii\n        $s143 = \"GetFileVersionInfoSizeA\" fullword ascii\n        $s144 = \"GetLastError\" fullword ascii\n        $s145 = \"GetModuleFileNameA\" fullword ascii\n        $s146 = \"GetModuleHandleW\" fullword ascii\n        $s147 = \"GetNewTempDir\" fullword ascii\n        $s148 = \"GetParentDir\" fullword ascii\n        $s149 = \"GetPrivateProfileIntA\" fullword ascii\n        $s150 = \"GetPrivateProfileStringA\" fullword ascii\n        $s151 = \"GetProcAddress\" fullword ascii\n        $s152 = \"GetResource\" fullword ascii\n        $s153 = \"GetShortPathNameA\" fullword ascii\n        $s154 = \"GetStartupInfoW\" fullword ascii\n        $s155 = \"GetSystemDirectoryA\" fullword ascii\n        $s156 = \"GetSystemInfo\" fullword ascii\n        $s157 = \"GetSystemMetrics\" fullword ascii\n        $s158 = \"GetSystemTimeAsFileTime\" fullword ascii\n        $s159 = \"GetTempDirectory\" fullword ascii\n        $s160 = \"GetTempFileNameA\" fullword ascii\n        $s161 = \"GetTempPathA\" fullword ascii\n        $s162 = \"GetTickCount\" fullword ascii\n        $s163 = \"GetTokenInformation\" fullword ascii\n        $s164 = \"GetUsersPermission\" fullword ascii\n        $s165 = \"GetVersion\" fullword ascii\n        $s166 = \"GetVersionExA\" fullword ascii\n        $s167 = \"GetVolumeInformationA\" fullword ascii\n        $s168 = \"GetWindowLongPtrA\" fullword ascii\n        $s169 = \"GetWindowRect\" fullword ascii\n        $s170 = \"GetWindowsDirectoryA\" fullword ascii\n        $s171 = \"GetWininitSize\" fullword ascii\n        $s172 = \"GlobalAlloc\" fullword ascii\n        $s173 = \"GlobalFree\" fullword ascii\n        $s174 = \"GlobalLock\" fullword ascii\n        $s175 = \"GlobalUnlock\" fullword ascii\n        $s176 = \"HANDLE\" fullword ascii\n        $s177 = \"HFDI\" fullword ascii\n        $s178 = \"HFILE\" fullword ascii\n        $s179 = \"HGLOBAL\" fullword ascii\n        $s180 = \"HINSTANCE\" fullword ascii\n        $s181 = \"HKEY\" fullword ascii\n        $s182 = \"HKEY_CURRENT_USER\" fullword ascii\n        $s183 = \"HKEY_LOCAL_MACHINE\" fullword ascii\n        $s184 = \"HLOCAL\" fullword ascii\n        $s185 = \"HMODULE\" fullword ascii\n        $s186 = \"HRESULT\" fullword ascii\n        $s187 = \"HRSRC\" fullword ascii\n        $s188 = \"HWND\" fullword ascii\n        $s189 = \"HandlerData\" fullword ascii\n        $s190 = \"HeapSetInformation\" fullword ascii\n        $s191 = \"INSTANCECHECK\" fullword ascii\n        $s192 = \"INT_PTR\" fullword ascii\n        $s193 = \"ImageBase\" fullword ascii\n        $s194 = \"Init\" fullword ascii\n        $s195 = \"InitCommonControls\" fullword ascii\n        $s196 = \"IsBiDiLocalizedBinary\" fullword ascii\n        $s197 = \"IsDBCSLeadByte\" fullword ascii\n        $s198 = \"IsEnoughSpace\" fullword ascii\n        $s199 = \"IsGoodTempDir\" fullword ascii\n        $s200 = \"IsNTAdmin\" fullword ascii\n        $s201 = \"IsNonwritableInCurrentImage\" fullword ascii\n        $s202 = \"IsWindowsDrive\" fullword ascii\n        $s203 = \"Kernel32\" fullword ascii\n        $s204 = \"LABEL_11\" fullword ascii\n        $s205 = \"LABEL_12\" fullword ascii\n        $s206 = \"LABEL_13\" fullword ascii\n        $s207 = \"LABEL_14\" fullword ascii\n        $s208 = \"LABEL_17\" fullword ascii\n        $s209 = \"LABEL_18\" fullword ascii\n        $s210 = \"LABEL_19\" fullword ascii\n        $s211 = \"LABEL_20\" fullword ascii\n        $s212 = \"LABEL_21\" fullword ascii\n        $s213 = \"LABEL_22\" fullword ascii\n        $s214 = \"LABEL_23\" fullword ascii\n        $s215 = \"LABEL_24\" fullword ascii\n        $s216 = \"LABEL_25\" fullword ascii\n        $s217 = \"LABEL_26\" fullword ascii\n        $s218 = \"LABEL_27\" fullword ascii\n        $s219 = \"LABEL_28\" fullword ascii\n        $s220 = \"LABEL_29\" fullword ascii\n        $s221 = \"LABEL_3\" fullword ascii\n        $s222 = \"LABEL_30\" fullword ascii\n        $s223 = \"LABEL_31\" fullword ascii\n        $s224 = \"LABEL_32\" fullword ascii\n        $s225 = \"LABEL_33\" fullword ascii\n        $s226 = \"LABEL_34\" fullword ascii\n        $s227 = \"LABEL_35\" fullword ascii\n        $s228 = \"LABEL_36\" fullword ascii\n        $s229 = \"LABEL_37\" fullword ascii\n        $s230 = \"LABEL_4\" fullword ascii\n        $s231 = \"LABEL_40\" fullword ascii\n        $s232 = \"LABEL_43\" fullword ascii\n        $s233 = \"LABEL_46\" fullword ascii\n        $s234 = \"LABEL_49\" fullword ascii\n        $s235 = \"LABEL_5\" fullword ascii\n        $s236 = \"LABEL_50\" fullword ascii\n        $s237 = \"LABEL_53\" fullword ascii\n        $s238 = \"LABEL_54\" fullword ascii\n        $s239 = \"LABEL_55\" fullword ascii\n        $s240 = \"LABEL_56\" fullword ascii\n        $s241 = \"LABEL_59\" fullword ascii\n        $s242 = \"LABEL_6\" fullword ascii\n        $s243 = \"LABEL_61\" fullword ascii\n        $s244 = \"LABEL_63\" fullword ascii\n        $s245 = \"LABEL_64\" fullword ascii\n        $s246 = \"LABEL_67\" fullword ascii\n        $s247 = \"LABEL_69\" fullword ascii\n        $s248 = \"LABEL_7\" fullword ascii\n        $s249 = \"LABEL_70\" fullword ascii\n        $s250 = \"LABEL_8\" fullword ascii\n        $s251 = \"LABEL_82\" fullword ascii\n        $s252 = \"LABEL_9\" fullword ascii\n        $s253 = \"LABEL_90\" fullword ascii\n        $s254 = \"LARGE_INTEGER\" fullword ascii\n        $s255 = \"LICENSE\" fullword ascii\n        $s256 = \"LOBYTE\" fullword ascii\n        $s257 = \"LODWORD\" fullword ascii\n        $s258 = \"LONG_PTR\" fullword ascii\n        $s259 = \"LOWORD\" fullword ascii\n        $s260 = \"LPARAM\" fullword ascii\n        $s261 = \"LPBYTE\" fullword ascii\n        $s262 = \"LPCSTR\" fullword ascii\n        $s263 = \"LPDWORD\" fullword ascii\n        $s264 = \"LPOSVERSIONINFOA\" fullword ascii\n        $s265 = \"LPSTARTUPINFOA\" fullword ascii\n        $s266 = \"LPSTR\" fullword ascii\n        $s267 = \"LPTHREAD_START_ROUTINE\" fullword ascii\n        $s268 = \"LPTOP_LEVEL_EXCEPTION_FILTER\" fullword ascii\n        $s269 = \"LPVOID\" fullword ascii\n        $s270 = \"LRESULT\" fullword ascii\n        $s271 = \"LSTATUS\" fullword ascii\n        $s272 = \"Last\" fullword ascii\n        $s273 = \"LastError\" fullword ascii\n        $s274 = \"Library\" fullword ascii\n        $s275 = \"LibraryA\" fullword ascii\n        $s276 = \"LicenseDlgProc\" fullword ascii\n        $s277 = \"LoadLibraryA\" fullword ascii\n        $s278 = \"LoadLibraryExA\" fullword ascii\n        $s279 = \"LoadResource\" fullword ascii\n        $s280 = \"LoadString\" fullword ascii\n        $s281 = \"LoadStringA\" fullword ascii\n        $s282 = \"LocalAlloc\" fullword ascii\n        $s283 = \"LocalFileTimeToFileTime\" fullword ascii\n        $s284 = \"LocalFree\" fullword ascii\n        $s285 = \"LockResource\" fullword ascii\n        $s286 = \"LookupPrivilegeValueA\" fullword ascii\n        $s287 = \"LowPart\" fullword ascii\n        $s288 = \"Luid\" fullword ascii\n        $s289 = \"MEditSubProc\" fullword ascii\n        $s290 = \"MaximumComponentLength\" fullword ascii\n        $s291 = \"MessageBeep\" fullword ascii\n        $s292 = \"MessageBoxA\" fullword ascii\n        $s293 = \"Microsoft\" fullword ascii\n        $s294 = \"ModuleHandleW\" fullword ascii\n        $s295 = \"MsgBox2Param\" fullword ascii\n        $s296 = \"MsgWaitForMultipleObjects\" fullword ascii\n        $s297 = \"MulDiv\" fullword ascii\n        $s298 = \"MyDialogBox\" fullword ascii\n        $s299 = \"MyGetLastError\" fullword ascii\n        $s300 = \"MyLoadLibrary\" fullword ascii\n        $s301 = \"MyNTReboot\" fullword ascii\n        $s302 = \"Name\" fullword ascii\n        $s303 = \"NeedRebootInit\" fullword ascii\n        $s304 = \"NewState\" fullword ascii\n        $s305 = \"None\" fullword ascii\n        $s306 = \"NtCurrentTeb\" fullword ascii\n        $s307 = \"NtTib\" fullword ascii\n        $s308 = \"NumberOfBytesRead\" fullword ascii\n        $s309 = \"NumberOfBytesWritten\" fullword ascii\n        $s310 = \"NumberOfFreeClusters\" fullword ascii\n        $s311 = \"NumberParameters\" fullword ascii\n        $s312 = \"OpenProcessToken\" fullword ascii\n        $s313 = \"OverwriteDlgProc\" fullword ascii\n        $s314 = \"PACKINSTSPACE\" fullword ascii\n        $s315 = \"PERF\" fullword ascii\n        $s316 = \"PEXCEPTION_RECORD\" fullword ascii\n        $s317 = \"PFDICABINETINFO\" fullword ascii\n        $s318 = \"PFDINOTIFICATION\" fullword ascii\n        $s319 = \"PFNALLOC\" fullword ascii\n        $s320 = \"PFNCLOSE\" fullword ascii\n        $s321 = \"PFNFDINOTIFY\" fullword ascii\n        $s322 = \"PFNFREE\" fullword ascii\n        $s323 = \"PFNOPEN\" fullword ascii\n        $s324 = \"PFNREAD\" fullword ascii\n        $s325 = \"PFNSEEK\" fullword ascii\n        $s326 = \"PFNWRITE\" fullword ascii\n        $s327 = \"PHKEY\" fullword ascii\n        $s328 = \"POSTRUNPROGRAM\" fullword ascii\n        $s329 = \"PSID\" fullword ascii\n        $s330 = \"PVOID\" fullword ascii\n        $s331 = \"Panel\" fullword ascii\n        $s332 = \"ParseCmdLine\" fullword ascii\n        $s333 = \"PathName\" fullword ascii\n        $s334 = \"Paths\" fullword ascii\n        $s335 = \"PeekMessageA\" fullword ascii\n        $s336 = \"PerformanceCount\" fullword ascii\n        $s337 = \"PrivateProfileIntA\" fullword ascii\n        $s338 = \"PrivilegeCount\" fullword ascii\n        $s339 = \"Privileges\" fullword ascii\n        $s340 = \"ProcAddress\" fullword ascii\n        $s341 = \"ProcessInformation\" fullword ascii\n        $s342 = \"ProcessUpdatedFile_Size\" fullword ascii\n        $s343 = \"ProcessUpdatedFile_Write\" fullword ascii\n        $s344 = \"QuadPart\" fullword ascii\n        $s345 = \"QueryPerformanceCounter\" fullword ascii\n        $s346 = \"REBOOT\" fullword ascii\n        $s347 = \"RUNPROGRAM\" fullword ascii\n        $s348 = \"ReadFile\" fullword ascii\n        $s349 = \"Reboot\" fullword ascii\n        $s350 = \"Rect\" fullword ascii\n        $s351 = \"RegCloseKey\" fullword ascii\n        $s352 = \"RegCreateKeyExA\" fullword ascii\n        $s353 = \"RegDeleteValueA\" fullword ascii\n        $s354 = \"RegOpenKeyExA\" fullword ascii\n        $s355 = \"RegQueryInfoKeyA\" fullword ascii\n        $s356 = \"RegQueryValueExA\" fullword ascii\n        $s357 = \"RegServer\" fullword ascii\n        $s358 = \"RegSetValueExA\" fullword ascii\n        $s359 = \"ReleaseDC\" fullword ascii\n        $s360 = \"RemoveDirectoryA\" fullword ascii\n        $s361 = \"RemoveLeadTailBlanks\" fullword ascii\n        $s362 = \"ResetEvent\" fullword ascii\n        $s363 = \"Resource\" fullword ascii\n        $s364 = \"ResourceA\" fullword ascii\n        $s365 = \"ResourceLocale\" fullword ascii\n        $s366 = \"RootPathName\" fullword ascii\n        $s367 = \"RtlCaptureContext\" fullword ascii\n        $s368 = \"RtlLookupFunctionEntry\" fullword ascii\n        $s369 = \"RtlVirtualUnwind\" fullword ascii\n        $s370 = \"RtlpImageNtHeader\" fullword ascii\n        $s371 = \"RunApps\" fullword ascii\n        $s372 = \"RunInstallCommand\" fullword ascii\n        $s373 = \"RunningOnWin95BiDiLoc\" fullword ascii\n        $s374 = \"SHOWWINDOW\" fullword ascii\n        $s375 = \"SIZE_T\" fullword ascii\n        $s376 = \"STRSAFE_LPCSTR\" fullword ascii\n        $s377 = \"STRSAFE_LPSTR\" fullword ascii\n        $s378 = \"SeShutdownPrivilege\" fullword ascii\n        $s379 = \"SectorsPerCluster\" fullword ascii\n        $s380 = \"SendDlgItemMessageA\" fullword ascii\n        $s381 = \"SendMessageA\" fullword ascii\n        $s382 = \"SetCurrentDirectoryA\" fullword ascii\n        $s383 = \"SetDlgItemTextA\" fullword ascii\n        $s384 = \"SetEvent\" fullword ascii\n        $s385 = \"SetFileAttributesA\" fullword ascii\n        $s386 = \"SetFilePointer\" fullword ascii\n        $s387 = \"SetFileTime\" fullword ascii\n        $s388 = \"SetForegroundWindow\" fullword ascii\n        $s389 = \"SetUnhandledExceptionFilter\" fullword ascii\n        $s390 = \"SetWindowLongPtrA\" fullword ascii\n        $s391 = \"SetWindowPos\" fullword ascii\n        $s392 = \"SetWindowTextA\" fullword ascii\n        $s393 = \"ShowWindow\" fullword ascii\n        $s394 = \"Size\" fullword ascii\n        $s395 = \"SizeofResource\" fullword ascii\n        $s396 = \"Sleep\" fullword ascii\n        $s397 = \"Software\" fullword ascii\n        $s398 = \"StackBase\" fullword ascii\n        $s399 = \"StackCookie\" fullword ascii\n        $s400 = \"StartupInfo\" fullword ascii\n        $s401 = \"String1\" fullword ascii\n        $s402 = \"String2\" fullword ascii\n        $s403 = \"StringA\" fullword ascii\n        $s404 = \"StringCchCatA\" fullword ascii\n        $s405 = \"StringCchCopyA\" fullword ascii\n        $s406 = \"StringCchPrintfA\" fullword ascii\n        $s407 = \"SubKey\" fullword ascii\n        $s408 = \"SystemInfo\" fullword ascii\n        $s409 = \"SystemTimeAsFileTime\" fullword ascii\n        $s410 = \"TITLE\" fullword ascii\n        $s411 = \"TMP4351\" fullword ascii\n        $s412 = \"TempDirDlgProc\" fullword ascii\n        $s413 = \"TerminateProcess\" fullword ascii\n        $s414 = \"TerminateThread\" fullword ascii\n        $s415 = \"Text\" fullword ascii\n        $s416 = \"ThreadId\" fullword ascii\n        $s417 = \"TokenGroups\" fullword ascii\n        $s418 = \"TokenHandle\" fullword ascii\n        $s419 = \"TokenInformationLength\" fullword ascii\n        $s420 = \"TotalNumberOfClusters\" fullword ascii\n        $s421 = \"TravelUpdatedFiles\" fullword ascii\n        $s422 = \"Type\" fullword ascii\n        $s423 = \"UINT\" fullword ascii\n        $s424 = \"ULONG\" fullword ascii\n        $s425 = \"UPDFILE\" fullword ascii\n        $s426 = \"UPROMPT\" fullword ascii\n        $s427 = \"USRQCMD\" fullword ascii\n        $s428 = \"UnhandledExceptionFilter\" fullword ascii\n        $s429 = \"UpdateCabinetInfo\" fullword ascii\n        $s430 = \"VERCHECK\" fullword ascii\n        $s431 = \"ValidateImageBase\" fullword ascii\n        $s432 = \"Value\" fullword ascii\n        $s433 = \"ValueName\" fullword ascii\n        $s434 = \"VerQueryValueA\" fullword ascii\n        $s435 = \"VerifyCabinet\" fullword ascii\n        $s436 = \"Version\" fullword ascii\n        $s437 = \"VersionInformation\" fullword ascii\n        $s438 = \"WNDPROC\" fullword ascii\n        $s439 = \"WPARAM\" fullword ascii\n        $s440 = \"WaitForObject\" fullword ascii\n        $s441 = \"WaitForSingleObject\" fullword ascii\n        $s442 = \"WarningDlgProc\" fullword ascii\n        $s443 = \"WinMain\" fullword ascii\n        $s444 = \"WinMainCRTStartup\" fullword ascii\n        $s445 = \"Windows\" fullword ascii\n        $s446 = \"WriteFile\" fullword ascii\n        $s447 = \"WritePrivateProfileStringA\" fullword ascii\n        $s448 = \"XMM_SAVE_AREA32\" fullword ascii\n        $s449 = \"XcptFilter_0\" fullword ascii\n        $s450 = \"_BOOL8\" fullword ascii\n        $s451 = \"_BYTE\" fullword ascii\n        $s452 = \"_CONTEXT\" fullword ascii\n        $s453 = \"_C_specific_handler_0\" fullword ascii\n        $s454 = \"_CxxSetUnhandledExceptionFilter\" fullword ascii\n        $s455 = \"_DISPATCHER_CONTEXT\" fullword ascii\n        $s456 = \"_DWORD\" fullword ascii\n        $s457 = \"_EXCEPTION_POINTERS\" fullword ascii\n        $s458 = \"_EXCEPTION_RECORD\" fullword ascii\n        $s459 = \"_FILETIME\" fullword ascii\n        $s460 = \"_GSHandlerCheck\" fullword ascii\n        $s461 = \"_GSHandlerCheckCommon\" fullword ascii\n        $s462 = \"_IMAGE_RUNTIME_FUNCTION_ENTRY\" fullword ascii\n        $s463 = \"_InterlockedCompareExchange64\" fullword ascii\n        $s464 = \"_InterlockedExchange64\" fullword ascii\n        $s465 = \"_OSVERSIONINFOA\" fullword ascii\n        $s466 = \"_OWORD\" fullword ascii\n        $s467 = \"_PROCESS_INFORMATION\" fullword ascii\n        $s468 = \"_PVFV\" fullword ascii\n        $s469 = \"_QWORD\" fullword ascii\n        $s470 = \"_SID_IDENTIFIER_AUTHORITY\" fullword ascii\n        $s471 = \"_STARTUPINFOA\" fullword ascii\n        $s472 = \"_STARTUPINFOW\" fullword ascii\n        $s473 = \"_SYSTEM_INFO\" fullword ascii\n        $s474 = \"_TOKEN_PRIVILEGES\" fullword ascii\n        $s475 = \"_WIN32_FIND_DATAA\" fullword ascii\n        $s476 = \"_WORD\" fullword ascii\n        $s477 = \"_XSAVE_FORMAT\" fullword ascii\n        $s478 = \"__CxxUnhandledExceptionFilter\" fullword ascii\n        $s479 = \"__ROL8__\" fullword ascii\n        $s480 = \"__ROR8__\" fullword ascii\n        $s481 = \"__cdecl\" fullword ascii\n        $s482 = \"__fastcall\" fullword ascii\n        $s483 = \"__getmainargs\" fullword ascii\n        $s484 = \"__int128\" fullword ascii\n        $s485 = \"__int16\" fullword ascii\n        $s486 = \"__int64\" fullword ascii\n        $s487 = \"__int8\" fullword ascii\n        $s488 = \"__return_ptr\" fullword ascii\n        $s489 = \"__stdcall\" fullword ascii\n        $s490 = \"_acmdln\" fullword ascii\n        $s491 = \"_cexit\" fullword ascii\n        $s492 = \"_dyn_tls_init_callback\" fullword ascii\n        $s493 = \"_exception\" fullword ascii\n        $s494 = \"_guard_dispatch_icall_fptr\" fullword ascii\n        $s495 = \"_ismbblead\" fullword ascii\n        $s496 = \"_lclose\" fullword ascii\n        $s497 = \"_llseek\" fullword ascii\n        $s498 = \"_lopen\" fullword ascii\n        $s499 = \"_mainCRTStartup\" fullword ascii\n        $s500 = \"_native_startup_lock\" fullword ascii\n        $s501 = \"_native_startup_state\" fullword ascii\n        $s502 = \"_raise_securityfailure\" fullword ascii\n        $s503 = \"_report_gsfailure\" fullword ascii\n        $s504 = \"_report_rangecheckfailure\" fullword ascii\n        $s505 = \"_security_check_cookie\" fullword ascii\n        $s506 = \"_security_cookie\" fullword ascii\n        $s507 = \"_security_cookie_complement\" fullword ascii\n        $s508 = \"_security_init_cookie\" fullword ascii\n        $s509 = \"_vsnprintf\" fullword ascii\n        $s510 = \"_xc_a\" fullword ascii\n        $s511 = \"_xc_z\" fullword ascii\n        $s512 = \"_xi_a\" fullword ascii\n        $s513 = \"_xi_z\" fullword ascii\n        $s514 = \"aCommandComCS\" fullword ascii\n        $s515 = \"aDefaultinstall\" fullword ascii\n        $s516 = \"aDoinfinstall\" fullword ascii\n        $s517 = \"aRundll32ExeSad\" fullword ascii\n        $s518 = \"aSDS\" fullword ascii\n        $s519 = \"aShbrowseforfol\" fullword ascii\n        $s520 = \"aShell32Dll\" fullword ascii\n        $s521 = \"aShgetpathfromi\" fullword ascii\n        $s522 = \"aSystemCurrentc\" fullword ascii\n        $s523 = \"aSystemCurrentc_0\" fullword ascii\n        $s524 = \"access\" fullword ascii\n        $s525 = \"advapi32\" fullword ascii\n        $s526 = \"advpack\" fullword ascii\n        $s527 = \"allocfunc\" fullword ascii\n        $s528 = \"alpha\" fullword ascii\n        $s529 = \"amsg_exit_0\" fullword ascii\n        $s530 = \"attributes\" fullword ascii\n        $s531 = \"b094\" fullword ascii\n        $s532 = \"been\" fullword ascii\n        $s533 = \"bfe87afd\" fullword ascii\n        $s534 = \"bool\" fullword ascii\n        $s535 = \"bottom\" fullword ascii\n        $s536 = \"break\" fullword ascii\n        $s537 = \"byte_14000CD1A\" fullword ascii\n        $s538 = \"byte_14000CE1F\" fullword ascii\n        $s539 = \"byte_14000CF22\" fullword ascii\n        $s540 = \"byte_14000D611\" fullword ascii\n        $s541 = \"cFileName\" fullword ascii\n        $s542 = \"case\" fullword ascii\n        $s543 = \"cbData\" fullword ascii\n        $s544 = \"cchDest\" fullword ascii\n        $s545 = \"closefunc\" fullword ascii\n        $s546 = \"const\" fullword ascii\n        $s547 = \"continue\" fullword ascii\n        $s548 = \"default\" fullword ascii\n        $s549 = \"detected\" fullword ascii\n        $s550 = \"dist\" fullword ascii\n        $s551 = \"dowildcard\" fullword ascii\n        $s552 = \"dwCreationDisposition\" fullword ascii\n        $s553 = \"dwDisposition\" fullword ascii\n        $s554 = \"dwFileAttributes\" fullword ascii\n        $s555 = \"dwFlags\" fullword ascii\n        $s556 = \"dwHandle\" fullword ascii\n        $s557 = \"dwInitParam\" fullword ascii\n        $s558 = \"dwLowDateTime\" fullword ascii\n        $s559 = \"dwMajorVersion\" fullword ascii\n        $s560 = \"dwMinorVersion\" fullword ascii\n        $s561 = \"dwOSVersionInfoSize\" fullword ascii\n        $s562 = \"dwPlatformId\" fullword ascii\n        $s563 = \"dwReserved\" fullword ascii\n        $s564 = \"dword_14000C14C\" fullword ascii\n        $s565 = \"dword_14000C208\" fullword ascii\n        $s566 = \"dword_14000C20C\" fullword ascii\n        $s567 = \"dword_14000C220\" fullword ascii\n        $s568 = \"dword_14000C224\" fullword ascii\n        $s569 = \"dword_14000C22C\" fullword ascii\n        $s570 = \"dword_14000C240\" fullword ascii\n        $s571 = \"dword_14000C244\" fullword ascii\n        $s572 = \"dword_14000C250\" fullword ascii\n        $s573 = \"dword_14000C254\" fullword ascii\n        $s574 = \"dword_14000C268\" fullword ascii\n        $s575 = \"dword_14000C840\" fullword ascii\n        $s576 = \"dword_14000CCE0\" fullword ascii\n        $s577 = \"dword_14000CD04\" fullword ascii\n        $s578 = \"dword_14000CD08\" fullword ascii\n        $s579 = \"dword_14000CD0C\" fullword ascii\n        $s580 = \"dword_14000CD10\" fullword ascii\n        $s581 = \"dword_14000CD14\" fullword ascii\n        $s582 = \"dword_14000D028\" fullword ascii\n        $s583 = \"dword_14000D568\" fullword ascii\n        $s584 = \"dword_14000D5FC\" fullword ascii\n        $s585 = \"dword_14000D600\" fullword ascii\n        $s586 = \"dword_14000D818\" fullword ascii\n        $s587 = \"dword_14000D820\" fullword ascii\n        $s588 = \"dword_14000D824\" fullword ascii\n        $s589 = \"dword_14000D82C\" fullword ascii\n        $s590 = \"dword_14000DE5C\" fullword ascii\n        $s591 = \"dword_14000DE60\" fullword ascii\n        $s592 = \"dword_14000DE64\" fullword ascii\n        $s593 = \"dword_14000DE68\" fullword ascii\n        $s594 = \"else\" fullword ascii\n        $s595 = \"erfOper\" fullword ascii\n        $s596 = \"exit\" fullword ascii\n        $s597 = \"fdiNotifyExtract\" fullword ascii\n        $s598 = \"fdint\" fullword ascii\n        $s599 = \"freefunc\" fullword ascii\n        $s600 = \"g_CMD\" fullword ascii\n        $s601 = \"g_FileTable\" fullword ascii\n        $s602 = \"g_Sess\" fullword ascii\n        $s603 = \"g_bConvertRunOnce\" fullword ascii\n        $s604 = \"g_dwExitCode\" fullword ascii\n        $s605 = \"g_dwFileSizes\" fullword ascii\n        $s606 = \"g_dwRebootCheck\" fullword ascii\n        $s607 = \"g_fOSSupportsFullUI\" fullword ascii\n        $s608 = \"g_fOSSupportsINFInstalls\" fullword ascii\n        $s609 = \"g_hCancelEvent\" fullword ascii\n        $s610 = \"g_hInst\" fullword ascii\n        $s611 = \"g_hMutex\" fullword ascii\n        $s612 = \"g_hwndExtractDlg\" fullword ascii\n        $s613 = \"g_lpfnOldMEditWndProc\" fullword ascii\n        $s614 = \"g_szBrowsePath\" fullword ascii\n        $s615 = \"g_szLicense\" fullword ascii\n        $s616 = \"g_szRegValName\" fullword ascii\n        $s617 = \"g_uInfRebootOn\" fullword ascii\n        $s618 = \"g_wOSVer\" fullword ascii\n        $s619 = \"get_image_app_type\" fullword ascii\n        $s620 = \"guard_check_icall_nop\" fullword ascii\n        $s621 = \"guard_dispatch_icall_nop\" fullword ascii\n        $s622 = \"hDlg\" fullword ascii\n        $s623 = \"hInstance\" fullword ascii\n        $s624 = \"hKey\" fullword ascii\n        $s625 = \"hMem\" fullword ascii\n        $s626 = \"hModule\" fullword ascii\n        $s627 = \"hPrevInstance\" fullword ascii\n        $s628 = \"hProcess\" fullword ascii\n        $s629 = \"hThread\" fullword ascii\n        $s630 = \"hWnd\" fullword ascii\n        $s631 = \"i386\" fullword ascii\n        $s632 = \"include\" fullword ascii\n        $s633 = \"initterm_0\" fullword ascii\n        $s634 = \"lParam\" fullword ascii\n        $s635 = \"left\" fullword ascii\n        $s636 = \"load\" fullword ascii\n        $s637 = \"lpAppName\" fullword ascii\n        $s638 = \"lpBuffer\" fullword ascii\n        $s639 = \"lpCmdLine\" fullword ascii\n        $s640 = \"lpCommandLine\" fullword ascii\n        $s641 = \"lpData\" fullword ascii\n        $s642 = \"lpFileName\" fullword ascii\n        $s643 = \"lpName\" fullword ascii\n        $s644 = \"lpPathName\" fullword ascii\n        $s645 = \"lpReserved\" fullword ascii\n        $s646 = \"lpStartupInfo\" fullword ascii\n        $s647 = \"lpString\" fullword ascii\n        $s648 = \"lpThreadParameter\" fullword ascii\n        $s649 = \"lpType\" fullword ascii\n        $s650 = \"lpdwReserved\" fullword ascii\n        $s651 = \"lpsz\" fullword ascii\n        $s652 = \"lpszStart\" fullword ascii\n        $s653 = \"lptstrFilename\" fullword ascii\n        $s654 = \"lstrcmpA\" fullword ascii\n        $s655 = \"matherr\" fullword ascii\n        $s656 = \"memcpy_0\" fullword ascii\n        $s657 = \"memcpy_s\" fullword ascii\n        $s658 = \"memory\" fullword ascii\n        $s659 = \"memset\" fullword ascii\n        $s660 = \"memset_0\" fullword ascii\n        $s661 = \"message\" fullword ascii\n        $s662 = \"mips\" fullword ascii\n        $s663 = \"msdownld\" fullword ascii\n        $s664 = \"nNumberOfBytesToWrite\" fullword ascii\n        $s665 = \"nShowCmd\" fullword ascii\n        $s666 = \"newmode\" fullword ascii\n        $s667 = \"off_140009000\" fullword ascii\n        $s668 = \"oflag\" fullword ascii\n        $s669 = \"openfunc\" fullword ascii\n        $s670 = \"output\" fullword ascii\n        $s671 = \"pHandles\" fullword ascii\n        $s672 = \"pIdentifierAuthority\" fullword ascii\n        $s673 = \"pSid\" fullword ascii\n        $s674 = \"pSid2\" fullword ascii\n        $s675 = \"perf\" fullword ascii\n        $s676 = \"pfdici\" fullword ascii\n        $s677 = \"pfdin\" fullword ascii\n        $s678 = \"pmode\" fullword ascii\n        $s679 = \"pre_c_init\" fullword ascii\n        $s680 = \"pre_cpp_init\" fullword ascii\n        $s681 = \"pszCabPath\" fullword ascii\n        $s682 = \"pszCabinet\" fullword ascii\n        $s683 = \"pszDest\" fullword ascii\n        $s684 = \"pszDesta\" fullword ascii\n        $s685 = \"pszFile\" fullword ascii\n        $s686 = \"pszFormat\" fullword ascii\n        $s687 = \"pszSrc\" fullword ascii\n        $s688 = \"puLen\" fullword ascii\n        $s689 = \"qword_14000C260\" fullword ascii\n        $s690 = \"qword_14000D058\" fullword ascii\n        $s691 = \"r10d\" fullword ascii\n        $s692 = \"r11d\" fullword ascii\n        $s693 = \"r12d\" fullword ascii\n        $s694 = \"r13d\" fullword ascii\n        $s695 = \"r14d\" fullword ascii\n        $s696 = \"r15d\" fullword ascii\n        $s697 = \"readfunc\" fullword ascii\n        $s698 = \"resource\" fullword ascii\n        $s699 = \"result\" fullword ascii\n        $s700 = \"retstr\" fullword ascii\n        $s701 = \"return\" fullword ascii\n        $s702 = \"right\" fullword ascii\n        $s703 = \"rsize_t\" fullword ascii\n        $s704 = \"rundll32\" fullword ascii\n        $s705 = \"sadvpack\" fullword ascii\n        $s706 = \"seekfunc\" fullword ascii\n        $s707 = \"seektype\" fullword ascii\n        $s708 = \"setupapi\" fullword ascii\n        $s709 = \"setupx\" fullword ascii\n        $s710 = \"signed\" fullword ascii\n        $s711 = \"size_t\" fullword ascii\n        $s712 = \"sizeof\" fullword ascii\n        $s713 = \"strcpy\" fullword ascii\n        $s714 = \"string\" fullword ascii\n        $s715 = \"struct\" fullword ascii\n        $s716 = \"switch\" fullword ascii\n        $s717 = \"tagMSG\" fullword ascii\n        $s718 = \"tagRECT\" fullword ascii\n        $s719 = \"terminate\" fullword ascii\n        $s720 = \"thunk\" fullword ascii\n        $s721 = \"uType\" fullword ascii\n        $s722 = \"uintptr_t\" fullword ascii\n        $s723 = \"unk_14000C228\" fullword ascii\n        $s724 = \"unk_14000C230\" fullword ascii\n        $s725 = \"unk_14000C238\" fullword ascii\n        $s726 = \"unk_14000C270\" fullword ascii\n        $s727 = \"unk_14000C278\" fullword ascii\n        $s728 = \"unk_14000C280\" fullword ascii\n        $s729 = \"unk_14000D83C\" fullword ascii\n        $s730 = \"unk_14000DB4C\" fullword ascii\n        $s731 = \"unk_14000DC50\" fullword ascii\n        $s732 = \"unk_14000DD54\" fullword ascii\n        $s733 = \"unsigned\" fullword ascii\n        $s734 = \"va_list\" fullword ascii\n        $s735 = \"va_start\" fullword ascii\n        $s736 = \"void\" fullword ascii\n        $s737 = \"wLanguage\" fullword ascii\n        $s738 = \"wParam\" fullword ascii\n        $s739 = \"wProcessorArchitecture\" fullword ascii\n        $s740 = \"wShowWindow\" fullword ascii\n        $s741 = \"wextract_cleanup\" fullword ascii\n        $s742 = \"while\" fullword ascii\n        $s743 = \"wininit\" fullword ascii\n        $s744 = \"word_14000CD18\" fullword ascii\n        $s745 = \"word_14000DE58\" fullword ascii\n        $s746 = \"word_14000DE5A\" fullword ascii\n        $s747 = \"write\" fullword ascii\n        $s748 = \"writefunc\" fullword ascii\n        $s749 = \"wrong\" fullword ascii\n        $s750 = \"xmm0\" fullword ascii\n        $s751 = \"xmm1\" fullword ascii\n\n    condition:\n        uint16(0) == 0x5A4D and 752 of them\n}"
}