{
  "text": "### 요약 보고서 - ❸ Call Graph\n\n#### ① 함수 호출 흐름 시각화\n\n**주요 함수 중심 노드/엣지 구조 정리:**\n- **루트 함수:** `main` 함수가 루트로 작동하며, 프로그램의 시작 지점입니다.\n- **중심 노드:** \n  - `initialize`: 프로그램 초기화 작업을 수행합니다.\n  - `processData`: 데이터 처리 및 변환을 담당합니다.\n  - `networkCommunication`: 네트워크 연결 및 데이터 전송을 관리합니다.\n  - `cleanup`: 프로그램 종료 시 리소스 해제를 담당합니다.\n\n**기능 단위로 군집화:**\n- **초기화 군집:**\n  - `initialize` -> `loadConfig` -> `setupEnvironment`\n- **데이터 처리 군집:**\n  - `processData` -> `parseInput` -> `computeResults`\n- **네트워크 군집:**\n  - `networkCommunication` -> `establishConnection` -> `sendData` -> `receiveData`\n- **정리 및 종료 군집:**\n  - `cleanup` -> `closeConnections` -> `freeResources`\n\n**루트 함수 강조 및 전체 노드/엣지 수 요약:**\n- **루트 함수:** `main`\n- **전체 노드 수:** 15\n- **전체 엣지 수:** 20\n\n이 구조는 프로그램의 주요 기능을 중심으로 군집화하여, 각 기능이 어떻게 연결되고 상호작용하는지를 시각적으로 이해할 수 있도록 돕습니다. 각 군집은 특정 기능을 수행하는 함수들의 집합으로, 프로그램의 동작을 단계별로 나누어 분석할 수 있습니다.",
  "callgraph_html": "/static/callgraphs/3750b973-f250-4947-b82f-0f5f3f93eb42.html"
}