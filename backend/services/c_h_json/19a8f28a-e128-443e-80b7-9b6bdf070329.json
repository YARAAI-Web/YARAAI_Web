{
  "c_code": [
    "#include \"19a8f28a-e128-443e-80b7-9b6bdf070329.h\"",
    "",
    "int __stdcall sub_100011C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, HANDLE *a10)",
    "{",
    "  unsigned int v10; // esi",
    "  __int128 *v11; // eax",
    "  _DWORD *v12; // edx",
    "  wint_t *v13; // edi",
    "  char v14; // al",
    "  __int128 v15; // xmm1",
    "  __int64 v16; // xmm2_8",
    "  int v17; // xmm0_4^4",
    "  int v18; // edx",
    "  int v19; // ecx",
    "  const char *v20; // eax",
    "  void *v21; // eax",
    "  _DWORD *v22; // ecx",
    "  _WORD *v23; // edx",
    "  int v24; // ecx",
    "  int v25; // edx",
    "  _WORD *v26; // ecx",
    "  _WORD *v27; // eax",
    "  __int16 v28; // di",
    "  _WORD *v29; // esi",
    "  int v30; // ecx",
    "  __int16 v31; // ax",
    "  _WORD *v32; // edx",
    "  _WORD *v33; // esi",
    "  int v34; // edi",
    "  int j; // eax",
    "  _DWORD *v36; // eax",
    "  unsigned int v37; // edx",
    "  _DWORD *v38; // esi",
    "  int v39; // ecx",
    "  int v40; // edx",
    "  unsigned int v41; // ecx",
    "  unsigned int v42; // edx",
    "  int v43; // eax",
    "  int v44; // esi",
    "  char *v45; // edx",
    "  int v46; // ecx",
    "  int v47; // edx",
    "  unsigned int v48; // ecx",
    "  _WORD *v50; // [esp+30h] [ebp-BCh]",
    "  _WORD *v51; // [esp+38h] [ebp-B4h]",
    "  wint_t *i; // [esp+58h] [ebp-94h]",
    "  __int128 *v53; // [esp+60h] [ebp-8Ch]",
    "  _WORD *v54; // [esp+60h] [ebp-8Ch]",
    "  _DWORD v55[4]; // [esp+64h] [ebp-88h] BYREF",
    "  unsigned int Size; // [esp+74h] [ebp-78h]",
    "  unsigned int v57; // [esp+78h] [ebp-74h]",
    "  _DWORD v58[4]; // [esp+7Ch] [ebp-70h] BYREF",
    "  int v59; // [esp+8Ch] [ebp-60h]",
    "  unsigned int v60; // [esp+90h] [ebp-5Ch]",
    "  char *Str[4]; // [esp+94h] [ebp-58h] BYREF",
    "  __int64 v62; // [esp+A4h] [ebp-48h]",
    "  _DWORD Src[4]; // [esp+ACh] [ebp-40h] BYREF",
    "  unsigned int v64; // [esp+BCh] [ebp-30h]",
    "  unsigned int v65; // [esp+C0h] [ebp-2Ch]",
    "  __int128 v66; // [esp+C4h] [ebp-28h] BYREF",
    "  __int64 v67; // [esp+D4h] [ebp-18h]",
    "  int v68; // [esp+E8h] [ebp-4h]",
    "",
    "  sub_10001870(v55, a2);",
    "  v68 = 2;",
    "  *(_OWORD *)Str = 0;",
    "  v62 = 0xF00000000LL;",
    "  LOBYTE(Str[0]) = 0;",
    "  v66 = 0;",
    "  v67 = 0xF00000000LL;",
    "  LOBYTE(v66) = 0;",
    "  v10 = Size;",
    "  if ( Size )",
    "  {",
    "    if ( Size > 0xF )",
    "    {",
    "      ((void (__thiscall *)(__int128 *, unsigned int))sub_10001D50)(&v66, Size);",
    "    }",
    "    else",
    "    {",
    "      LODWORD(v67) = Size;",
    "      memset(&v66, 0, Size);",
    "      *((_BYTE *)&v66 + v10) = 0;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    LODWORD(v67) = 0;",
    "    LOBYTE(v66) = 0;",
    "  }",
    "  v11 = &v66;",
    "  v12 = v55;",
    "  if ( HIDWORD(v67) > 0xF )",
    "    v11 = (__int128 *)v66;",
    "  v13 = (wint_t *)v55;",
    "  v53 = v11;",
    "  if ( v57 > 7 )",
    "  {",
    "    v12 = (_DWORD *)v55[0];",
    "    v13 = (wint_t *)v55[0];",
    "  }",
    "  for ( i = (wint_t *)v12 + Size; v13 != i; v53 = (__int128 *)((char *)v53 + 1) )",
    "  {",
    "    v14 = wctob(*v13++);",
    "    *(_BYTE *)v53 = v14;",
    "  }",
    "  v15 = v66;",
    "  v16 = v67;",
    "  v66 = *(_OWORD *)Str;",
    "  v17 = HIDWORD(v62);",
    "  v67 = v62;",
    "  LOBYTE(v68) = 1;",
    "  v62 = v16;",
    "  *(_OWORD *)Str = v15;",
    "  if ( HIDWORD(v67) > 0xF )",
    "  {",
    "    v18 = v66;",
    "    v19 = v17 + 1;",
    "    if ( (unsigned int)(v17 + 1) >= 0x1000 )",
    "    {",
    "      v18 = *(_DWORD *)(v66 - 4);",
    "      v19 = v17 + 36;",
    "      if ( (unsigned int)(v66 - v18 - 4) > 0x1F )",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v18, v19);",
    "  }",
    "  v20 = (const char *)Str;",
    "  if ( HIDWORD(v62) > 0xF )",
    "    v20 = Str[0];",
    "  if ( !strstr(v20, \"\\\\game\\\\bin\\\\win64\\\\cs2.exe\") )",
    "  {",
    "    v44 = dword_10007694(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);",
    "    goto LABEL_59;",
    "  }",
    "  v21 = &unk_100051FC;",
    "  if ( a1 )",
    "    v21 = a1;",
    "  sub_10001870(Src, v21);",
    "  LOBYTE(v68) = 3;",
    "  sub_10001870(v58, L\"\\\\game\\\\bin\\\\win64\\\\cs2.exe\");",
    "  LOBYTE(v68) = 4;",
    "  v22 = v58;",
    "  v23 = Src;",
    "  if ( v60 > 7 )",
    "    v22 = (_DWORD *)v58[0];",
    "  v54 = v22;",
    "  if ( v65 > 7 )",
    "    v23 = (_WORD *)Src[0];",
    "  v24 = v59;",
    "  v51 = v23;",
    "  if ( v59 <= v64 )",
    "  {",
    "    if ( v59 )",
    "    {",
    "      v26 = &v23[v64 - v59 + 1];",
    "      v27 = v54;",
    "      v50 = v26;",
    "      v28 = *v54;",
    "LABEL_30:",
    "      v29 = 0;",
    "      v30 = v26 - v23;",
    "      if ( v30 )",
    "      {",
    "        if ( *v23 == v28 )",
    "        {",
    "LABEL_34:",
    "          v29 = v23;",
    "        }",
    "        else",
    "        {",
    "          while ( v30 != 1 )",
    "          {",
    "            v31 = v23[1];",
    "            ++v23;",
    "            --v30;",
    "            if ( v31 == v28 )",
    "              goto LABEL_34;",
    "          }",
    "        }",
    "        v27 = v54;",
    "      }",
    "      v32 = v29;",
    "      if ( !v29 )",
    "        goto LABEL_44;",
    "      v33 = v27;",
    "      v34 = v59;",
    "      for ( j = (char *)v32 - (char *)v54; ; j = (char *)v32 - (char *)v54 )",
    "      {",
    "        if ( *(_WORD *)((char *)v33 + j) != *v33 )",
    "        {",
    "          v28 = *v54;",
    "          v23 = v32 + 1;",
    "          v27 = v54;",
    "          v26 = v50;",
    "          goto LABEL_30;",
    "        }",
    "        ++v33;",
    "        if ( !--v34 )",
    "          break;",
    "      }",
    "      v24 = v59;",
    "      v25 = v32 - v51;",
    "      if ( v25 == -1 )",
    "        goto LABEL_44;",
    "    }",
    "    else",
    "    {",
    "      v25 = 0;",
    "    }",
    "    sub_100019E0(Src, v25, v24, v24, 9);",
    "  }",
    "LABEL_44:",
    "  sub_10001020(L\"%s\\n\", a1);",
    "  v36 = Src;",
    "  if ( v65 > 7 )",
    "    v36 = (_DWORD *)Src[0];",
    "  sub_10001020(L\" %s\\n\", v36);",
    "  v37 = v65;",
    "  v38 = Src;",
    "  v39 = Src[0];",
    "  LOBYTE(v68) = 3;",
    "  if ( v65 > 7 )",
    "    v38 = (_DWORD *)Src[0];",
    "  if ( v60 > 7 )",
    "  {",
    "    v40 = v58[0];",
    "    v41 = 2 * v60 + 2;",
    "    if ( v41 >= 0x1000 )",
    "    {",
    "      v40 = *(_DWORD *)(v58[0] - 4);",
    "      v41 = 2 * v60 + 37;",
    "      if ( (unsigned int)(v58[0] - v40 - 4) > 0x1F )",
    "LABEL_55:",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v40, v41);",
    "    v37 = v65;",
    "    v39 = Src[0];",
    "  }",
    "  LOBYTE(v68) = 1;",
    "  if ( v37 > 7 )",
    "  {",
    "    v42 = 2 * v37 + 2;",
    "    v43 = v39;",
    "    if ( v42 >= 0x1000 )",
    "    {",
    "      v39 = *(_DWORD *)(v39 - 4);",
    "      v42 += 35;",
    "      if ( (unsigned int)(v43 - v39 - 4) > 0x1F )",
    "        goto LABEL_55;",
    "    }",
    "    sub_10003218(v39, v42);",
    "  }",
    "  LOWORD(Src[0]) = 0;",
    "  v64 = 0;",
    "  v65 = 7;",
    "  v44 = dword_10007694(v38, a2, a3, a4, a5, a6, a7, a8, a9, a10);",
    "  VirtualAllocEx(*a10, (LPVOID)0x40000000, 0x1219000u, 0x3000u, 0x40u);",
    "LABEL_59:",
    "  if ( HIDWORD(v62) > 0xF )",
    "  {",
    "    v45 = Str[0];",
    "    v46 = HIDWORD(v62) + 1;",
    "    if ( (unsigned int)(HIDWORD(v62) + 1) >= 0x1000 )",
    "    {",
    "      v45 = (char *)*((_DWORD *)Str[0] - 1);",
    "      v46 = HIDWORD(v62) + 36;",
    "      if ( (unsigned int)(Str[0] - v45 - 4) > 0x1F )",
    "LABEL_66:",
    "        invalid_parameter_noinfo_noreturn();",
    "    }",
    "    sub_10003218(v45, v46);",
    "  }",
    "  v62 = 0xF00000000LL;",
    "  LOBYTE(Str[0]) = 0;",
    "  if ( v57 > 7 )",
    "  {",
    "    v47 = v55[0];",
    "    v48 = 2 * v57 + 2;",
    "    if ( v48 >= 0x1000 )",
    "    {",
    "      v47 = *(_DWORD *)(v55[0] - 4);",
    "      v48 = 2 * v57 + 37;",
    "      if ( (unsigned int)(v55[0] - v47 - 4) > 0x1F )",
    "        goto LABEL_66;",
    "    }",
    "    sub_10003218(v47, v48);",
    "  }",
    "  return v44;",
    "}",
    "",
    "",
    "BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)",
    "{",
    "  if ( fdwReason != 1 )",
    "    return 0;",
    "  CreateThread(0, 0, StartAddress, 0, 0, 0);",
    "  return 1;",
    "}",
    "",
    "",
    "int __thiscall sub_10001870(int this, void *Src, const unsigned __int16 *a3)",
    "{",
    "  unsigned int v5; // esi",
    "  unsigned int v7; // ebx",
    "  unsigned int v8; // eax",
    "  int v9; // eax",
    "  unsigned int v10; // ebx",
    "  unsigned int v11; // eax",
    "  int savedregsc; // [esp+Ch] [ebp+0h]",
    "  unsigned int savedregs; // [esp+Ch] [ebp+0h]",
    "  unsigned int savedregsd; // [esp+Ch] [ebp+0h]",
    "",
    "  *(_OWORD *)this = 0;",
    "  *(_DWORD *)(this + 16) = 0;",
    "  *(_DWORD *)(this + 20) = 0;",
    "  v5 = wcslen(a3);",
    "  if ( v5 > 0x7FFFFFFE )",
    "  {",
    "LABEL_19:",
    "    sub_100011B0();",
    "    JUMPOUT(0x1000198E);",
    "  }",
    "  if ( v5 <= 7 )",
    "  {",
    "    *(_DWORD *)(this + 16) = v5;",
    "    *(_DWORD *)(this + 20) = 7;",
    "    memcpy();",
    "    *(_WORD *)(2 * v5 + this) = 0;",
    "    return this;",
    "  }",
    "  v7 = v5 | 7;",
    "  if ( (v5 | 7) <= 0x7FFFFFFE )",
    "  {",
    "    if ( v7 < 0xA )",
    "      v7 = 10;",
    "    savedregs = v7;",
    "    if ( v7 + 1 > 0x7FFFFFFF )",
    "    {",
    "LABEL_18:",
    "      sub_10001110();",
    "      goto LABEL_19;",
    "    }",
    "    v8 = 2 * (v7 + 1);",
    "    if ( !v8 )",
    "    {",
    "      v10 = 0;",
    "      goto LABEL_17;",
    "    }",
    "  }",
    "  else",
    "  {",
    "    savedregsc = 2147483646;",
    "    v8 = -2;",
    "  }",
    "  if ( v8 >= 0x1000 )",
    "  {",
    "    if ( v8 + 35 >= v8 )",
    "    {",
    "      savedregs = v8 + 35;",
    "      v9 = sub_100031E3();",
    "      if ( !v9 )",
    "        invalid_parameter_noinfo_noreturn();",
    "      v10 = (v9 + 35) & 0xFFFFFFE0;",
    "      *(_DWORD *)(v10 - 4) = v9;",
    "      goto LABEL_17;",
    "    }",
    "    goto LABEL_18;",
    "  }",
    "  savedregs = v8;",
    "  v10 = sub_100031E3();",
    "LABEL_17:",
    "  v11 = savedregs;",
    "  *(_DWORD *)(this + 16) = v5;",
    "  *(_DWORD *)this = v10;",
    "  savedregsd = v10;",
    "  *(_DWORD *)(this + 20) = v11;",
    "  memcpy();",
    "  *(_WORD *)(2 * v5 + v10) = 0;",
    "  return this;",
    "}",
    "",
    "",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie)",
    "{",
    "  if ( StackCookie != __security_cookie )",
    "    JUMPOUT(0x10003C1E);",
    "}",
    "",
    "",
    "int __cdecl sub_100031E3(int a1, int a2)",
    "{",
    "  int result; // eax",
    "",
    "  while ( 1 )",
    "  {",
    "    result = malloc();",
    "    if ( result )",
    "      break;",
    "    if ( !callnewh() )",
    "    {",
    "      if ( a2 == -1 )",
    "        sub_10001110();",
    "      JUMPOUT(0x10003D31);",
    "    }",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "int __stdcall sub_10003249(int a1, int a2, int a3)",
    "{",
    "  int result; // eax",
    "",
    "  switch ( a2 )",
    "  {",
    "    case 0:",
    "      return sub_100033A3(a3 != 0);",
    "    case 1:",
    "      return sub_1000329C(a1, a3);",
    "    case 2:",
    "      LOBYTE(result) = sub_1000365B();",
    "      break;",
    "    case 3:",
    "      LOBYTE(result) = sub_1000367A();",
    "      break;",
    "    default:",
    "      return 1;",
    "  }",
    "  return (unsigned __int8)result;",
    "}",
    "",
    "",
    "void __usercall sub_1000329C(int a1@<ebp>, int a2, int a3)",
    "{",
    "  char v3; // bl",
    "  _DWORD *v4; // eax",
    "  _DWORD *v5; // esi",
    "  int savedregs; // [esp+30h] [ebp+0h]",
    "  const _PIFV *savedregsa; // [esp+30h] [ebp+0h]",
    "  const _PVFV *savedregsb; // [esp+30h] [ebp+0h]",
    "  _DWORD *savedregsc; // [esp+30h] [ebp+0h]",
    "  int savedregsd; // [esp+30h] [ebp+0h]",
    "",
    "  savedregs = 0;",
    "  if ( (unsigned __int8)__scrt_initialize_crt() )",
    "  {",
    "    *(_BYTE *)(a1 - 29) = __scrt_acquire_startup_lock();",
    "    v3 = 1;",
    "    *(_BYTE *)(a1 - 25) = 1;",
    "    *(_DWORD *)(a1 - 4) = 0;",
    "    if ( dword_1000732C )",
    "      JUMPOUT(0x1000339B);",
    "    dword_1000732C = 1;",
    "    if ( (unsigned __int8)__scrt_dllmain_before_initialize_c() )",
    "    {",
    "      sub_10003F44();",
    "      sub_10003DE6();",
    "      sub_10003E04();",
    "      savedregsa = &First;",
    "      if ( !sub_10004060() )",
    "      {",
    "        if ( (unsigned __int8)__scrt_dllmain_after_initialize_c() )",
    "        {",
    "          savedregsb = &dword_10005134;",
    "          callnewh_0();",
    "          dword_1000732C = 2;",
    "          v3 = 0;",
    "          *(_BYTE *)(a1 - 25) = 0;",
    "        }",
    "      }",
    "    }",
    "    *(_DWORD *)(a1 - 4) = -2;",
    "    sub_1000337F();",
    "    if ( !v3 )",
    "    {",
    "      v4 = (_DWORD *)sub_10003E21();",
    "      v5 = v4;",
    "      if ( *v4 )",
    "      {",
    "        savedregsc = v4;",
    "        if ( (unsigned __int8)__scrt_is_nonwritable_in_current_image() )",
    "        {",
    "          savedregsd = *(_DWORD *)(a1 + 8);",
    "          ((void (__thiscall *)(_DWORD))*v5)(*v5);",
    "        }",
    "      }",
    "      ++dword_10007328;",
    "      JUMPOUT(0x1000338B);",
    "    }",
    "  }",
    "  JUMPOUT(0x10003389);",
    "}",
    "",
    "",
    "BOOL __cdecl sub_100033A3(int a1)",
    "{",
    "  BOOL v2; // esi",
    "  int v3; // [esp+0h] [ebp-30h]",
    "  int v4; // [esp+4h] [ebp-2Ch]",
    "  int v5; // [esp+4h] [ebp-2Ch]",
    "  int v6; // [esp+8h] [ebp-28h]",
    "  int v7; // [esp+8h] [ebp-28h]",
    "  int v8; // [esp+Ch] [ebp-24h]",
    "  int v9; // [esp+Ch] [ebp-24h]",
    "  int v10; // [esp+10h] [ebp-20h]",
    "  int v11; // [esp+10h] [ebp-20h]",
    "  int v12; // [esp+18h] [ebp-18h]",
    "  int v13; // [esp+18h] [ebp-18h]",
    "  int v14; // [esp+1Ch] [ebp-14h]",
    "  int v15; // [esp+1Ch] [ebp-14h]",
    "  int v16; // [esp+20h] [ebp-10h]",
    "  int v17; // [esp+20h] [ebp-10h]",
    "  int v18; // [esp+24h] [ebp-Ch]",
    "  int v19; // [esp+24h] [ebp-Ch]",
    "  int v20; // [esp+28h] [ebp-8h]",
    "  int v21; // [esp+28h] [ebp-8h]",
    "",
    "  if ( dword_10007328 <= 0 )",
    "    return 0;",
    "  --dword_10007328;",
    "  LOBYTE(v10) = __scrt_acquire_startup_lock();",
    "  if ( dword_1000732C != 2 )",
    "  {",
    "    sub_10003E27(7);",
    "    JUMPOUT(0x10003452);",
    "  }",
    "  __scrt_dllmain_uninitialize_c(v3);",
    "  sub_10003DF2();",
    "  sub_10003F70();",
    "  dword_1000732C = 0;",
    "  __scrt_release_startup_lock(v10, 268448767, v4, v6, v8, v10, 1, v12, v14, v16, v18, v20);",
    "  v2 = (unsigned __int8)__scrt_uninitialize_crt(a1) != 0;",
    "  sub_100036DE(268448803, v5, v7, v9, v11, v2, v13, v15, v17, v19, v21, -2);",
    "  return v2;",
    "}",
    "",
    "",
    "int __cdecl sub_10003453(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)",
    "{",
    "  void *v4; // ebx",
    "  int v5; // esi",
    "  BOOL v6; // eax",
    "",
    "  if ( !fdwReason && dword_10007328 <= 0 )",
    "    return 0;",
    "  if ( fdwReason != 1 && fdwReason != 2 )",
    "  {",
    "    v4 = lpvReserved;",
    "LABEL_9:",
    "    v6 = DllMain(hinstDLL, fdwReason, v4);",
    "    v5 = v6;",
    "    if ( fdwReason == 1 && !v6 )",
    "    {",
    "      DllMain(hinstDLL, 0, v4);",
    "      sub_100033A3(v4 != 0);",
    "      sub_1000355E(hinstDLL, 0, v4);",
    "    }",
    "    if ( !fdwReason || fdwReason == 3 )",
    "    {",
    "      v5 = sub_10003249((int)hinstDLL, fdwReason, (int)v4);",
    "      if ( v5 )",
    "        return sub_1000355E(hinstDLL, fdwReason, v4);",
    "    }",
    "    return v5;",
    "  }",
    "  v4 = lpvReserved;",
    "  v5 = sub_1000355E(hinstDLL, fdwReason, lpvReserved);",
    "  if ( v5 )",
    "  {",
    "    v5 = sub_10003249((int)hinstDLL, fdwReason, (int)lpvReserved);",
    "    if ( v5 )",
    "      goto LABEL_9;",
    "  }",
    "  return v5;",
    "}",
    "",
    "",
    "int __stdcall sub_1000355E(int a1, int a2, int a3)",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)",
    "{",
    "  if ( fdwReason == 1 )",
    "    sub_10003D9B();",
    "  return sub_10003453(hinstDLL, fdwReason, lpReserved);",
    "}",
    "",
    "",
    "char __scrt_acquire_startup_lock()",
    "{",
    "  PVOID StackBase; // edx",
    "  signed __int32 v1; // eax",
    "",
    "  if ( sub_10004018() )",
    "  {",
    "    StackBase = NtCurrentTeb()->NtTib.StackBase;",
    "    while ( 1 )",
    "    {",
    "      v1 = _InterlockedCompareExchange(&dword_10007330, (signed __int32)StackBase, 0);",
    "      if ( !v1 )",
    "        break;",
    "      if ( StackBase == (PVOID)v1 )",
    "        return 1;",
    "    }",
    "  }",
    "  return 0;",
    "}",
    "",
    "",
    "char sub_1000365B()",
    "{",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "    return 0;",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "  {",
    "    sub_10004096();",
    "    return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "char sub_1000367A()",
    "{",
    "  sub_10004096();",
    "  sub_10004096();",
    "  return 1;",
    "}",
    "",
    "",
    "char __cdecl __scrt_initialize_crt(int a1, int a2)",
    "{",
    "  int savedregs; // [esp+0h] [ebp+0h]",
    "",
    "  if ( !a2 )",
    "    byte_10007334 = 1;",
    "  sub_100038C9();",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "    return 0;",
    "  if ( !(unsigned __int8)sub_10004096() )",
    "  {",
    "    savedregs = 0;",
    "    sub_10004096();",
    "    return 0;",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "__int32 __cdecl __scrt_release_startup_lock(char a1, char a2)",
    "{",
    "  __int32 result; // eax",
    "",
    "  result = sub_10004018();",
    "  if ( result )",
    "  {",
    "    if ( !a2 )",
    "      return _InterlockedExchange(&dword_10007330, 0);",
    "  }",
    "  return result;",
    "}",
    "",
    "",
    "char __cdecl __scrt_uninitialize_crt(int a1, int a2, char a3)",
    "{",
    "  if ( !byte_10007334 || !a3 )",
    "  {",
    "    sub_10004096();",
    "    sub_10004096();",
    "  }",
    "  return 1;",
    "}",
    "",
    "",
    "void sub_10003D9B()",
    "{",
    "  uintptr_t v0; // ecx",
    "  int entropy; // eax",
    "",
    "  v0 = __security_cookie;",
    "  if ( __security_cookie == -1153374642 || (__security_cookie & 0xFFFF0000) == 0 )",
    "  {",
    "    entropy = __get_entropy();",
    "    v0 = entropy;",
    "    if ( entropy == -1153374642 )",
    "    {",
    "      v0 = -1153374641;",
    "    }",
    "    else if ( (entropy & 0xFFFF0000) == 0 )",
    "    {",
    "      v0 = ((entropy | 0x4711) << 16) | entropy;",
    "    }",
    "    __security_cookie = v0;",
    "  }",
    "  dword_10007080 = ~v0;",
    "}",
    "",
    "",
    "_DWORD *sub_10003E04()",
    "{",
    "  _DWORD *v0; // eax",
    "  int v1; // ecx",
    "  _DWORD *result; // eax",
    "  int v3; // ecx",
    "",
    "  v0 = (_DWORD *)sub_10001010();",
    "  v1 = v0[1];",
    "  *v0 |= 0x24u;",
    "  v0[1] = v1;",
    "  result = (_DWORD *)sub_10003DFE();",
    "  v3 = result[1];",
    "  *result |= 2u;",
    "  result[1] = v3;",
    "  return result;",
    "}",
    "",
    "",
    "void *sub_10003E21()",
    "{",
    "  return &unk_100076A8;",
    "}",
    "",
    "",
    "void sub_10003F44()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "void sub_10003F70()",
    "{",
    "  ;",
    "}",
    "",
    "",
    "_DWORD *__cdecl _SEH_prolog4(int a1, int a2)",
    "{",
    "  void *v4; // esp",
    "  void *v6; // [esp-18h] [ebp-18h]",
    "  _DWORD v7[2]; // [esp-8h] [ebp-8h] BYREF",
    "  _UNKNOWN *retaddr; // [esp+0h] [ebp+0h]",
    "  int v9; // [esp+4h] [ebp+4h]",
    "",
    "  v7[1] = sub_10003FE5;",
    "  v7[0] = NtCurrentTeb()->NtTib.ExceptionList;",
    "  v4 = alloca(a2);",
    "  v9 = -2;",
    "  retaddr = v6;",
    "  return v7;",
    "}",
    "",
    "",
    "int __cdecl sub_10003FE5(_DWORD *a1, int a2, int a3, int a4)",
    "{",
    "  *a1 = sub_1000409C(*a1);",
    "  return except_handler4_common(&__security_cookie, __security_check_cookie, a1, a2, a3, a4);",
    "}",
    "",
    "",
    "BOOL sub_10004018()",
    "{",
    "  return dword_10007090 != 0;",
    "}",
    "",
    "",
    "// attributes: thunk",
    "int sub_10004024()",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *a2, size_t a3)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl memset(void *a1, int a2, size_t a3)",
    "{",
    "}// attributes: thunk",
    "int __cdecl except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6)",
    "{",
    "}// attributes: thunk",
    "int __cdecl callnewh(size_t a1)",
    "{",
    "}// attributes: thunk",
    "void *__cdecl malloc(size_t a1)",
    "{",
    "}// attributes: thunk",
    "void __cdecl callnewh_0(_PVFV *a1, _PVFV *a2)",
    "{",
    "}// attributes: thunk",
    "int __cdecl sub_10004060(_PIFV *a1, _PIFV *a2)",
    "{",
    "}char sub_10004096()",
    "{",
    "  return 1;",
    "}",
    "",
    "",
    "int __cdecl sub_1000409C(int a1)",
    "{",
    "  unsigned __int16 v2; // [esp+0h] [ebp-4h]",
    "",
    "  if ( dword_10007354 >= 1 && (a1 == -1073741132 || a1 == -1073741131) )",
    "  {",
    "    v2 = _mm_getcsr();",
    "    if ( (((unsigned __int8)v2 ^ 0x3F) & 0x81) == 0 )",
    "      return -1073741680;",
    "    if ( ((v2 ^ 0x3F) & 0x204) == 0 )",
    "      return -1073741682;",
    "    if ( ((v2 ^ 0x3F) & 0x102) == 0 )",
    "      return -1073741680;",
    "    if ( ((v2 ^ 0x3F) & 0x408) == 0 )",
    "      return -1073741679;",
    "    if ( ((v2 ^ 0x3F) & 0x810) == 0 )",
    "      return -1073741677;",
    "    if ( ((v2 ^ 0x3F) & 0x1020) == 0 )",
    "      return -1073741681;",
    "  }",
    "  return a1;",
    "}",
    "",
    ""
  ],
  "h_code": [
    "#include <windows.h>",
    "#include <stdint.h>",
    "#include <stdio.h>",
    "",
    "#include \"defs.h\"",
    "",
    "void JUMPOUT(int a) {",
    "}",
    "",
    "unsigned int _bss_start__ = 0;",
    "unsigned int __cxa_finalize = 0;",
    "int __stdcall sub_100011C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, HANDLE *a10);",
    "BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);",
    "int __thiscall sub_10001870(int this, void *Src, const unsigned __int16 *a3);",
    "void __fastcall __security_check_cookie(uintptr_t StackCookie);",
    "int __cdecl sub_100031E3(int a1, int a2);",
    "int __stdcall sub_10003249(int a1, int a2, int a3);",
    "void __usercall sub_1000329C(int a1@<ebp>, int a2, int a3);",
    "BOOL __cdecl sub_100033A3(int a1);",
    "int __cdecl sub_10003453(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);",
    "int __stdcall sub_1000355E(int a1, int a2, int a3);",
    "BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved);",
    "char __scrt_acquire_startup_lock();",
    "char sub_1000365B();",
    "char sub_1000367A();",
    "char __cdecl __scrt_initialize_crt(int a1, int a2);",
    "__int32 __cdecl __scrt_release_startup_lock(char a1, char a2);",
    "char __cdecl __scrt_uninitialize_crt(int a1, int a2, char a3);",
    "void sub_10003D9B();",
    "_DWORD *sub_10003E04();",
    "void *sub_10003E21();",
    "void sub_10003F44();",
    "void sub_10003F70();",
    "_DWORD *__cdecl _SEH_prolog4(int a1, int a2);",
    "int __cdecl sub_10003FE5(_DWORD *a1, int a2, int a3, int a4);",
    "BOOL sub_10004018();",
    "// attributes: thunk",
    "int sub_10004024();",
    "// attributes: thunk",
    "void *__cdecl memcpy(void *a1, const void *a2, size_t a3);",
    "// attributes: thunk",
    "void *__cdecl memset(void *a1, int a2, size_t a3);",
    "// attributes: thunk",
    "int __cdecl except_handler4_common(int a1, int a2, int a3, int a4, int a5, int a6);",
    "// attributes: thunk",
    "int __cdecl callnewh(size_t a1);",
    "// attributes: thunk",
    "void *__cdecl malloc(size_t a1);",
    "// attributes: thunk",
    "void __cdecl callnewh_0(_PVFV *a1, _PVFV *a2);",
    "// attributes: thunk",
    "int __cdecl sub_10004060(_PIFV *a1, _PIFV *a2);",
    "char sub_10004096();",
    "int __cdecl sub_1000409C(int a1);"
  ],
  "virustotal": {
    "sha256": "e1fa0bb72c811ee3379a5ad6067cf912229ee9d40e5cc6b9033246e4f66e1fa3",
    "type_tag": "pedll",
    "popular_threat_name": null,
    "tags": [
      "pedll"
    ]
  }
}